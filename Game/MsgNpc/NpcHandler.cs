using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using COServer.Game.MsgServer;
using COServer.MsgInterServer.Packets;
using COServer.Game.MsgFloorItem;
using COServer.Game.MsgTournaments;
namespace COServer.Game.MsgNpc
{
    //recovery ala albastru de bless
    //780000 PointCard !
    //3000550 ProsperityPack
    //http://prntscr.com/df9q0l
    //tele map 4000
    public unsafe class NpcHandler
    {
        [NpcAttribute(NpcID.General500k)]
        public static void General500k(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.Text($"You`ve killed {client.TotalSouls} mobs! When you reach 300,000 mobs you can claim 30PVEPoints.");
                        dialog.Option("Claim it now!", 1);
                        dialog.Option("Leave", 255);
                        dialog.AddAvatar(10).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.TotalSouls >= 300000)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.TotalSouls -= 300000;
                                client.Player.PVEPoints += 30;
                                client.SendSysMesage("You got 30 PVE!");
                            }
                            else client.SendSysMesage("You don`t have enough space in your inventory.");
                        }
                        else client.SendSysMesage("You don`t have enough points.");
                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.FlyingDragon)]
        public static void FlyingDragon(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.Text($"Hi hero! If you have ranked in Arena Top 10, You`ll can have a free DragonPill. For now you have {client.Player.DragonPills} pills to claim.");
                        dialog.Option("Gib me my pills!!", 1);
                        dialog.Option("Leave", 255);
                        dialog.AddAvatar(17).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Player.DragonPills > 0)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Player.DragonPills -= 1;
                                client.Inventory.Add(stream, 720598, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.SendSysMesage("You got 1 DragonPill!");
                            }
                            else client.SendSysMesage("You don`t have enough space in your inventory.");
                        }
                        else client.SendSysMesage("You don`t have enough points.");
                        break;
                    }

            }
        }

        [NpcAttribute(NpcID.Leveling)]
        public static void Leveling(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.Text($"Hey there would you like me to take you to a place with high exp rate?");
                        dialog.Option("Yes please.", 1);
                        dialog.Option("Leave", 255);
                        dialog.AddAvatar(10).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        client.Teleport(9, 290, 1354);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.SoulsTrader)]
        public static void SoulsTrader(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.Text($"Hello there! I`m the new Souls Master over here. I can trade your P4 and P5 souls for a random a P6 one!");
                        dialog.Option("Trade 6 P2/3s for 1 Random P4/P5.", 2);
                        dialog.Option("Trade 15 P4/5s for 1 Random P6.", 1);
                        dialog.Option("Leave", 255);
                        dialog.AddAvatar(10).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        var list = new List<uint>();
                        foreach (var item in client.Inventory.ClientItems.Values)
                            if (Database.ItemType.PurificationItems[4].ContainsKey(item.ITEM_ID) || Database.ItemType.PurificationItems[5].ContainsKey(item.ITEM_ID))
                            {
                                list.Add(item.ITEM_ID);
                                if (list.Count == 15)
                                    break;
                            }
                        if (list.Count == 15)
                        {
                            foreach (var item2 in list)
                                client.Inventory.Remove(item2, 1, stream);
                            var array = Database.ItemType.PurificationItems[6].Values.ToArray();
                            int position = Program.GetRandom.Next(0, array.Length);
                            var item = array[position].ID;
                            var name = Database.Server.ItemsBase.GetItemName(item);
                            client.Inventory.Add(stream, item);
                            client.SendSysMesage($"You got a {name}! Check your inventory!");
                            Program.SendGlobalPackets.Enqueue(new MsgMessage($"{client.Player.Name} has got a {name} from the Souls Trader.", MsgMessage.MsgColor.red, MsgMessage.ChatMode.System).GetArray(stream));


                        }
                        else
                        {
                            dialog.Text($"You dont have enough souls.!");
                            dialog.Option("Sorry.", 255);
                            dialog.AddAvatar(10).FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        var list = new List<uint>();
                        foreach (var item in client.Inventory.ClientItems.Values)
                            if (Database.ItemType.PurificationItems[2].ContainsKey(item.ITEM_ID) || Database.ItemType.PurificationItems[3].ContainsKey(item.ITEM_ID))
                            {
                                list.Add(item.ITEM_ID);
                                if (list.Count == 6)
                                    break;
                            }
                        if (list.Count == 6)
                        {
                            var arr1 = new[] { 4, 5 };
                            var rndMember = arr1[Role.Core.Random.Next(arr1.Length)];
                            var level = (ushort)rndMember;
                            foreach (var item2 in list)
                                client.Inventory.Remove(item2, 1, stream);
                            var array = Database.ItemType.PurificationItems[level].Values.ToArray();
                            int position = Program.GetRandom.Next(0, array.Length);
                            var item = array[position].ID;
                            var name = Database.Server.ItemsBase.GetItemName(item);
                            client.Inventory.Add(stream, item);
                            client.SendSysMesage($"You got a {name}! Check your inventory!");
                            Program.SendGlobalPackets.Enqueue(new MsgMessage($"{client.Player.Name} has got a {name} from the Souls Trader.", MsgMessage.MsgColor.red, MsgMessage.ChatMode.System).GetArray(stream));


                        }
                        else
                        {
                            dialog.Text($"You dont have enough souls.!");
                            dialog.Option("Sorry.", 255);
                            dialog.AddAvatar(10).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.MonsterGeneral)]
        public static void MonsterGeneral(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.Text("I only speak to champions who battle the monsters for me.... If you kill 100,000 monster for me and get my revenge I can award you with some great prizes! You have killed " + client.TotalMobsKilled + " so far.");
                        dialog.Option("Claim a random prize.", 1);
                        dialog.Option("Leave", 255);
                        dialog.AddAvatar(10).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.TotalMobsKilled >= 100000)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.TotalMobsKilled -= 100000;
                                switch (Role.Core.Random.Next(0, 18))
                                {
                                    case 0:
                                        client.Inventory.Add(stream, 730007, 1, 7);
                                        client.SendSysMesage("You got a +7 stone!");
                                        break;
                                    case 1:
                                        client.Inventory.Add(stream, 711200, 1);
                                        client.SendSysMesage("You got an upgrade cert!");
                                        break;
                                    case 2:
                                        client.Inventory.Add(stream, 720028, 1);
                                        client.SendSysMesage("You got a DB Scroll!");
                                        break;
                                    case 3:
                                        client.Inventory.Add(stream, 721174, 1);
                                        client.SendSysMesage("You got an upgrade cert!");
                                        break;
                                    case 4:
                                        client.Inventory.Add(stream, 720128, 1);
                                        client.SendSysMesage("You got a PenitenceAmulet!");
                                        break;
                                    case 5:
                                        client.Inventory.Add(stream, 723342, 1);
                                        client.SendSysMesage("You got a ModestyBook!");
                                        break;
                                    case 6:
                                        client.Inventory.Add(stream, 1200001, 1);
                                        client.SendSysMesage("You got a PrayingStone(M)!");
                                        break;
                                    case 7:
                                        client.Inventory.Add(stream, 1100006, 1);
                                        client.SendSysMesage("You got a Sash(M)!");
                                        break;
                                    case 8:
                                        client.Inventory.Add(stream, 1100009, 1);
                                        client.SendSysMesage("You got a Sash(L)!");
                                        break;
                                    case 9:
                                        client.Player.ConquerPoints += 10000;
                                        client.SendSysMesage("You got 10k CPs!");
                                        break;

                                    case 10:
                                        client.Inventory.Add(stream, 720828, 1);
                                        client.SendSysMesage("You got a MemoryAgate!");
                                        break;
                                    case 11:
                                        client.Inventory.Add(stream, 1200002, 1);
                                        client.SendSysMesage("You got a PrayingStone(L)!");
                                        break;
                                    case 12:
                                        client.Player.ConquerPoints += 20000;
                                        client.SendSysMesage("You got a 20,000 CPs!");
                                        break;
                                    case 13:
                                        client.Inventory.Add(stream, 780001, 1);
                                        client.SendSysMesage("You got 1-Day VIP Card!");
                                        break;
                                    case 14:
                                        client.Inventory.Add(stream, 360018, 1);
                                        client.SendSysMesage("You got a Light Saber!");
                                        break;
                                    case 15:
                                        client.Inventory.Add(stream, 184375, 1);
                                        client.SendSysMesage("You got Spartan`sPride garment!");
                                        break;
                                    case 16:
                                        client.Inventory.Add(stream, 184325, 1);
                                        client.SendSysMesage("You got Evernight garment!");
                                        break;
                                    case 17:
                                        client.Inventory.Add(stream, 181395, 1);
                                        client.SendSysMesage("You got UglyDuck garment!");
                                        break;
                                }
                            }
                            else client.SendSysMesage("You don`t have enough space in your inventory.");
                        }
                        else client.SendSysMesage("You don`t have enough points.");
                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.BossPoints)]
        public static void BossPoints(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.Text("Hello there! Have you been doing the most damage to our bosses but missing on the kills? Say no more! I have the solution for you, I can trade your Boss Points for RANDOM rewards. You`ve got " + client.Player.BossPoints + ". Here`s what I`ve got for you.");
                        dialog.Option("5 BPTS for one random P6.", 1);
                        dialog.Option("2 BPTS for one random accesory.", 2);
                        dialog.Option("2 BPTS for one random garment.", 3);
                        dialog.Option("Leave", 255);
                        dialog.AddAvatar(10).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Player.BossPoints >= 5)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Player.BossPoints -= 5;
                                if (Database.ItemType.PurificationItems.ContainsKey(6))
                                {
                                    var array = Database.ItemType.PurificationItems[6].Values.ToArray();
                                    int position = Program.GetRandom.Next(0, array.Length);
                                    var soul_id = array[position].ID;
                                    client.Inventory.Add(stream, soul_id);
                                    client.SendSysMesage("You`ve got the item! Check your inventory.");
                                }
                            }
                            else client.SendSysMesage("You don`t have enough space in your inventory.");
                        }
                        else client.SendSysMesage("You don`t have enough points.");
                        break;
                    }
                case 2:
                    {
                        if (client.Player.BossPoints >= 2)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Player.BossPoints -= 2;
                                var array = Database.ItemType.Accessorys.Values.ToArray();
                                int position = Program.GetRandom.Next(0, array.Length);
                                var soul_id = array[position].ID;
                                client.Inventory.Add(stream, soul_id);
                                client.SendSysMesage("You`ve got the item! Check your inventory.");
                            }
                            else client.SendSysMesage("You don`t have enough space in your inventory.");
                        }
                        else client.SendSysMesage("You don`t have enough points.");
                        break;
                    }
                case 3:
                    {
                        List<uint> Garments = new List<uint>() { 191405, 191305, 181955, 182375, 182385, 182465, 182505, 182445, 181945, 181935, 182325, 181975, 182315, 181925, 181825, 181725, 181625, 181525, 181325, 181425, 181915, 181815, 181715, 181615, 181515, 181415 };
                        if (client.Player.BossPoints >= 2)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Player.BossPoints -= 2;
                                var array = Garments.ToArray();
                                int position = Program.GetRandom.Next(0, array.Length);
                                var soul_id = array[position];
                                client.Inventory.Add(stream, soul_id);
                                client.SendSysMesage("You`ve got the item! Check your inventory.");
                            }
                            else client.SendSysMesage("You don`t have enough space in your inventory.");
                        }
                        else client.SendSysMesage("You don`t have enough points.");
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.PVEPoints)]
        public static void PvePoints(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.Text($"Have you been doing our PVE events? Great. I'll be rewarding you for doing them and if you haven't then you're missing out. Pick one random reward. You've got {client.Player.PVEPoints} PVE Points.");
                        dialog.Option("Random Soul P(4-6) [50 PVE].", 1);
                        dialog.Option("Random garment [10 PVE].", 2);
                        dialog.Option("GoldTrophy (BOUND) -- gives 1.5k HP ONLY [2500 PVE].", 3);
                        dialog.Option("Leave", 255);
                        dialog.AddAvatar(10).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Player.PVEPoints >= 50)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Player.PVEPoints -= 50;
                                byte level = (byte)Role.Core.Random.Next(4, 7);
                                if (Database.ItemType.PurificationItems.ContainsKey(level))
                                {
                                    var array = Database.ItemType.PurificationItems[level].Values.ToArray();
                                    int position = Program.GetRandom.Next(0, array.Length);
                                    var soul_id = array[position].ID;
                                    client.Inventory.Add(stream, soul_id);
                                    client.SendSysMesage("You`ve got the item! Check your inventory.");
                                }
                            }
                            else client.SendSysMesage("You don`t have enough space in your inventory.");
                        }
                        else client.SendSysMesage("You don`t have enough points.");
                        break;
                    }
                case 2:
                    {
                        List<uint> Garments = new List<uint>() { 191405, 191305, 181955, 182375, 182385, 182465, 182505, 182445, 181945, 181935, 182325, 181975, 182315, 181925, 181825, 181725, 181625, 181525, 181325, 181425, 181915, 181815, 181715, 181615, 181515, 181415 };
                        if (client.Player.PVEPoints >= 10)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Player.PVEPoints -= 10;
                                var array = Garments.ToArray();
                                int position = Program.GetRandom.Next(0, array.Length);
                                var soul_id = array[position];
                                client.Inventory.Add(stream, soul_id);
                                client.SendSysMesage("You`ve got the item! Check your inventory.");
                            }
                            else client.SendSysMesage("You don`t have enough space in your inventory.");
                        }
                        else client.SendSysMesage("You don`t have enough points.");
                        break;
                    }
                case 3:
                    {
                        if (client.Player.PVEPoints >= 2500)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Player.PVEPoints -= 2500;
                                client.Inventory.Add(stream, 2100085, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.SendSysMesage("You`ve got the item! Check your inventory.");
                            }
                            else client.SendSysMesage("You don`t have enough space in your inventory.");
                        }
                        else client.SendSysMesage("You don`t have enough points.");
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.OnlinePoints)]
        public static void OnlinePoints(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.Text("Hello dear. You currently have [" + client.Player.OnlinePoints + "] Online Point. Would you like to trade them for some random prizes.");
                        dialog.Option("Modesty Book (36 OPs)", 1);
                        dialog.Option("Oblivion Dew (24 OPs)", 2);
                        dialog.Option("Silver Prize (6k OPs)", 3);
                        //dialog.Option("Silver Prize (10k OPs)", 4);
                        dialog.Option("SurpriseBox (50 OPs)", 24);
                        dialog.Option("Praying Stone(S) (48 OPs)", 5);
                        dialog.Option("Lotto Ticket (5 OPs)", 6);
                        dialog.Option("Sash(S) (12 OPs)", 7);
                        dialog.Option("Leave", 255);
                        dialog.AddAvatar(10).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Player.OnlinePoints >= 36)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Player.OnlinePoints -= 36;
                                client.Inventory.Add(stream, 723342);
                            }
                            else client.SendSysMesage("You don`t have enough space in your inventory.");
                        }
                        else client.SendSysMesage("You don`t have enough points.");
                        break;
                    }
                case 2:
                    {
                        if (client.Player.OnlinePoints >= 24)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Player.OnlinePoints -= 24;
                                client.Inventory.Add(stream, 711083);
                            }
                            else client.SendSysMesage("You don`t have enough space in your inventory.");
                        }
                        else client.SendSysMesage("You don`t have enough points.");
                        break;
                    }
                case 24:
                    {
                        if (client.Player.OnlinePoints >= 50)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Player.OnlinePoints -= 50;
                                client.Inventory.Add(stream, 722178);
                            }
                            else client.SendSysMesage("You don`t have enough space in your inventory.");
                        }
                        else client.SendSysMesage("You don`t have enough points.");
                        break;
                    }
                case 3:
                    {
                        if (client.Player.OnlinePoints >= 6000)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Player.OnlinePoints -= 6000;
                                client.Inventory.Add(stream, 2100065, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            }
                            else client.SendSysMesage("You don`t have enough space in your inventory.");
                        }
                        else client.SendSysMesage("You don`t have enough points.");
                        break;
                    }
                case 4:
                    {
                        if (client.Player.OnlinePoints >= 10000)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Player.OnlinePoints -= 10000;
                                client.Inventory.Add(stream, 2100065);
                            }
                            else client.SendSysMesage("You don`t have enough space in your inventory.");
                        }
                        else client.SendSysMesage("You don`t have enough points.");
                        break;
                    }
                case 5:
                    {
                        if (client.Player.OnlinePoints >= 48)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Player.OnlinePoints -= 48;
                                client.Inventory.Add(stream, 1200000);
                            }
                            else client.SendSysMesage("You don`t have enough space in your inventory.");
                        }
                        else client.SendSysMesage("You don`t have enough points.");
                        break;
                    }
                case 6:
                    {
                        if (client.Player.OnlinePoints >= 5)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Player.OnlinePoints -= 5;
                                client.Inventory.Add(stream, 724002);
                            }
                            else client.SendSysMesage("You don`t have enough space in your inventory.");
                        }
                        else client.SendSysMesage("You don`t have enough points.");
                        break;
                    }
                case 7:
                    {
                        if (client.Player.OnlinePoints >= 12)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Player.OnlinePoints -= 12;
                                client.Inventory.Add(stream, 1100003);
                            }
                            else client.SendSysMesage("You don`t have enough space in your inventory.");
                        }
                        else client.SendSysMesage("You don`t have enough points.");
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.UnlimitedArena)]
        public static void UnlimitedArena(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.Text("This is the Unlimited Stamina envoy.");
                        dialog.AddInput("Enter the Room No:", 1);
                        dialog.Option("Leave", 255);
                        dialog.AddAvatar(102).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        uint result;
                        if (uint.TryParse(Input, out result))
                        {
                            if (UnlimitedArenaRooms.Maps.ContainsKey(result))
                            {
                                var map = Database.Server.ServerMaps[700];
                                var mapId = UnlimitedArenaRooms.Maps[result];
                                ushort x = 0;
                                ushort y = 0;
                                map.GetRandCoord(ref x, ref y);
                                client.Teleport(x, y, 700, mapId);
                                client.Player.Hits = 0;
                                client.Player.TotalHits = 0;
                            }
                            else
                            {
                                var map = Database.Server.ServerMaps[700];
                                var mapId = map.GenerateDynamicID();
                                UnlimitedArenaRooms.Maps.Add(result, mapId);
                                ushort x = 0;
                                ushort y = 0;
                                map.GetRandCoord(ref x, ref y);
                                client.Teleport(x, y, 700, mapId);
                                client.Player.Hits = 0;
                                client.Player.TotalHits = 0;
                            }
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.VIPBook)]
        public static void VIPBook(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.Text("Choose your Options from the VIP Book.");
                        dialog.Option("ExpBall Loot: " + (client.Player.LootExpBall ? "Enabled" : "Disabled"), 1);
                        dialog.Option("DragonBall Loot: " + (client.Player.LootDragonBall ? "Enabled" : "Disabled"), 2);
                        dialog.Option("EnduranceBooks Loot: " + (client.LootEnduranceBooks ? "Enabled" : "Disabled"), 3);
                        dialog.Option("RefineryPacks Loot: " + (client.LootRefenieryPacks ? "Enabled" : "Disabled"), 4);
                        dialog.Option("Leave", 255);
                        dialog.AddAvatar(102).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        client.Player.LootExpBall = !client.Player.LootExpBall;
                        break;
                    }
                case 2:
                    {
                        client.Player.LootDragonBall = !client.Player.LootDragonBall;
                        break;
                    }
                case 3:
                    {
                        client.LootEnduranceBooks = !client.LootEnduranceBooks;
                        break;
                    }
                case 4:
                    {
                        client.LootRefenieryPacks = !client.LootRefenieryPacks;
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.GiantOut)]
        public static void GiantOut(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.Text("<tip desc=To#rescue#more#people#from#misery,#Yu#Koon#decided#to#join#the#Legion#of#Heroes#as#an#adviser.#");
                        dialog.Text("His#careful#and#tactical#planning#has#helped#the#legion#won#many#battles#against#the#devil#army.>Yo Koon</tip>:");
                        dialog.Text("The Giant Chasm looks quite weird now. There may be an ambush at any corner. Be careful!");
                        dialog.Option("Return~to~the~TwinCity.", 1);
                        dialog.Option("Any~other~tips~for~me?", 2);
                        dialog.AddAvatar(102).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        client.Teleport(312, 293, 1002);
                        break;
                    }
                case 2:
                    {
                        dialog.Text("							 		*Chasm of Chaos*");
                        dialog.Text("------------------------------------------------------------------------------------");
                        dialog.Text("1. Killing devils in the Giant Chasm will bring you common treasures.");
                        dialog.Text("   If you have <tip color=0xfff05050 desc=Luck#refreshes#at#00:00#every#day.#Every#time#you#get#a#rare#treasure,#you#lose#some#Luck#Points.>Luck</tip> while killing, you`ll have a chance of getting rare treasures.");
                        dialog.Text("2. PK is allowed. You`ll be granted 1 stack of <tip color=0xfff05050 desc=Each#Bliss#lasts#for#5#minutes.#When#your#stack#of#Bliss#increases,#your#Bliss#will#be#reset#to#5#minutes.>Bliss</tip> per opponent you defeat, up to 9 stacks.");
                        dialog.Text("    The more stacks of your Bliss, the higher drop rate of treasures.");
                        dialog.Text("3. Defeating robber Sprite will definitely bring you treasures, and also 90 seconds of a random <tip color=0xfff05050 desc=1.#P-Attack#10000,#M-Attack#300002.#HP#1000003.#Break#200%4.#Immunity#200%5.#Storm#effect>buff</tip>.");
                        dialog.Text("4. Defeating the Queen of Evil within 8 minutes will bring you extra rewards.");
                        dialog.Text("5. Defeating each of other beasts within 3 minutes will bring you extra rewards.");
                        dialog.Text("------------------------------------------------------------------------------------");
                        dialog.Option("I~see.", 0);
                        dialog.AddAvatar(102).FinalizeDialog();
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.NobilityWarCross)]
        public static void NobilityWarCross(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.Text("Hello <tip color=0xfff05050>");
                        dialog.Text(client.Player.Name + "</tip>,");
                        dialog.Text("NobilityCrossWar is war between Kings, every prince and dukes of each server only one winner ");
                        dialog.Text("from each rank type the last who stands");
                        dialog.Option("Sign me up.", 1);
                        dialog.Option("Later.", 255);
                        dialog.AddAvatar(255).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (MsgInterServer.StaticConnexion.NobiltyWar)
                        {
                            if (client.Player.NobilityRank >= Role.Instance.Nobility.NobilityRank.Duke)
                            {
                                client.Player.SetLocationType = 11;
                                MsgInterServer.PipeClient.Connect(client, Database.GroupServerList.InterServer.IPAddress, Database.GroupServerList.InterServer.Port);
                            }
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.L60UniqueGearPack)]
        public static void L60UniqueGearPack(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (!client.Inventory.HaveSpace(2))
                        {
                            client.SendSysMesage("Please make 2 more spaces in your inventory.");
                            break;
                        }

                        if (Database.AtributesStatus.IsTrojan(client.Player.Class))
                        {
                            if (client.Inventory.Remove(3000588, 1, stream))
                            {
                                client.Inventory.Add(stream, 410119, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Inventory.Add(stream, 130067, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Inventory.Add(stream, 118067, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "angelwing");
                                client.SendSysMesage("You~received~a~suit~of~Level~60~Unique~equipment!");
                            }
                        }
                        else if (Database.AtributesStatus.IsWarrior(client.Player.Class))
                        {
                            if (client.Inventory.Remove(3000588, 1, stream))
                            {
                                client.Inventory.Add(stream, 561119, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Inventory.Add(stream, 131067, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Inventory.Add(stream, 141067, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "angelwing");
                                client.SendSysMesage("You~received~a~suit~of~Level~60~Unique~equipment!");
                            }
                        }
                        else if (Database.AtributesStatus.IsArcher(client.Player.Class))
                        {
                            data.AddText("What~kind~of~weapon~do~you~want?");
                            data.AddOption("Throwing~Knife.", 1);
                            data.AddOption("Bow.", 2);
                            data.AddOption("Let~me~see...");
                            data.FinalizeDialog();
                        }
                        else if (Database.AtributesStatus.IsNinja(client.Player.Class))
                        {
                            data.AddText("What~kind~of~weapon~do~you~want?");
                            data.AddOption("Katana.", 3);
                            data.AddOption("Scythe.", 4);
                            data.AddOption("Let~me~see...");
                            data.FinalizeDialog();
                        }
                        else if (Database.AtributesStatus.IsMonk(client.Player.Class))
                        {
                            if (client.Inventory.Remove(3000588, 1, stream))
                            {

                                client.Inventory.Add(stream, 610119, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Inventory.Add(stream, 136067, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Inventory.Add(stream, 143067, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "angelwing");
                                client.SendSysMesage("You~received~a~suit~of~Level~60~Unique~equipment!");
                            }
                        }
                        else if (Database.AtributesStatus.IsPirate(client.Player.Class))
                        {
                            data.AddText("What~kind~of~weapon~do~you~want?");
                            data.AddOption("Rapier.", 5);
                            data.AddOption("Pistol.", 6);
                            data.AddOption("Let~me~see...");
                            data.FinalizeDialog();
                        }
                        else if (Database.AtributesStatus.IsTaoist(client.Player.Class))
                        {
                            if (client.Inventory.Remove(3000588, 1, stream))
                            {
                                client.Inventory.Add(stream, 421129, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Inventory.Add(stream, 134067, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Inventory.Add(stream, 114067, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "angelwing");
                                client.SendSysMesage("You~received~a~suit~of~Level~60~Unique~equipment!");
                            }
                        }
                        break;
                    }
                case 5:
                    {

                        if (client.Inventory.Remove(3000588, 1, stream))
                        {
                            client.Inventory.Add(stream, 611119, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.Inventory.Add(stream, 101057, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.Inventory.Add(stream, 145067, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "angelwing");
                            client.SendSysMesage("You~received~a~suit~of~Level~60~Unique~equipment!");


                        }
                        break;
                    }
                case 6:
                    {

                        if (client.Inventory.Remove(3000588, 1, stream))
                        {

                            client.Inventory.Add(stream, 612119, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.Inventory.Add(stream, 139067, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.Inventory.Add(stream, 145067, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "angelwing");
                            client.SendSysMesage("You~received~a~suit~of~Level~60~Unique~equipment!");

                        }
                        break;
                    }
                case 3:
                    {
                        if (client.Inventory.Remove(3000588, 1, stream))
                        {
                            client.Inventory.Add(stream, 601119, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.Inventory.Add(stream, 135067, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.Inventory.Add(stream, 123067, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "angelwing");
                            client.SendSysMesage("You~received~a~suit~of~Level~60~Unique~equipment!");
                        }
                        break;
                    }
                case 4:
                    {
                        if (client.Inventory.Remove(3000588, 1, stream))
                        {
                            client.Inventory.Add(stream, 511119, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.Inventory.Add(stream, 135067, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.Inventory.Add(stream, 123067, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "angelwing");
                            client.SendSysMesage("You~received~a~suit~of~Level~60~Unique~equipment!");
                        }

                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Remove(3000588, 1, stream))
                        {
                            client.Inventory.Add(stream, 613109, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.Inventory.Add(stream, 133047, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.Inventory.Add(stream, 142037, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "angelwing");
                            client.SendSysMesage("You~received~a~suit~of~Level~60~Unique~equipment!");
                        }

                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Remove(3000588, 1, stream))
                        {
                            client.Inventory.Add(stream, 500109, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.Inventory.Add(stream, 133047, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.Inventory.Add(stream, 142037, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "angelwing");
                            client.SendSysMesage("You~received~a~suit~of~Level~60~Unique~equipment!");
                        }

                        break;
                    }
            }

        }
        [NpcAttribute(NpcID.DukeofHell)]
        public static void DukeofHell(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)20031, client.Player.Class, 3801);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("<tip color=0xEEFFFF00 desc=Duke#of#Hell#was#born#with#the#ability#to#control#fire.#His#birth#was#a#secret,#but#said#a#son#of#the#Flame#Devastator#who#brought#disasters#to#the#land#300#years#ago.");
                        data.AddText("~He#was#formerly#the#right-hand#man#of#the#King#of#Evil,#then#hid#in#the#central#plain#when#the#King#was#defeated.>Duke of Hell</tip>: ");
                        data.AddText("A Windwalker? Just a joke. Your `wise` Elder Power has been a loser.");
                        data.AddText("~So, you think you`re better than the loser? Well, prove yourself to me.");
                        data.AddOption("Go~to~hell!", 2);
                        data.AddAvatar(62).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        client.CreateBoxDialog("Duke of Hell has appeared! Defeat him to avenge the deaths of your fellows!");
                        client.Teleport(client.Player.X, client.Player.Y, 44461, Database.Server.ServerMaps[44461].GenerateDynamicID());
                        Database.Server.AddMapMonster(stream, client.Map, 452373, 336, 193, 2, 2, 1, client.Player.DynamicID, true, MsgFloorItem.MsgItemPacket.EffectMonsters.None, "moveback");
                        //452373
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.ElderPower2)]
        public static void ElderPower2(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.SisterYung, client.Player.Class, 3800);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)20031, client.Player.Class, 3801);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("(The Elder Power sitting there looks like settling to meditation, but you know he will never come back to life.");
                            data.AddText("~Remember, you must kill the Duke of Hell and protect the imperial mausoleum from the crisis. Keep your promise!)");
                            data.AddOption("I~will.", 6);
                            data.AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1))
                        {
                            goto case 3;
                        }
                        else
                        {
                            data.AddText("<tip color=0xEEFFFF00 desc=The#old#manager#is#valued#for#his#wisdom#and#holds#an#oversight#role#in#training#young#Windwalkers.#He#may#look#serious,#but#actually#cares#for#the#young.");
                            data.AddText(">Elder Power</tip>: ");
                            data.AddText("Humph! If I were not injured earlier, the head of devil would not have a chance to hurt me. gattata1! You came at the right time.");
                            data.AddText("~The head of devil has run into the deep tunnel after being hit by me. (Coughing)... Don`t let the devil escape!");
                            data.AddOption("What~about~you?", 1);
                            data.AddAvatar(67).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        data.AddText("(Coughing)... Don`t worry about me. Look, I`ll show you how to switch the combat style and help you...");
                        data.AddText("~help you unblock the inner barriers. Promise... You should promise to defend the imperial mausoleum against the devils.");
                        data.AddOption("I~promise.", 2);
                        data.AddAvatar(67).FinalizeDialog();
                        var action = new ActionQuery()
                        {
                            ObjId = client.Player.UID,
                            Type = ActionType.DrawStory,
                            dwParam = 1010

                        };
                        client.Send(stream.ActionCreate(&action));
                        break;
                    }
                case 2:
                    {
                        client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 1);
                        //client.CreateBoxDialog("You`ve learned how to switch the combat style. Talk to the Elder Power for further instruction.");
                        client.Player.MessageBox("You`ve learned how to switch the combat style. Talk to the Elder Power for further instruction.",
                       new Action<Client.GameClient>(p =>
                       {
                           ElderPower2(client, stream, 3, "", id);
                       }), null);
                        break;
                    }
                case 3:
                    {
                        data.AddText("<tip color=0xEEFFFF00 desc=The#old#manager#is#valued#for#his#wisdom#and#holds#an#oversight#role#in#training#young#Windwalkers.#He#may#look#serious,#but#actually#cares#for#the#young.");
                        data.AddText(">Elder Power</tip>: ");
                        data.AddText("Good. It`s now your duty to defend... defend the honor of... Windwalker school. It may be too heavy for you, but...");
                        data.AddText("~but I`m old, and I can no longer... no longer...  (The Elder spoke more and more quietly until he closed his eyes.)");
                        data.AddOption("No,~no,~my~Elder!", 4);
                        data.AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 4:
                    {
                        client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId);
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.Teleport(client.Player.X, client.Player.Y, 44460);
                        data.AddText("(The Elder Power sitting there looks like settling to meditation, but you know he will never come back to life.");
                        data.AddText("~Remember, you must kill the Duke of Hell and protect the imperial mausoleum from the crisis. Keep your promise!)");
                        data.AddOption("I~will.", 6);
                        data.AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 6:
                    {
                        client.Player.QuestGUI.SendAutoPatcher(10090, 334, 197, (uint)NpcID.DukeofHell);
                        break;

                    }
            }
        }
        [NpcAttribute(NpcID.SisterYung2)]
        public static void SisterYung2(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.SisterYung, client.Player.Class, 3799);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.SisterYung, client.Player.Class, 3800);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1) == false)
                            {
                                data.AddText("Someone must be in danger. Hurry and check whether you can help!");
                                data.AddOption("Okay.", 255);
                                data.AddAvatar(155).FinalizeDialog();
                                break;
                            }
                            else
                            {
                                data.AddText("<tip color=0xEEFFFF00 desc=Yung#is#your#lovely#fellow#sister#who#is#not#interested#in#kungfu#but#has#a#gift#for#cooking.");
                                data.AddText("#Many#of#your#fellow#brothers#have#great#affection#for#her.>Sister Yung</tip>: ");
                                data.AddText("Wow, my fellow brother! You killed these devils really fast. I know you won`t let me down.");
                                data.AddOption("Thanks.~Did~you~see~the~Elder?", 1);
                                data.AddAvatar(155).FinalizeDialog();
                            }
                        }
                        else
                            goto case 1;
                        break;
                    }
                case 1:
                    {
                        client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId);
                        client.Teleport(client.Player.X, client.Player.Y, 44457, Database.Server.ServerMaps[10088].GenerateDynamicID());
                        data.AddText("<tip color=0xEEFFFF00 desc=Yung#is#your#lovely#fellow#sister#who#is#not#interested#in#kungfu#but#has#a#gift#for#cooking.");
                        data.AddText("#Many#of#your#fellow#brothers#have#great#affection#for#her.>Sister Yung</tip>: ");
                        data.AddText("Sorry, I don`t know that. It was me who told the Elder that some devils were running toward the imperial mausoleum. What can we do now?");
                        data.AddOption("I`ll~go~find~the~Elder.", 2);
                        data.AddAvatar(155).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.Player.QuestGUI.SendAutoPatcher(10088, 128, 36, 0);
                        break;
                    }
            }

        }
        [NpcAttribute(NpcID.SisterYung)]
        public static void SisterYung(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.ElderPower, client.Player.Class, 3798);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.SisterYung, client.Player.Class, 3799);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Help! Help, my brother! These devils are quite furious. I`m not a match for them. Ow!");
                            data.AddOption("Don`t~worry.~I`m~here.", 1);
                            data.AddAvatar(155).FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("My fellow brother, you should be very careful of them.");
                            data.AddOption("I`ll~take~care~of~them.", 2);
                            data.AddAvatar(155).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId);
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);

                        data.AddText("My fellow brother, you should be very careful of them.");
                        data.AddOption("I`ll~take~care~of~them.", 2);
                        data.AddAvatar(155).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        client.Teleport(client.Player.X, client.Player.Y, 44456, Database.Server.ServerMaps[10088].GenerateDynamicID());
                        Database.Server.AddMapMonster(stream, client.Map, 657218, 148, 142, 1, 1, 1, client.Player.DynamicID, true, MsgFloorItem.MsgItemPacket.EffectMonsters.None, "moveback");
                        Database.Server.AddMapMonster(stream, client.Map, 657218, 154, 146, 1, 1, 1, client.Player.DynamicID, true, MsgFloorItem.MsgItemPacket.EffectMonsters.None, "moveback");
                        Database.Server.AddMapMonster(stream, client.Map, 657218, 162, 139, 1, 1, 1, client.Player.DynamicID, true, MsgFloorItem.MsgItemPacket.EffectMonsters.None, "moveback");
                        Database.Server.AddMapMonster(stream, client.Map, 657218, 157, 133, 1, 1, 1, client.Player.DynamicID, true, MsgFloorItem.MsgItemPacket.EffectMonsters.None, "moveback");
                        Database.Server.AddMapMonster(stream, client.Map, 657218, 146, 135, 1, 1, 1, client.Player.DynamicID, true, MsgFloorItem.MsgItemPacket.EffectMonsters.None, "moveback");
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.ElderPower)]
        public static void ElderPower(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.WindwalkerGuard, client.Player.Class, 3797);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ElderPower, client.Player.Class, 3798);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("<tip color=0xEEFFFF00 desc=The#old#manager#is#valued#for#his#wisdom#and#holds#an#oversight#role#in#training#young#Windwalkers.#He#may#look#serious,#but#actually#cares#for#the#young.");
                            data.AddText(">Elder Power</tip>: ");
                            data.AddText("" + client.Player.Name + "? So good to have you here. (Coughing)... The devils disgracefully attacked us when the Chief was not in the camp.");
                            data.AddText("~Humph, we`ll never let them go that easily.");
                            data.AddOption("Are~you~hurt?", 1);
                            data.AddAvatar(67).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("<tip color=0xEEFFFF00 desc=The#old#manager#is#valued#for#his#wisdom#and#holds#an#oversight#role#in#training#young#Windwalkers.#He#may#look#serious,#but#actually#cares#for#the#young.");
                            data.AddText(">Elder Power</tip>: ");
                            data.AddText("TheBest01? So good to have you here. (Coughing)... The devils disgracefully attacked us when the Chief was not in the camp.");
                            data.AddText("~Humph, we`ll never let them go that easily.");
                            data.AddOption("Are~you~hurt?", 1);
                            data.AddAvatar(67).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {

                        var action = new ActionQuery()
                        {
                            ObjId = client.Player.UID,
                            Type = ActionType.DrawStory,
                            dwParam = 1009

                        };
                        client.Send(stream.ActionCreate(&action));
                        client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId);
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);

                        data.AddText("Yeah, I could have dodged the attacks, but I failed. It doesn`t matter. Listen, our school was endowed with the honor to guard");
                        data.AddText("~the imperial mausoleum for a hundred years. It`s almost finished, and we can`t jinx it. Wait, did you hear that?");
                        data.AddOption("Someone~is~calling~for~help.", 2);
                        data.AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        client.Teleport(client.Player.X, client.Player.Y, 44455, Database.Server.ServerMaps[10088].GenerateDynamicID());
                        client.Player.QuestGUI.SendAutoPatcher(client.Player.Map, ActiveQuest2.FinishNpcId.X, ActiveQuest2.FinishNpcId.Y, ActiveQuest2.FinishNpcId.ID);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.WindwalkerGuard)]
        public static void WindwalkerGuard(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.WindwalkerGuard, client.Player.Class, 3797);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ElderPower, client.Player.Class, 3798);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.SisterYung, client.Player.Class, 3799);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.SisterYung, client.Player.Class, 3800);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)20031, client.Player.Class, 3801);
            var ActiveQuest6 = Database.QuestInfo.GetFinishQuest((uint)20032, client.Player.Class, 3802);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("My fellow brother, you`re finally back! The devils suddenly attacked our camp. Many of our fellows");
                        data.AddText("~were... were killed... (sobbing)... Don`t worry about me. Hurry and give others some help!");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted)
                            || client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddOption("I~need~to~check~around~first.", 255);
                            data.AddAvatar(13).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted)
                            || client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                                data.AddOption("I`ll~go~now.", 5);
                            else if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                                data.AddOption("I`ll~go~now.", 4);
                            else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                if (client.Player.QuestGUI.CheckObjectives(ActiveQuest3.MissionId, 1))
                                {
                                    data.AddOption("I`ll~go~now.", 3);
                                }
                                else
                                {
                                    data.AddOption("I`ll~go~now.", 2);
                                }
                            }
                            else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                                data.AddOption("I`ll~go~now.", 2);
                            else
                                data.AddOption("I`ll~go~now.", 1);
                        }
                        data.AddOption("I~need~to~check~around~first.", 255);
                        data.AddAvatar(13).FinalizeDialog();
                        break;
                    }
                case 5:
                    {
                        client.Teleport(359, 312, 44460);
                        client.SendSysMesage("You found the Elder Power sitting in the tomb tunnel. It seems he has been seriously injured.");
                        client.Player.QuestGUI.SendAutoPatcher("You found the Elder Power sitting in the tomb tunnel. It seems he has been seriously injured.", 10090, 350, 285, (uint)MsgNpc.NpcID.ElderPower2);
                        break;
                    }
                case 4:
                    {
                        client.Player.QuestGUI.SendAutoPatcher("There are too many devil claws here. Try your best to break through and find the Elder Power.", 10089, 28, 89, 0);
                        client.SendSysMesage("There are too many devil claws here. Try your best to break through and find the Elder Power.");
                        client.Teleport(134, 93, 10089);
                        break;
                    }
                case 3:
                    {
                        client.Teleport(191, 156, 44456, Database.Server.ServerMaps[10088].GenerateDynamicID());
                        break;
                    }
                case 2:
                    {
                        client.Teleport(191, 156, 44455, Database.Server.ServerMaps[10088].GenerateDynamicID());
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            client.Player.QuestGUI.SendAutoPatcher("Many of Windwalker fellows were killed, and many of devils who attacked the camp were killed. Head to see the Elder Power.", ActiveQuest.FinishNpcId.Map, ActiveQuest.FinishNpcId.X, ActiveQuest.FinishNpcId.Y, ActiveQuest.FinishNpcId.ID);
                            client.Teleport(191, 156, 10088, Database.Server.ServerMaps[10088].GenerateDynamicID());
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Level67EliteHeadgearPack)]
        public static void Level67EliteHeadgearPack(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Take a good look and pick one.");
                        if (client.Player.Class <= 15)
                        {
                            data.AddOption("Elite~War~Coronet.", 1);
                            data.AddOption("Elite~Heart~of~Ocean.", 2);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Class <= 25)
                            {
                                data.AddOption("Elite~Gold~Helmet.", 3);
                                data.AddOption("Elite~Heart~of~Ocean.", 2);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Class <= 45)
                                {
                                    data.AddOption("Elite~Leopard~Hat.", 4);
                                    data.AddOption("Elite~Heart~of~Ocean.", 2);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.Class <= 55)
                                    {
                                        data.AddOption("Elite~Blaze~Hood.", 5);
                                        data.AddOption("Elite~Heart~of~Ocean.", 2);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (client.Player.Class <= 65)
                                        {
                                            data.AddOption("Elite~Headband~Of~Repentance.", 6);
                                            data.AddOption("Elite~Heart~of~Ocean.", 2);
                                            data.FinalizeDialog();
                                        }
                                        else
                                        {
                                            if (client.Player.Class <= 75)
                                            {
                                                data.AddOption("Elite~Calm~Hat.", 7);
                                                data.AddOption("Elite~Heart~of~Ocean.", 2);
                                                data.FinalizeDialog();
                                            }
                                            else
                                            {
                                                if (client.Player.Class <= 85)
                                                {
                                                    data.AddOption("Elite~WindHood.", 8);
                                                    data.AddOption("Elite~Heart~of~Ocean.", 2);
                                                    data.FinalizeDialog();
                                                }
                                                else if (client.Player.Class <= 145)
                                                {
                                                    data.AddOption("Elite~Shark~Cap.", 9);
                                                    data.AddOption("Elite~Heart~of~Ocean.", 2);
                                                    data.FinalizeDialog();
                                                }
                                                else
                                                {
                                                    data.AddOption("Elite~WindWalker~Cap.", 10);
                                                    data.AddOption("Elite~Heart~of~Ocean.", 2);
                                                    data.FinalizeDialog();
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        break;
                    }
                case 10:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Inventory.Remove(728245, 1, stream))
                            {
                                client.Inventory.Add(stream, 722136, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Inventory.Add(stream, 101068, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.CreateBoxDialog("You~opened~the~pack~and~received~an~Elite~Shark~Cap!");
                            }
                        }
                        else
                        {
                            client.CreateBoxDialog("Please~prepare~one~slot~in~your~inventory.");
                        }
                        break;
                    }

                case 9:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Inventory.Remove(728245, 1, stream))
                            {
                                client.Inventory.Add(stream, 722136, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Inventory.Add(stream, 114068, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.CreateBoxDialog("You~opened~the~pack~and~received~an~Elite~Shark~Cap!");
                            }
                        }
                        else
                        {
                            client.CreateBoxDialog("Please~prepare~one~slot~in~your~inventory.");
                        }
                        break;
                    }
                case 8:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Inventory.Remove(728245, 1, stream))
                            {
                                client.Inventory.Add(stream, 148068, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Inventory.Add(stream, 722136, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.CreateBoxDialog("You~received~an~Elite~Wind~Hood~and~an~EXP~Ball!");
                            }
                        }
                        else
                        {
                            client.CreateBoxDialog("Please~prepare~one~slot~in~your~inventory.");
                        }
                        break;
                    }
                case 7:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Inventory.Remove(728245, 1, stream))
                            {
                                client.Inventory.Add(stream, 144068, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Inventory.Add(stream, 722136, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.CreateBoxDialog("You~opened~the~pack~and~received~an~Elite~Calm~Hat.");
                            }
                        }
                        else
                        {
                            client.CreateBoxDialog("Please~prepare~one~slot~in~your~inventory.");
                        }
                        break;
                    }
                case 6:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Inventory.Remove(728245, 1, stream))
                            {
                                client.Inventory.Add(stream, 722136, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Inventory.Add(stream, 143068, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.CreateBoxDialog("You~opened~the~pack~and~received~an~Elite~Headband~Of~Repentance!");
                            }
                        }
                        else
                        {
                            client.CreateBoxDialog("Please~prepare~one~slot~in~your~inventory.");
                        }
                        break;
                    }
                case 5:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Inventory.Remove(728245, 1, stream))
                            {
                                client.Inventory.Add(stream, 722136, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Inventory.Add(stream, 123068, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.CreateBoxDialog("You~opened~the~pack~and~received~an~Elite~Blaze~Hood!");
                            }
                        }
                        else
                        {
                            client.CreateBoxDialog("Please~prepare~one~slot~in~your~inventory.");
                        }
                        break;
                    }
                case 4:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Inventory.Remove(728245, 1, stream))
                            {
                                client.Inventory.Add(stream, 722136, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Inventory.Add(stream, 113038, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.CreateBoxDialog("You~opened~the~pack~and~received~an~Elite~Leopard~Hat!");
                            }
                        }
                        else
                        {
                            client.CreateBoxDialog("Please~prepare~one~slot~in~your~inventory.");
                        }
                        break;
                    }
                case 3:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Inventory.Remove(728245, 1, stream))
                            {
                                client.Inventory.Add(stream, 722136, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Inventory.Add(stream, 111068, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.CreateBoxDialog("You~opened~the~pack~and~received~an~Elite~Gold~Helmet!");
                            }
                        }
                        else
                        {
                            client.CreateBoxDialog("Please~prepare~one~slot~in~your~inventory.");
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Inventory.Remove(728245, 1, stream))
                            {
                                client.Inventory.Add(stream, 722136, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Inventory.Add(stream, 118068, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.CreateBoxDialog("You~opened~the~pack~and~received~an~Elite~War~Coronet!");
                            }
                        }
                        else
                        {
                            client.CreateBoxDialog("Please~prepare~one~slot~in~your~inventory.");
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.Inventory.Remove(728245, 1, stream);
                            client.Inventory.Add(stream, 722136, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.Inventory.Add(stream, 117068, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~an~Elite~Heart~of~Ocean!");
                        }
                        else
                        {
                            client.CreateBoxDialog("Please~prepare~one~slot~in~your~inventory.");
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Level55EliteWeaponPack)]
        public static void Level55EliteWeaponPack(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Take a good look and pick one.");
                        if (client.Player.Class <= 15)
                        {
                            data.AddOption("Elite~Cold~Blade.", 1);
                            data.AddOption("Elite~Mirrored~Sword.", 2);
                            data.AddOption("Elite~Battle~Club.", 3);
                            data.AddOption("Others.", 4);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Class <= 25)
                            {
                                data.AddOption("Elite~Octagonal~Shield.", 22);
                                data.AddOption("Others.", 4);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Class <= 45)
                                {
                                    data.AddOption("Elite~Long~Bow.", 23);
                                    data.AddOption("Elite~Solar~Knife.", 24);
                                    data.AddOption("Others.", 4);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.Class <= 55)
                                    {
                                        data.AddOption("Elite~Fierce~Scythe.", 25);
                                        data.AddOption("Elite~Night~Katana.", 26);
                                        data.AddOption("Others.", 4);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (client.Player.Class <= 65)
                                        {
                                            data.AddOption("Elite~Beads~Of~Truth.", 27);
                                            data.AddOption("Others.", 4);
                                            data.FinalizeDialog();
                                        }
                                        else
                                        {
                                            if (client.Player.Class <= 75)
                                            {
                                                data.AddOption("Elite~Blood~Pistol.", 28);
                                                data.AddOption("Elite~Melody~Rapier.", 29);
                                                data.AddOption("Others.", 4);
                                                data.FinalizeDialog();
                                            }
                                            else
                                            {
                                                if (client.Player.Class <= 85)
                                                {
                                                    data.AddOption("Elite~Flame~Nunchaku.", 30);
                                                    data.AddOption("Others.", 4);
                                                    data.FinalizeDialog();
                                                }
                                                else if (client.Player.Class <= 145)
                                                {
                                                    data.AddOption("Elite~Copper~Backsword.", 31);
                                                    data.AddOption("Elite~Bend~Spear.", 32);
                                                    data.AddOption("Others.", 4);
                                                    data.FinalizeDialog();
                                                }
                                                else
                                                {
                                                    data.AddOption("Elite~WindWalker~Fan.", 33);
                                                    data.AddOption("Others.", 4);
                                                    data.FinalizeDialog();
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        break;
                    }
                case 33:
                    {
                        if (client.Inventory.Remove(728243, 1, stream))
                        {
                            client.Inventory.Add(stream, 626108, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~an~Elite~WindWalker~Fan!");
                        }
                        break;
                    }
                case 32:
                    {
                        if (client.Inventory.Remove(728243, 1, stream))
                        {
                            client.Inventory.Add(stream, 560108, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~an~Elite~Bend~Spear!");
                        }
                        break;
                    }
                case 31:
                    {
                        if (client.Inventory.Remove(728243, 1, stream))
                        {
                            client.Inventory.Add(stream, 421108, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~an~Elite~Copper~Backsword!");
                        }
                        break;
                    }
                case 30:
                    {
                        if (client.Inventory.Remove(728243, 1, stream))
                        {
                            client.Inventory.Add(stream, 617108, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~received~an~Elite~Flame~Nunchaku!");
                        }
                        break;
                    }
                case 29:
                    {
                        if (client.Inventory.Remove(728243, 1, stream))
                        {
                            client.Inventory.Add(stream, 611108, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~an~Elite~Melody~Rapier.");
                        }
                        break;
                    }
                case 28:
                    {
                        if (client.Inventory.Remove(728243, 1, stream))
                        {
                            client.Inventory.Add(stream, 612108, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~an~Elite~Blood~Pistol.");
                        }
                        break;
                    }
                case 27:
                    {
                        if (client.Inventory.Remove(728243, 1, stream))
                        {
                            client.Inventory.Add(stream, 610108, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~an~Elite~Beads~Of~Truth!");
                        }
                        break;
                    }
                case 26:
                    {
                        if (client.Inventory.Remove(728243, 1, stream))
                        {
                            client.Inventory.Add(stream, 601108, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~an~Elite~Night~Katana!");
                        }
                        break;
                    }
                case 25:
                    {
                        if (client.Inventory.Remove(728243, 1, stream))
                        {
                            client.Inventory.Add(stream, 511108, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~an~Elite~Fierce~Scythe(B).");
                        }
                        break;
                    }
                case 24:
                    {
                        if (client.Inventory.Remove(728243, 1, stream))
                        {
                            client.Inventory.Add(stream, 613098, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~an~Elite~Solar~Knife(B).");
                        }
                        break;
                    }
                case 23:
                    {
                        if (client.Inventory.Remove(728243, 1, stream))
                        {
                            client.Inventory.Add(stream, 500098, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~an~Elite~Long~Bow!");
                        }
                        break;
                    }
                case 22:
                    {
                        if (client.Inventory.Remove(728243, 1, stream))
                        {
                            client.Inventory.Add(stream, 900028, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~an~Elite~Octagonal~Shield!");
                        }
                        break;
                    }

                case 4:
                    {
                        data.AddText("Take a good look and pick one.");
                        data.AddOption("Elite~Cold~Blade.", 7);
                        data.AddOption("Elite~Mirrored~Sword.", 8);
                        data.AddOption("Elite~Scorpion~Hook.", 9);
                        data.AddOption("Elite~Leopard~Whip.", 10);
                        data.AddOption("Elite~War~Axe.", 11);
                        data.AddOption("Elite~Iron~Hammer.", 12);
                        data.AddOption("Elite~Battle~Club.", 13);
                        data.AddOption("Next.", 5);
                        data.FinalizeDialog();
                        break;
                    }
                case 5:
                    {
                        data.AddText("Take a good look and pick one.");
                        data.AddOption("Elite~Gold~Scepter.", 14);
                        data.AddOption("Elite~Steel~Dagger.", 15);
                        data.AddOption("Elite~Sharp~Glaive.", 16);
                        data.AddOption("Elite~Destiny~Poleaxe.", 17);
                        data.AddOption("Elite~Giant~Long~Hammer.", 18);
                        data.AddOption("Elite~Bend~Spear.", 19);
                        data.AddOption("Previous.", 4);
                        data.AddOption("Next.", 6);
                        data.FinalizeDialog();
                        break;
                    }
                case 6:
                    {
                        data.AddText("Take a good look and pick one.");
                        data.AddOption("Elite~Spring~Wand.", 20);
                        data.AddOption("Elite~Star~Halbert.", 21);
                        data.AddOption("Previous.", 5);
                        data.FinalizeDialog();
                        break;
                    }
                case 21:
                    {
                        if (client.Inventory.Remove(728243, 1, stream))
                        {
                            client.Inventory.Add(stream, 580108, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~an~Elite~Star~Halbert!");
                        }
                        break;
                    }
                case 20:
                    {
                        if (client.Inventory.Remove(728243, 1, stream))
                        {
                            client.Inventory.Add(stream, 561108, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~an~Elite~Spring~Wand!");
                        }
                        break;
                    }
                case 19:
                    {
                        if (client.Inventory.Remove(728243, 1, stream))
                        {
                            client.Inventory.Add(stream, 560108, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~an~Elite~Bend~Spear!");
                        }
                        break;
                    }
                case 18:
                    {
                        if (client.Inventory.Remove(728243, 1, stream))
                        {
                            client.Inventory.Add(stream, 540108, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~an~Elite~Giant~Long~Hammer!");
                        }
                        break;
                    }
                case 17:
                    {
                        if (client.Inventory.Remove(728243, 1, stream))
                        {
                            client.Inventory.Add(stream, 530108, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~an~Elite~Destiny~Poleaxe!");
                        }
                        break;
                    }
                case 16:
                    {
                        if (client.Inventory.Remove(728243, 1, stream))
                        {
                            client.Inventory.Add(stream, 510108, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~an~Elite~Sharp~Glaive!");
                        }
                        break;
                    }
                case 15:
                    {
                        if (client.Inventory.Remove(728243, 1, stream))
                        {
                            client.Inventory.Add(stream, 490108, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~an~Elite~Steel~Dagger!");
                        }
                        break;
                    }
                case 14:
                    {
                        if (client.Inventory.Remove(728243, 1, stream))
                        {
                            client.Inventory.Add(stream, 481108, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~an~Elite~Gold~Scepter!");
                        }
                        break;
                    }
                case 13:
                    {
                        if (client.Inventory.Remove(728243, 1, stream))
                        {
                            client.Inventory.Add(stream, 480108, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~an~Elite~Battle~Club!");
                        }
                        break;
                    }
                case 12:
                    {
                        if (client.Inventory.Remove(728243, 1, stream))
                        {
                            client.Inventory.Add(stream, 460108, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~an~Elite~Iron~Hammer!");
                        }
                        break;
                    }
                case 11:
                    {
                        if (client.Inventory.Remove(728243, 1, stream))
                        {
                            client.Inventory.Add(stream, 450108, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~an~Elite~War~Axe!");
                        }
                        break;
                    }
                case 10:
                    {
                        if (client.Inventory.Remove(728243, 1, stream))
                        {
                            client.Inventory.Add(stream, 440108, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~an~Elite~Leopard~Whip!");
                        }
                        break;
                    }
                case 9:
                    {
                        if (client.Inventory.Remove(728243, 1, stream))
                        {
                            client.Inventory.Add(stream, 430108, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~an~Elite~Scorpion~Hook!");
                        }
                        break;
                    }
                case 8:
                    {
                        if (client.Inventory.Remove(728243, 1, stream))
                        {
                            client.Inventory.Add(stream, 420108, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~an~Elite~Mirrored~Sword!");
                        }
                        break;
                    }
                case 7:
                    {
                        if (client.Inventory.Remove(728243, 1, stream))
                        {
                            client.Inventory.Add(stream, 410108, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~an~Elite~Cold~Blade!");
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Remove(728243, 1, stream))
                        {
                            client.Inventory.Add(stream, 410108, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~an~Elite~Cold~Blade!");
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Remove(728243, 1, stream))
                        {
                            client.Inventory.Add(stream, 420108, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~an~Elite~Mirrored~Sword!");
                        }
                        break;
                    }
                case 3:
                    {
                        if (client.Inventory.Remove(728243, 1, stream))
                        {
                            client.Inventory.Add(stream, 480108, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~an~Elite~Battle~Club!");
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Level52UniqueHeadgearPack)]
        public static void Level52UniqueHeadgearPack(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Take a good look and pick one.");
                        data.AddOption("Unique~Thread~Earring.", 1);
                        if (client.Player.Class <= 15)
                        {
                            data.AddOption("Unique~Gold~Coronet.", 2);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Class <= 25)
                            {
                                data.AddOption("Unique~Pearl~Helmet.", 3);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Class <= 45)
                                {
                                    data.AddOption("Unique~Jackal~Hat.", 4);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.Class <= 55)
                                    {
                                        data.AddOption("Unique~Demon~Hood.", 5);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (client.Player.Class <= 65)
                                        {
                                            data.AddOption("Unique~Pure~Headband.", 6);
                                            data.FinalizeDialog();
                                        }
                                        else
                                        {
                                            if (client.Player.Class <= 75)
                                            {
                                                data.AddOption("Unique~Tranquil~Hat.", 7);
                                                data.FinalizeDialog();
                                            }
                                            else
                                            {
                                                if (client.Player.Class <= 85)
                                                {
                                                    data.AddOption("Unique~Mercy~Hood.", 8);
                                                    data.FinalizeDialog();
                                                }
                                                else if (client.Player.Class <= 145)
                                                {
                                                    data.AddOption("Unique~Lotus~Cap.", 9);
                                                    data.FinalizeDialog();
                                                }
                                                else
                                                {
                                                    data.AddOption("Unique~WindWalker~Cap.", 10);
                                                    data.FinalizeDialog();
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        break;
                    }
                case 10:
                    {
                        if (client.Inventory.Remove(728240, 1, stream))
                        {
                            client.Inventory.Add(stream, 101047, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~a~Unique~WindWalker~Cap!");
                        }

                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Remove(728240, 1, stream))
                        {
                            client.Inventory.Add(stream, 117057, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~a~Unique~Thread~Earring!");
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Remove(728240, 1, stream))
                        {
                            client.Inventory.Add(stream, 118057, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~a~Unique~Gold~Coronet!");
                        }
                        break;
                    }
                case 3:
                    {
                        if (client.Inventory.Remove(728240, 1, stream))
                        {
                            client.Inventory.Add(stream, 111057, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~a~Unique~Pearl~Helmet!");
                        }
                        break;
                    }
                case 4:
                    {
                        if (client.Inventory.Remove(728240, 1, stream))
                        {
                            client.Inventory.Add(stream, 113027, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~a~Unique~Jacka~lHat!");
                        }
                        break;
                    }
                case 5:
                    {
                        if (client.Inventory.Remove(728240, 1, stream))
                        {
                            client.Inventory.Add(stream, 123057, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~a~Unique~Demon~Hood!");
                        }

                        break;
                    }
                case 6:
                    {
                        if (client.Inventory.Remove(728240, 1, stream))
                        {
                            client.Inventory.Add(stream, 143057, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~a~Unique~Pure~Headband!");
                        }
                        break;
                    }
                case 7:
                    {
                        if (client.Inventory.Remove(728240, 1, stream))
                        {
                            client.Inventory.Add(stream, 144057, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~a~Unique~Tranquil~Hat.");
                        }
                        break;
                    }
                case 8:
                    {
                        if (client.Inventory.Remove(728240, 1, stream))
                        {
                            client.Inventory.Add(stream, 148057, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~received~a~Unique~MercyHood!");
                        }
                        break;
                    }
                case 9:
                    {
                        if (client.Inventory.Remove(728240, 1, stream))
                        {
                            client.Inventory.Add(stream, 114057, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~a~Unique~Lotus~Cap!");
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Level50UniqueWeaponPack)]
        public static void Level50UniqueWeaponPack(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Take a good look and pick one.");
                        if (client.Player.Class <= 25)
                        {
                            data.AddOption("Unique~Moon~Blade", 1);
                            data.AddOption("Unique~Fang~Sword.", 2);
                            data.AddOption("Unique~Antler~Hook.", 3);
                            data.AddOption("Unique~Twin~Whip.", 4);
                            data.AddOption("Unique~Peace~Axe.", 5);
                            data.AddOption("Unique~Melon~Hammer.", 6);
                            data.AddOption("Unique~War~Club.", 7);
                            data.AddOption("Next.", 10);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Class <= 45)
                            {
                                data.AddOption("Unique~Qin~Bow.", 20);
                                data.AddOption("Unique~Sparky~Knife.", 21);
                                data.AddOption("Others.", 9);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Class <= 55)
                                {
                                    data.AddOption("Unique~Fang~Katana.", 22);
                                    data.AddOption("Unique~Evil~Scythe.", 23);
                                    data.AddOption("Others.", 9);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.Class <= 65)
                                    {
                                        data.AddOption("Unique~Jeweled~Prayer~Beads.", 24);
                                        data.AddOption("Others.", 9);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (client.Player.Class <= 75)
                                        {
                                            data.AddOption("Unique~Gold~Pistol.", 25);
                                            data.AddOption("Unique~Stream~Rapier.", 26);
                                            data.AddOption("Others.", 9);
                                            data.FinalizeDialog();
                                        }
                                        else
                                        {
                                            if (client.Player.Class <= 85)
                                            {
                                                data.AddOption("Unique~Dragon~Nunchaku.", 27);
                                                data.AddOption("Others.", 9);
                                                data.FinalizeDialog();
                                            }
                                            else
                                            {
                                                if (client.Player.Class <= 145)
                                                {
                                                    data.AddOption("Unique~Iron~Backsword.", 28);
                                                    data.AddOption("Others.", 9);
                                                    data.FinalizeDialog();
                                                }
                                                else
                                                {
                                                    data.AddOption("Unique~WindWalker~Fan.", 29);
                                                    data.AddOption("Others.", 9);
                                                    data.FinalizeDialog();
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        break;
                    }
                case 29:
                    {
                        if (client.Inventory.Remove(728239, 1, stream))
                        {
                            client.Inventory.Add(stream, 626088, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~a~Unique~WindWalker~Fan!");
                        }
                        break;
                    }
                case 28:
                    {
                        if (client.Inventory.Remove(728239, 1, stream))
                        {
                            client.Inventory.Add(stream, 421087, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~a~Unique~Iron~Backsword!");
                        }
                        break;
                    }
                case 27:
                    {
                        if (client.Inventory.Remove(728239, 1, stream))
                        {
                            client.Inventory.Add(stream, 617097, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~received~a~Unique~Dragon~Nunchaku!");
                        }
                        break;
                    }
                case 26:
                    {
                        if (client.Inventory.Remove(728239, 1, stream))
                        {
                            client.Inventory.Add(stream, 611097, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~a~Unique~Stream~Rapier.");
                        }
                        break;
                    }
                case 25:
                    {
                        if (client.Inventory.Remove(728239, 1, stream))
                        {
                            client.Inventory.Add(stream, 612097, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~a~Unique~Gold~Pistol.");
                        }
                        break;
                    }
                case 24:
                    {
                        if (client.Inventory.Remove(728239, 1, stream))
                        {
                            client.Inventory.Add(stream, 610097, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~a~Unique~Jeweled~Prayer~Beads!");
                        }
                        break;
                    }
                case 23:
                    {
                        if (client.Inventory.Remove(728239, 1, stream))
                        {
                            client.Inventory.Add(stream, 511097, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~a~Unique~Evil~Scythe(B)!");
                        }
                        break;
                    }
                case 22:
                    {
                        if (client.Inventory.Remove(728239, 1, stream))
                        {
                            client.Inventory.Add(stream, 601097, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~a~Unique~Fang~Katana!");
                        }
                        break;
                    }
                case 20:
                    {
                        if (client.Inventory.Remove(728239, 1, stream))
                        {
                            client.Inventory.Add(stream, 500087, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~a~Unique~Qin~Bow!");
                        }
                        break;
                    }
                case 21:
                    {
                        if (client.Inventory.Remove(728239, 1, stream))
                        {
                            client.Inventory.Add(stream, 613087, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~a~Unique~Sparky~Knife(B)!");
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Remove(728239, 1, stream))
                        {
                            client.Inventory.Add(stream, 410097, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~a~Unique~Moon~Blade!");
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Remove(728239, 1, stream))
                        {
                            client.Inventory.Add(stream, 420097, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~a~Unique~Fang~Sword!");
                        }
                        break;
                    }
                case 3:
                    {
                        if (client.Inventory.Remove(728239, 1, stream))
                        {
                            client.Inventory.Add(stream, 430097, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~a~Unique~Antler~Hook!");
                        }
                        break;
                    }
                case 4:
                    {
                        if (client.Inventory.Remove(728239, 1, stream))
                        {
                            client.Inventory.Add(stream, 440097, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~a~Unique~Twin~Whip!");
                        }
                        break;
                    }
                case 5:
                    {
                        if (client.Inventory.Remove(728239, 1, stream))
                        {
                            client.Inventory.Add(stream, 450097, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~a~Unique~Peace~Axe!");
                        }
                        break;
                    }
                case 6:
                    {
                        if (client.Inventory.Remove(728239, 1, stream))
                        {
                            client.Inventory.Add(stream, 460097, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~a~Unique~Melon~Hammer!");
                        }
                        break;
                    }
                case 7:
                    {
                        if (client.Inventory.Remove(728239, 1, stream))
                        {
                            client.Inventory.Add(stream, 480097, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~a~Unique~War~Club!");
                        }
                        break;
                    }
                case 8:
                    {
                        data.AddText("Take a good look and pick one.");
                        data.AddOption("Unique~Shaolin~Wand.", 17);
                        data.AddOption("Unique~Gold~Halbert.", 18);
                        data.AddOption("Previous.", 10);
                        data.FinalizeDialog();
                        break;
                    }
                case 9:
                    {
                        data.AddOption("Unique~Moon~Blade", 1);
                        data.AddOption("Unique~Fang~Sword.", 2);
                        data.AddOption("Unique~Antler~Hook.", 3);
                        data.AddOption("Unique~Twin~Whip.", 4);
                        data.AddOption("Unique~Peace~Axe.", 5);
                        data.AddOption("Unique~Melon~Hammer.", 6);
                        data.AddOption("Unique~War~Club.", 7);
                        data.AddOption("Next.", 10);
                        data.FinalizeDialog();
                        break;
                    }
                case 10:
                    {
                        data.AddText("Take a good look and pick one.");
                        data.AddOption("Unique~Wish~Scepter.", 11);
                        data.AddOption("Unique~Cao~Dagger.", 12);
                        data.AddOption("Unique~Union~Glaive.", 13);
                        data.AddOption("Unique~Twin~Poleaxe.", 14);
                        data.AddOption("Unique~Great~Long~Hammer.", 15);
                        data.AddOption("Unique~Luck~Spear", 16);
                        data.AddOption("Previous.", 9);
                        data.AddOption("Next.", 8);
                        data.FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        if (client.Inventory.Remove(728239, 1, stream))
                        {
                            client.Inventory.Add(stream, 481097, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~a~Unique~Wish~Scepter!");
                        }
                        break;
                    }
                case 12:
                    {
                        if (client.Inventory.Remove(728239, 1, stream))
                        {
                            client.Inventory.Add(stream, 490097, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~a~Unique~Cao~Dagger!");
                        }
                        break;
                    }
                case 13:
                    {
                        if (client.Inventory.Remove(728239, 1, stream))
                        {
                            client.Inventory.Add(stream, 510097, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~a~Unique~Union~Glaive!");

                        }
                        break;
                    }
                case 14:
                    {
                        if (client.Inventory.Remove(728239, 1, stream))
                        {
                            client.Inventory.Add(stream, 530097, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~a~Unique~Twin~Poleaxe!");
                        }
                        break;
                    }
                case 15:
                    {
                        if (client.Inventory.Remove(728239, 1, stream))
                        {
                            client.Inventory.Add(stream, 540097, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~a~Unique~Great~Long~Hammer!");
                        }
                        break;
                    }
                case 16:
                    {
                        if (client.Inventory.Remove(728239, 1, stream))
                        {
                            client.Inventory.Add(stream, 560097, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~a~Unique~Luck~Spear!");
                        }
                        break;
                    }
                case 17:
                    {
                        if (client.Inventory.Remove(728239, 1, stream))
                        {
                            client.Inventory.Add(stream, 561097, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~a~Unique~Shaolin~Wand!");
                        }
                        break;
                    }
                case 18:
                    {
                        if (client.Inventory.Remove(728239, 1, stream))
                        {
                            client.Inventory.Add(stream, 580097, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~opened~the~pack~and~received~a~Unique~Gold~Halbert!");
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Matchmaker)]
        public static void Matchmaker(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddOption("I~shall~try~my~best!", 1);
                        data.AddAvatar(2);
                        data.FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        data.AddOption("OK.~I~shall~visit~her.", 2);
                        data.AddOption("Just~passing~by.");
                        data.AddAvatar(4);
                        data.FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        data.AddText("You~must~have~a~meteor~tear~and~a~meteor,~then~you~can~divorce.");
                        data.AddOption("Here~you~are.", 3);
                        data.AddOption("I~changed~my~mind.");
                        data.AddAvatar(6);
                        data.FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        /*data.AddText("Some~lovers~love~each~other~but~cannot~live~together.~Are~you~sure~to~divorce~from~your~spouse~whom~you~once~loved~so~much.");
                        data.AddOption("I~decide~to~divorce.", 4);
                        data.AddOption("I~changed~my~mind.");
                        data.AddAvatar(6);
                        data.FinalizeDialog();
                        */

                        data.AddOption("Sorry,~I~cannot~tell~you.");
                        data.AddAvatar(2);
                        data.FinalizeDialog();
                        break;
                    }
                case 4:
                    {
                        data.AddText("Joe!~You~have~seen~him?~Where~is~he~now?~Is~everything~going~on~well~with~him?");
                        data.AddOption("Do~not~cry.", 5);
                        data.AddOption("Do~not~ruin~the~meteor!");
                        data.AddAvatar(2);
                        data.FinalizeDialog();
                        break;
                    }
                case 5:
                    {

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.TreasureBox)]
        public static void TreasureBox(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("The treasure box is empty. The bandits just took the treasure and left.");
                        data.AddOption("I~got~a~little~late,~still.");
                        data.FinalizeDialog();
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.TreasureBox1)]
        public static void TreasureBox1(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("The treasure box is empty. The bandits just took the treasure and left.");
                        data.AddOption("I~got~a~little~late,~still.");
                        data.FinalizeDialog();
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.TreasureBox2)]
        public static void TreasureBox2(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("The treasure box is empty. The bandits just took the treasure and left.");
                        data.AddOption("I~got~a~little~late,~still.");
                        data.FinalizeDialog();
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.TreasureBox3)]
        public static void TreasureBox3(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("The treasure box is empty. The bandits just took the treasure and left.");
                        data.AddOption("I~got~a~little~late,~still.");
                        data.FinalizeDialog();
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.YangYun2)]
        public static void YangYun2(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.SugarTang, client.Player.Class, 520);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.YangYun1, client.Player.Class, 521);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Well, here we are! This is the Treasure House of our Yang family.");
                            data.AddOption("Show~me~the~Tower~Splinter.", 1);
                            data.AddOption("It`s~a~nice~place.");
                            data.AddAvatar(64);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                        && !client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("I really want to help you and the Tang family, but the Tower Splinter I kept has been stolen.");
                                data.AddOption("What~should~I~do~next?", 6);
                                data.AddOption("Alright.");
                            }
                            else
                            {
                                data.AddText("I really want to help you and the Tang family, but the Tower Splinter I kept has been stolen.");
                                data.AddOption("What~should~I~do~next?", 6);
                                data.AddOption("Alright.");
                                data.AddAvatar(64);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Years ago, the defensive talisman, Star Tower, was broken into three pieces. For that, our Yang family and the Tang family became enemies. I just");
                            data.AddText("~happened to have one of the Tower Splinters. Maybe it`s the key to the ending the feud between the two clans.");
                            data.AddOption("Could~be.");
                            data.AddAvatar(64);
                            data.FinalizeDialog();
                        }
                        break;
                    }

                case 6:
                    {
                        data.AddText("I`m afraid you should go find the Tower Splinters around. If you have any problem, just find me on Bird Island. Good luck!");
                        data.AddOption("Bye!", 3);
                        data.AddAvatar(64);
                        data.FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Map.View.GetAllMapRolesCount(Role.MapObjectType.Monster, p => p.Alive == true) == 0)
                        {
                            data.AddText("I can`t believe it! They`ve stolen the Tower piece!! Please, help me get it back!");
                            data.AddOption("The~thieves~will~pay~dearly.", 2);
                            data.AddAvatar(64);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Geez! Where had all these bandits come from? Hero, I need you to teach them a lesson! They should stay away from my collections and the Tower Splinter.");
                            data.AddOption("I`ll~take~care~of~it.");
                            data.AddAvatar(64);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You received 100 Silver!");
                            data.AddText("I`m afraid you should go find the Tower Splinters around. If you have any problem, just find me on Bird Island. Good luck!");
                            data.AddOption("Bye!", 3);
                            data.AddAvatar(64);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 3:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.Teleport(733, 518, 1015);
                        client.CreateBoxDialog("You~are~on~Bird~Island,~now.");
                        break;
                    }
            }
        }

        //
        [NpcAttribute(NpcID.NetPeddler)]
        public static void NetPeddler(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.YangYun1, client.Player.Class, 522);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("The Ruan Brothers` hut is just under those stone doors. They`re crazy rich, but I`m not so jealous.");
                            data.AddText("~I don`t care if I`m poor. Selling fishing supplies is a decent trade, and safer, too!");
                            data.AddOption("Do~you~sell~Fishing~Nets?", 1);
                            data.AddOption("As~long~as~you`re~happy.");
                            data.AddAvatar(118);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Do you know, that Ruan Brothers have a hut under those stone doors. They`re crazy rich, but I`m not so jealous.");
                            data.AddText("~I don`t care if I`m poor. Selling fishing supplies is a decent trade, and safer, too!");
                            data.AddOption("As~long~as~you`re~happy.");
                            data.AddAvatar(118);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        data.AddText("Of course! You don`t need to be a genius to fish, but you will need a good net. I might have a spare around here, somewhere.");
                        data.AddOption("One~Fishing~Net,~please.", 2);
                        data.AddOption("I`ll~be~back~soon.");
                        data.AddAvatar(118);
                        data.FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        if (client.Player.Money < 10000)
                        {
                            data.AddText("Make sure you bring enough money with you! It`s just 5,000 Silver!");
                            data.AddOption("Alright.");
                            data.AddAvatar(118);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Player.Money -= 10000;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                client.Inventory.Add(stream, 721779, 1);
                                client.CreateBoxDialog("You~bought~a~Fishing~Net~with~5,000~Silver.~Hurry~and~use~it~around~the~water~(303,380).");

                            }
                            else
                            {
                                data.AddText("Sorry. Your inventory is full. You need to make some room.");
                                data.AddOption("Oh.~No~problem.");
                                data.AddAvatar(118);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.YeSheng)]
        public static void YeSheng(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.YangYun1, client.Player.Class, 522);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("There are quite a number of mysteries, down here. You can tell a lot from this single Iron Poise.");
                            data.AddOption("What`s~the~price?", 1);

                            data.AddOption("That~is~fake,~maybe.");
                            data.AddAvatar(77);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("There are quite a number of mysteries, down here. You can tell a lot from this single Iron Poise.");
                            data.AddOption("That~is~fake,~maybe.");
                            data.AddAvatar(77);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        data.AddText("Come on, now! I`m selling this Iron Poise at a cut-throat price! Three fish for one! Hey, you know how to");
                        data.AddText("~get fish? Go buy a Fishing Net from the Net Peddler (321,371) and catch fish near the Island. Good luck!");
                        data.AddOption("I`ve~got~your~fish.", 2);
                        data.AddOption("I~hope,~too.");
                        data.AddAvatar(77);
                        data.FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Contain(721778, 3))
                        {
                            if (client.Inventory.Remove(721778, 3, stream))
                            {
                                if (client.Inventory.HaveSpace(1))
                                {
                                    client.Inventory.Add(stream, 721780, 1);
                                    client.SendSysMesage("You received the Iron Poise!");
                                    data.AddText("Wow, the fish you brought is wonderful! Take this Iron Poise! You can use it to remove the spell at the stone doors (344,403),");
                                    data.AddText("~then the path to the underground chamber will be open ahead of you.");
                                    data.AddOption("I~see.");
                                    data.AddAvatar(77);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    data.AddText("Your inventory is full! Get rid of some stuff and you can come back for the Iron Poise.");
                                    data.AddOption("I`ll~be~back~soon.");
                                    data.AddAvatar(77);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        else
                        {
                            data.AddText("Are you kidding? You don`t have any fish with you! Go buy a Fishing Net from the Net Peddler (189,183)");
                            data.AddText("~and catch fish near the water. Remember, I want THREE fish for one Iron Poise!");
                            data.AddOption("Got~it.");
                            data.AddAvatar(77);
                            data.FinalizeDialog();
                        }
                        break;
                    }
            }
        }

        //
        [NpcAttribute(NpcID.Plum)]
        public static void Plum(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)Game.MsgNpc.NpcID.RuanBrother, client.Player.Class, 524);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)Game.MsgNpc.NpcID.Plum, client.Player.Class, 525);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Days before, a group of bandits in the Desert were killed, overnight. Nobody knows who did it or for what. So, what are you doing here?");
                            data.AddOption("Do~you~know~the~Star~Tower?", 1);
                            data.AddOption("I`m~just~passing~by.");
                            data.AddAvatar(118);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                            && client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("Take the Tower piece and leave. Anything can happen in these troubled times.");
                                data.AddOption("You~bet.");
                                data.AddAvatar(118);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Actually, the Star Tower has been broken into three pieces. It`s said one of the pieces was brought to the Desert. Just days before, a group of bandits");
                                data.AddText("~in Desert were killed overnight, there.");
                                data.AddOption("Where~can~I~find~it?", 5);
                                data.AddOption("I`d~better~return~home.");
                                data.AddAvatar(118);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("False friends are worse than bitter enemies.");
                            data.AddOption("You~think?");
                            data.AddAvatar(118);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 5:
                    {
                        data.AddText("As I know, the third Tower Splinter is in the deep of Desert. Go to (166,226) and see what you can find out there. Be careful, though. The long-standing war has");
                        data.AddText("~ruined the landscape, leaving only homeless villagers and savage bandits in its wake...");
                        data.AddOption("I`ll~be~careful.", 3);
                        data.AddAvatar(118);
                        data.FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        data.AddText("Star Tower? Yeah, but I should tell you the road ahead will be long and dangerous. Are you sure you want to continue?");
                        data.AddOption("I~can`t~be~sure~more.", 2);
                        data.AddAvatar(118);
                        data.FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You received 100 Silver!");
                            data.AddText("As I know, the third Tower Splinter is in the deep of Desert. Go to (166,226) and see what you can find out there. Be careful, though. The long-standing war has");
                            data.AddText("~ruined the landscape, leaving only homeless villagers and savage bandits in its wake...");
                            data.AddOption("I`ll~be~careful.", 3);
                            data.AddAvatar(118);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 3:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.CreateBoxDialog("Head~to~the~deep~of~Desert~at~(166,226)~to~start~an~investigation.");
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.RuanBrother)]
        public static void RuanBrother(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)Game.MsgNpc.NpcID.TimeDoor, client.Player.Class, 523);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)Game.MsgNpc.NpcID.RuanBrother, client.Player.Class, 524);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.Level < 100)
                        {
                            data.AddText("Hey, you are still too green! Keep leveling up and come back when you reach Level 100.");
                            data.AddOption("Alright.");
                            data.AddAvatar(18);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("Hey, who are you?! How can you arrive here?");
                                data.AddOption("I~came~for~the~Tower~Splinter.", 1);
                                data.AddOption("Sorry,~I~got~lost.");
                                data.AddAvatar(18);
                                data.FinalizeDialog();
                            }
                            else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false
                            && client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            {
                                if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                                {
                                    data.AddText("What are you doing here? You`d better have something important to bother me.");
                                    data.AddOption("I~lost~the~Tower~Splinter.", 9);
                                    data.AddOption("Sorry,~bye!");
                                    data.AddAvatar(18);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    data.AddText("Don`t you see I`m busy, now? You`d better have something important to bother me.");
                                    data.AddOption("I~brought~the~Shawn`s~Spear.", 5);
                                    data.AddOption("Sorry,~bye!");
                                    data.AddAvatar(18);
                                    data.FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("What are you doing here?");
                                data.AddOption("I`m~just~passing~by.");
                                data.AddAvatar(18);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 9:
                    {
                        if (client.Inventory.Contain(721777, 1))
                        {
                            data.AddText("Show some manners! You`ve already received the piece.");
                            data.AddOption("My~apologies.");
                            data.AddAvatar(18);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("I-I-I-I! Where did you lose the Tower Splinter? Do you know how important that is? Fortunately, the one I gave you is a fake one. I don`t mean to");
                            data.AddText("~cheat you. See, this is the real one. I promise this one is true.");
                            data.AddOption("I~hope~you~said~the~true~word.", 3);
                            data.AddAvatar(18);
                            data.FinalizeDialog();
                        }
                        break;
                    }

                case 5:
                    {
                        data.AddText("Yeah, this is that spear I want. I`m old. You`ve already made the revenge for me. So I don`t need this Tower Splinter");
                        data.AddText("~to remind me of the past. Come, take it.");
                        data.AddOption("Great.", 3);
                        data.AddAvatar(18);
                        data.FinalizeDialog();
                        break;
                    }
                case 1:
                    {

                        data.AddText("Tower Splinter? Did Frost Tang send you here? She is my diva, the apple of my eye, my precious little sweety...But all this was shattered by Bloody");
                        data.AddText("~Shawn. He always tried to keep us apart. If you could snatch away his spear and give it to me, I can give you the piece I have.");
                        data.AddOption("I`ve~got~it~right~here.", 2);
                        data.AddOption("I`ll~think~it~over.");
                        data.AddAvatar(18);
                        data.FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Contain(721781, 1))
                        {
                            client.Inventory.Remove(721781, 1, stream);
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                            {
                                client.Player.Money += 100;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                client.SendSysMesage("You received 100 Silver!");
                                data.AddText("Yeah, this is that spear I want. I`m old. You`ve already made the revenge for me. So I don`t need this Tower Splinter");
                                data.AddText("~to remind me of the past. Come, take it.");
                                data.AddOption("Great.", 3);
                                data.AddAvatar(18);
                                data.FinalizeDialog();
                            }

                        }
                        else
                        {
                            data.AddText("Come on, I mean the spear that Bloody Shawn holds, not any others. Go take his spear, and I`ll consider to show you the splinter.");
                            data.AddText("~Oh, wait! Did I mention where he is? Sorry! You can probably find him in the northwest of Bird Island. Good luck!");
                            data.AddOption("Got~it.");
                            data.AddAvatar(18);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 3:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.Inventory.Add(stream, 721777, 1);
                            client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                            client.CreateBoxDialog("You~received~the~Tower~Splinter!");
                        }
                        else
                        {
                            data.AddText("Your inventory is full. Why not tidy it up, first?");
                            data.AddOption("I`ll~be~back~soon.");
                            data.AddAvatar(18);
                            data.FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.RuanGoodMan)]
        public static void RuanGoodMan(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("My brother is STILL single, you know. He`s already in his forties! Nobody knows why. It`s weird.");
                        data.AddOption("Go~back~to~Bird~Island.", 1);
                        data.AddAvatar(48);
                        data.FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        client.Teleport(723, 573, 1015);
                        client.CreateBoxDialog("You~returned~to~Bird~Island.");
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.RuanBetterMan)]
        public static void RuanBetterMan(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Alas... My brother had a duel with the Bloody Shawn days before, and lost again. Yeah, I mean that ugly beast in the northwest of Bird Island.");
                        data.AddOption("Weak~men~will~always~lose.");
                        data.AddAvatar(25);
                        data.FinalizeDialog();
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.DreamDoor)]
        public static void DreamDoor(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.YangYun1, client.Player.Class, 522);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Take these stone doors seriously. They are cursed and can only be opened with the Iron Poise.");
                        data.AddOption("Okay.", 1);
                        data.AddOption("I`ll~pass.");
                        data.FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(721780, 1))
                            {
                                if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 3) == false)
                                {
                                    client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 1);
                                    client.SendSysMesage("The stone door has opened!");
                                    data.AddText("The Iron Poise released a flash of light and broke the stone door apart. Go crush the other doors!");
                                    data.AddOption("Great!");
                                    data.FinalizeDialog();

                                    if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 3))
                                    {
                                        client.Inventory.Remove(721780, 1, stream);
                                        client.CreateBoxDialog("You`ve~opened~all~the~stone~doors~and~found~a~path~leading~underground.~Move~on~and~find~out~more.");
                                    }
                                }
                                else
                                {
                                    if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 3))
                                    {
                                        client.Inventory.Remove(721780, 1, stream);
                                        client.CreateBoxDialog("You`ve~opened~all~the~stone~doors~and~found~a~path~leading~underground.~Move~on~and~find~out~more.");
                                    }
                                    data.AddText("The Iron Poise released a flash of light and broke the stone door apart. Go crush the other doors!");
                                    data.AddOption("Great!");
                                    data.FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Take these stone doors seriously. They are cursed, and can only be opened with the Iron Poise owned by Ye Sheng (192,212) on Bird Island.");
                                data.AddOption("Alright.");
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Don`t be mesmerized by the mystic radiance around here. Be quick. The door has opened.");
                            data.AddOption("Indeed.");
                            data.FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.SeasonDoor)]
        public static void SeasonDoor(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.YangYun1, client.Player.Class, 522);


            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("These stone doors are all glowing with a strange aura. You can only break them with the Iron Poise.");
                        data.AddOption("Okay.", 1);
                        data.AddOption("I`ll~pass.");
                        data.FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(721780, 1))
                            {
                                if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 2) == false)
                                {
                                    client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 1);
                                    client.SendSysMesage("The stone door has opened!");
                                    data.AddText("The Iron Poise released a flash of light and broke the stone door apart. Go crush the other doors!");
                                    data.AddOption("Great!");
                                    data.FinalizeDialog();

                                    if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 3))
                                    {
                                        client.Inventory.Remove(721780, 1, stream);
                                        client.CreateBoxDialog("You`ve~opened~all~the~stone~doors~and~found~a~path~leading~underground.~Move~on~and~find~out~more.");
                                    }
                                }
                                else
                                {
                                    if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 3))
                                    {
                                        client.Inventory.Remove(721780, 1, stream);
                                        client.CreateBoxDialog("You`ve~opened~all~the~stone~doors~and~found~a~path~leading~underground.~Move~on~and~find~out~more.");
                                    }
                                    data.AddText("The Iron Poise released a flash of light and broke the stone door apart. Go crush the other doors!");
                                    data.AddOption("Great!");
                                    data.FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Take these stone doors seriously. They are cursed, and can only be opened with the Iron Poise owned by Ye Sheng (192,212) on Bird Island.");
                                data.AddOption("Alright.");
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Don`t be mesmerized by the mystic radiance around here. Be quick. The door has opened.");
                            data.AddOption("Indeed.");
                            data.FinalizeDialog();
                        }

                        break;
                    }
            }

        }
        [NpcAttribute(NpcID.TimeDoor)]
        public static void TimeDoor(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.YangYun1, client.Player.Class, 522);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("These stone doors are cursed. They can only be opened with the Iron Poise, owned by Ye Sheng (192,212) on Bird Island.");
                        data.AddOption("I`ll~use~it~now.", 1);
                        data.AddOption("Alright.");
                        data.FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(721780, 1))
                            {

                                if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1) == false)
                                {
                                    client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 1);
                                    client.SendSysMesage("The stone door has opened!");
                                    data.AddText("The Iron Poise released a flash of light and broke the stone door apart. Go crush the other doors!");
                                    data.AddOption("Great!");
                                    data.FinalizeDialog();

                                    if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 3))
                                    {
                                        client.Inventory.Remove(721780, 1, stream);
                                        client.CreateBoxDialog("You`ve~opened~all~the~stone~doors~and~found~a~path~leading~underground.~Move~on~and~find~out~more.");
                                    }
                                }
                                else
                                {
                                    if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 3))
                                    {
                                        client.Inventory.Remove(721780, 1, stream);
                                        client.CreateBoxDialog("You`ve~opened~all~the~stone~doors~and~found~a~path~leading~underground.~Move~on~and~find~out~more.");
                                    }
                                    data.AddText("The Iron Poise released a flash of light and broke the stone door apart. Go crush the other doors!");
                                    data.AddOption("Great!");
                                    data.FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Take these stone doors seriously. They are cursed, and can only be opened with the Iron Poise owned by Ye Sheng (192,212) on Bird Island.");
                                data.AddOption("Alright.");
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Don`t be mesmerized by the mystic radiance around here. Be quick. The door has opened.");
                            data.AddOption("Indeed.");
                            data.FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.YangYun1)]
        public static void YangYun1(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.SugarTang, client.Player.Class, 520);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.YangYun1, client.Player.Class, 521);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.YangYun1, client.Player.Class, 522);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)Game.MsgNpc.NpcID.Plum, client.Player.Class, 525);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)Game.MsgNpc.NpcID.YangYun1, client.Player.Class, 526);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.Level < 100)
                        {
                            data.AddText("Hey, you are still too green! Keep leveling up and come back when you reach Level 100.");
                            data.AddOption("Alright.");
                            data.AddAvatar(64);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("I`ve rechecked the Treasure House, but found nothing useful. How about you?");
                                data.AddOption("Something~strange~happened.", 20);
                                data.AddOption("No~good~news.");
                                data.AddAvatar(64);
                                data.FinalizeDialog();
                            }
                            else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("Years ago, the defensive talisman, Star Tower, was broken into three pieces. For that, our Yang family and the Tang family became enemies.");
                                data.AddText("~If I can find all the Tower Splinters, maybe I can end the feud between the two clans. What`s your opinion?");
                                data.AddOption("I~heard~you~have~one~piece.", 1);
                                data.AddOption("Could~be.");
                                data.AddAvatar(64);
                                data.FinalizeDialog();
                            }
                            else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                            && !client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            {
                                if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                                {
                                    data.AddText("How is my Treasure House? So luxurious, right? It used to have countless treasure and collections, including the Tower Splinter.");
                                    data.AddOption("Where~is~the~Tower~Splinter?", 10);
                                    data.AddOption("Not~bad.");
                                    data.AddAvatar(64);
                                    data.FinalizeDialog();
                                }
                                else
                                {

                                    data.AddText("Years ago, the defensive talisman, Star Tower, was broken into three pieces. For that, our Yang family and the Tang family became enemies.");
                                    data.AddText("~If I can find all the Tower Splinters, maybe I can end the feud between the two clans. What`s your opinion?");
                                    data.AddOption("I~heard~you~have~one~piece.", 4);
                                    data.AddOption("Could~be.");
                                    data.AddAvatar(64);
                                    data.FinalizeDialog();
                                }
                            }
                            else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                        && !client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            {

                                data.AddText("Hello, buddy! Did you find my Tower Splinter? No? So, what can I do for you?");
                                data.AddOption("Where~are~other~splinters?", 13);
                                data.AddOption("I`m~just~passing~by.");
                                data.AddAvatar(64);
                                data.FinalizeDialog();

                            }
                            else if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                            && client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            {
                                if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                                {
                                    data.AddText("I`ve shown the handkerchief to my brothers. Actually, that belongs to our Yang family. I don`t know how to explain it to you.");
                                    data.AddOption("Just~tell~me~all.", 23);
                                    data.AddOption("Then~forget~it.~Bye!");
                                    data.AddAvatar(64);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    data.AddText("I`ve shown the handkerchief to my brothers. Actually, that belongs to our Yang family. I don`t know how to explain it to you.");
                                    data.AddOption("Just~tell~me~all.", 23);
                                    data.AddOption("Then~forget~it.~Bye!");
                                    data.AddAvatar(64);
                                    data.FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Years ago, the defensive talisman, Star Tower, was broken into three pieces. For that, our Yang family and the Tang family became enemies. I just");
                                data.AddText("~happened to have one of the Tower Splinters. Maybe it`s the key to the ending the feud between the two clans.");
                                data.AddOption("Could~be.");
                                data.AddAvatar(64);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }

                case 23:
                    {
                        data.AddText("But where did you get the Bud Handkerchief? You see the character `Yang` embroidered on it? This belongs to Yang Feng,");
                        data.AddText("~the old head of the Yang family. I`d be willing to take you there, but I`m keeping the handkerchief. Sound good?");
                        data.AddOption("Alright,~let`s~go.", 22);
                        data.AddAvatar(64);
                        data.FinalizeDialog();
                        break;
                    }
                case 20:
                    {
                        if (client.Inventory.Contain(721782, 1))
                        {
                            data.AddText("What? You have one piece of the Star Tower, but it disappeared and became a handkerchief? It`s incredible! Could you show me that Bud Handkerchief?");
                            data.AddOption("Okay.~Here~you~are.", 21);
                            data.AddAvatar(64);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("I have ever seen the third Tower Splinter in the deep of Desert. Why not return the place where the Desert Condors live? Maybe you can");
                            data.AddText("~find something special that you didn`t noticed last time.");
                            data.AddOption("Alright.");
                            data.AddAvatar(64);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 21:
                    {
                        if (client.Inventory.Contain(721782, 1))
                        {
                            client.Inventory.Remove(721782, 1, stream);
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                            {
                                client.Player.Money += 100;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                client.SendSysMesage("You received 100 Silver!");
                                data.AddText("But where did you get the Bud Handkerchief? You see the character `Yang` embroidered on it? This belongs to Yang Feng,");
                                data.AddText("~the old head of the Yang family. I`d be willing to take you there, but I`m keeping the handkerchief. Sound good?");
                                data.AddOption("Alright,~let`s~go.", 22);
                                data.AddAvatar(64);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("I have ever seen the third Tower Splinter in the deep of Desert. Why not return the place where the Desert Condors live? Maybe you can");
                            data.AddText("~find something special that you didn`t noticed last time.");
                            data.AddOption("Alright.");
                            data.AddAvatar(64);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 22:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest5, 0);
                        client.Teleport(52, 50, 1783);
                        client.CreateBoxDialog("You~arrived~at~the~Treasure~House,~once~again.~Be~careful!~You~sense~trouble~in~the~air.");
                        break;
                    }
                case 13:
                    {
                        data.AddText("I`m not sure, but someone told me that the second piece is in the Hut in the north of Bird Island. That Hut belongs to the Ruan Brothers.");
                        data.AddText("~Watch out for them. They`re a little off.");
                        data.AddOption("Got~it.", 12);
                        data.AddOption("Maybe~I~should~give~up.");
                        data.AddAvatar(64);
                        data.FinalizeDialog();
                        break;
                    }
                case 10:
                    {
                        data.AddText("You knew that, didn`t you? The Tower Splinter was stolen by those bandits! And you`ve promised to investigate that for me, right?");
                        data.AddOption("Sure.~I`ll.", 11);
                        data.AddAvatar(64);
                        data.FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You received 100 Silver!");
                            data.AddText("I`m not sure, but someone told me that the second piece is in the Hut in the north of Bird Island. That Hut belongs to the Ruan Brothers.");
                            data.AddText("~Watch out for them. They`re a little off.");
                            data.AddOption("Got~it.", 12);
                            data.AddOption("Maybe~I~should~give~up.");
                            data.AddAvatar(64);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 12:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        client.CreateBoxDialog("You~were~advised~to~find~the~Ruan~Brother~in~the~Hut,~in~the~north~of~Bird~Island.");
                        break;
                    }
                case 1:
                    {
                        data.AddText("Um... Yeah, I have one of the pieces. How did you know? You must have pulled quite a few strings to hear");
                        data.AddText("~about that. Well, I guess I`d better tell you where the piece is, before you wreck the place. It`s in the Treasure House.");
                        data.AddOption("I`m~doing~this~for~Sugar~Tang.", 2);
                        data.AddOption("I`m~just~passing~by.");
                        data.AddAvatar(64);
                        data.FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        data.AddText("Sugar Tang? So you are trying to end the feud, right? In that case, I`ll take you to the House myself! Thank you for your help.");
                        data.AddOption("Just~doing~my~job.", 3);
                        data.AddAvatar(64);
                        data.FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 1);
                        client.Teleport(52, 50, 1782);
                        client.CreateBoxDialog("You~arrived~at~the~Treasure~House,~but~only~found~it`s~been~ransacked~by~bandits.~Talk~about~that~with~Yang~Yun~soon.");
                        break;
                    }
                case 4:
                    {
                        data.AddText("Um... Yeah, I have one of the pieces. How did you know? You must have pulled quite a few strings to hear");
                        data.AddText("~about that. Well, I guess I`d better tell you where the piece is, before you wreck the place. It`s in the Treasure House.");
                        data.AddOption("I`m~doing~this~for~Sugar~Tang.", 5);
                        data.AddOption("I`m~just~passing~by.");
                        data.AddAvatar(64);
                        data.FinalizeDialog();
                        break;
                    }
                case 5:
                    {
                        data.AddText("Sugar Tang? So you are trying to end the feud, right? In that case, I`ll take you to the House myself! Thank you for your help.");
                        data.AddOption("Just~doing~my~job.", 6);
                        data.AddAvatar(64);
                        data.FinalizeDialog();
                        break;
                    }
                case 6:
                    {
                        client.Teleport(52, 50, 1782);
                        client.CreateBoxDialog("You~arrived~at~the~Treasure~House,~but~only~found~it`s~been~ransacked~by~bandits.~Talk~about~that~with~Yang~Yun~soon.");

                        break;
                    }
            }
        }



        [NpcAttribute(NpcID.GhoulKong)]
        public static void GhoulKong(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)Game.MsgNpc.NpcID.YangYun1, client.Player.Class, 526);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)Game.MsgNpc.NpcID.GhoulKong, client.Player.Class, 527);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("If only I were 10 years younger...");
                            data.AddOption("I~have~some~questions.", 1);
                            data.AddOption("In~your~dreams.");
                            data.AddAvatar(67);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                        && client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {

                            data.AddText("If only I were 10 years younger...");
                            data.AddOption("I~want~to~ask~you~something.", 6);
                            data.AddOption("In~your~dreams.");
                            data.AddAvatar(67);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("If only I were 10 years younger...");
                            data.AddOption("In~your~dreams.");
                            data.AddAvatar(67);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 6:
                    {
                        data.AddText("Well, according to your map, you are gonna meet quite a number of obstacles. A good beginning is half done. I shall");
                        data.AddText("~escort you there. Anyway, that`s all an old man can do...");
                        data.AddOption("Thank~you.", 5);
                        data.AddAvatar(67);
                        data.FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        data.AddText("You found the right person. I`m just the most knowledgeable man, but the dungeon is very complicated. Without a map, no one knows where to get");
                        data.AddText("~in or how to get out. So, what is your question?");
                        data.AddOption("I~got~a~Weird~Invocation.", 3);
                        data.AddOption("How~to~smelt~the~Star~Tower?", 2);
                        data.AddOption("Eh...~I~forgot.");
                        data.AddAvatar(67);
                        data.FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        data.AddText("The Star Tower was left by Frost Tang. It is said that it takes 4 clinkers, smelt from 4 weapons. They are the Glitter Sword,");
                        data.AddText("~Annatto Blade, Wasp Spear, and Infernal Axe. With those and the three Tower pieces together, you can restore it in the Cauldro");
                        data.AddOption("There~is~another~thing.", 1);
                        data.AddOption("Unbelievable.");
                        data.AddAvatar(67);
                        data.FinalizeDialog();
                        break;
                    }

                case 3:
                    {
                        if (client.Inventory.Contain(721786, 1))
                        {
                            data.AddText("Oh my! This isn`t an invocation! It`s the map to the Dungeon! The Dungeon, I`m telling you, is chock full of treasure...");
                            data.AddText("~But it`s also full of hidden dangers and fierce monsters...");
                            data.AddOption("No~pain,~no~gain.", 4);
                            data.AddOption("I`ll~think~about~it.");
                            data.AddAvatar(67);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Maybe Yang Yun has the map to Dungeon. What can an old man like me do? I am useless...");
                            data.AddOption("I`m~glad~you~said~it.");
                            data.AddAvatar(67);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 4:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            // client.Inventory.Remove(721786, 1, stream);
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You received 100 Silver!");
                            data.AddText("Well, according to your map, you are gonna meet quite a number of obstacles. A good beginning is half done. I shall");
                            data.AddText("~escort you there. Anyway, that`s all an old man can do...");
                            data.AddOption("Thank~you.", 5);
                            data.AddAvatar(67);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 5:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.Teleport(31, 89, 1785);
                        client.CreateBoxDialog("The~path~has~lead~you~to~Dungeon~1F.");
                        break;
                    }
            }

        }

        [NpcAttribute(NpcID.Cauldron)]
        public static void Cauldron(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)Game.MsgNpc.NpcID.GhoulKong, client.Player.Class, 527);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)Game.MsgNpc.NpcID.GhoulKong, client.Player.Class, 528);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Everyone wants to be immortal, but what is the meaning, if you are alone in the world. What do you say?");
                            data.AddOption("I~want~to~smelt~some~items.", 1);
                            data.AddOption("You`re~right.");
                            data.FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                            && client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            data.AddText("Everyone wants to be immortal, but what is the meaning, if you are alone in the world. What do you say?");
                            data.AddOption("How~is~the~smelting~going?", 12);
                            data.AddOption("Indeed.");
                            data.FinalizeDialog();

                        }
                        else
                        {
                            if (client.Inventory.Contain(721785, 1))
                            {
                                data.AddText("You know you`ve done this before, right? You can only do it once. Happiness lies in contentment, you know.");
                                data.AddOption("Pity.");
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Love built on beauty fades all too quickly. Pity, that Frost Tang was never happy... To restore the Tower, you need to collect");
                                data.AddText("~Glitter Sword, Annatto Blade, Wasp Spear, and Infernal Axe, smelt them and meld 4 clinkers with the 3 pieces in the Cauldron. So, how may I help you?");
                                data.AddOption("Smelt~weapons~into~clinkers.", 10);
                                data.AddOption("Restore~the~Star~Tower.", 4);
                                data.AddOption("I`ll~come~back~later.");
                                data.AddOption("Bird~Island,~please.", 2);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 12:
                    {
                        data.AddText("Now that the Star Tower has been restored, you should leave this dangerous place right away. Hurry up and return to Bird Island for Sugar Tang.");
                        data.AddOption("Thanks,~bye!", 7);
                        data.FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(721785, 1))
                        {
                            data.AddText("You know you`ve done this before, right? You can only do it once. Happiness lies in contentment, you know.");
                            data.AddOption("Pity.");
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Love built on beauty fades all too quickly. Pity, that Frost Tang was never happy... To restore the Tower, you need to collect");
                            data.AddText("~Glitter Sword, Annatto Blade, Wasp Spear, and Infernal Axe, smelt them and meld 4 clinkers with the 3 pieces in the Cauldron. So, how may I help you?");
                            data.AddOption("Smelt~weapons~into~clinkers.", 10);
                            data.AddOption("Restore~the~Star~Tower.", 4);
                            data.AddOption("I`ll~come~back~later.");
                            data.AddOption("Bird~Island,~please.", 2);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 10:
                    {
                        if (client.Inventory.Contain(721784, 1))
                        {
                            if (client.Inventory.Contain(721788, 1))
                            {
                                if (client.Inventory.Contain(721789, 1))
                                {
                                    if (client.Inventory.Contain(721790, 1))
                                    {
                                        client.Inventory.Remove(721784, 1, stream);
                                        client.Inventory.Remove(721788, 1, stream);
                                        client.Inventory.Remove(721789, 1, stream);
                                        client.Inventory.Remove(721790, 1, stream);

                                        client.Inventory.Add(stream, 721791, 1);
                                        client.Inventory.Add(stream, 721792, 1);
                                        client.Inventory.Add(stream, 721793, 1);
                                        client.Inventory.Add(stream, 721794, 1);
                                        data.AddText("You`ve got the Fire Clinker, Earth Clinker, Earth Clinker, and Wood Clinker.");
                                        data.AddOption("Great!");
                                    }
                                    else
                                    {
                                        data.AddText("Beat the generals and bring the Glitter Sword, Annatto Blade, Wasp Spear, and Infernal Axe here.");
                                        data.AddOption("It~will~be~done.");
                                        data.FinalizeDialog();
                                    }
                                }
                                else
                                {
                                    data.AddText("Beat the generals and bring the Glitter Sword, Annatto Blade, Wasp Spear, and Infernal Axe here.");
                                    data.AddOption("It~will~be~done.");
                                    data.FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Beat the generals and bring the Glitter Sword, Annatto Blade, Wasp Spear, and Infernal Axe here.");
                                data.AddOption("It~will~be~done.");
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Beat the generals and bring the Glitter Sword, Annatto Blade, Wasp Spear, and Infernal Axe here.");
                            data.AddOption("It~will~be~done.");
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 4:
                    {
                        if (client.Inventory.Contain(721785, 1))
                        {
                            data.AddText("You know you`ve done this before, right? You can only do it once. Happiness lies in contentment, you know.");
                            data.AddOption("Pity.");
                            data.FinalizeDialog();
                        }
                        else
                        {

                            if (client.Inventory.Contain(721791, 1))
                            {
                                if (client.Inventory.Contain(721792, 1))
                                {
                                    if (client.Inventory.Contain(721793, 1))
                                    {
                                        if (client.Inventory.Contain(721794, 1))
                                        {
                                            if (client.Inventory.Contain(721777, 3))
                                            {
                                                data.AddText("It takes a combination of the five elements of fire, earth, water, metal, and wood to restore the talisman.");
                                                data.AddText("~Wait a moment. The Star Tower is almost completely restored.");
                                                data.AddOption("Great!", 6);
                                                data.FinalizeDialog();
                                            }
                                            else
                                            {
                                                data.AddText("You will have all three Tower Splinters after defeating the ghost of Yang Feng. Don`t stop until he`s dead again!");
                                                data.AddOption("Got~it!");
                                                data.FinalizeDialog();
                                            }
                                        }
                                        else
                                        {
                                            data.AddText("You need to smelt the Glitter Sword, Annatto Blade, Wasp Spear, and Infernal Axe into clinkers.");
                                            data.AddOption("Okay.");
                                            data.FinalizeDialog();
                                        }
                                    }
                                    else
                                    {
                                        data.AddText("You need to smelt the Glitter Sword, Annatto Blade, Wasp Spear, and Infernal Axe into clinkers.");
                                        data.AddOption("Okay.");
                                        data.FinalizeDialog();
                                    }
                                }
                                else
                                {
                                    data.AddText("You need to smelt the Glitter Sword, Annatto Blade, Wasp Spear, and Infernal Axe into clinkers.");
                                    data.AddOption("Okay.");
                                    data.FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("You need to smelt the Glitter Sword, Annatto Blade, Wasp Spear, and Infernal Axe into clinkers.");
                                data.AddOption("Okay.");
                                data.FinalizeDialog();
                            }

                        }
                        break;
                    }
                case 6:
                    {
                        if (client.Inventory.Contain(721777, 3))
                        {

                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                            {
                                client.Inventory.Remove(721791, 1, stream);
                                client.Inventory.Remove(721792, 1, stream);
                                client.Inventory.Remove(721793, 1, stream);
                                client.Inventory.Remove(721794, 1, stream);
                                client.Inventory.Remove(721777, 3, stream);
                                client.Inventory.Add(stream, 721785);
                                client.Player.Money += 100;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                client.SendSysMesage("The time is up, and the Cauldron opened. Fortunately, the Star Tower appeared. And you received 100 Silver!");
                                data.AddText("Now that the Star Tower has been restored, you should leave this dangerous place right away. Hurry up and return to Bird Island for Sugar Tang.");
                                data.AddOption("Thanks,~bye!", 7);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You will have all three Tower Splinters after defeating the ghost of Yang Feng. Don`t stop until he`s dead again!");
                            data.AddOption("Got~it!");
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 7:
                    {
                        client.CreateBoxDialog("Report~back~to~Sugar~Tang~with~the~restored~Star~Tower.");
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.Teleport(717, 577, 1015);
                        break;
                    }
                case 2:
                    {
                        data.AddText("Are you sure you want to return to Bird Island, now?");
                        data.AddOption("Yes,~please.", 3);
                        data.FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        client.CreateBoxDialog("You`re~on~the~way~to~Bird~Island,~now.");
                        client.Teleport(717, 577, 1015);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.BlockStone)]
        public static void BlockStone(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("The entrance has been blocked! You need to kill 20 Vicious Rats, so you`ll be able to get out of here!");
                        data.AddOption("Damned!");
                        data.FinalizeDialog();
                        break;
                    }
            }
        }


        [NpcAttribute(NpcID.KunlunWanderer)]
        public static void KunlunWanderer(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.SugarTang, client.Player.Class, 403);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.KunlunWanderer, client.Player.Class, 404);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.KunlunWanderer, client.Player.Class, 405);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("You must have heard about the Kunlun Stone! Guess what I found out? The stone is the Poison Fang of the Viper!");
                            data.AddText("~When dissolved in the Kunlun Liquid, it can be used to dye Tang Silk. Haha, I just happened to have the liquid.");
                            data.AddOption("I~have~the~Tang~Silk.", 1);
                            data.AddOption("Sounds~fantastic.");
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false
                            && client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("Hey, glad to see you alive! How is your adventure in the Viper Cave? You know, to dye the Tang Silk, you should have the Sacred Water!");
                                data.AddText("~That`s made from the Poison Fang and the Kunlun Liquid.");
                                data.AddOption("Now~what~should~I~do?", 5);
                                data.AddOption("Got~it.");
                                data.AddAvatar(52);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("As I mentioned before, you should have the Sacred Water composed by the Kunlun Liquid and the Poison Fang to dye the Tang Silk. I`ll give you the");
                                data.AddText("~Kunlun Liquid, if you can get the Poison Fang from the Viper in the Viper Cave. So, you are going to the Viper Cave?");
                                data.AddOption("Yeah,~but~how~to~get~there?", 4);
                                data.AddOption("Viper?~I`ll~be~killed!");
                                data.AddAvatar(52);
                                data.FinalizeDialog();
                            }
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false
                           && client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("Finally, we have discovered the secret of the Tang Silk! But it seems another mystery has emerged...");
                            data.AddText("~Things are far from over.");
                            data.AddOption("I`ve~dyed~the~Tang~Silk.", 10);
                            data.AddOption("Sounds~fantastic.");
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                        }
                        else
                        {

                            data.AddText("Someone must have told you something about the Kunlun Stone. But you know what it is? It`s just the Posion Fang of the Viper!");
                            data.AddText("~Combined with the Kunlun Liquid, it can be used to dye Tang Silk.");
                            data.AddOption("Sounds~fantastic.");
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 10:
                    {
                        data.AddText("Then, what are you doing here? Shouldn`t you send the Poem Silk to Villager Chou, now?");
                        data.AddOption("I`m~on~my~way.", 9);
                        data.AddOption("I~lost~the~Poem~Silk.", 8);
                        data.AddAvatar(77);
                        data.FinalizeDialog();
                        break;
                    }
                case 5:
                    {
                        if (client.Inventory.Contain(721801, 1))
                        {
                            data.AddText("Oh, Sacred Water...It can be used to dye Tang Silk... It`s said a mysterious secret will appear right away!");
                            data.AddOption("Yeah...", 7);
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Inventory.Contain(721804, 1))
                            {
                                data.AddText("Oh, Sacred Water...It can be used to dye Tang Silk... It`s said a mysterious secret will appear right away!");
                                data.AddOption("Yeah...");
                                data.AddAvatar(52);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Inventory.Contain(721803, 1))
                                {
                                    if (client.Inventory.Contain(721802, 1))
                                    {
                                        data.AddText("Now, merge the Poison Fang with the Kunlun Liquid. That`s how Sacred Water is made. Do it, now!");
                                        data.AddOption("Don`t~talk~while~I`m~pouring.");
                                        data.AddAvatar(52);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        data.AddText("So, you`ve obtained the Poison Fang? Great! Here is the Kunlun Liquid. After dissolving the fang into the liquid, you`ll receive the Sacred Water.");
                                        data.AddOption("Thanks.", 6);
                                        data.AddAvatar(52);
                                        data.FinalizeDialog();
                                    }
                                }
                                else
                                {
                                    data.AddText("Look, I can send you to the Viper Cave if you pay me 5,000 Silver. I`ll be glad to share the Kunlun Liquid");
                                    data.AddText("~when you obtain the Poison Fang. So, you want to explore the Viper Cave?");
                                    data.AddOption("Yep!", 3);
                                    data.AddAvatar(52);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        break;
                    }
                case 7:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You received 100 Silver!");
                            data.AddText("Then, what are you doing here? Shouldn`t you send the Poem Silk to Villager Chou, now?");
                            data.AddOption("I`m~on~my~way.", 9);
                            data.AddOption("I~lost~the~Poem~Silk.", 8);
                            data.AddAvatar(77);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 9:
                    {
                        client.CreateBoxDialog("You~received~the~Poem~Silk.~Now,~hurry~to~find~Villager~Chou.");
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        break;
                    }
                case 8:
                    {
                        if (client.Inventory.Contain(721801, 1))
                        {
                            data.AddText("Stop kidding me! I just saw the Poem Silk in your inventory. Hurry to take it to Villager Chou!");
                            data.AddOption("Sorry,~bye!");
                            data.AddAvatar(77);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Inventory.Add(stream, 721801, 1);
                                client.SendSysMesage("You received the Poem Silk.");
                            }
                            else
                            {
                                data.AddText("Your inventory is full! You need to clean some room, first.");
                                data.AddOption("I`ll~be~back~soon!");
                                data.AddAvatar(77);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 6:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.Inventory.Add(stream, 721802, 1);
                            client.SendSysMesage("You obtained the Kunlun Liquid. Right click the Poison Fang to combine them into Sacred Water.");
                        }
                        else
                        {
                            data.AddText("Your inventory is full! You need to clean some room, first.");
                            data.AddOption("I`ll~be~back~soon!");
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 4:
                    {
                        data.AddText("Look, I can send you to the Viper Cave if you pay me 5,000 Silver. I`ll be glad to share the Kunlun Liquid");
                        data.AddText("~when you obtain the Poison Fang. So, you want to explore the Viper Cave?");
                        data.AddOption("Yep!", 3);
                        data.AddAvatar(52);
                        data.FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(721798, 1))
                        {
                            data.AddText("Do you mean the Tang Silk owned by Villager Chou?");
                            data.AddOption("Yeah,~he~gave~me~the~silk.", 2);
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Without Tang Silk, everything will be in vain. Find Villager Chou in Maple Forest (788,456) now. I know his grandpa quite well.");
                            data.AddOption("I`ll~visit~him,~now.");
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You received 100 Silver!");
                            data.AddText("Look, I can send you to the Viper Cave if you pay me 5,000 Silver. I`ll be glad to share the Kunlun Liquid");
                            data.AddText("~when you obtain the Poison Fang. So, you want to explore the Viper Cave?");
                            data.AddOption("Yep!", 3);
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 3:
                    {
                        if (client.Player.Money < 10000)
                        {
                            data.AddText("Come on! 5,000 silvers wouldn`t be so hard for you. Make sure you bring enough money with you!");
                            data.AddOption("Alright.");
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                            client.Player.Money -= 10000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.Teleport(135, 103, 1794);
                            client.SendSysMesage("You arrived at Viper Cave. Now kill the Viper to get the Poison Fang.");
                            client.SendSysMesage("Watch out! Rocks are falling down!!");
                        }
                        break;

                    }
            }
        }


        [NpcAttribute(NpcID.HerbalistChou)]
        public static void HerbalistChou(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.VillagerChou, client.Player.Class, 407);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("It`s a long long story...Two of my friends loved each other so much... And they wrote a book together to show their love.");
                            data.AddOption("Is~that~the~Poem~Book?", 1);
                            data.AddOption("It`s~so~romantic.");
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("It`s a long long story...Two of my friends loved each other so much... And they wrote a book together to show their love.");
                            data.AddOption("It`s~so~romantic.");
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        data.AddText("You come for the Poem Book? Aha! Finally, there is someone who know the story. It`s a long long story...They loved each other so much... Sorry,");
                        data.AddText("~but I can`t help, but talking that. The Poem Book was written by Frost Tang and Mr. Loneliness together.");
                        data.AddOption("Where~is~the~book,~now?", 2);
                        data.AddAvatar(52);
                        data.FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        data.AddText("The Poem Book is in the Rose Garden, but it`s hard to get through the 4 stone pillars that Mr. Loneliness has set in Bird Island. The keys");
                        data.AddText("~are 4 special items: Purple Eye, Jade Sceptre, Jadeite, and Hairpin. You need to find them and put them into the pillars to");
                        data.AddText("~open the Teleport Platform to the Rose Garden. The first two have been stolen by the Crimson Viper and Jade Courtesan! Clear?");
                        data.AddOption("I~know~my~duty~now.", 3);
                        data.AddAvatar(52);
                        data.FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        Database.Server.AddMapMonster(stream, client.Map, 2169, client.Player.X, client.Player.Y, 3, 3, 1, client.Player.DynamicID, true, MsgFloorItem.MsgItemPacket.EffectMonsters.None, "moveback");
                        Database.Server.AddMapMonster(stream, client.Map, 2170, client.Player.X, client.Player.Y, 3, 3, 1, client.Player.DynamicID, true, MsgFloorItem.MsgItemPacket.EffectMonsters.None, "moveback");

                        client.SendSysMesage("Crimson Viper and Crimson Claws have shown up! Watch out!");

                        var npc = client.Player.View.Roles(Role.MapObjectType.Npc).Where(p => p.UID == id).First();
                        if (npc != null)
                            client.Map.RemoveNpc(npc as Npc, stream);

                        break;
                    }
            }
        }
        //
        [NpcAttribute(NpcID.JadeCourtesan)]
        public static void JadeCourtesan(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.VillagerChou, client.Player.Class, 408);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Ah, I really do have a gift for steal! So easy for me to get the Jade Scepter! But I still need the Purple Eye, Jadeite, and Hairpin");
                            data.AddText("~to unlock the stone pillars on Bird Island.");
                            data.AddOption("Give~me~the~Jade~Scepter!", 1);
                            data.AddOption("Steal?~Shame~on~you!");
                            data.AddAvatar(145);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Have you ever heard the story of Mr. Loneliness and Frost Tang? They loved each other so much... And they wrote a book together to show their love.");
                            data.AddOption("It`s~so~romantic.");
                            data.AddAvatar(145);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1))
                        {
                            data.AddText("Who...are...you...? I...");
                            data.AddOption("Important?", 2);
                            data.AddAvatar(145);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You came for my Jade Sceptre? You must be dreaming! Time to show me what you are made of! Let`s go!");
                            data.AddOption("I`ll~let~you~know.", 3);
                            data.AddAvatar(145);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 3:
                    {
                        var action = new ActionQuery()
                        {
                            ObjId = id,
                            Type = ActionType.RemoveEntity
                        };
                        unsafe
                        {
                            client.Send(stream.ActionCreate(&action));
                        }
                        Database.Server.AddMapMonster(stream, client.Map, 2171, client.Player.X, client.Player.Y, 3, 3, 1, client.Player.DynamicID, true, MsgFloorItem.MsgItemPacket.EffectMonsters.None, "moveback");

                        break;
                    }
                case 2:
                    {
                        if (!client.Inventory.Contain(710217, 1))
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Inventory.Add(stream, 710217);
                                client.SendSysMesage("You received the Jade Sceptre!");
                                if (client.Inventory.Contain(710216, 1))
                                {
                                    if (client.Inventory.Contain(710217, 1))
                                    {
                                        if (client.Inventory.Contain(710218, 1))
                                        {
                                            if (client.Inventory.Contain(710219, 1))
                                            {
                                                client.SendSysMesage("You`ve collected the Purple Eye, Jade Scepter, Jadeite, and Hairpin. Go to open the Teleport Platform on Bird Island (655,693).");
                                            }
                                            else
                                            {
                                                client.SendSysMesage("As long as you collect the Purple Eye, Jade Sceptre, Jadeite, and Hairpin, you can open the Platform (Bird Island 655,693) and go to the Rose Garden.");
                                            }
                                        }
                                        else
                                        {
                                            client.SendSysMesage("As long as you collect the Purple Eye, Jade Sceptre, Jadeite, and Hairpin, you can open the Platform (Bird Island 655,693) and go to the Rose Garden.");
                                        }
                                    }
                                    else
                                    {
                                        client.SendSysMesage("As long as you collect the Purple Eye, Jade Sceptre, Jadeite, and Hairpin, you can open the Platform (Bird Island 655,693) and go to the Rose Garden.");
                                    }
                                }
                                else
                                {
                                    client.SendSysMesage("As long as you collect the Purple Eye, Jade Sceptre, Jadeite, and Hairpin, you can open the Platform (Bird Island 655,693) and go to the Rose Garden.");
                                }
                            }
                            else
                            {
                                client.SendSysMesage("Your inventory is full!");
                            }
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.LeopardPillar)]
        public static void LeopardPillar(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.VillagerChou, client.Player.Class, 408);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("This stone pillar looks mysterious...");
                            data.AddOption("Activate~this~pillar.", 1);
                            data.AddOption("Yeah...");
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("This stone pillar looks mysterious...");
                            data.AddOption("Yeah...");
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 0, 0, 0, 0, 1))
                        {
                            data.AddText("The Leopard Pillar has been activated. Now, go activate the other pillars.");
                            data.AddOption("Alright.");
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("There`s a hole in the pillar. It seems that you can put something in it.");
                            data.AddOption("Put~in~Purple~Eye.", 5);
                            data.AddOption("Put~in~Jade~Sceptre.", 4);
                            data.AddOption("Put~in~Jadeite.", 3);
                            data.AddOption("Put~in~Hairpin.", 2);
                            data.AddOption("Not~now.");
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 5:
                    {
                        if (client.Inventory.Contain(710216, 1))
                        {
                            data.AddText("The stone pillar is not activated! Guess you didn`t put in the right item! C`mon, try again!");
                            data.AddOption("Damned~pillar!");
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have the special items to put into the pillars. Maybe Sugar Tang in Bird Island (685,599) can help you.");
                            data.AddOption("I`ll~visit~her.");
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 4:
                    {
                        if (client.Inventory.Contain(710217, 1))
                        {
                            data.AddText("The stone pillar is not activated! Guess you didn`t put in the right item! C`mon, try again!");
                            data.AddOption("Damned~pillar!");
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have the special items to put into the pillars. Maybe Sugar Tang in Bird Island (685,599) can help you.");
                            data.AddOption("I`ll~visit~her.");
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 3:
                    {
                        if (client.Inventory.Contain(710218, 1))
                        {
                            data.AddText("The stone pillar is not activated! Guess you didn`t put in the right item! C`mon, try again!");
                            data.AddOption("Damned~pillar!");
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have the special items to put into the pillars. Maybe Sugar Tang in Bird Island (685,599) can help you.");
                            data.AddOption("I`ll~visit~her.");
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Contain(710219, 1))
                        {
                            client.Inventory.Remove(710219, 1, stream);
                            client.Player.AddMapEffect(stream, 698, 731, "accession");
                            client.SendSysMesage("You used the Hairpin.");
                            client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 0, 0, 0, 0, 1);
                            data.AddText("The Leopard Pillar is activated!");
                            data.AddOption("Great!");
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have the special items to put into the pillars. Maybe Sugar Tang in Bird Island (685,599) can help you.");
                            data.AddOption("I`ll~visit~her.");
                            data.FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.TigerPillar)]
        public static void TigerPillar(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.VillagerChou, client.Player.Class, 408);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("This stone pillar looks mysterious...");
                            data.AddOption("Activate~this~pillar.", 1);
                            data.AddOption("Yeah...");
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("This stone pillar looks mysterious...");
                            data.AddOption("Yeah...");
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 0, 0, 0, 1))
                        {
                            data.AddText("The Tiger Pillar has been activated. Now, go activate the other pillars.");
                            data.AddOption("Alright.");
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("There`s a hole in the pillar. It seems that you can put something in it.");
                            data.AddOption("Put~in~Purple~Eye.", 5);
                            data.AddOption("Put~in~Jade~Sceptre.", 4);
                            data.AddOption("Put~in~Jadeite.", 3);
                            data.AddOption("Put~in~Hairpin.", 2);
                            data.AddOption("Not~now.");
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 5:
                    {
                        if (client.Inventory.Contain(710216, 1))
                        {
                            data.AddText("The stone pillar is not activated! Guess you didn`t put in the right item! C`mon, try again!");
                            data.AddOption("Damned~pillar!");
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have the special items to put into the pillars. Maybe Sugar Tang in Bird Island (685,599) can help you.");
                            data.AddOption("I`ll~visit~her.");
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 4:
                    {
                        if (client.Inventory.Contain(710217, 1))
                        {
                            data.AddText("The stone pillar is not activated! Guess you didn`t put in the right item! C`mon, try again!");
                            data.AddOption("Damned~pillar!");
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have the special items to put into the pillars. Maybe Sugar Tang in Bird Island (685,599) can help you.");
                            data.AddOption("I`ll~visit~her.");
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 3:
                    {
                        if (client.Inventory.Contain(710218, 1))
                        {
                            client.Inventory.Remove(710218, 1, stream);
                            client.SendSysMesage("You used the Jadeite.");
                            client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 0, 0, 0, 1);
                            client.Player.AddMapEffect(stream, 694, 735, "accession1");
                            data.AddText("The Tiger Pillar is activated!");
                            data.AddOption("Great!");
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have the special items to put into the pillars. Maybe Sugar Tang in Bird Island (685,599) can help you.");
                            data.AddOption("I`ll~visit~her.");
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Contain(710219, 1))
                        {
                            data.AddText("The stone pillar is not activated! Guess you didn`t put in the right item! C`mon, try again!");
                            data.AddOption("Damned~pillar!");
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have the special items to put into the pillars. Maybe Sugar Tang in Bird Island (685,599) can help you.");
                            data.AddOption("I`ll~visit~her.");
                            data.FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.DragonPillar)]
        public static void DragonPillar(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.VillagerChou, client.Player.Class, 408);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("This stone pillar looks mysterious...");
                            data.AddOption("Activate~this~pillar.", 1);
                            data.AddOption("Yeah...");
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("This stone pillar looks mysterious...");
                            data.AddOption("Yeah...");
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 0, 0, 1))
                        {
                            data.AddText("The Dragon Pillar has been activated. Now, go activate the other pillars.");
                            data.AddOption("Alright.");
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("There`s a hole in the pillar. It seems that you can put something in it.");
                            data.AddOption("Put~in~Purple~Eye.", 5);
                            data.AddOption("Put~in~Jade~Sceptre.", 4);
                            data.AddOption("Put~in~Jadeite.", 3);
                            data.AddOption("Put~in~Hairpin.", 2);
                            data.AddOption("Not~now.");
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 5:
                    {
                        if (client.Inventory.Contain(710216, 1))
                        {
                            data.AddText("The stone pillar is not activated! Guess you didn`t put in the right item! C`mon, try again!");
                            data.AddOption("Damned~pillar!");
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have the special items to put into the pillars. Maybe Sugar Tang in Bird Island (685,599) can help you.");
                            data.AddOption("I`ll~visit~her.");
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 4:
                    {
                        if (client.Inventory.Contain(710217, 1))
                        {
                            client.Inventory.Remove(710217, 1, stream);
                            client.SendSysMesage("You used the Jade Sceptre.");
                            client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 0, 0, 1);
                            client.Player.AddMapEffect(stream, 694, 721, "accession1");

                            data.AddText("The Dragon Pillar is activated!");
                            data.AddOption("Great!");
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have the special items to put into the pillars. Maybe Sugar Tang in Bird Island (685,599) can help you.");
                            data.AddOption("I`ll~visit~her.");
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 3:
                    {
                        if (client.Inventory.Contain(710218, 1))
                        {
                            data.AddText("The stone pillar is not activated! Guess you didn`t put in the right item! C`mon, try again!");
                            data.AddOption("Damned~pillar!");
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have the special items to put into the pillars. Maybe Sugar Tang in Bird Island (685,599) can help you.");
                            data.AddOption("I`ll~visit~her.");
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Contain(710219, 1))
                        {
                            data.AddText("The stone pillar is not activated! Guess you didn`t put in the right item! C`mon, try again!");
                            data.AddOption("Damned~pillar!");
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have the special items to put into the pillars. Maybe Sugar Tang in Bird Island (685,599) can help you.");
                            data.AddOption("I`ll~visit~her.");
                            data.FinalizeDialog();
                        }
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.SparrowPillar)]
        public static void SparrowPillar(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.VillagerChou, client.Player.Class, 408);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("This stone pillar looks mysterious...");
                            data.AddOption("Activate~this~pillar.", 1);
                            data.AddOption("Yeah...");
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("This stone pillar looks mysterious...");
                            data.AddOption("Yeah...");
                            data.FinalizeDialog();
                        }
                        break;

                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 0, 1))
                        {
                            data.AddText("The Sparrow Pillar has been activated. Now, go activate the other pillars.");
                            data.AddOption("Alright.");
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("There`s a hole in the pillar. It seems that you can put something in it.");
                            data.AddOption("Put~in~Purple~Eye.", 5);
                            data.AddOption("Put~in~Jade~Sceptre.", 4);
                            data.AddOption("Put~in~Jadeite.", 3);
                            data.AddOption("Put~in~Hairpin.", 2);
                            data.AddOption("Not~now.");
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 5:
                    {
                        if (client.Inventory.Contain(710216, 1))
                        {
                            client.Player.AddMapEffect(stream, 683, 730, "accession1");
                            client.Inventory.Remove(710216, 1, stream);
                            client.SendSysMesage("You used the Purple Eye.");

                            client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 0, 1);
                            data.AddText("The Sparrow Pillar is activated!");
                            data.AddOption("Great!");
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have the special items to put into the pillars. Maybe Sugar Tang in Bird Island (685,599) can help you.");
                            data.AddOption("I`ll~visit~her.");
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 4:
                    {
                        if (client.Inventory.Contain(710217, 1))
                        {
                            data.AddText("The stone pillar is not activated! Guess you didn`t put in the right item! C`mon, try again!");
                            data.AddOption("Damned~pillar!");
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have the special items to put into the pillars. Maybe Sugar Tang in Bird Island (685,599) can help you.");
                            data.AddOption("I`ll~visit~her.");
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 3:
                    {
                        if (client.Inventory.Contain(710218, 1))
                        {
                            data.AddText("The stone pillar is not activated! Guess you didn`t put in the right item! C`mon, try again!");
                            data.AddOption("Damned~pillar!");
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have the special items to put into the pillars. Maybe Sugar Tang in Bird Island (685,599) can help you.");
                            data.AddOption("I`ll~visit~her.");
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Contain(710219, 1))
                        {
                            data.AddText("The stone pillar is not activated! Guess you didn`t put in the right item! C`mon, try again!");
                            data.AddOption("Damned~pillar!");
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have the special items to put into the pillars. Maybe Sugar Tang in Bird Island (685,599) can help you.");
                            data.AddOption("I`ll~visit~her.");
                            data.FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        //
        [NpcAttribute(NpcID.MrLoneliness)]
        public static void MrLoneliness(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.Platform, client.Player.Class, 409);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Map.View.GetAllMapRoles(Role.MapObjectType.Monster, p => p.Alive == true).Count() == 0)
                            {
                                if (client.Inventory.Contain(710221, 1))
                                {
                                    data.AddText("Yeah, the Heaven Fan is mine. How did you find it? You came for the poem book, right? So many people have asked");
                                    data.AddText("~me about it, but you`re the only one who gave me the Heaven Fan. So, here`s the book. Take it to Sugar Tang, and be gone!");
                                    data.AddOption("With~pleasure!", 1);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    data.AddText("You`re the 101st guy to come for the Poem Book. But, I won`t give it to you if you can`t get me the Heaven Fan.");
                                    data.AddOption("Heaven~Fan...");
                                    data.AddOption("Bird~Island,~please!", 2);
                                    data.FinalizeDialog();
                                }
                            }
                            else
                            {

                                data.AddText("Blech! Look what evil you have brought out! Shouldn`t you sweep them out of my house?");
                                data.AddOption("Oh,~my!");
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You`re the 101st guy to come for the Poem Book. But, I won`t give it to you if you can`t get me the Heaven Fan.");
                            data.AddOption("Heaven~Fan...");
                            data.AddOption("Bird~Island,~please!", 2);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        client.Teleport(717, 577, 1015);
                        client.SendSysMesage("You`ve been sent back to Bird Island.");
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(710221, 1))
                        {
                            client.Inventory.Remove(710221, 1, stream);
                            client.Inventory.Add(stream, 710222);
                            client.SendSysMesage("The Heaven Fan has been taken away. You obtained the Poem Book.");
                            client.Teleport(717, 577, 1015);
                            client.SendSysMesage("You`ve been sent back to Bird Island. Find Sugar Tang to get your reward.");
                        }
                        else
                        {
                            data.AddText("You`re the 101st guy to come for the Poem Book. But, I won`t give it to you if you can`t get me the Heaven Fan.");
                            data.AddOption("Heaven~Fan...");
                            data.AddOption("Bird~Island,~please!", 2);
                            data.FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.NightBox)]
        public static void NightBox(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.Platform, client.Player.Class, 409);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Map.View.GetAllMapRoles(Role.MapObjectType.Monster, p => p.Alive == true).Count() == 0)
                            {
                                if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1, 1, 1))
                                {
                                    if (client.Inventory.Contain(710222, 1))
                                    {
                                        data.AddText("This is an empty box. Go check the other boxes.");
                                        data.AddOption("I~see.");
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (client.Inventory.Contain(710221, 1))
                                        {
                                            data.AddText("This is an empty box. Go check the other boxes.");
                                            data.AddOption("I~see.");
                                            data.FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText("The box is opened. See? There`s a fan at the bottom of the box!");
                                            data.AddOption("Gimme!~Gimme!", 1);
                                            data.FinalizeDialog();
                                        }
                                    }
                                }
                                else
                                {

                                    if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1, 1, 1))
                                    {
                                        data.AddText("The box is opened. See? There`s a fan at the bottom of the box!");
                                        data.AddOption("Gimme!~Gimme!", 1);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 0, 0, 1))
                                        {
                                            data.AddText("This is an empty box. Go check the other boxes.");
                                            data.AddOption("I~see.");
                                            data.FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText("There`s a poem engraved on the box. Open it now?");
                                            data.AddOption("Can`t~wait!", 2);
                                            data.AddOption("Not~now.");
                                            data.FinalizeDialog();
                                        }
                                    }
                                }
                            }
                            else
                            {
                                data.AddText("Watch your back!!");
                                data.AddOption("Oh,~my!!");
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("This is an empty box. Go check the other boxes.");
                            data.AddOption("I~see.");
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        Database.Server.AddMapMonster(stream, client.Map, 2172, client.Player.X, client.Player.Y, 3, 3, 1, client.Player.DynamicID, true, MsgFloorItem.MsgItemPacket.EffectMonsters.None, "moveback");
                        client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 0, 0, 1);
                        client.SendSysMesage("There`s something in the box...What?! A Poem Ghost!! Look out!");
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.Inventory.Add(stream, 710221);
                            data.AddText("You obtained a Heaven Fan!");
                            data.AddOption("Great!");
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.SendSysMesage("There`s not enough space in your inventory!");
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.DarkBox)]
        public static void DarkBox(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.Platform, client.Player.Class, 409);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Map.View.GetAllMapRoles(Role.MapObjectType.Monster, p => p.Alive == true).Count() == 0)
                            {
                                if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1, 1, 1))
                                {
                                    if (client.Inventory.Contain(710222, 1))
                                    {
                                        data.AddText("This is an empty box. Go check the other boxes.");
                                        data.AddOption("I~see.");
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (client.Inventory.Contain(710221, 1))
                                        {
                                            data.AddText("This is an empty box. Go check the other boxes.");
                                            data.AddOption("I~see.");
                                            data.FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText("The box is opened. See? There`s a fan at the bottom of the box!");
                                            data.AddOption("Gimme!~Gimme!", 1);
                                            data.FinalizeDialog();
                                        }
                                    }
                                }
                                else
                                {

                                    if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1, 1, 1))
                                    {
                                        data.AddText("The box is opened. See? There`s a fan at the bottom of the box!");
                                        data.AddOption("Gimme!~Gimme!", 1);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 0, 1))
                                        {
                                            data.AddText("This is an empty box. Go check the other boxes.");
                                            data.AddOption("I~see.");
                                            data.FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText("There`s a poem engraved on the box. Open it now?");
                                            data.AddOption("Can`t~wait!", 2);
                                            data.AddOption("Not~now.");
                                            data.FinalizeDialog();
                                        }
                                    }
                                }
                            }
                            else
                            {
                                data.AddText("Watch your back!!");
                                data.AddOption("Oh,~my!!");
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("This is an empty box. Go check the other boxes.");
                            data.AddOption("I~see.");
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        Database.Server.AddMapMonster(stream, client.Map, 2172, client.Player.X, client.Player.Y, 3, 3, 1, client.Player.DynamicID, true, MsgFloorItem.MsgItemPacket.EffectMonsters.None, "moveback");
                        client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 0, 1);
                        client.SendSysMesage("There`s something in the box...What?! A Poem Ghost!! Look out!");
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.Inventory.Add(stream, 710221);
                            data.AddText("You obtained a Heaven Fan!");
                            data.AddOption("Great!");
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.SendSysMesage("There`s not enough space in your inventory!");
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.DayBox)]
        public static void DayBox(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.Platform, client.Player.Class, 409);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Map.View.GetAllMapRoles(Role.MapObjectType.Monster, p => p.Alive == true).Count() == 0)
                            {
                                if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1, 1, 1))
                                {
                                    if (client.Inventory.Contain(710222, 1))
                                    {
                                        data.AddText("This is an empty box. Go check the other boxes.");
                                        data.AddOption("I~see.");
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (client.Inventory.Contain(710221, 1))
                                        {
                                            data.AddText("This is an empty box. Go check the other boxes.");
                                            data.AddOption("I~see.");
                                            data.FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText("The box is opened. See? There`s a fan at the bottom of the box!");
                                            data.AddOption("Gimme!~Gimme!", 1);
                                            data.FinalizeDialog();
                                        }
                                    }
                                }
                                else
                                {

                                    if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1, 1, 1))
                                    {
                                        data.AddText("The box is opened. See? There`s a fan at the bottom of the box!");
                                        data.AddOption("Gimme!~Gimme!", 1);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1))
                                        {
                                            data.AddText("This is an empty box. Go check the other boxes.");
                                            data.AddOption("I~see.");
                                            data.FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText("There`s a poem engraved on the box. Open it now?");
                                            data.AddOption("Can`t~wait!", 2);
                                            data.AddOption("Not~now.");
                                            data.FinalizeDialog();
                                        }
                                    }
                                }
                            }
                            else
                            {
                                data.AddText("Watch your back!!");
                                data.AddOption("Oh,~my!!");
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("This is an empty box. Go check the other boxes.");
                            data.AddOption("I~see.");
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        Database.Server.AddMapMonster(stream, client.Map, 2172, client.Player.X, client.Player.Y, 3, 3, 1, client.Player.DynamicID, true, MsgFloorItem.MsgItemPacket.EffectMonsters.None, "moveback");
                        client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 1);
                        client.SendSysMesage("There`s something in the box...What?! A Poem Ghost!! Look out!");
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.Inventory.Add(stream, 710221);
                            data.AddText("You obtained a Heaven Fan!");
                            data.AddOption("Great!");
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.SendSysMesage("There`s not enough space in your inventory!");
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Platform)]
        public static void Platform(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.VillagerChou, client.Player.Class, 408);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Platform, client.Player.Class, 409);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Rules are rules. You`ve put the special items into the four stone pillars? If not, the Teleport Platform will not activate.");
                            data.AddOption("Absolutely.~Activate~it~now!", 1);
                            data.AddOption("Er,~sorry.~I~haven`t.");
                            data.FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                           && client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("Rules are rules. You`ve put the special items into the four stone pillars? If not, the Teleport Platform will not activate.");
                                data.AddOption("Absolutely.~Activate~it~now!", 4);
                                data.AddOption("Er,~sorry.~I~haven`t.");
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("The Teleport Platform looks mysterious...");
                                data.AddOption("Send~me~to~the~Rose~Garden.", 3);
                                data.AddOption("It~looks~so~weird.");
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("The Teleport Platform looks mysterious...");
                            data.AddOption("It~looks~so~weird.");
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 4:
                    {
                        client.Player.AddMapEffect(stream, 686, 723, "bomb");
                        data.AddText("The platform is activated! Good job! Now, you wanna be teleported to the Rose Garden or not?");
                        data.AddOption("What~do~you~think?", 3);
                        data.FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        client.Teleport(69, 56, 1791);
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.CreateBoxDialog("You~will~be~teleported~to~the~Rose~Garden.");

                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 0, 1, 1, 1, 1))
                        {
                            client.Player.AddMapEffect(stream, 686, 723, "bomb");
                            data.AddText("The platform is activated! Good job! Now, you wanna be teleported to the Rose Garden or not?");
                            data.AddOption("What~do~you~think?", 2);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Sorry, but if the 4 stone pillars are not activated, the Teleport Platform will just be a decoration.");
                            data.AddOption("I~see.");
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You received 100 Silver!");
                            client.Teleport(69, 56, 1791);
                            client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                            client.CreateBoxDialog("You~will~be~teleported~to~the~Rose~Garden.");
                        }
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.VillagerChou)]
        public static void VillagerChou(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.SugarTang, client.Player.Class, 400);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.VillagerChou, client.Player.Class, 401);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.VillagerChou, client.Player.Class, 402);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.KunlunWanderer, client.Player.Class, 405);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)NpcID.VillagerChou, client.Player.Class, 406);
            var ActiveQuest6 = Database.QuestInfo.GetFinishQuest((uint)NpcID.VillagerChou, client.Player.Class, 407);
            var ActiveQuest7 = Database.QuestInfo.GetFinishQuest((uint)NpcID.VillagerChou, client.Player.Class, 408);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Hey, buddy! Want to have a drink with me? Wine is a good thing that can help you forget everything.");
                            data.AddOption("Do~you~know~Herbalist~Chou?", 1);
                            data.AddOption("I~will.");
                            data.AddAvatar(77);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Did Sugar Tang tell you anything about the Tang Silk?");
                            data.AddOption("I`ve~got~the~answer.", 20);
                            data.AddOption("I`m~just~passing~by.");
                            data.AddAvatar(77);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                        && client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("You brought me the Snake Meat and wine?");
                                data.AddOption("Yeah,~here~you~are.", 6);
                                data.AddOption("Sorry,~I~haven`t...");
                                data.AddAvatar(77);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("He is just in this village. Is that related with Sugar Tang? Oh, I know. Herbalist Chou was Frost Tang`s best friend. So she thought the Herbalist Chou`s grandson might know something, right?");
                                data.AddOption("Yeah,~you~guessed~correctly.", 5);
                                data.AddOption("I`m~not~sure.");
                                data.AddAvatar(77);
                                data.FinalizeDialog();
                            }
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                 && client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("Why are you still here? Take the Tang Silk to Sugar Tang (685,599) on Bird Island to learn more.");
                                data.AddOption("I`m~on~my~way.", 13);
                                data.AddOption("I~quit!");
                                data.AddAvatar(77);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Calm down, okay? The money you spent will be worthy. See, this Tang Silk is the only thing my grandpa left.");
                                data.AddOption("What~can~I~do~with~the~silk?", 11);
                                data.AddOption("It~looks~nothing~special.");
                                data.AddAvatar(77);
                                data.FinalizeDialog();
                            }
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                && client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("So scary. I didn`t expect those Crimson Claws would follow me here.");
                                data.AddOption("Let`s~go~into~~the~Poem~Silk.", 26);
                                data.AddOption("I`ve~dealt~with~them.");
                                data.AddAvatar(77);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Wait, wait... I read the poems on the silk again and find something strange.");
                                data.AddOption("What~did~you~find~out?", 25);
                                data.AddOption("Stop~day~dreaming...");
                                data.AddAvatar(77);
                                data.FinalizeDialog();
                            }
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
           && client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("How is my grandpa`s grave, now? I hope it hasn`t been swallowed by weeds. By the way, what did you get from the Swan Lake?");
                                data.AddOption("The~Purple~Eye.", 31);
                                data.AddOption("I~got~nothing,~till~now.");
                                data.AddAvatar(77);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("To find out the real meaning of the Poem Silk, we should find the Swan Lake where my grandpa was buried.");
                                data.AddOption("Swan~Lake?", 30);
                                data.AddOption("A~grave?~Let~me~go!");
                                data.AddAvatar(77);
                                data.FinalizeDialog();
                            }
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
     && client.Player.QuestGUI.CheckQuest(ActiveQuest7.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest7.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("Look, we have never been so close to the success, now. As long as we have all the 4 things, we can unlock the way to the Platform.");
                                data.AddOption("Where~are~they?", 34);
                                data.AddOption("I`m~too~tired~to~continue.");
                                data.AddAvatar(77);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("I`ve checked the Purple Eye you brought. That`s real.");
                                data.AddOption("Then,~what`s~the~next~thing?", 40);
                                data.AddOption("It~should~be.");
                                data.AddAvatar(77);
                                data.FinalizeDialog();
                            }

                        }
                        else
                        {
                            data.AddText("It`s been long before I heard from Sugar Tang (BirdIsland 685,599) last time. She has always wanted to find out the secrets of her dearly departed grandma.");
                            data.AddOption("She~must~be~fine.");
                            data.AddAvatar(77);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 40:
                    {
                        data.AddText("Since you have the Purple Eye, I`ll give you my Hairpin. Now, we just need to find the Jade Scepter and the Jadeite to unlock the way to the Platform.");
                        data.AddOption("I~know~what~to~do~now.", 34);
                        data.AddAvatar(77);
                        data.FinalizeDialog();
                        break;
                    }

                case 34:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest7, 0);
                        data.AddText("Hmm, you`ve retrieved the Purple Eye from the Swan Lake. I have the Hairpin, and Sugar Tang owns the Jadeite. For the Jade Scepter, it was stolen by Jade Courtesan. Hurry and collect all of them!");
                        data.AddOption("Give~me~the~Hairpin.", 36);
                        data.AddOption("Give~me~the~Purple~Eye.", 35);
                        data.AddOption("I`ll~return~soon!");
                        data.AddAvatar(77);
                        data.FinalizeDialog();
                        break;
                    }
                case 36:
                    {
                        if (client.Inventory.Contain(710219, 1))
                        {
                            data.AddText("Isn`t that the Hairpin in your inventory? You should wear glasses to check, next time.");
                            data.AddOption("Sorry,~I~forgot.");
                            data.AddAvatar(77);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Inventory.Add(stream, 710219, 1);
                                client.CreateBoxDialog("You~received~the~Hairpin.");
                            }
                            else
                            {
                                data.AddText("Your inventory is full! You need to clean some room, first.");
                                data.AddOption("Okay.");
                                data.AddAvatar(77);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 35:
                    {
                        if (client.Inventory.Contain(710216, 1))
                        {
                            data.AddText("I saw the Purple Eye is still in your inventory. Stop kidding me, okay?");
                            data.AddOption("Sorry,~I~forgot.");
                            data.AddAvatar(77);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Inventory.Add(stream, 710216, 1);
                                client.CreateBoxDialog("You~received~the~Purple~Eye.");
                            }
                            else
                            {
                                data.AddText("Your inventory is full, now. Why not tidy it up, first?");
                                data.AddOption("I`ll~be~back~soon!");
                                data.AddAvatar(77);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 33:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest6.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You received 100 Silver!");
                            data.AddText("Since you have the Purple Eye, I`ll give you my Hairpin. Now, we just need to find the Jade Scepter and the Jadeite to unlock the way to the Platform.");
                            data.AddOption("I~know~what~to~do~now.", 34);
                            data.AddAvatar(77);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 31:
                    {
                        if (client.Inventory.Contain(710216, 1))
                        {
                            data.AddText("You got the Purple Eye? Wow, you are incredible powerful!");
                            data.AddOption("Thanks.", 33);
                            data.AddAvatar(77);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Inventory.Contain(721799, 1))
                            {
                                data.AddText("It seems you haven`t found anything special from the Swan Lake. Wait, you have a stick of Incense, right? Go use it at the Swan Lake (55,109)!");
                                data.AddOption("I`m~on~my~way.");
                                data.AddAvatar(77);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Did you lose your way? The entrance to Swan Lake is in the Maple Forest (471,844). Before approaching, you should burn the Incense at the Swan Lake.");
                                data.AddOption("Sorry,~I~lost~the~Incense.", 32);
                                data.AddOption("Thanks!");
                                data.AddAvatar(77);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 32:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.Inventory.Add(stream, 721799, 1);
                            client.CreateBoxDialog("You~received~a~stick~of~Incense~from~Villager~Chou.");
                        }
                        else
                        {
                            data.AddText("Your inventory is full now. Come back when you have some room. I`ll be here waiting.");
                            data.AddOption("I`ll~be~back~soon!");
                            data.AddAvatar(77);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 30:
                    {
                        data.AddText("Sugar Tang`s grandma and Mr. Loneliness often dated in Swan Lake. That`s why you need to go there and investigate. The entrance");
                        data.AddText("~to Swan Lake is in the Maple Forest (471,844). Here`s an Incense for you. Burn it at Swan Lake (55,109). Don`t forget it.");
                        data.AddOption("Burn~Incense?~What?", 28);
                        data.AddAvatar(77);
                        data.FinalizeDialog();
                        break;
                    }
                case 28:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.Player.QuestGUI.Accept(ActiveQuest6, 0);
                            client.Inventory.Add(stream, 721799, 1);
                            client.SendSysMesage("You received a stick of Incense.");
                        }
                        else
                        {
                            data.AddText("I can`t help, but find your inventory is full. Why not tidy up, first?");
                            data.AddOption("I`ll~be~back~soon!");
                            data.AddAvatar(77);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 27:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest5.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You received 100 Silver!");
                            data.AddText("Sugar Tang`s grandma and Mr. Loneliness often dated in Swan Lake. That`s why you need to go there and investigate. The entrance");
                            data.AddText("~to Swan Lake is in the Maple Forest (471,844). Here`s an Incense for you. Burn it at Swan Lake (55,109). Don`t forget it.");
                            data.AddOption("Burn~Incense?~What?", 28);
                            data.AddAvatar(77);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 26:
                    {
                        if (client.Player.View.ContainMobInScreen("CrimsonClaw") == false)
                        {
                            data.AddText("Poem Silk? Wait, I remember something! The Heaven Fan! Mr. Loneliness had done something with it! We need to");
                            data.AddText("~find it first! Now you`d better go to a place called Swan Lake where my grandpa was buried. Damn! Why do I have to be blind!");
                            data.AddOption("Relax.~I~can~deal~with~it.", 27);
                            data.AddAvatar(77);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Oh, my! They found me! Crimson Claw! Help! Please! Please!");
                            data.AddOption("Sigh.~Man,~I`m~here.~Relax.");
                            data.AddAvatar(77);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 25:
                    {
                        data.AddText("Listen to me... Oh, no!");
                        data.AddOption("What`s~wrong?", 22);
                        data.AddAvatar(77);
                        data.FinalizeDialog();
                        break;
                    }
                case 20:
                    {
                        if (client.Inventory.Contain(721801, 1))
                        {
                            data.AddText("What... There are poems on the Tang Silk only? Are you sure that isn`t a treasure map? Anyway, thanks for your help.");
                            data.AddOption("I`m~doing~my~job.", 21);
                            data.AddAvatar(77);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("I can`t find the Poem Silk you mentioned. Did you lose it somewhere?");
                            data.AddOption("It`s~very~possible.");
                            data.AddAvatar(77);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 21:
                    {
                        if (client.Inventory.Contain(721801, 1))
                        {
                            client.Inventory.Remove(721801, 1, stream);
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                            {
                                client.Player.Money += 100;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                client.SendSysMesage("You received 100 Silver!");
                                data.AddText("Listen to me... Oh, no!");
                                data.AddOption("What`s~wrong?", 22);
                                data.AddAvatar(77);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("I can`t find the Poem Silk you mentioned. Did you lose it somewhere?");
                            data.AddOption("It`s~very~possible.");
                            data.AddAvatar(77);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 22:
                    {
                        Database.Server.AddMapMonster(stream, client.Map, 2169, client.Player.X, client.Player.Y, 3, 3, 1, client.Player.DynamicID, true, MsgFloorItem.MsgItemPacket.EffectMonsters.None, "moveback");
                        client.Player.QuestGUI.Accept(ActiveQuest5, 0);
                        break;
                    }
                case 13:
                    {
                        if (client.Inventory.Contain(721798, 1))
                        {
                            data.AddText("If you find out the secret of this Tang Silk, don`t forget to let me know it, please!");
                            data.AddOption("No~problem.");
                            data.AddAvatar(77);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Inventory.Contain(721801, 1))
                            {
                                data.AddText("If you find out the secret of this Tang Silk, don`t forget to let me know it, please!");
                                data.AddOption("No~problem.");
                                data.AddAvatar(77);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("What? You lost it? How can you be so careless! My father only gave me two. This is the last one. Take it. Keep it safe for me,");
                                data.AddText("~will you?");
                                data.AddOption("I~will.", 14);
                                data.AddAvatar(77);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 14:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.Inventory.Add(stream, 721798, 1);
                            client.SendSysMesage("You~received~the~Tang~Silk~from~Villager~Chou.");
                        }
                        else
                        {
                            data.AddText("Your inventory is full. Please make some room first.");
                            data.AddOption("I`ll~be~back~soon!");
                            data.AddAvatar(77);
                            data.FinalizeDialog();
                        }
                        break;
                    }

                case 11:
                    {
                        data.AddText("Haha, it`s just a joke! Look, I have the Tang Silk my grandpa left. I want to know more about it, too. But you see,");
                        data.AddText("~I am a blind man... Well, you just take it to Sugar Tang. If you get something good, don`t forget to tell me!");
                        data.AddOption("Okay.", 10);
                        data.AddAvatar(77);
                        data.FinalizeDialog();
                        break;
                    }
                case 10:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.Inventory.Add(stream, 721798, 1);
                            client.SendSysMesage("You obtained the Tang Silk from Villager Chou. Now find Sugar Tang in Bird Island (685,599) to learn more about it.");
                            client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        }
                        else
                        {
                            data.AddText("Your inventory is full. Please make some room first.");
                            data.AddOption("I`ll~be~back~soon!");
                            data.AddAvatar(77);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 9:
                    {
                        if (client.Inventory.Contain(721800, 1))
                        {
                            if (client.Inventory.Contain(710220, 5))
                            {
                                if (client.Inventory.Remove(710220, 5, stream))
                                {
                                    client.Inventory.Remove(721800, 1, stream);
                                    if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                                    {
                                        client.Player.Money += 100;
                                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                        client.SendSysMesage("You received 100 Silver!");
                                        data.AddText("Haha, it`s just a joke! Look, I have the Tang Silk my grandpa left. I want to know more about it, too. But you see,");
                                        data.AddText("~I am a blind man... Well, you just take it to Sugar Tang. If you get something good, don`t forget to tell me!");
                                        data.AddOption("Okay.", 10);
                                        data.AddAvatar(77);
                                        data.FinalizeDialog();

                                    }
                                }
                            }
                            else
                            {
                                data.AddText("Did you get the wine and meat I want? The answer is `NO`. My memory is bad when I am starving. Just bring me a bottle of Bamboo");
                                data.AddText("~Wine from Wine Kiddo (Phoenix Castle 182,280) and 5 pieces of Snake Meat in the northeast of Maple Forest. I await you back!");
                                data.AddOption("I`m~on~my~way.", 7);
                                data.AddAvatar(77);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Did you get the wine and meat I want? The answer is `NO`. My memory is bad when I am starving. Just bring me a bottle of Bamboo");
                            data.AddText("~Wine from Wine Kiddo (Phoenix Castle 182,280) and 5 pieces of Snake Meat in the northeast of Maple Forest. I await you back!");
                            data.AddOption("I`m~on~my~way.", 7);
                            data.AddAvatar(77);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 6:
                    {
                        if (client.Inventory.Contain(721800, 1))
                        {
                            if (client.Inventory.Contain(710220, 5))
                            {
                                data.AddText("Mmm, that`s good. I do like snakes, but only after they`re in my belly. It so happens, that I am the man you`re looking for...");
                                data.AddOption("You~made~me~wait~for~that?", 9);//9564290
                                data.AddAvatar(77);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Did you get the wine and meat I want? The answer is `NO`. My memory is bad when I am starving. Just bring me a bottle of Bamboo");
                                data.AddText("~Wine from Wine Kiddo (Phoenix Castle 182,280) and 5 pieces of Snake Meat in the northeast of Maple Forest. I await you back!");
                                data.AddOption("I`m~on~my~way.", 7);
                                data.AddAvatar(77);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Did you get the wine and meat I want? The answer is `NO`. My memory is bad when I am starving. Just bring me a bottle of Bamboo");
                            data.AddText("~Wine from Wine Kiddo (Phoenix Castle 182,280) and 5 pieces of Snake Meat in the northeast of Maple Forest. I await you back!");
                            data.AddOption("I`m~on~my~way.", 7);
                            data.AddAvatar(77);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 7:
                    {
                        client.SendSysMesage("Buy the Bamboo Wine from Wine Kiddo (Phoenix Castle 182,280) and collect 5 pieces of Snake Meat from northeast of Maple Forest.");
                        break;
                    }
                case 5:
                    {
                        data.AddText("Of course, I know where he is! Sorry, I feel a little hungry. Would you mind bringing me some Bamboo Wine from");
                        data.AddText("~Wine Kiddo (Phoenix Castle 182,280)? Hey! And Snake Meat in the northeast of Maple Forest is amazing. Get me five!");
                        data.AddOption("Greedy~son~of~a..", 3);
                        data.AddAvatar(77);
                        data.FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        data.AddText("Herbalist Chou? He`s dead. But I know his grandson.");
                        data.AddOption("Where~can~I~find~him?", 2);
                        data.AddAvatar(77);
                        data.FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You received 100 Silver!");
                            data.AddText("Of course, I know where he is! Sorry, I feel a little hungry. Would you mind bringing me some Bamboo Wine from");
                            data.AddText("~Wine Kiddo (Phoenix Castle 182,280)? Hey! And Snake Meat in the northeast of Maple Forest is amazing. Get me five!");
                            data.AddOption("Greedy~son~of~a..", 3);
                            data.AddAvatar(77);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 3:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.CreateBoxDialog("Buy~the~Bamboo~Wine~from~a~Wine~Kiddo~in~Phoenix~Castle~(182,280)~and~get~5~pieces~of~Snake~Meat~from~northeast~Maple~Forest.");
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.SugarTang)]
        public static void SugarTang(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.SugarTang, client.Player.Class, 520);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.GhoulKong, client.Player.Class, 528);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.SugarTang, client.Player.Class, 400);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.VillagerChou, client.Player.Class, 402);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)NpcID.SugarTang, client.Player.Class, 403);
            var ActiveQuest6 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Platform, client.Player.Class, 409);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.Level < 100)
                        {
                            data.AddText("Hey, you are still too green! Keep practicing, and come back when you reach level 100.");
                            data.AddOption("Alright.");
                            data.AddAvatar(175);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("Have you ever heard of Frost Tang? Yeah, she was very famous in her time. Not only for her beauty, but also for her great skill. You know");
                                data.AddText("~she is my grandma and I wish I could be as good as her. That`s the reason why I should find the Star Tower she lost.");
                                data.AddOption("Star~Tower?", 10);
                                data.AddOption("I~don`t~think~so.");
                                data.AddAvatar(175);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                                {
                                    if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                                    {
                                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                                        {
                                            data.AddText("Did you find Chou`s children? No?! Come on, Chou is my grandma`s best friend, so he must know something useful!");
                                            data.AddOption("How~can~I~find~him?", 35);
                                            data.AddOption("I`m~just~passing~by.");
                                            data.AddAvatar(175);
                                            data.FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText("Have you ever seen Yang Feng? He was the last head of the Yang family. Though he`s dead, he won`t give up his desire to destroy the Star Tower.");
                                            data.AddText("~Anyway, there is still something I can`t understand about my family. I heard the Heaven Fan has the answer I want.");
                                            data.AddText("~are still many things I cannot understand about my family. I heard that the attack talisman, the Heaven Fan, has the answers I want.");
                                            data.AddOption("Heaven~Fan?", 30);
                                            data.AddOption("I~see.");
                                            data.AddAvatar(175);
                                            data.FinalizeDialog();
                                        }
                                    }
                                    else if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                                    {
                                        data.AddText("Did you find Herbalist Chou? Or any of his descendants?");
                                        data.AddOption("He~gave~me~the~Tang~Silk.", 40);
                                        data.AddOption("Sorry,~no.");
                                        data.AddAvatar(175);
                                        data.FinalizeDialog();
                                    }
                                    else if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                                    && !client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                                    {
                                        data.AddText("Why are you still here? You should take the Tang Silk to the Kunlun Wanderer. He may know something more about it. Was there anything else you needed?");
                                        data.AddOption("How~can~I~find~him?", 43);
                                        data.AddOption("I~see.");
                                        data.AddAvatar(175);
                                        data.FinalizeDialog();
                                    }
                                    else if (client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                                    {
                                        data.AddText("Sorry, I didn`t recognize you, just now. How is your job going? I just made an important discovery about My grandma.");
                                        data.AddOption("I~brought~you~a~book!", 50);
                                        data.AddOption("I~see.");
                                        data.AddAvatar(175);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        data.AddText("I read the Poem Book my grandma wrote again, and I totally understand the love between Mr. Loneliness and her, now. Thanks for all you have done for us!");
                                        data.AddOption("You`re~welcome.");
                                        data.AddAvatar(175);
                                        data.FinalizeDialog();
                                    }
                                }
                                else
                                {
                                    data.AddText("Have you ever heard of Frost Tang? Yeah, she was very famous in her time. Not only for her beauty, but also for her great skill. You know");
                                    data.AddText("~she is my grandma and I wish I could be as good as her. That`s the reason why I should find the Star Tower she lost.");
                                    data.AddOption("Star~Tower?", 1);
                                    data.AddOption("I~don`t~think~so.");
                                    data.AddAvatar(175);
                                    data.FinalizeDialog();
                                }
                            }

                        }
                        break;
                    }
                case 50:
                    {
                        if (client.Inventory.Contain(710222, 1))
                        {
                            data.AddText("Oh, this is just my grandma`s Poem Book! I`ll bury this book at her grave, then she can rest in peace... Well, my friend,");
                            data.AddText("~thanks for what you have done for my family. Here`s your reward. Can you guess what it is?");
                            data.AddOption("Better~be~the~Heaven~Fan...", 51);
                            data.AddOption("Don`t~care.");
                            data.AddAvatar(175);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("What book? I can`t find any books in your bag! By the way, my grandma did write a poem book before. If we can find that book, things may be easier to understand.");
                            data.AddOption("Alright.");
                            data.AddAvatar(175);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 51:
                    {
                        if (client.Inventory.Contain(710222, 1))
                        {
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest6.MissionId))
                            {
                                client.Inventory.Remove(710222, 1, stream);
                                client.Inventory.Add(stream, 201009, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.SendSysMesage("Sugar Tang took the Poem Book from you. In return, she gave you the Heaven Fan!");
                            }
                        }
                        else
                        {
                            data.AddText("What book? I can`t find any books in your bag! By the way, my grandma did write a poem book before. If we can find that book, things may be easier to understand.");
                            data.AddOption("Alright.");
                            data.AddOption("Don`t~care.");
                            data.AddAvatar(175);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 43:
                    {
                        data.AddText("Hmm... We need to refer this Tang Silk to Kunlun Wanderer. You can probably find him around (490,618) in Desert City. By the way, the Kunlun Wanderer will go on a trip. soon. So, be quick!");
                        data.AddOption("I`m~on~my~way.", 42);
                        data.AddAvatar(175);
                        data.FinalizeDialog();
                        break;
                    }

                case 40:
                    {
                        if (client.Inventory.Contain(721798, 1))
                        {
                            data.AddText("Tang Silk? It looks so beautiful! There must be many secrets about this silk. Thanks for your help!");
                            data.AddOption("It`s~okay.", 41);
                            data.AddAvatar(175);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You said that Villager Chou gave you a Tang Silk. But where is it now? Don`t tell me you have sold it for money.");
                            data.AddOption("Maybe~I~lost~it~somewhere?");
                            data.AddAvatar(175);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 41:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You received 100 Silver!");
                            data.AddText("Hmm... We need to refer this Tang Silk to Kunlun Wanderer. You can probably find him around (490,618) in Desert City. By the way, the Kunlun Wanderer will go on a trip. soon. So, be quick!");
                            data.AddOption("I`m~on~my~way.", 42);
                            data.AddAvatar(175);
                            data.FinalizeDialog();
                        }

                        break;
                    }
                case 42:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest5, 0);
                        client.CreateBoxDialog("Pay~a~visit~to~the~Kunlun~Wanderer~around~(490,618)~in~Desert~City.");
                        break;
                    }
                case 35:
                    {
                        if (client.Inventory.Contain(710218, 1))
                        {
                            data.AddText("You can probably find him in the southeast of Maple Forest. Well, I await your good news!");
                            data.AddOption("Okay,~bye!");
                            data.AddAvatar(175);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("How could you be so careless to lose that? Fortunately, I have another one. Here you are! Don`t lose it again, okay?");
                            data.AddOption("Sorry,~I~won`t.", 36);
                            data.AddAvatar(175);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 36:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.Inventory.Add(stream, 710218, 1);
                            client.SendSysMesage("You~received~a~Jadeite.");
                        }
                        else
                        {
                            data.AddText("Your inventory is full! Why not tidy it up, first?");
                            data.AddOption("I`ll~be~back~soon!");
                            data.AddAvatar(175);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 30:
                    {
                        data.AddText("I don`t know much about the Heaven Fan, but I feel that must be related to the Poem Book written by my grandma and Mr. Loneliness, years ago.");
                        data.AddText("~You found the Star Tower, so I think it won`t be hard for you to find a book, right?");
                        data.AddOption("Well,~do~you~have~any~clue?", 31);
                        data.AddOption("I~have~more~important~things.");
                        data.AddAvatar(175);
                        data.FinalizeDialog();
                        break;
                    }
                case 31:
                    {
                        data.AddText("Herbalist Chou is my grandma`s best friend, but he died, years ago. Could you go find his children with this Jadeite? I`m sure the family is still");
                        data.AddText("~living in the small village, in the southeast of Maple Forest.");
                        data.AddOption("Okay.~Bye!", 32);
                        data.AddOption("I~have~more~important~things.");
                        data.AddAvatar(175);
                        data.FinalizeDialog();
                        break;
                    }
                case 32:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                            client.Inventory.Add(stream, 710218, 1);
                            client.SendSysMesage("Sugar Tang gave you the Jadeite that Frost Tang left behind. You`ll need it, someday.");
                        }
                        else
                        {
                            data.AddText("Your inventory is full! Why not tidy it up, first?");
                            data.AddOption("I`ll~be~back~soon!");
                            data.AddAvatar(175);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 10:
                    {
                        data.AddText("The Star Tower is a defensive talisman once possessed by my grandma. It was incredibly powerful, but she lost it and no one knows its whereabouts.");
                        data.AddText("~My hero, will you help me find it?");
                        data.AddOption("Any~clue?", 15);
                        data.AddOption("You~mean~this~talisman?", 11);
                        data.AddOption("I`ll~think~about~it.");
                        data.AddAvatar(175);
                        data.FinalizeDialog();
                        break;
                    }
                case 15:
                    {
                        data.AddText("Hm... The Star Tower has been broken into three pieces. I heard it through the grapevine.");
                        data.AddText("~Yang Yun may know something about one of the pieces. He is on Bird Island, now.");
                        data.AddOption("Then~where~is~the~second~one?", 4);
                        data.AddAvatar(175);
                        data.FinalizeDialog();
                        break;
                    }

                case 11:
                    {
                        if (client.Inventory.Contain(721785, 1))
                        {
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                            {
                                client.Inventory.Remove(721785, 1, stream);
                                client.Inventory.Add(stream, 202008, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.SendSysMesage("You received an Elite Star Tower(B)!");
                                data.AddText("Yeah, that`s exactly what I`m looking for! My grandma`s Star Tower was known for its legendary defensive qualities. But it broke into");
                                data.AddText("~3 pieces when a man from the Yang family broke her heart. This started the long-standing family feud between our Tang and the Yang.");
                                data.AddOption("Love~is~never~easy.", 12);
                                data.AddAvatar(175);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("I don`t find any talisman in your inventory. If you really want to help me, visit Yang Yun (732,516) on Bird Island. He will definitely be able to help you.");
                            data.AddOption("Okay.~Bye!");
                            data.AddAvatar(175);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 12:
                    {

                        data.AddText("So the ghost of Yang Feng, the late head of the family, wants to destroy the talisman, rather than let someone else have it.");
                        data.AddText("~That`s why some weird things happened ever since...");
                        data.AddOption("Sounds~complicated.", 13);
                        data.AddAvatar(175);
                        data.FinalizeDialog();
                        break;
                    }
                case 13:
                    {
                        data.AddText("Well, who knows? This is a crazy world. Anyway, thank you. You may keep this Star Tower as a souvenir.");
                        data.AddText("~That`s the least I can do to thank you for your help.");
                        data.AddOption("Thanks!");
                        data.AddAvatar(175);
                        data.FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        data.AddText("The Star Tower is a defensive talisman once possessed by my grandma. It was incredibly powerful, but she lost it and no one knows its whereabouts.");
                        data.AddText("~My hero, will you help me find it?");
                        data.AddOption("Any~clue?", 3);
                        data.AddOption("You~mean~this~talisman?", 2);
                        data.AddOption("I`ll~think~about~it.");
                        data.AddAvatar(175);
                        data.FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        data.AddText("Stop kidding me! I don`t see any talismans with you. Sigh... When can I retrieve the Star Tower?");
                        data.AddOption("It~won`t~be~long.");
                        data.AddAvatar(175);
                        data.FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        data.AddText("Hm... The Star Tower has been broken into three pieces. I heard it through the grapevine.");
                        data.AddText("~Yang Yun may know something about one of the pieces. He is on Bird Island, now.");
                        data.AddOption("Then~where~is~the~second~one?", 4);
                        data.AddAvatar(175);
                        data.FinalizeDialog();
                        break;
                    }
                case 4:
                    {
                        data.AddText("The second piece is in a Hut in the north of Bird Island. It belongs to the three Ruan Brothers. If you can find Ruan Brother, you may know more.");
                        data.AddText("~When you get two pieces, go to Desert City. There is someone, Plum, who should know about the third piece.");
                        data.AddOption("I`ll~visit~Yang~Yuan,~first.", 7);
                        data.AddOption("Ruan~Brother?", 6);
                        data.AddOption("Plum?", 5);
                        data.AddAvatar(175);
                        data.FinalizeDialog();
                        break;
                    }
                case 5:
                    {
                        data.AddText("Plum knows where to find the third piece. You can probably find her around (472,578) in Desert City. Watch out for the bandits when you get there.");
                        data.AddOption("No~problem.");
                        data.AddOption("I~still~have~some~questions.", 4);
                        data.AddAvatar(175);
                        data.FinalizeDialog();
                        break;
                    }
                case 6:
                    {
                        data.AddText("Ruan Brother`s Hut is in the north of Bird Island guarded by some magical stone doors (208,216). Ye Sheng (192,212) may tell you how to break those doors.");
                        data.AddOption("Got~it.");
                        data.AddOption("I~still~have~some~questions.", 4);
                        data.AddAvatar(175);
                        data.FinalizeDialog();
                        break;
                    }
                case 7:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted)
                            || client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                        }
                        else
                        {
                            client.Player.QuestGUI.Accept(ActiveQuest, 0);
                            client.CreateBoxDialog("You~were~advised~to~find~Yang~Yun~on~Bird~Island.");
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.MrWonder)]
        public static void MrWonder(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaskmasterChang, client.Player.Class, 200);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1))
                            {
                                data.AddText("It`s~a~legendary~bird~of~enormous~size~and~strength.~Though~I`ve~figured~out~the~way~of~making~the~Tempest~Wings,");
                                data.AddText("~you~need~to~bring~me~Roc`s~Feather~from~the~Rainbow~Sky.~It~could~be~much~more~difficult~than~any~challenges");
                                data.AddText("~you`ve~ever~taken.~If~you`re~ready,~I`ll~send~you~there~with~a~fee~of~5~Meteor~Scrolls.");
                                if (client.Inventory.Contain(3006392, 1))
                                {
                                    data.AddOption("Hand~in~Roc`s~Feather.", 10);//97257880
                                    data.AddOption("I`ll~talk~to~you~later.");
                                    data.AddAvatar(6);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 0, 1))
                                    {
                                        data.AddOption("Send~me~to~the~Rainbow~Sky!", 4);
                                        data.AddOption("I`ll~talk~to~you~later.");
                                        data.AddAvatar(6);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        data.AddOption("Head~to~the~sky~(5~Meteor~Scrolls)", 2);
                                        data.AddOption("I`ll~talk~to~you~later.");
                                        data.AddAvatar(6);
                                        data.FinalizeDialog();
                                    }
                                }
                            }
                            else
                            {

                                data.AddText("So~many~people~ask~for~the~Tempest~Wings,~but~it`s~as~hard~as~climbing~up~to~the~sky.");
                                data.AddText("~Let~alone~the~loss~of~the~technique,~it~requires~Roc`s~Feather~to~make~the~Tempest~Wings.");
                                data.AddText("~You~know~Roc?");
                                data.AddOption("I`m~all~ears.", 1);
                                data.AddAvatar(6);
                                data.FinalizeDialog();

                            }
                        }
                        else
                        {
                            data.AddText("Roc~is~an~enormous~legendary~bird~transformed~from~a~gigantic~fish~of~terrific~strength.");
                            data.AddOption("Oh,~I~know~it!");
                            data.AddAvatar(6);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 10:
                    {
                        if (client.Inventory.Contain(3006392, 1) && client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Remove(3006392, 1, stream);
                            client.Inventory.Add(stream, 204008, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.SendSysMesage("You~received~Elite~Tempest~Wings~(B)!");
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "angelwing");
                        }
                        else
                        {
                            data.AddText("It`s~really~hard~to~get~Roc`s~Feather.~I~know~you`ve~tried~your~best.~It~doesn`t~matter.");
                            data.AddOption("Sorry,~leave~me~alone.");
                            data.AddAvatar(6);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 1);
                        data.AddText("It`s~a~legendary~bird~of~enormous~size~and~strength.~Though~I`ve~figured~out~the~way~of~making~the~Tempest~Wings,");
                        data.AddText("~you~need~to~bring~me~Roc`s~Feather~from~the~Rainbow~Sky.~It~could~be~much~more~difficult~than~any~challenges");
                        data.AddText("~you`ve~ever~taken.~If~you`re~ready,~I`ll~send~you~there~with~a~fee~of~5~Meteor~Scrolls.");
                        if (client.Inventory.Contain(3006392, 1))
                        {
                            data.AddOption("Hand~in~Roc`s~Feather.", 10);//97257880
                            data.AddOption("I`ll~talk~to~you~later.");
                            data.AddAvatar(6);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 0, 1))
                            {
                                data.AddOption("Send~me~to~the~Rainbow~Sky!", 4);
                                data.AddOption("I`ll~talk~to~you~later.");
                                data.AddAvatar(6);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddOption("Head~to~the~sky~(5~Meteor~Scrolls)", 2);
                                data.AddOption("I`ll~talk~to~you~later.");
                                data.AddAvatar(6);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 4:
                    {
                        if (client.Inventory.Contain(3006392, 1))
                        {
                            client.SendSysMesage("You`ve~obtained~Roc`s~Feather.~No~need~to~challenge~the~Rainbow~Sky,~again.");
                        }
                        else
                        {
                            client.Teleport(125, 99, 1109);
                            client.SendSysMesage("You`ve~arrived~in~the~Rainbow~Sky.~Hurry~and~defeat~the~Heaven~Roc~for~its~feather!");
                            Database.Server.AddMapMonster(stream, client.Map, 7696, client.Player.X, client.Player.Y, 3, 3, 1, client.Player.DynamicID, true, MsgFloorItem.MsgItemPacket.EffectMonsters.None, "SuperXp-4");
                        }

                        break;
                    }
                case 2:
                    {
                        data.AddText("Are~you~sure~you~want~to~pay~5~Meteor~Scrolls~to~enter~the~Rainbow~Sky?");
                        data.AddOption("Yes!", 3);
                        data.AddOption("No.");
                        data.AddAvatar(6);
                        data.FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        if (client.Inventory.Contain(3006392, 1))
                        {
                            client.SendSysMesage("You`ve~obtained~Roc`s~Feather.~No~need~to~challenge~the~Rainbow~Sky,~again.");
                        }
                        else
                        {
                            if (client.Inventory.Contain(720027, 5) || client.Inventory.Contain(720027, 5, 1))
                            {
                                if (client.Inventory.Remove(720027, 5, stream))
                                {//7696
                                    client.Teleport(125, 99, 1109);
                                    Database.Server.AddMapMonster(stream, client.Map, 7696, client.Player.X, client.Player.Y, 3, 3, 1, client.Player.DynamicID, true, MsgFloorItem.MsgItemPacket.EffectMonsters.None, "SuperXp-4");
                                    client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 0, 1);
                                    client.SendSysMesage("You`ve~arrived~in~the~Rainbow~Sky.~Hurry~and~defeat~the~Heaven~Roc~for~its~feather!");

                                }
                            }
                            else
                            {
                                data.AddText("Come~on,~you~don`t~have~5~Meteor~Scrolls.~It~couldn`t~be~too~much~for~you,~could~it?");
                                data.AddOption("No,~but...");
                                data.AddAvatar(6);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.NaughtyBoy)]
        public static void NaughtyBoy(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Naughty boys sometimes make good men.");
                        data.AddOption("You~naughty~boy!");
                        data.AddAvatar(68);
                        data.FinalizeDialog();
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Celestine)]
        public static void Celestine(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(700001, 1) && client.Inventory.Contain(700011, 1) && client.Inventory.Contain(700021, 1)
                            && client.Inventory.Contain(700031, 1) && client.Inventory.Contain(700041, 1) && client.Inventory.Contain(700051, 1)
                            && client.Inventory.Contain(700061, 1))
                        {
                            if (client.Inventory.Contain(721258, 1))
                            {
                                client.Inventory.Add(stream, 721259);
                                data.AddText("Aha! You must come for Celestial Stone! Check your inventory! It`s there! Now, take it to Eternity (298,217), if you wish to get 1st rebirth.");
                                data.AddOption("OK.~Thank~you.");
                                data.AddAvatar(15);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Although~you~get~seven~normal~gems,~I~cannot~refine~the~CelestialStone~for~you~without~the~CleanWater.~");
                                data.AddOption("I~will~get~it~ready.");
                                data.AddAvatar(15);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("People~are~pursuing~greater~achievement~during~their~lives,~but~none~can~make~it~due~to~the~limit~of~human~constitution.");
                            data.AddOption("What~does~it~mean?", 1);
                            data.AddOption("I~don`t~believe~it.");
                            data.AddAvatar(15);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        data.AddText("Mortals~are~mundane.~Only~getting~rid~of~it~can~help~them~accomplish~their~aims.");
                        data.AddText("If~you~are~high~level~enough,~you~can~get~reborn~to~learn~more~and~stronger~skills.");
                        data.AddOption("I~am~satisfied.");
                        data.AddOption("How~to~get~reborn?", 2);
                        data.AddAvatar(15);
                        data.FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        data.AddText("It~is~difficult.~First,~you~should~reach~certain~level.~Second,~you~need~a~Celestial~Stone.");
                        data.AddOption("How~to~get~CelestialStone?", 3);
                        data.AddOption("Forget~it.");
                        data.AddAvatar(15);
                        data.FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        data.AddText("CelestialStone~is~made~of~7~gems:~VioletGem,~KylinGem,~RainbowGem,~MoonGem,~PhoenixGem,~FuryGem,~DragonGem,~and~CleanWater.");
                        data.AddOption("What~is~Clean~Water?", 4);
                        data.AddOption("It~is~difficult.");
                        data.AddAvatar(15);
                        data.FinalizeDialog();
                        break;
                    }
                case 4:
                    {
                        data.AddText("It~is~used~to~get~rid~of~your~mundaneness,~and~then~you~won`t~be~affected~by~the~environment.");
                        data.AddText("By~the~way,~Clean~Water~comes~from~celestial~rinsing.");
                        data.AddOption("What~are~gems~used~for?", 5);
                        data.AddAvatar(15);
                        data.FinalizeDialog();
                        break;
                    }
                case 5:
                    {
                        data.AddText("Only~the~seven~gems~can~protect~you~during~the~rebirth.");
                        data.AddOption("I~will~collect~them~now.", 6);
                        data.AddOption("I~changed~my~mind.");
                        data.AddAvatar(15);
                        data.FinalizeDialog();
                        break;
                    }
                case 6:
                    {
                        data.AddText("It~is~easy~to~get~the~gems.~But~CleanWater¡­");
                        data.AddOption("But~what?", 7);
                        data.AddAvatar(15);
                        data.FinalizeDialog();
                        break;
                    }
                case 7:
                    {
                        data.AddText("The~Adventure~island~is~the~headstream~of~CleanWater.~But~it~is~occupied~by~WaterEvil~and~he~uses~spell~to~hide~the~stream.");
                        data.AddOption("What~can~I~do?", 8);
                        data.AddOption("I~will~give~up.");
                        data.AddAvatar(15);
                        data.FinalizeDialog();
                        break;
                    }
                case 8:
                    {
                        data.AddText("WaterEvilElder~will~go~to~get~the~water~every~certain~time.~If~you~defeat~him,~you~may~get~the~water.");
                        data.AddText("But~he~is~very~hard~to~deal~with.");
                        data.AddOption("I~see.~Thank~you.");
                        data.AddOption("Anything~else?", 9);
                        data.AddAvatar(15);
                        data.FinalizeDialog();
                        break;
                    }
                case 9:
                    {
                        if (client.Inventory.Contain(700001, 1) && client.Inventory.Contain(700011, 1) && client.Inventory.Contain(700021, 1)
                           && client.Inventory.Contain(700031, 1) && client.Inventory.Contain(700041, 1) && client.Inventory.Contain(700051, 1)
                           && client.Inventory.Contain(700061, 1))
                        {
                            if (client.Inventory.Contain(721258, 1))
                            {
                                client.Inventory.Add(stream, 721259);
                                data.AddText("Aha! You must come for Celestial Stone! Check your inventory! It`s there! Now, take it to Eternity (298,217), if you wish to get 1st rebirth.");
                                data.AddOption("OK.~Thank~you.");
                                data.AddAvatar(15);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Although~you~get~seven~normal~gems,~I~cannot~refine~the~CelestialStone~for~you~without~the~CleanWater.~");
                                data.AddOption("I~will~get~it~ready.");
                                data.AddAvatar(15);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("People~are~pursuing~greater~achievement~during~their~lives,~but~none~can~make~it~due~to~the~limit~of~human~constitution.");
                            data.AddOption("What~does~it~mean?", 1);
                            data.AddOption("I~don`t~believe~it.");
                            data.AddAvatar(15);
                            data.FinalizeDialog();
                        }
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.PowerBook)]
        public static void PowerBook(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(1851, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Oh...the last page is completely blank...What`s wrong? Quick,");
                            data.AddText("~go find Old Beggar to find out why!");
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.QuestGUI.CheckQuest(1850, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("Step 10: From Better to Best!");
                                data.AddText("~Get a Blue Bird Plume in Labyrinth 3F. Then go to Labyrinth 4F, and right click it near the body");
                                data.AddText("~within 3 seconds after you kill a Minotaur L120. You need ignite 10 bodies.");
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.QuestGUI.CheckQuest(1849, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                                {
                                    data.AddText("Step 9: From Good to Better.");
                                    data.AddText("~Kill 5 Blue Birds and 5 Fiend Bats in Labyrinth 3F.");
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.QuestGUI.CheckQuest(1848, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                                    {
                                        data.AddText("Step 8: You Are What You Eat!");
                                        data.AddText("~Kill some Fiend Bats in Labyrinth 3F and take the Fiend Bat Wing to the fire");
                                        data.AddText("~there (100,66) and roast it. Eat the roasted Fiend Bat Wing.");
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (client.Player.QuestGUI.CheckQuest(1847, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                                        {
                                            data.AddText("Step 7: Halve it!");
                                            data.AddText("~Now, you can enter the 3rd floor to kill 2 Blue Birds within 20 seconds.");
                                            data.FinalizeDialog();
                                        }
                                        else
                                        {
                                            if (client.Player.QuestGUI.CheckQuest(1846, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                                            {
                                                data.AddText("Step 6: Double practice!");
                                                data.AddText("~Now, go kill 10 Bladelings and 10 Agile Rats in Labyrinth 2F.");
                                                data.FinalizeDialog();
                                            }
                                            else
                                            {
                                                if (client.Player.QuestGUI.CheckQuest(1845, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                                                {
                                                    data.AddText("Step 5: Want a Bite?");
                                                    data.AddText("~They always say, teeth for teeth...");
                                                    data.AddText("~Go kill 1 Agile Rat in Labyrinth 2F and");
                                                    data.AddText("~collect 1 Agile Rat Fang. Bite it and see if you could leave");
                                                    data.AddText("~a teeth mark on it. But be careful. Don`t destroy it.");
                                                    data.FinalizeDialog();
                                                }
                                                else
                                                {
                                                    if (client.Player.QuestGUI.CheckQuest(1844, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                                                    {
                                                        data.AddText("Step 4: Speedy Speed!");
                                                        data.AddText("~Now, you can enter the 2nd floor to kill 2 Bladelings within 10 seconds.");
                                                        data.FinalizeDialog();
                                                    }
                                                    else
                                                    {
                                                        if (client.Player.QuestGUI.CheckQuest(1843, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                                                        {
                                                            data.AddText("Step 3: Practice Makes Perfect!");
                                                            data.AddText("~Well, the only way to test whether you`ve mastered the previous two is to");
                                                            data.AddText("~do it again. Now, go kill 15 Slingers and 15 Gold Ghosts. Do it quick!");
                                                            data.FinalizeDialog();
                                                        }
                                                        else
                                                        {
                                                            if (client.Player.QuestGUI.CheckQuest(1842, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                                                            {
                                                                data.AddText("Step 2: Ghost Goer!");
                                                                data.AddText("~How do you feel after the warm-up exercises?");
                                                                data.AddText("~Now kill 10 Gold Ghosts after herding them to");
                                                                data.AddText("~Trial Cave 1F (77,23), (102,136) or (146,104).");
                                                                data.FinalizeDialog();
                                                            }
                                                            else
                                                            {

                                                                data.AddText("Step1: Warm Up!");
                                                                data.AddText("~A good beginning. To warm yourself up, go kill 20 Slingers in Labyrinth 1F.");
                                                                data.AddText("~Don`t take them for granted.");
                                                                data.FinalizeDialog();
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.OldBeggar)]
        public static void OldBeggar(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaskmasterChang, client.Player.Class, 1840);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.OldBeggar, client.Player.Class, 1841);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.OldBeggar, client.Player.Class, 1851);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.OldBeggar, client.Player.Class, 1852);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("You must have heard of me. I am the master of all martial arts. All OF THEM!");
                            data.AddText("~My power excites fear from all who dare to challenge me.");
                            data.AddOption("Please~help~me~get~stronger.", 1);
                            data.AddOption("Who~are~you?");
                            data.AddAvatar(67);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                            && !client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {

                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("You must have heard of me. I am the master of all martial arts. All OF THEM!");
                                data.AddText("~My power excites fear from all who dare to challenge me.");
                                data.AddOption("Please~help~me~get~stronger.", 10);
                                data.AddOption("Who~are~you?");
                                data.AddAvatar(67);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You must have heard of me. I am the master of all martial arts. All OF THEM!");
                                data.AddText("~My power excites fear from all who dare to challenge me.");
                                data.AddOption("Please~help~me~get~stronger.", 9);
                                data.AddOption("Who~are~you?");
                                data.AddAvatar(67);
                                data.FinalizeDialog();
                            }
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                        && !client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("You must have heard of me. I am the master of all martial arts. All OF THEM!");
                                data.AddText("~My power excites fear from all who dare to challenge me.");
                                data.AddOption("Please~help~me~get~stronger.", 15);
                                data.AddOption("Who~are~you?");
                                data.AddAvatar(67);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You must have heard of me. I am the master of all martial arts. All OF THEM!");
                                data.AddText("~My power excites fear from all who dare to challenge me.");
                                data.AddOption("Please~help~me~get~stronger.", 10);
                                data.AddOption("Who~are~you?");
                                data.AddAvatar(67);
                                data.FinalizeDialog();
                            }
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                         && !client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("You must have heard of me. I am the master of all martial arts. All OF THEM!");
                                data.AddText("~My power excites fear from all who dare to challenge me.");
                                data.AddOption("Who~are~you?", 21);
                                data.AddAvatar(67);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You must have heard of me. I am the master of all martial arts. All OF THEM!");
                                data.AddText("~My power excites fear from all who dare to challenge me.");
                                data.AddOption("Please~help~me~get~stronger.", 20);
                                data.AddOption("Who~are~you?");
                                data.AddAvatar(67);
                                data.FinalizeDialog();

                            }
                        }
                        else
                        {
                            data.AddText("You must have heard of me. I am the master of all martial arts. All OF THEM!");
                            data.AddText("~My power excites fear from all who dare to challenge me.");
                            data.AddOption("Who~are~you?", 8);
                            data.AddAvatar(67);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 21:
                    {
                        data.AddText("What? You don`t know me? I`m Old Beggar, and I`m the greatest Martial Arts Master in the world!");
                        data.AddOption("Crazy.");
                        data.AddAvatar(67);
                        data.FinalizeDialog();
                        break;
                    }
                case 20:
                    {
                        data.AddText("Well, it`s just a little mistake, and I`ve admitted my fault. Now you can claim your rewards from Taskmaster Chang in Twin City.");
                        data.AddOption("Sounds~good.", 19);
                        data.AddOption("I`ll~think~about~it.");
                        data.AddAvatar(67);
                        data.FinalizeDialog();
                        break;
                    }
                case 15:
                    {
                        if (client.Inventory.Contain(721924, 1))
                        {
                            data.AddText("Mmmmmm...you have finished the first 10 steps in the book? I am impressed.");
                            data.AddText("~Trust me, you will gain some more power after the second round.");
                            data.AddText("~Just carry on and repeat all ten steps!");
                            data.AddOption("Nonsense!", 16);
                            data.AddAvatar(67);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("All right, all right. I`ll give you another one. Please, don`t lose it again.");
                            data.AddOption("I~won`t.", 12);
                            data.AddAvatar(67);
                            data.FinalizeDialog();
                        }

                        break;
                    }
                case 16:
                    {
                        data.AddText("Well. You are so smart. To tell you the truth, it`s fake. The whole book, is just a story.");
                        data.AddOption("You~make~me~sick!", 17);
                        data.AddAvatar(67);
                        data.FinalizeDialog();
                        break;
                    }
                case 17:
                    {
                        data.AddText("Please forgive me. I was just too hungry. Now you can claim your rewards from Taskmaster Chang.");
                        data.AddOption("I~forgive~you.", 18);
                        data.AddAvatar(67);
                        data.FinalizeDialog();
                        break;
                    }
                case 18:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                        {
                            client.Inventory.Remove(721924, 1, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "recovery");
                            client.Player.Money += 6000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.GainExpBall(300);
                            client.SendSysMesage("You received 1 hour EXp and 6,000 Silver!");
                            data.AddText("Well, it`s just a little mistake, and I`ve admitted my fault. Now you can claim your rewards from Taskmaster Chang in Twin City.");
                            data.AddOption("Sounds~good.", 19);
                            data.AddOption("I`ll~think~about~it.");
                            data.AddAvatar(67);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 19:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        client.CreateBoxDialog("You~can~claim~an~Armor~from~Taskmaster~Chang.");
                        break;
                    }

                case 10:
                    {
                        data.AddText("Hey, you have already got the Power Book! Why not go to the Trial Cave and start your practice with that book now?");
                        data.AddText("~I can teleport you to the Trial Cave, if you want. So?");
                        data.AddOption("I~lost~the~book.", 11);
                        data.AddOption("I~see.");
                        data.AddAvatar(67);
                        data.FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        if (client.Inventory.Contain(721924, 1))
                        {
                            data.AddText("What?! You LOST it? Why?!");
                            data.AddOption("Calm~down.");
                            data.AddAvatar(67);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("All right, all right. I`ll give you another one. Please, don`t lose it again.");
                            data.AddOption("I~won`t.", 12);
                            data.AddAvatar(67);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 12:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (!client.Inventory.Contain(721924, 1))
                                client.Inventory.Add(stream, 721924);
                            client.CreateBoxDialog("You~received~the~Power~Book~from~the~Old~Beggar!");
                        }
                        else
                        {
                            data.AddText("Your inventory is full. You`ll need to make some room, first.");
                            data.AddOption("OK.");
                            data.AddAvatar(67);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 9:
                    {
                        data.AddText("Yeah, that is the Power Book in your hands! Hurry to start your practice with that book in the Trial Cave.");
                        data.AddText("~If you want, I can teleport you to the Trial Cave. So?");
                        data.AddOption("I~see.", 7);
                        data.AddAvatar(67);
                        data.FinalizeDialog();
                        break;
                    }
                case 8:
                    {
                        data.AddText("What? You don`t know me? I`m Old Beggar, and I`m the greatest Martial Arts Master in the world!");
                        data.AddOption("Crazy.");
                        data.AddAvatar(67);
                        data.FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        data.AddText("Wait! You don`t need to know me...But I see a genius for Martial Arts in you! Come come! I have a good book for you.");
                        data.AddOption("Impress~me.", 2);
                        data.AddAvatar(67);
                        data.FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        data.AddText("I spent a life time learning this. According to my experience, it won`t take a genius like you long to master it.");
                        data.AddText("~I`m sure you will be a legend.");
                        data.AddOption("Give~it~to~me.", 5);
                        data.AddOption("What~is~it~about?", 3);
                        data.AddOption("You~are~crazy.");
                        data.AddAvatar(67);
                        data.FinalizeDialog();
                        break;
                    }
                case 5:
                    {
                        data.AddText("Well...All things have a price, right? Pay me one Meteor first.");
                        data.AddOption("OK.", 6);
                        data.AddOption("Nope.");
                        data.AddAvatar(67);
                        data.FinalizeDialog();
                        break;
                    }
                case 6:
                    {
                        client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 1);
                        if (client.Inventory.Contain(1088001, 1) || client.Inventory.Contain(1088001, 1, 1))
                        {
                            client.Inventory.Remove(1088001, 1, stream);
                            if (!client.Inventory.Contain(721924, 1))
                                client.Inventory.Add(stream, 721924);
                            client.SendSysMesage("You gave the Old Beggar a Meteor and received the Power Book!");

                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                            {
                                client.Player.Money += 100;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                client.SendSysMesage("You received 100 Silver!");
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "recovery");
                                data.AddText("Yeah, that is the Power Book in your hands! Hurry to start your practice with that book in the Trial Cave.");
                                data.AddText("~If you want, I can teleport you to the Trial Cave. So?");
                                data.AddOption("I~see.", 7);
                                data.AddAvatar(67);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("My hero, it`s the Power Book, understand? Millions of people will kill for it.");
                            data.AddOption("Wait~for~me~to~get~a~meteor.");
                            data.AddAvatar(67);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 7:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.CreateBoxDialog("You`ll~need~to~go~to~Labyrinth~and~practice~with~the~Power~Book.");
                        break;
                    }
                case 3:
                    {
                        data.AddText("Many people had tried to steal the book, but nobody ever discovered its secret");
                        data.AddOption("Why?", 4);
                        data.AddAvatar(67);
                        data.FinalizeDialog();
                        break;
                    }
                case 4:
                    {

                        data.AddText("Power Book! It is the essence of all the secrets behind Chinese Martial Arts.");
                        data.AddText("~Only I can understand it.");
                        data.AddOption("Whatever.");
                        data.AddAvatar(67);
                        data.FinalizeDialog();
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.MasterMoMo)]
        public static void MasterMoMo(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaskmasterChang, client.Player.Class, 1835);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.MasterMoMo, client.Player.Class, 1836);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.MasterMoMo, client.Player.Class, 1837);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.MasterMoMo, client.Player.Class, 1838);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)NpcID.MasterMoMo, client.Player.Class, 1839);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Sing to me of the man, Muse, the man of twists and turns driven time and again off course, once he had plundered");
                            data.AddText("~the hallowed heights here...");
                            data.AddOption("Can~I~help~you?", 1);
                            data.AddOption("Sorry,~but~I`m~busy.");
                            data.AddAvatar(64);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                            && client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("Sing to me of the man, Muse, the man of twists and turns driven time and again off course, once he had plundered");
                                data.AddText("~the hallowed heights here...");
                                data.AddOption("Can~I~help~you?", 10);
                                data.AddOption("I`ll~come~back~later.");
                                data.AddAvatar(64);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sing to me of the man, Muse, the man of twists and turns driven time and again off course, once he had plundered");
                                data.AddText("~the hallowed heights here...");
                                data.AddOption("Can~I~help~you?", 2);
                                data.AddOption("Sorry,~but~I`m~busy.");
                                data.AddAvatar(64);
                                data.FinalizeDialog();
                            }
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                       && client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("Sing to me of the man, Muse, the man of twists and turns driven time and again off course, once he had plundered");
                                data.AddText("~the hallowed heights here...");
                                data.AddOption("Can~I~help~you?", 21);
                                data.AddOption("Too~dangerous~for~me.");
                                data.AddAvatar(64);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sing to me of the man, Muse, the man of twists and turns driven time and again off course, once he had plundered");
                                data.AddText("~the hallowed heights here...");
                                data.AddOption("Can~I~help~you?", 20);
                                data.AddOption("I`ll~come~back~later."); data.AddAvatar(64);
                                data.FinalizeDialog();
                            }
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                 && client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("Sing to me of the man, Muse, the man of twists and turns driven time and again off course, once he had plundered");
                                data.AddText("~the hallowed heights here...");
                                data.AddOption("Can~I~help~you?", 30);
                                data.AddOption("I`ll~come~back~later.");
                                data.AddAvatar(64);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sing to me of the man, Muse, the man of twists and turns driven time and again off course, once he had plundered");
                                data.AddText("~the hallowed heights here...");
                                data.AddOption("Can~I~help~you?", 27);
                                data.AddOption("Too~dangerous~for~me.");
                                data.AddAvatar(64);
                                data.FinalizeDialog();
                            }
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
         && client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("What a wild desert!");
                                data.AddOption("See~you.");
                                data.AddAvatar(64);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sing to me of the man, Muse, the man of twists and turns driven time and again off course, once he had plundered");
                                data.AddText("~the hallowed heights here...");
                                data.AddOption("Can~I~help~you?", 35);
                                data.AddOption("I`ll~come~back~later.");
                                data.AddAvatar(64);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sing to me of the man, Muse, the man of twists and turns driven time and again off course, once he had plundered");
                            data.AddText("~the hallowed heights here...");
                            data.AddOption("Sounds~familiar.", 9);
                            data.AddAvatar(64);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 30:
                    {
                        data.AddText("I need the heart of the Bull Master. I need to smash it in public to let others know that");
                        data.AddText("~our Mu family will avenge whoever dares to shame us!");
                        data.AddOption("Hand~in~the~heart.", 31);
                        data.AddOption("OK.");
                        data.AddAvatar(64);
                        data.FinalizeDialog();
                        break;
                    }
                case 35:
                    {
                        data.AddText("Thanks a lot! You are my hero. Now you should go back to Taskmaster Chang.");
                        data.AddOption("OK.", 33);
                        data.AddAvatar(64);
                        data.FinalizeDialog();
                        break;
                    }
                case 31:
                    {
                        if (client.Inventory.Contain(710260, 1))
                        {
                            data.AddText("Great! Bull Master`s heart! Thanks a lot!");
                            data.AddOption("You`re~welcome.", 32);
                            data.AddAvatar(64);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Don`t bother to ask if you didn`t retrieve the Bull Heart.");
                            data.AddOption("Oh.");
                            data.AddAvatar(64);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 32:
                    {
                        if (client.Inventory.Contain(710260, 1))
                        {
                            client.Inventory.Remove(710260, 1, stream);

                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                            {
                                client.Player.Money += 6000;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                client.GainExpBall(300);
                                client.SendSysMesage("You received 1 hour EXP and 6,000 Silver!");
                                client.CreateBoxDialog("Thanks~a~lot.~~Now~you~should~go~back~to~Taskmaster~Chang.");
                                data.AddText("Thanks a lot! You are my hero. Now you should go back to Taskmaster Chang.");
                                data.AddOption("OK.", 33);
                                data.AddAvatar(64);
                                data.FinalizeDialog();
                            }

                        }
                        else
                        {
                            data.AddText("Don`t bother to ask if you didn`t retrieve the Bull Heart.");
                            data.AddOption("Oh.");
                            data.AddAvatar(64);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 33:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest5, 0);
                        break;
                    }
                case 21:
                    {
                        data.AddText("I am amazed by your courage, my hero. Now listen carefully. Mad Bulls are now at Heaven Well (102,292) in Mystic Castle.");
                        data.AddText("~Take this Ghost Mirror. Use it near the Heaven Well and herd Mad Bulls into it and kill them. The Ghost Mirror will");
                        data.AddText("~then absorb its ghost and turn it into a ghost crystal. You`ll just need to take back 3 Bull Ghosts.");
                        data.AddOption("I`ve~taken~them~here.", 24);
                        data.AddOption("Gimme~another~Ghost~Mirror.", 22);
                        data.AddOption("I`ll~be~right~on~it.");
                        data.AddAvatar(64);
                        data.FinalizeDialog();
                        break;
                    }
                case 24:
                    {
                        if (client.Inventory.Contain(710261, 3))
                        {
                            if (client.Inventory.Remove(710261, 3, stream))
                            {
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                                {
                                    client.Inventory.Remove(721921, 1, stream);
                                    client.Player.Money += 100;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                    client.SendSysMesage("You completed the quest and received 100 Silver!");
                                    data.AddText("You`ve got 3 ghosts! Now I will tell you a secret.");
                                    data.AddOption("OK.", 25);
                                    data.AddAvatar(64);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        else
                        {
                            data.AddText("You`ll need to collect 3 ghosts for me, and then I will tell you a secret.");
                            data.AddOption("OK.");
                            data.AddAvatar(64);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 27:
                    {
                        data.AddText("You`ve got 3 ghosts! Now I will tell you a secret.");
                        data.AddOption("OK.", 25);
                        data.AddAvatar(64);
                        data.FinalizeDialog();
                        break;
                    }
                case 25:
                    {
                        data.AddText("It`s about my family. They all call me Master Mo Mo because I have mastered all the Kung Fu skills accumulated by Mo`s family.");
                        data.AddText("~But we were scattered by some weird spell of Bull Master at (186,359) in Mystic Castle. Will you avenge them");
                        data.AddText("~for me? Kill the Bull Master and retrieve the Bull Heart. It`s really a big favor, and I will reward you handsomely after that.");
                        data.AddOption("I`m~in.", 26);
                        data.AddAvatar(64);
                        data.FinalizeDialog();
                        break;
                    }
                case 26:
                    {
                        client.CreateBoxDialog("Go~to~kill~the~Bull~Master~in~Mystic~Castle~(186,359)~and~retrieve~the~Bull~Heart.");
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        break;
                    }
                case 22:
                    {
                        if (client.Inventory.Contain(721921, 1))
                        {
                            data.AddText("Sorry, but you`ve already had the mirror in your inventory.");
                            data.AddOption("I~forgot.");
                            data.AddAvatar(64);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("I have a spare one...But only this time? Don`t lost it again, please.");
                            data.AddOption("I~won`t.", 23);
                            data.AddAvatar(64);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 23:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.Inventory.Add(stream, 721921, 1);
                            client.CreateBoxDialog("You~received~the~Ghost~Mirror~from~Master~Mo~Mo.~Don`t~let~him~down.");
                        }
                        else
                        {
                            data.AddText("Your inventory is full. You`ll need to make some room, first.");
                            data.AddOption("OK.");
                            data.AddAvatar(64);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 20:
                    {
                        data.AddText("Great! You`ve got 10 horns. But I still have a quest for you...");
                        data.AddOption("What~is~it?", 15);
                        data.AddAvatar(64);
                        data.FinalizeDialog();
                        break;
                    }
                case 9:
                    {
                        data.AddText("Great responsibility comes from great power.");
                        data.AddOption("Indeed.");
                        data.AddAvatar(64);
                        data.FinalizeDialog();
                        break;
                    }
                case 10:
                    {
                        data.AddText("What took you so long? And you didn`t even bring back 10 Burnt Bull Horns? Please, go and get them there...I will pay!");
                        data.AddOption("I`ve~got~them~here.", 13);
                        data.AddOption("I~lost~the~Fervent~Pill.", 11);
                        data.AddOption("I~forgot.");
                        data.AddAvatar(64);
                        data.FinalizeDialog();
                        break;
                    }
                case 13:
                    {
                        if (client.Inventory.Contain(710259, 10))
                        {
                            if (client.Inventory.Remove(710259, 10, stream))
                            {
                                client.Inventory.Remove(721920, 1, stream);
                                client.SendSysMesage("You completed the quest and received 100 Silver!");
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                                {
                                    client.Player.Money += 100;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                    data.AddText("Great! You`ve got 10 horns. But I still have a quest for you...");
                                    data.AddOption("What~is~it?", 15);
                                    data.AddAvatar(64);
                                    data.FinalizeDialog();
                                }

                            }

                        }
                        else
                        {
                            data.AddText("I was not kidding with you! I need 10 of them! Ten! T-E-N!");
                            data.AddOption("Easy~man!~Don`t~yell.");
                            data.AddAvatar(64);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 15:
                    {
                        data.AddText("I`ve found out that it is much easier to capture the bull`s ghost than its body. Here is a Ghost Mirror. You`ll need to absorb 3 ghosts of the Mad Bull in the Mystic Castle.");
                        data.AddOption("I`ll~make~it.", 16);
                        data.AddAvatar(64);
                        data.FinalizeDialog();
                        break;
                    }
                case 16:
                    {
                        data.AddText("I am amazed by your courage, my hero. Now listen carefully. Mad Bulls are now at Heaven Well (102,292) in Mystic Castle.");
                        data.AddText("~Take this Ghost Mirror. Use it near the Heaven Well and herd Mad Bulls into it and kill them. The Ghost Mirror will");
                        data.AddText("~then absorb its ghost and turn it into a ghost crystal. You`ll just need to take back 3 Bull Ghosts.");
                        data.AddOption("I`ll~be~right~on~it.", 17);
                        data.AddAvatar(64);
                        data.FinalizeDialog();
                        break;
                    }
                case 17:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.Inventory.Add(stream, 721921);
                            client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                            client.CreateBoxDialog("You~received~the~Ghost~Mirror~from~Master~Mo~Mo!");
                        }
                        else
                        {
                            data.AddText("Your inventory is full. You`ll need to make some room, first.");
                            data.AddOption("OK.");
                            data.AddAvatar(64);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 11:
                    {
                        if (client.Inventory.Contain(721920, 1))
                        {
                            data.AddText("Sorry, but you`ve had the Fervent Pill in your inventory.");
                            data.AddOption("Sorry.");
                            data.AddAvatar(64);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("What? You lost my Fervent Pill? What a waste...Never mind, I have a spare one. But don`t lose it again, will you?");
                            data.AddOption("I~won`t.", 12);
                            data.AddAvatar(64);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 12:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.Inventory.Add(stream, 721920, 1);
                            client.CreateBoxDialog("You~received~a~Fervent~Pill~from~Master~Mo~Mo!");
                        }
                        else
                        {
                            data.AddText("Your inventory is full. You`ll need to make some room, first.");
                            data.AddOption("OK.");
                            data.AddAvatar(64);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You received 100 Silver and a Fervent Pill! Go and collect Burnt Bull Horns in Mystic Castle.");
                            data.AddText("I`m master Mo Mo. I like making inventions.");
                            data.AddOption("Can~I~help~you?", 2);
                            data.AddOption("An~inventor.");
                            data.AddAvatar(64);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        data.AddText("My Fervent Pill is quite dangerous and powerful. If you want, I can give it to you.");
                        data.AddOption("Claim~a~Fervent~Pill.", 3);
                        data.AddOption("What~is~Fervent~Pill?", 4);
                        data.AddOption("Too~dangerous~for~me.");
                        data.AddAvatar(64);
                        data.FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Inventory.Contain(721920, 1) == false)
                            {
                                client.Inventory.Add(stream, 721920, 1);
                                client.SendSysMesage("You received a Fervent Pill! Go and collect Burnt Bull Horns in Mystic Castle.");
                                client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                            }
                            else
                            {
                                data.AddText("Sing to me of the man, Muse, the man of twists and turns driven time and again off course, once he had plundered");
                                data.AddText("~the hallowed heights here...");
                                data.AddOption("Sounds~familiar.", 6);
                                data.AddAvatar(64);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Your inventory is full. You`ll need to make some room, first.");
                            data.AddOption("OK.");
                            data.AddAvatar(64);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 4:
                    {
                        data.AddText("People always say, those Bull Monsters have the hardest Horns in the world which can`t be hurt by any human device.");
                        data.AddText("~I want to test the power of the Fervent Pill with them...If you could bring back 10 Burnt Bull Horns, I`ll do it.");
                        data.AddOption("How~to~get~them?", 5);
                        data.AddAvatar(64);
                        data.FinalizeDialog();
                        break;
                    }
                case 5:
                    {
                        data.AddText("Of course with my Fervent Pill! Its effect will last for 1 minute. You will be engulfed in flame. They will");
                        data.AddText("~enhance your power without scorching you. By the way, you can use it repeatedly. Now, go and get me 10 Burnt Bull Horns.");
                        data.AddOption("Deal.", 6);
                        data.AddAvatar(64);
                        data.FinalizeDialog();
                        break;
                    }
                case 6:
                    {
                        data.AddText("Great responsibility comes from great power.");
                        data.AddOption("Indeed.");
                        data.AddAvatar(64);
                        data.FinalizeDialog();
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.RingPack)]
        public static void RingPack(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("You can choose a ring or a bracelet.");
                        data.AddOption("Super~Diamond~Bracelet.", 1);
                        data.AddOption("Super~Dragon~Ring.", 2);
                        data.AddOption("I`ll~think~about~it.");
                        data.FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Inventory.Remove(728250, 1, stream))
                            {
                                client.Inventory.Add(stream, 722136, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Inventory.Add(stream, 152229, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.CreateBoxDialog("You~opened~the~pack~and~received~a~Super~Diamond~Bracelet!");
                            }
                        }
                        else
                        {
                            client.CreateBoxDialog("Please~prepare~one~slot~in~your~inventory.");
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Inventory.Remove(728250, 1, stream))
                            {
                                client.Inventory.Add(stream, 722136, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Inventory.Add(stream, 150219, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.CreateBoxDialog("You~opened~the~pack~and~received~a~Super~Dragon~Ring!");
                            }
                        }
                        else
                        {
                            client.CreateBoxDialog("Please~prepare~one~slot~in~your~inventory.");
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Shark)]
        public static void Shark(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.Louis, client.Player.Class, 1830);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Shark, client.Player.Class, 1831);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Shark, client.Player.Class, 1832);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("There are a lot of priceless treasures here. Collect them and sell at a good price...That`s the only way to make a fortune!");
                            data.AddOption("I~love~treasures.", 1);
                            data.AddOption("I`ll~think~about~it.");
                            data.AddAvatar(53);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                          && !client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("There are a lot of priceless treasures here. Collect them and sell at a good price...That`s the only way to make a fortune!");
                                data.AddOption("I~love~treasures.", 12);
                                data.AddOption("I`ll~think~about~it.");
                                data.AddAvatar(53);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("There are a lot of priceless treasures here. Collect them and sell at a good price...That`s the only way to make a fortune!");
                                data.AddOption("I~love~treasures.", 10);
                                data.AddOption("I`ll~think~about~it.");
                                data.AddAvatar(53);
                                data.FinalizeDialog();
                            }
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                    && !client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("There are a lot of priceless treasures here. Collect them and sell at a good price...That`s the only way to make a fortune!");
                            data.AddOption("I~love~treasures.", 20);
                            data.AddOption("I`ll~think~about~it.");
                            data.AddAvatar(53);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("There are a lot of priceless treasures here. Collect them and sell at a good price...That`s the only way to make a fortune!");
                            data.AddOption("Money~isn`t~everything.");
                            data.AddAvatar(53);
                            data.FinalizeDialog();
                        }


                        break;
                    }
                case 20:
                    {
                        if (client.Inventory.Contain(721871, 1))
                        {
                            data.AddText("Calm down and listen to me. It is not fake. The portrait was specially made and can only be shown with the Bat");
                            data.AddText("~Essence. Use it and give it to Louis before the Essence runs out, got it?");
                            data.AddOption("Gotcha.");
                            data.AddAvatar(53);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("A little bird picked it up and returned it to me...Here you are. Don`t lose the portrait again.");
                            data.AddOption("Thanks.", 14);
                            data.AddAvatar(53);
                            data.FinalizeDialog();
                        }

                        break;
                    }

                case 12:
                    {
                        data.AddText("What`s the matter? I`ve already given you the portrait.");
                        data.AddOption("It`s~a~fake~one.", 13);
                        data.AddOption("Nothing~wrong.");
                        data.AddAvatar(53);
                        data.FinalizeDialog();
                        break;
                    }
                case 13:
                    {
                        if (client.Inventory.Contain(721878, 1))
                        {
                            data.AddText("Calm down and listen to me. It is not fake. The portrait was specially made and can only be shown with the Bat");
                            data.AddText("~Essence. Use it and give it to Louis before the Essence runs out, got it?");
                            data.AddOption("Gotcha.", 6);
                            data.AddAvatar(53);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("A little bird picked it up and returned it to me...Here you are. Don`t lose the portrait again.");
                            data.AddOption("Thanks.", 14);
                            data.AddAvatar(53);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 14:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.Inventory.Add(stream, 721878, 1);
                            client.CreateBoxDialog("You~received~the~Victory~Portrait~from~Shark!");
                        }
                        else
                        {
                            data.AddText("Your inventory is full. You`ll need to make some room, first.");
                            data.AddOption("OK.");
                            data.AddAvatar(53);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 10:
                    {
                        data.AddText("What`s the matter? I`ve already given you the portrait.");
                        data.AddOption("It`s~a~fake~one.", 11);
                        data.AddOption("Nothing~wrong.");
                        data.AddAvatar(53);
                        data.FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        data.AddText("Calm down and listen to me. It is not fake. The portrait was specially made and can only be shown with the Bat");
                        data.AddText("~Essence. Use it and give it to Louis before the Essence runs out, got it?");
                        data.AddOption("Gotcha.", 6);
                        data.AddAvatar(53);
                        data.FinalizeDialog();
                        break;
                    }
                case 5:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        data.AddText("Calm down and listen to me. It is not fake. The portrait was specially made and can only be shown with the Bat");
                        data.AddText("~Essence. Use it and give it to Louis before the Essence runs out, got it?");
                        data.AddOption("Gotcha.", 6);
                        data.AddAvatar(53);
                        data.FinalizeDialog();
                        break;
                    }
                case 6:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You received 100 Silver!");
                            client.Inventory.Remove(721878, 1, stream);
                            client.Inventory.Add(stream, 721871);
                            client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        }
                        break;
                    }
                case 4:
                    {
                        data.AddText("What`s the matter? I`ve already given you the portrait.");
                        data.AddOption("It`s~a~fake~one.", 5);
                        data.AddOption("Nothing~wrong.");
                        data.AddAvatar(53);
                        data.FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            data.AddText("You`ll just need to give a price within 1-99999 Silver and you can have it. If your price is too high or low, you will lose your silver offered and won`t receive the portrait.");
                            data.AddAvatar(53);
                            data.FinalizeDialog();
                            client.Player.AddPick(stream, "Bidding...", 3);

                        }
                        else
                        {
                            client.CreateBoxDialog("Please make 1 more space in your inventory.");
                        }
                        break;
                    }
                case 1:
                    {
                        data.AddText("Shhh...Come and take a look at this...I just obtained it from the black market...This portrait is valuable...");
                        data.AddOption("Is~it~a~Victory~Portrait?", 2);
                        data.AddAvatar(53);
                        data.FinalizeDialog();

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Louis)]
        public static void Louis(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaskmasterChang, client.Player.Class, 1828);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Louis, client.Player.Class, 1829);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Louis, client.Player.Class, 1830);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Shark, client.Player.Class, 1832);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Louis, client.Player.Class, 1833);
            var ActiveQuest6 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Louis, client.Player.Class, 1834);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Mystic Castle! What a fascinating scenery! Millions of people travelled here to seek exotic treasures.");
                            data.AddOption("Wow,~I~love~treasures!", 2);
                            data.AddOption("I~see.");
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                            break;
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Mystic Castle! What a fascinating scenery! Millions of people travelled here to seek exotic treasures.");
                            data.AddOption("I~love~all~treasures!", 30);
                            data.AddOption("I~see.");
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                            && !client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {

                            data.AddText("Mystic Castle! What a fascinating scenery! Millions of people travelled here to seek exotic treasures.");
                            data.AddOption("That`s~why~I`m~here!", 8);
                            data.AddOption("I`ll~think~about~it.");
                            data.AddAvatar(52);
                            data.FinalizeDialog();

                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                      && !client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("Mystic Castle! What a fascinating scenery! Millions of people travelled here to seek exotic treasures.");
                                data.AddOption("I~love~treasures~more.", 15);
                                data.AddOption("I~see.");
                                data.AddAvatar(52);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Mystic Castle! What a fascinating scenery! Millions of people travelled here to seek exotic treasures.");
                                data.AddOption("Tell~me~about~the~second~one.", 14);
                                data.AddOption("I~see.");
                                data.AddAvatar(52);
                                data.FinalizeDialog();
                            }
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
            && !client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {

                            data.AddText("Mystic Castle! What a fascinating scenery! Millions of people travelled here to seek exotic treasures.");
                            data.AddOption("Tell~me~about~the~last~one!", 36);
                            data.AddOption("I~see.");
                            data.AddAvatar(52);
                            data.FinalizeDialog();

                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
      && !client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                if (client.Player.QuestGUI.CheckObjectives(ActiveQuest6.MissionId, 1))
                                {
                                    data.AddText("Congratulations, you have answered all of my questions.");
                                    data.AddOption("Hurray!");
                                    data.AddAvatar(52);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    data.AddText("Thank you for all this. If you still have time, I have some riddles for you. Are you interested?");
                                    data.AddOption("Tell~me~more.", 40);
                                    data.AddOption("Sorry,~but~I`m~busy.");
                                    data.AddAvatar(52);
                                    data.FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Thanks! You`ve brought me all the three treasures. Now you can find Taskmaster Chang to claim your rewards.");
                                data.AddOption("I~see.", 60);
                                data.AddOption("I`ll~think~about~it.");
                                data.AddAvatar(52);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Mystic Castle! What a fascinating scenery! Millions of people travelled here to seek exotic treasures.");
                            data.AddOption("I~see.", 1);
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                        }

                        break;
                    }
                case 60:
                    {
                        client.CreateBoxDialog("Find~Taskmaster~Chang~to~claim~the~rewards.");
                        client.Player.QuestGUI.Accept(ActiveQuest6, 0);
                        data.AddText("Incredible! You are just so brave and kind. Now you can find Taskmaster Chang to claim your rewards.");
                        data.AddOption("OK.", 40);
                        data.AddAvatar(52);
                        data.FinalizeDialog();
                        break;
                    }
                case 50:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest6.MissionId, 1))
                        {
                            data.AddText("Congratulations, you have answered all of my questions.");
                            data.AddOption("Hurray!");
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Mystic Castle! What a fascinating scenery! Millions of people travelled here to seek exotic treasures.");
                            data.AddOption("I~see.", 41);
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 43:
                    {
                        data.AddText("Hey, you can do better than that, right?");
                        data.AddOption("Try~again.", 41);
                        data.AddAvatar(52);
                        data.FinalizeDialog();
                        break;
                    }
                case 42:
                    {
                        client.Player.LuiseQuestions += 1;
                        data.AddText("Very good, very good. Want more?");
                        data.AddOption("Yes.", 41);
                        data.AddAvatar(52);
                        data.FinalizeDialog();
                        break;
                    }
                case 44:
                    {
                        client.Player.LuiseQuestions += 1;
                        data.AddText("Brilliant.");
                        data.AddOption("Yes.", 41);
                        data.AddAvatar(52);
                        data.FinalizeDialog();
                        break;
                    }
                case 45:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest6.MissionId, 1) == false)
                        {
                            client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest6.MissionId, 1);
                            client.Player.LuiseQuestions += 1;
                            client.GainExpBall(300);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "recovery");
                            client.SendSysMesage("You received 30 minutes EXP!");
                            data.AddText("Very good. Your intelligence matches your valor!");
                            data.AddOption("Cannot~agree~more.", 50);
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 41:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest6.MissionId, 1))
                        {
                            data.AddText("Congratulations, you have answered all of my questions.");
                            data.AddOption("Hurray!");
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                            break;
                        }
                        if (client.Player.LuiseQuestions == 0)
                        {
                            data.AddText("What comes down but never goes up?");
                            data.AddOption("Rain.", 42);
                            data.AddOption("Sun.", 43);
                            data.AddOption("Moon.", 43);
                            data.AddOption("Earth.", 43);
                            data.AddOption("Quit.");
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.LuiseQuestions == 1)
                        {
                            data.AddText("What is black when it is clean and white when it is dirty?");
                            data.AddOption("Desk.", 43);
                            data.AddOption("Blackboard.", 44);
                            data.AddOption("Chair.", 43);
                            data.AddOption("Chalk.", 43);
                            data.AddOption("Quit.");
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.LuiseQuestions == 2)
                        {
                            data.AddText("What has ears, but can`t hear?");
                            data.AddOption("Barley.", 43);
                            data.AddOption("Rice.", 43);
                            data.AddOption("Corn.", 45);
                            data.AddOption("Oat.", 43);
                            data.AddOption("Quit.");
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.LuiseQuestions >= 3)
                        {
                            data.AddText("Congratulations, you have answered all of my questions.");
                            data.AddOption("Hurray!");
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 40://
                    {
                        data.AddText("Ok, now listen carefully.");
                        data.AddOption("Can`t~wait.", 41);
                        data.AddOption("Sorry,~but~I`m~busy.");
                        data.AddAvatar(52);
                        data.FinalizeDialog();
                        break;
                    }
                case 37:
                    {
                        if (client.Inventory.Contain(721872, 1))
                        {
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest5.MissionId))
                            {
                                client.Inventory.Remove(721872, 1, stream);
                                client.GainExpBall(300);
                                client.Player.Money += 6000;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "recovery");
                                client.SendSysMesage("You received 1 hour EXP and 6,000 Silver! Find Taskmaster Chang to claim your rewards.");
                                client.CreateBoxDialog("You~gave~the~Buddha~Relic~to~Louis.");
                                client.Player.QuestGUI.Accept(ActiveQuest6, 0);
                                data.AddText("Incredible! You are just so brave and kind. Now you can find Taskmaster Chang to claim your rewards.");
                                data.AddOption("OK.", 40);
                                data.AddAvatar(52);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("My hero, don`t forget to take this Pure Bottle with you. Kill the Jinx Tomb Bat (728,676) first, then use the Bottle before");
                            data.AddText("~its body disappears to get the Buddha Relic out of his body. Here you are, take this Pure Bottle.");
                            data.AddOption("Claim~the~Pure~Bottle.", 38);
                            data.AddOption("I`ll~think~about~it.");
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 38:
                    {
                        if (client.Inventory.Contain(721874, 1))
                        {
                            data.AddText("Take good care of this Pure Bottle. It will come in handy when you get there.");
                            data.AddOption("I~see.");
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Never mind. I have a backup one. But don`t lose it again, will you?");
                            data.AddOption("Sorry.", 39);
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 39:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.Inventory.Add(stream, 721874);
                            client.CreateBoxDialog("You~received~a~Pure~Bottle~from~Louis!");
                        }
                        else
                        {
                            data.AddText("Your inventory is full. You`ll need to make some room, first.");
                            data.AddOption("OK.");
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 36:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Did you get the Buddha Relic?");
                            data.AddOption("Yes.", 37);
                            data.AddOption("I`m~on~my~way.");
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("The last one is the Buddha Relic. It was stolen by a Jinx Tomb Bat. But this time I won`t sell it.");
                            data.AddText("~I will return it to those faithful monks. Join me, you won`t regret it!");
                            data.AddOption("Good.~I`m~in.", 32);
                            data.AddOption("Not~this~time.");
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 34:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.Inventory.Add(stream, 721874);
                            client.Player.QuestGUI.Accept(ActiveQuest5, 0);
                            client.CreateBoxDialog("You~received~a~Pure~Bottle~from~Louis!");

                        }
                        else
                        {
                            data.AddText("Your inventory is full. You`ll need to make some room, first.");
                            data.AddOption("OK.");
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 33:
                    {
                        data.AddText("But that is not all. Take this Pure Bottle with you. Kill the Jinx Tomb Bat (728,676) first, then use the Bottle before");
                        data.AddText("~its body disappears to get the Buddha Relic out of its body. Hear you are, take this Pure Bottle.");
                        data.AddOption("Claim~the~Pure~Bottle.", 34);
                        data.AddOption("I`ll~think~about~it.");
                        data.AddAvatar(52);
                        data.FinalizeDialog();
                        break;
                    }
                case 32:
                    {
                        data.AddText("Good! I knew you would do this! Jinx Tomb Bat is now in Mystic Castle (728,676). The Buddha Relic is right inside its belly.");
                        data.AddOption("I~see.", 33);
                        data.AddAvatar(52);
                        data.FinalizeDialog();
                        break;
                    }
                case 31:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId) && client.Player.QuestGUI.CheckObjectives(ActiveQuest4.MissionId, 5, 1))
                        {
                            client.Inventory.Remove(721871, 1, stream);
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "recovery");
                            client.SendSysMesage("You received 100 Silver!");
                            client.CreateBoxDialog("You~gave~the~Victory~Portrait~to~Louis.");
                            data.AddText("The last one is the Buddha Relic. It was stolen by a Jinx Tomb Bat. But this time I won`t sell it.");
                            data.AddText("~I will return it to those faithful monks. Join me, you won`t regret it!");
                            data.AddOption("Good.~I`m~in.", 32);
                            data.AddOption("Not~this~time.");
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 30:
                    {
                        if (client.Inventory.Contain(721871, 1))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest4.MissionId, 5, 1))
                            {
                                if (DateTime.Now > client.Player.RealPortraitStamp.AddSeconds(60))
                                {
                                    client.Player.QuestGUI.SetQuestObjectives(stream, ActiveQuest4.MissionId, 0, 0);
                                    data.AddText("Hey man! Nothing here? What are you up to?");
                                    data.AddOption("Easy~there!");
                                    data.AddAvatar(52);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    data.AddText("Wonderful! This is the Victory Portrait. Maybe I can draw one like this and sell at a high price too.");
                                    data.AddOption("Are~you~kidding?", 31);
                                    data.AddAvatar(52);
                                    data.FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Hey man! Nothing here? What are you up to?");
                                data.AddOption("Easy~there!");
                                data.AddAvatar(52);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            if (client.Inventory.Contain(721878, 1))
                            {
                                data.AddText("Hey man! Nothing here? What are you up to?");
                                data.AddOption("Easy~there!");
                                data.AddAvatar(52);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Go find Shark in Mystic Castle (310,631) and see what he knows about the Victory Portrait.");
                                data.AddOption("Got~it.");
                                data.AddAvatar(52);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 15:
                    {
                        data.AddText("Go find Shark in Mystic Castle (310,631) and see what he knows about the Victory Portrait.");
                        data.AddOption("Got~it.");
                        data.AddAvatar(52);
                        data.FinalizeDialog();
                        break;
                    }
                case 14:
                    {
                        data.AddText("Well, the second treasure is Victory Portrait. It is worth more than the Zen Scripture. Wanna join me?");
                        data.AddOption("Let`s~go.", 13);
                        data.AddOption("Sorry,~but~I`m~busy.");
                        data.AddAvatar(52);
                        data.FinalizeDialog();
                        break;
                    }
                case 8:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("The Zen Scripture is kept in the Scripture Vault in Mystic Castle (91,283). You`ll need to use the Reveal Vial to reveal the compartment.");
                            data.AddText("~Then use the key you will get from the Bats to open it.");
                            data.AddOption("I~see.");
                            data.AddOption("I~lost~the~Reveal~Vial.", 9);
                            data.AddOption("Hand~in~the~scripture.", 11);//1273620
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Here it is! Mystic Castle! They said you could find all the treasures here! This time I came for three of them in particular.");
                            data.AddText("~My hero, will you help me? I will reward you handsomely if you find them all!");
                            data.AddOption("Sounds~interesting.", 4);
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 11:
                    {
                        if (client.Inventory.Contain(721870, 1))
                        {
                            data.AddText("Thank you, my hero! Now I just need to wait for those greedy buyers to come and set a price for this.");
                            data.AddOption("There~you~are.", 12);
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Are you kidding me? You don`t have the scripture. Keep working!");
                            data.AddOption("Just~a~joke.");
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 13:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        data.AddText("The desert around sucks, but how can I leave without the Victory Portrait! My hero, go find Shark there (310,631).");
                        data.AddText("~He should be able to help.");
                        data.AddOption("Got~it.");
                        data.AddAvatar(52);
                        data.FinalizeDialog();
                        break;
                    }
                case 12:
                    {
                        if (client.Inventory.Contain(721870, 1))
                        {
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                            {
                                client.Inventory.Remove(721870, 1, stream);
                                client.Inventory.Remove(721873, 1, stream);
                                client.Inventory.Remove(721876, 1, stream);

                                client.Player.Money += 100;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "recovery");
                                client.SendSysMesage("You received 100 Silver!");

                                client.CreateBoxDialog("You~gave~the~Zen~Scripture~to~Louis.");
                                data.AddText("Well, the second treasure is Victory Portrait. It is worth more than the Zen Scripture. Wanna join me?");
                                data.AddOption("Let`s~go.", 13);
                                data.AddOption("Sorry,~but~I`m~busy.");
                                data.AddAvatar(52);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Are you kidding me? You don`t have the scripture. Keep working!");
                            data.AddOption("Just~a~joke.");
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 9:
                    {
                        if (client.Inventory.Contain(721873, 1))
                        {
                            data.AddText("Sorry, but you`ve had the Reveal Vial in your inventory.");
                            data.AddOption("I~forgot.");
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Neat! Zen Scripture, kept in a Scripture Box, is in a compartment in Scripture Vault in Mystic Castle (91,283). Take this");
                            data.AddText("~Reveal Vial and use it there to reveal the compartment. Then use the key you will get from the Bats to open it. Clear?");
                            data.AddOption("Claim~the~Reveal~Vial.", 10);
                            data.AddOption("I`ll~think~about~it.");
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 10:
                    {
                        client.Inventory.Add(stream, 721873, 1);
                        client.SendSysMesage("You received a Reveal Vial from Louis!");
                        client.CreateBoxDialog("Now~go~to~Scripture~Vault~in~Mystic~Castle~(91,283).");
                        break;
                    }
                case 2:
                    {
                        data.AddText("It`s hard to make money nowadays. I have been noticing this area for a long time, and I`m sure that there are plenty of treasures here.");
                        data.AddOption("Wow.", 3);
                        data.AddAvatar(52);
                        data.FinalizeDialog();
                        break;
                    }
                case 7:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.Inventory.Add(stream, 721873, 1);
                            client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                            client.SendSysMesage("You received a Reveal Vial from Louis!");
                            client.CreateBoxDialog("Now~go~to~Scripture~Vault~in~Mystic~Castle~(91,283).");
                        }
                        else
                        {
                            data.AddText("Your inventory is full. You`ll need to make some room, first.");
                            data.AddOption("OK.");
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 6:
                    {
                        data.AddText("Neat! Zen Scripture, kept in a Scripture Box, is in a compartment in Scripture Vault in Mystic Castle (91,283). Take this");
                        data.AddText("~Reveal Vial and use it there to reveal the compartment. Then use the key you will get from the Bats to open it. Clear?");
                        data.AddOption("Claim~the~Reveal~Vial.", 7);
                        data.AddOption("I`ll~think~about~it.");
                        data.AddAvatar(52);
                        data.FinalizeDialog();
                        break;
                    }
                case 5:
                    {
                        data.AddText("I heard through the grapevine that it is now kept in the Scripture Vault in Mystic Castle. But those Tomb Bats are guarding it.");
                        data.AddText("~I can`t get any closer to it...Will you help me with this?");
                        data.AddOption("I`m~in.", 6);
                        data.AddOption("Sorry,~but~I`m~busy.");
                        data.AddAvatar(52);
                        data.FinalizeDialog();
                        break;
                    }
                case 4:
                    {
                        data.AddText("Well, the first one is Zen Scripture. It was taken from Japan by some unknown eminent monk...I don`t get it...But it could sell");
                        data.AddText("~a high price in the open market.");
                        data.AddOption("Where~is~it~now?", 5);
                        data.AddAvatar(52);
                        data.FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                            {
                                client.Player.Money += 100;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "recovery");
                                client.SendSysMesage("You received 100 Silver!");
                                data.AddText("Here it is! Mystic Castle! They said you could find all the treasures here! This time I came for three of them in particular.");
                                data.AddText("~My hero, will you help me? I will reward you handsomely if you find them all!");
                                data.AddOption("Sounds~interesting.", 4);
                                data.AddAvatar(52);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Your inventory is full. You`ll need to make some room, first.");
                            data.AddOption("OK.");
                            data.AddAvatar(52);
                            data.FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        data.AddText("Well, some of the Scriptures are even more valuable than boxes of gold...");
                        data.AddOption("Gorgeous.");
                        data.AddAvatar(52);
                        data.FinalizeDialog();
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.MrFree)]
        public static void MrFree(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(723087, 1))
                        {
                            client.Player.OnRemoveLukyAmulet = true;
                            data.AddText("I~love~living~a~seclusive~life.~Don`t~bother~me!");
                            data.AddOption("I~heard~that~you~need~LuckyAmulets.", 1);
                            data.AddAvatar(74);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("I~love~living~a~seclusive~life.~Don`t~bother~me!");
                            data.AddOption("I`ll~leave~now.");
                            data.AddAvatar(74);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        data.AddText("Yes.~My~only~hobby~is~to~collect~LuckyAmulets.");
                        data.AddOption("I~happen~to~have~one.", 2);
                        data.AddOption("I`d~better~keep~it.");
                        data.AddAvatar(74);
                        data.FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        data.AddText("Great!~If~you~present~LuckyAmulet~to~me,~I`ll~make~a~unique~hairstyle~for~you.");
                        data.AddOption("Thank~you.", 3);
                        data.AddOption("I`d~better~keep~it.");
                        data.AddAvatar(74);
                        data.FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        if (client.Player.IsBoy())
                        {
                            data.AddText("Thank~you~very~much.~Which~hairstyle~would~you~like~to~select~from?");
                            data.AddOption("Dignified~one.", 4);
                            data.AddOption("Unruly~one.", 5);
                            data.AddOption("Staid~one.", 6);
                            data.AddOption("Cool~one.", 7);
                            data.AddOption("Handsome~one.", 8);
                            data.AddAvatar(74);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Thank~you~very~much.~Which~hairstyle~would~you~like~to~select~from?");
                            data.AddOption("Lovely~one.", 4);
                            data.AddOption("Comely~one.", 5);
                            data.AddOption("Pretty~one.", 6);
                            data.AddOption("Elegant~one.", 7);
                            data.AddOption("Nifty~one.", 8);
                            data.AddAvatar(74);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 4:
                    {
                        if (client.Player.OnRemoveLukyAmulet == true)
                        {
                            client.Inventory.Remove(723087, 1, stream);
                            client.Player.OnRemoveLukyAmulet = false;
                        }
                        client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 21);
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                        data.AddText("Are~you~satisfied~with~your~new~hairsyle?");
                        data.AddOption("Great!~Thank~you.");
                        data.AddOption("I`d~like~to~try~another~one.", 3);
                        data.AddAvatar(74);
                        data.FinalizeDialog();
                        break;
                    }
                case 5:
                    {
                        if (client.Player.OnRemoveLukyAmulet == true)
                        {
                            client.Inventory.Remove(723087, 1, stream);
                            client.Player.OnRemoveLukyAmulet = false;
                        }
                        client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 22);
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                        data.AddText("Are~you~satisfied~with~your~new~hairsyle?");
                        data.AddOption("Great!~Thank~you.");
                        data.AddOption("I`d~like~to~try~another~one.", 3);
                        data.AddAvatar(74);
                        data.FinalizeDialog();
                        break;
                    }
                case 6:
                    {
                        if (client.Player.OnRemoveLukyAmulet == true)
                        {
                            client.Inventory.Remove(723087, 1, stream);
                            client.Player.OnRemoveLukyAmulet = false;
                        }
                        client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 23);
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                        data.AddText("Are~you~satisfied~with~your~new~hairsyle?");
                        data.AddOption("Great!~Thank~you.");
                        data.AddOption("I`d~like~to~try~another~one.", 3);
                        data.AddAvatar(74);
                        data.FinalizeDialog();
                        break;
                    }
                case 7:
                    {
                        if (client.Player.OnRemoveLukyAmulet == true)
                        {
                            client.Inventory.Remove(723087, 1, stream);
                            client.Player.OnRemoveLukyAmulet = false;
                        }
                        client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 24);
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                        data.AddText("Are~you~satisfied~with~your~new~hairsyle?");
                        data.AddOption("Great!~Thank~you.");
                        data.AddOption("I`d~like~to~try~another~one.", 3);
                        data.AddAvatar(74);
                        data.FinalizeDialog();
                        break;
                    }
                case 8:
                    {
                        if (client.Player.OnRemoveLukyAmulet == true)
                        {
                            client.Inventory.Remove(723087, 1, stream);
                            client.Player.OnRemoveLukyAmulet = false;
                        }
                        client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 25);
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                        data.AddText("Are~you~satisfied~with~your~new~hairsyle?");
                        data.AddOption("Great!~Thank~you.");
                        data.AddOption("I`d~like~to~try~another~one.", 3);
                        data.AddAvatar(74);
                        data.FinalizeDialog();
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Performer)]
        public static void Performer(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello~there!~Please~allow~me~to~introduce~the~sub-class~of~Performers~to~you.~Performers~are~gifted~in~the~harmonizing~of~song~and~swordplay~into~beautiful,~unique~dances.~These~dances~will~surely~make~you~the~center~of~people`s~attention!");
                        data.AddText("~Would~you~like~to~join~us?~After~you~join~this~sub-class,~you~can~level~it~up~and~get~promoted~to~learn~more~stylish~dances.");
                        data.AddText("Performers~are~gifted~in~the~harmonizing~of~song~and~swordplay~into~beautiful,~unique~dances.~Besides~that,~their~physical~and~magical~attacks~improve~when~their~Sub-Class~level~improves.");
                        data.AddOption("Yes,~I`d~like~to~join!", 20);
                        data.AddOption("I~want~to~get~promoted.", 40);
                        data.AddOption("I~want~to~learn~new~dances.", 3);
                        data.AddOption("How~can~I~get~promoted?", 1);
                        data.AddOption("Nice.~I`ll~think~about~it.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                        break;
                    }
                case 40:
                    {
                        if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Performer) < 1)
                        {
                            data.AddText("Well,~you~need~to~join~us~before~you~can~be~promoted.~Would~you~like~to~become~a~Performer~now?");
                            data.AddOption("Sure.", 20);
                            data.AddOption("Oh,~I`m~not~ready~yet.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Performer) == 1)
                            {
                                data.AddText("To~get~promoted~to~Phase~2~and~learn~more~dances,~you~should~have~a~character~level~of~90~and~become~a~level~2~Performer.~Have~you~met~all~these~requirements?");
                                data.AddOption("Positive.", 41);
                                data.AddOption("Oh,~not~yet.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Performer) == 2)
                                {
                                    data.AddText("To~get~promoted~to~Phase~3~and~learn~more~dances,~you~should~have~a~character~level~of~110~and~become~a~level~3~Performer.~Have~you~met~all~these~requirements?");
                                    data.AddOption("Positive.", 42);
                                    data.AddOption("Oh,~not~yet.");
                                    data.AddAvatar(110);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Performer) == 3)
                                    {
                                        data.AddText("To~get~promoted~to~Phase~4~and~learn~more~dances,~you~should~have~a~character~level~of~120~and~become~a~level~4~Performer.~Have~you~met~all~these~requirements?");
                                        data.AddOption("Positive.", 43);
                                        data.AddOption("Oh,~not~yet.");
                                        data.AddAvatar(110);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Performer) == 4)
                                        {
                                            data.AddText("To~get~promoted~to~Phase~5~and~learn~more~dances,~you~should~have~a~character~level~of~90,~become~a~level~5~Performer,~and~have~been~reborn~once.~Have~you~met~all~these~requirements?");
                                            data.AddOption("Positive.", 44);
                                            data.AddOption("Oh,~not~yet.");
                                            data.AddAvatar(110);
                                            data.FinalizeDialog();
                                        }
                                        else
                                        {
                                            if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Performer) == 5)
                                            {
                                                data.AddText("To~get~promoted~to~Phase~6~and~learn~more~dances,~you~should~have~a~character~level~of~110,~become~a~level~6~Performer,~and~have~been~reborn~once.~Have~you~met~all~these~requirements?");
                                                data.AddOption("Positive.", 45);
                                                data.AddOption("Oh,~not~yet.");
                                                data.AddAvatar(110);
                                                data.FinalizeDialog();
                                            }
                                            else
                                            {
                                                if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Performer) == 6)
                                                {
                                                    data.AddText("To~get~promoted~to~Phase~7~and~learn~more~dances,~you~should~have~a~character~level~of~120,~become~a~level~7~Performer,~and~have~been~reborn~once.~Have~you~met~all~these~requirements?");
                                                    data.AddOption("Positive.", 46);
                                                    data.AddOption("Oh,~not~yet.");
                                                    data.AddAvatar(110);
                                                    data.FinalizeDialog();
                                                }
                                                else
                                                {
                                                    if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Performer) == 7)
                                                    {
                                                        data.AddText("To~get~promoted~to~Phase~8~and~learn~more~dances,~you~should~have~a~character~level~of~120,~become~a~level~8~Performer,~and~have~been~reborn~twice.~Have~you~met~all~these~requirements?");
                                                        data.AddOption("Positive.", 47);
                                                        data.AddOption("Oh,~not~yet.");
                                                        data.AddAvatar(110);
                                                        data.FinalizeDialog();
                                                    }
                                                    else
                                                    {
                                                        if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Performer) == 8)
                                                        {
                                                            data.AddText("To~get~promoted~to~Phase~9~and~learn~more~dances,~you~should~have~a~character~level~of~130,~become~a~level~9~Performer,~and~have~been~reborn~twice.~Have~you~met~all~these~requirements?");
                                                            data.AddOption("Positive.", 48);
                                                            data.AddOption("Oh,~not~yet.");
                                                            data.AddAvatar(110);
                                                            data.FinalizeDialog();
                                                        }
                                                        else
                                                        {
                                                            data.AddText("There~is~nothing~more~I~can~teach~you,~now~that~you`ve~reached~the~highest~phase~of~this~sub-class.~Well~done!");
                                                            data.AddOption("Oh.~Thanks~anyway.");
                                                            data.AddAvatar(110);
                                                            data.FinalizeDialog();
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        break;
                    }
                case 48:
                    {
                        if (client.Player.Level < 130)
                        {
                            data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                            data.AddOption("Oh.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Performer) < 9)
                            {
                                data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                                data.AddOption("Oh.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Reborn < 2)
                                {
                                    data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(110);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Performer, 9, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~been~promoted~to~a~Phase~9~Performer!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~have~been~promoted~to~a~Phase~9~Performer!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(110);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        break;
                    }
                case 47:
                    {
                        if (client.Player.Level < 120)
                        {
                            data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                            data.AddOption("Oh.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Performer) < 8)
                            {
                                data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                                data.AddOption("Oh.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Reborn < 2)
                                {
                                    data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(110);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Performer, 8, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~been~promoted~to~a~Phase~8~Performer!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~have~been~promoted~to~a~Phase~8~Performer!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(110);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        break;
                    }
                case 46:
                    {
                        if (client.Player.Reborn < 2)
                        {
                            if (client.Player.Level < 120)
                            {
                                data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                                data.AddOption("Oh.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Performer) < 7)
                                {
                                    data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(110);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.Reborn < 1)
                                    {
                                        data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                                        data.AddOption("Oh.");
                                        data.AddAvatar(110);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Performer, 7, client, stream);
                                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                        //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~been~promoted~to~a~Phase~7~Performer!", MsgMessage.ChatMode.TopLeftSystem);
                                        data.AddText("You~have~been~promoted~to~a~Phase~7~Performer!");
                                        data.AddOption("Great.");
                                        data.AddAvatar(110);
                                        data.FinalizeDialog();
                                    }
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Performer) < 7)
                            {
                                data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                                data.AddOption("Oh.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Reborn < 1)
                                {
                                    data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(110);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Performer, 7, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //   Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~been~promoted~to~a~Phase~7~Performer!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~have~been~promoted~to~a~Phase~7~Performer!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(110);
                                    data.FinalizeDialog();
                                }
                            }
                        }

                        break;
                    }
                case 45:
                    {
                        if (client.Player.Reborn < 2)
                        {
                            if (client.Player.Level < 110)
                            {
                                data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                                data.AddOption("Oh.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Performer) < 6)
                                {
                                    data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(110);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.Reborn < 1)
                                    {
                                        data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                                        data.AddOption("Oh.");
                                        data.AddAvatar(110);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Performer, 6, client, stream);
                                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                        //     Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~been~promoted~to~a~Phase~6~Performer!", MsgMessage.ChatMode.TopLeftSystem);
                                        data.AddText("You~have~been~promoted~to~a~Phase~6~Performer!");
                                        data.AddOption("Great.");
                                        data.AddAvatar(110);
                                        data.FinalizeDialog();
                                    }
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Performer) < 6)
                            {
                                data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                                data.AddOption("Oh.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Reborn < 1)
                                {
                                    data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(110);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Performer, 6, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //  Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~been~promoted~to~a~Phase~6~Performer!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~have~been~promoted~to~a~Phase~6~Performer!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(110);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        break;
                    }
                case 44:
                    {
                        if (client.Player.Reborn < 2)
                        {
                            if (client.Player.Level < 90)
                            {
                                data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                                data.AddOption("Oh.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Performer) < 5)
                                {
                                    data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(110);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.Reborn < 1)
                                    {
                                        data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                                        data.AddOption("Oh.");
                                        data.AddAvatar(110);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Performer, 5, client, stream);
                                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                        //   Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~been~promoted~to~a~Phase~5~Performer!", MsgMessage.ChatMode.TopLeftSystem);
                                        data.AddText("You~have~been~promoted~to~a~Phase~5~Performer!");
                                        data.AddOption("Great.");
                                        data.AddAvatar(110);
                                        data.FinalizeDialog();
                                    }
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Performer) < 5)
                            {
                                data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                                data.AddOption("Oh.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Reborn < 1)
                                {
                                    data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(110);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Performer, 5, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~been~promoted~to~a~Phase~5~Performer!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~have~been~promoted~to~a~Phase~5~Performer!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(110);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        break;
                    }
                case 43:
                    {
                        if (client.Player.Reborn < 1)
                        {
                            if (client.Player.Level < 120)
                            {
                                data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                                data.AddOption("Oh.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Performer) < 4)
                                {
                                    data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(110);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Performer, 4, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    // Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~been~promoted~to~a~Phase~4~Performer!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~have~been~promoted~to~a~Phase~4~Performer!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(110);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Performer) < 4)
                            {
                                data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                                data.AddOption("Oh.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Performer, 4, client, stream);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~been~promoted~to~a~Phase~4~Performer!", MsgMessage.ChatMode.TopLeftSystem);
                                data.AddText("You~have~been~promoted~to~a~Phase~4~Performer!");
                                data.AddOption("Great.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 42:
                    {
                        if (client.Player.Reborn < 1)
                        {
                            if (client.Player.Level < 110)
                            {
                                data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                                data.AddOption("Oh.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Performer) < 3)
                                {
                                    data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(110);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Performer, 3, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~been~promoted~to~a~Phase~3~Performer!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~have~been~promoted~to~a~Phase~3~Performer!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(110);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Performer) < 3)
                            {
                                data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                                data.AddOption("Oh.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Performer, 3, client, stream);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                // Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~been~promoted~to~a~Phase~3~Performer!", MsgMessage.ChatMode.TopLeftSystem);
                                data.AddText("You~have~been~promoted~to~a~Phase~3~Performer!");
                                data.AddOption("Great.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 41:
                    {
                        if (client.Player.Reborn < 1)
                        {
                            if (client.Player.Level < 90)
                            {
                                data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                                data.AddOption("Oh.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Performer) < 2)
                                {
                                    data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(110);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Performer, 2, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //  Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~been~promoted~to~a~Phase~2~Performer!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~have~been~promoted~to~a~Phase~2~Performer!");
                                    data.AddOption("Great!");
                                    data.AddAvatar(110);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Performer) < 2)
                            {
                                data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                                data.AddOption("Oh.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Performer, 2, client, stream);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                // Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~been~promoted~to~a~Phase~2~Performer!", MsgMessage.ChatMode.TopLeftSystem);
                                data.AddText("You~have~been~promoted~to~a~Phase~2~Performer!");
                                data.AddOption("Great!");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 20:
                    {

                        data.AddText("Performers~always~attract~public~attention~by~unique~Dances.~If~you`ve~reached~Level~70~and~you~want~to~join~us,~bring~me~15~Orchids~or~800~Study~Points.");
                        data.AddText("~it~requires~a~Performer~Card~which~can~be~obtained~by~handing~in~15~Orchids.~After~joining~the~Performer~sub-class,~click~open~your~character~sheet~and~you`ll~find~the~sub-class~button~on~the~left-hand~corner~where~you~may~level~up~your~sub-class.");
                        data.AddOption("Pay~15~Orchids~to~join.", 23);
                        data.AddOption("Pay~800~Study~Points~to~join.", 21);
                        data.AddOption("Oh,~it~does~not~suit~me.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();

                        break;
                    }
                case 23:
                    {
                        if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Performer) < 1)
                        {
                            if (client.Player.Reborn < 1)
                            {
                                if (client.Player.Level < 70)
                                {
                                    data.AddText("You~will~be~invited~to~join~us~after~you~reach~level~70.~Now~please~leave~me~alone,~I`ve~got~some~dancing~classes~to~prepare~for.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(110);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Inventory.Contain(711679, 1))
                                    {
                                        data.AddText("Hmmm,~I`ve~accepted~the~15~Orchids~you~just~handed~in~and~here~is~your~Performer~Card.~Well,~if~you`ve~reached~level~70,~you~will~become~a~Performer~immediately.~Are~you~sure~you~want~to~join~us?");
                                        data.AddOption("Sure.", 25);
                                        data.AddOption("I`ve~changed~my~mind.");
                                        data.AddAvatar(110);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        data.AddText("How~many~orchids~would~you~like~to~hand~in~this~time?~It~takes~15~orchids~to~get~a~Performer~Card~which~is~required~to~join~the~Performers.");
                                        data.AddOption("1~Orchid.", 26);
                                        data.AddOption("3~Orchids.", 28);
                                        data.AddOption("9~Orchids.", 29);
                                        data.AddOption("How~many~have~I~given~you?", 30);
                                        data.AddOption("Just~passing~by.");
                                        data.AddAvatar(110);
                                        data.FinalizeDialog();
                                    }
                                }
                            }
                            else
                            {
                                if (client.Inventory.Contain(711679, 1))
                                {
                                    data.AddText("Hmmm,~I`ve~accepted~the~15~Orchids~you~just~handed~in~and~here~is~your~Performer~Card.~Well,~if~you`ve~reached~level~70,~you~will~become~a~Performer~immediately.~Are~you~sure~you~want~to~join~us?");
                                    data.AddOption("Sure.", 25);
                                    data.AddOption("I`ve~changed~my~mind.");
                                    data.AddAvatar(110);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    data.AddText("How~many~orchids~would~you~like~to~hand~in~this~time?~It~takes~15~orchids~to~get~a~Performer~Card~which~is~required~to~join~the~Performers.");
                                    data.AddOption("1~Orchid.", 26);
                                    data.AddOption("3~Orchids.", 28);
                                    data.AddOption("9~Orchids.", 29);
                                    data.AddOption("How~many~have~I~given~you?", 30);
                                    data.AddOption("Just~passing~by.");
                                    data.AddAvatar(110);
                                    data.FinalizeDialog();
                                }

                            }
                        }
                        else
                        {
                            data.AddText("Aha,~you~are~already~a~Performer,~remember?~I~suggest~you~focus~your~attention~on~upgrading~your~sub-class~level,~now.");
                            data.AddOption("Oh.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 30:
                    {
                        if (client.Player.GiveFlowersToPerformer >= 1)
                        {
                            data.AddText("You`ve~handed~in~" + client.Player.GiveFlowersToPerformer + "~Orchids.~As~you~meet~the~requirement,~you`ll~get~a~Performer~Card.");
                            data.AddOption("Oh.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You~haven`t~handed~in~any~Orchids~yet.~It~charges~15~Orchids~for~a~Performer~Card.");
                            data.AddOption("Oh.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 29:
                    {
                        if (client.Inventory.Contain(753009, 1))
                        {
                            client.Inventory.Remove(753009, 1, stream);
                            client.Player.GiveFlowersToPerformer += 9;
                            if (client.Player.GiveFlowersToPerformer >= 15)
                            {
                                client.Player.GiveFlowersToPerformer -= 15;
                                client.Inventory.Add(stream, 711679, 1);
                                data.AddText("Hmmm,~I`ve~accepted~the~15~Orchids~you~just~handed~in~and~here~is~your~Performer~Card.~Well,~if~you`ve~reached~level~70,~you~will~become~a~Performer~immediately.~Are~you~sure~you~want~to~join~us?");
                                data.AddOption("Sure.", 27);
                                data.AddOption("I`ve~changed~my~mind.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You`ve~handed~in~" + client.Player.GiveFlowersToPerformer + "~Orchids.~As~there~are~15~Orchids,~you~can~get~a~Performer~Card.");
                                data.AddOption("Oh.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You~don`t~have~9~Orchids~to~give.");
                            data.AddOption("Oh.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 28:
                    {
                        if (client.Inventory.Contain(753003, 1))
                        {
                            client.Inventory.Remove(753003, 1, stream);
                            client.Player.GiveFlowersToPerformer += 3;
                            if (client.Player.GiveFlowersToPerformer >= 15)
                            {
                                client.Player.GiveFlowersToPerformer -= 15;
                                client.Inventory.Add(stream, 711679, 1);

                                data.AddText("Hmmm,~I`ve~accepted~the~15~Orchids~you~just~handed~in~and~here~is~your~Performer~Card.~Well,~if~you`ve~reached~level~70,~you~will~become~a~Performer~immediately.~Are~you~sure~you~want~to~join~us?");
                                data.AddOption("Sure.", 27);
                                data.AddOption("I`ve~changed~my~mind.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                            else
                            {

                                data.AddText("You`ve~handed~in~" + client.Player.GiveFlowersToPerformer + "~Orchids.~As~there~are~15~Orchids,~you~can~get~a~Performer~Card.");
                                data.AddOption("Oh.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("~You~don`t~have~3~Orchids~to~give.");
                            data.AddOption("Oh.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 26:
                    {
                        if (client.Inventory.Contain(753001, 1))
                        {
                            client.Inventory.Remove(753001, 1, stream);
                            client.Player.GiveFlowersToPerformer += 1;
                            if (client.Player.GiveFlowersToPerformer >= 15)
                            {
                                client.Player.GiveFlowersToPerformer -= 15;
                                client.Inventory.Add(stream, 711679, 1);
                                data.AddText("Hmmm,~I`ve~accepted~the~15~Orchids~you~just~handed~in~and~here~is~your~Performer~Card.~Well,~if~you`ve~reached~level~70,~you~will~become~a~Performer~immediately.~Are~you~sure~you~want~to~join~us?");
                                data.AddOption("Sure.", 27);
                                data.AddOption("I`ve~changed~my~mind.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You`ve~handed~in~" + client.Player.GiveFlowersToPerformer + "~Orchids.~As~there~are~15~Orchids,~you~can~get~a~Performer~Card.");
                                data.AddOption("Oh.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }

                        }
                        else
                        {
                            data.AddText("You~don`t~have~an~Orchid~to~give~me.");
                            data.AddOption("Oh.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 27:
                    {
                        if (client.Inventory.Contain(711679, 1))
                        {
                            client.Inventory.Remove(711679, 1, stream);
                            client.Player.SubClass.LearnNewSubClass(Database.DBLevExp.Sort.Performer, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            //Role.Core.SendGlobalMessage(stream, "Excellent!~" + client.Player.Name + "~is~now~a~beautiful~Performer!", MsgMessage.ChatMode.TopLeftSystem);
                            data.AddText("Welcome~to~the~dancing~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~performers.~Work~hard~in~the~future,~and~when~you`re~ready~to~get~promoted,~I`m~always~here~for~you.");
                            data.AddOption("Thank~you.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 25:
                    {
                        if (client.Inventory.Contain(711679, 1))
                        {
                            client.Inventory.Remove(711679, 1, stream);
                            client.Player.SubClass.LearnNewSubClass(Database.DBLevExp.Sort.Performer, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            //Role.Core.SendGlobalMessage(stream, "Excellent!~" + client.Player.Name + "~is~now~a~beautiful~Performer!", MsgMessage.ChatMode.TopLeftSystem);
                            data.AddText("Welcome~to~the~dancing~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~performers.~Work~hard~in~the~future,~and~when~you`re~ready~to~get~promoted,~I`m~always~here~for~you.");
                            data.AddOption("Thank~you.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("How~many~orchids~would~you~like~to~hand~in~this~time?~It~takes~15~orchids~to~get~a~Performer~Card~which~is~required~to~join~the~Performers.");
                            data.AddOption("1~Orchid.", 26);
                            data.AddOption("3~Orchids.", 28);
                            data.AddOption("9~Orchids.", 29);
                            data.AddOption("How~many~have~I~given~you?", 30);
                            data.AddOption("Just~passing~by.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 21:
                    {
                        data.AddText("~~~~Are~you~sure~you~want~to~pay~800~Study~Points~to~join~us?");
                        data.AddOption("Yes,~I`ve~decided!", 22);
                        data.AddOption("No,~I~changed~my~mind.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                        break;
                    }
                case 22:
                    {
                        if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Performer) < 1)
                        {
                            if (client.Player.Reborn < 1)
                            {
                                if (client.Player.Level < 70)
                                {
                                    data.AddText("You~will~be~invited~to~join~us~after~you~reach~level~70.~Now~please~leave~me~alone,~I`ve~got~some~dancing~classes~to~prepare~for.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(110);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.SubClass.StudyPoints < 800)
                                    {
                                        data.AddText("You~don`t~have~800~Study~Points~to~take~the~sub-class.");
                                        data.AddOption("Alright.");
                                        data.AddAvatar(110);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        client.Player.SubClass.RemoveStudy(client, 800, stream);
                                        {
                                            client.Player.SubClass.LearnNewSubClass(Database.DBLevExp.Sort.Performer, client, stream);
                                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                            // Role.Core.SendGlobalMessage(stream, "Excellent!~" + client.Player.Name + "~is~now~a~beautiful~Performer!", MsgMessage.ChatMode.TopLeftSystem);
                                            data.AddText("Welcome~to~the~dancing~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~performers.~Work~hard~in~the~future,~and~when~you`re~ready~to~get~promoted,~I`m~always~here~for~you.");
                                            data.AddOption("Thank~you.");
                                            data.AddAvatar(110);
                                            data.FinalizeDialog();
                                        }
                                    }
                                }
                            }
                            else
                            {
                                if (client.Player.SubClass.StudyPoints < 800)
                                {
                                    data.AddText("You~don`t~have~800~Study~Points~to~take~the~sub-class.");
                                    data.AddOption("Alright.");
                                    data.AddAvatar(110);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.RemoveStudy(client, 800, stream);
                                    {
                                        client.Player.SubClass.LearnNewSubClass(Database.DBLevExp.Sort.Performer, client, stream);
                                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                        //  Role.Core.SendGlobalMessage(stream, "Excellent!~" + client.Player.Name + "~is~now~a~beautiful~Performer!", MsgMessage.ChatMode.TopLeftSystem);
                                        data.AddText("Welcome~to~the~dancing~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~performers.~Work~hard~in~the~future,~and~when~you`re~ready~to~get~promoted,~I`m~always~here~for~you.");
                                        data.AddOption("Thank~you.");
                                        data.AddAvatar(110);
                                        data.FinalizeDialog();
                                    }
                                }
                            }
                        }
                        else
                        {
                            data.AddText("Aha,~you~are~already~a~Performer,~remember?~I~suggest~you~focus~your~attention~on~upgrading~your~sub-class~level,~now.");
                            data.AddOption("Oh.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 3:
                    {
                        data.AddText("It~takes~higher~phases~to~learn~more~advanced~dances.~Learn~the~Battle~Dance~at~Phase~1,~learn~the~Triumph~at~Phase~3,~learn~the~Step~Stomp~at~Phase~5,~learn~Moonlight~at~Phase~7,~and~Snow~Wind~at~Phase~9.");
                        data.AddText("~Which~of~these~dances~do~you~want~to~learn?");
                        data.AddOption("Learn~Partner~Dances.", 9);
                        data.AddOption("The~Battle~Dance.", 8);
                        data.AddOption("Triumph.", 7);
                        data.AddOption("The~Step~Stomp.", 6);
                        data.AddOption("Moonlight.", 5);
                        data.AddOption("Snow~Wind.", 4);
                        data.AddOption("I`ll~think~about~it.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                        break;
                    }
                case 9:
                    {
                        data.AddText("The~dance~skill~you`re~able~to~learn~depends~on~your~Performer~Phase.~The~higher~your~phase~is,~the~more~dances~you~can~learn.~So,~what~kind~of~dance~would~you~like~to~learn?");
                        data.AddOption("Learn~Phoenix.~(P3~Performer)", 12);
                        data.AddOption("Melody~(Phase~6).", 11);
                        data.AddOption("Tipsy~(Phase~9).", 10);
                        data.AddOption("Previous.", 3);
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                        break;
                    }
                case 12:
                    {
                        if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Performer) < 3)
                        {
                            data.AddText("I`m~sorry,~but~only~Phase~3~Performers~can~learn~this~dance.~I~can`t~teach~you~this~dance~now.");
                            data.AddOption("Alright.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.MySpells.ClientSpells.ContainsKey(1420))
                            {
                                data.AddText("But~you`ve~already~learned~this~dance,~remember?");
                                data.AddOption("Oh,~alright.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                client.MySpells.Add(stream, 1420);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                client.SendSysMesage("You`ve~learned~the~Partner~Dance,~Phoenix!");
                                data.AddText("You`ve~learned~the~Partner~Dance,~Phoenix!");
                                data.AddOption("Thanks.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 11:
                    {
                        if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Performer) < 6)
                        {
                            data.AddText("I`m~sorry,~but~only~Phase~6~Performers~can~learn~this~dance.~I~can`t~teach~you~this~dance~now.");
                            data.AddOption("Alright.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.MySpells.ClientSpells.ContainsKey(1421))
                            {
                                data.AddText("But~you`ve~already~learned~this~dance,~remember?");
                                data.AddOption("Oh,~alright.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                client.MySpells.Add(stream, 1421);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                client.SendSysMesage("You`ve~learned~the~Partner~Dance,~Melody!");
                                data.AddText("You`ve~learned~the~Partner~Dance,~Melody!");
                                data.AddOption("Thanks.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 10:
                    {
                        if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Performer) < 9)
                        {
                            data.AddText("I`m~sorry,~but~only~Phase~9~Performers~can~learn~this~dance.~I~can`t~teach~you~this~dance~now.");
                            data.AddOption("Alright.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.MySpells.ClientSpells.ContainsKey(1422))
                            {
                                data.AddText("But~you`ve~already~learned~this~dance,~remember?");
                                data.AddOption("Oh,~alright.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                client.MySpells.Add(stream, 1422);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                client.SendSysMesage("You`ve~learned~the~Partner~Dance,~Tipsy!");
                                data.AddText("You`ve~learned~the~Partner~Dance,~Tipsy!");
                                data.AddOption("Thanks.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 8:
                    {
                        if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Performer) < 1)
                        {
                            data.AddText("You~can~only~learn~it~at~Phase~1.");
                            data.AddOption("Oh.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.MySpells.ClientSpells.ContainsKey(1415))
                            {
                                data.AddText("You`ve~already~learned~this~dance.");
                                data.AddOption("Oh.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                client.MySpells.Add(stream, 1415);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                client.SendSysMesage("You`ve~learned~the~Battle~Dance.");
                                data.AddText("You`ve~learned~the~Battle~Dance.~Hope~you`ll~work~on~it~and~learn~more~dances~in~the~future.~See~you!");
                                data.AddOption("See~you!");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                        }

                        break;
                    }
                case 7:
                    {
                        if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Performer) < 3)
                        {
                            data.AddText("You~can~only~learn~it~at~Phase~3.");
                            data.AddOption("Oh.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.MySpells.ClientSpells.ContainsKey(1416))
                            {
                                data.AddText("You`ve~already~learned~this~dance.");
                                data.AddOption("Oh.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                client.MySpells.Add(stream, 1416);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                client.SendSysMesage("You`ve~learned~the~Triumph.");
                                data.AddText("You`ve~learned~the~Triumph.~Hope~you`ll~work~on~it~and~learn~more~dances~in~the~future.~See~you!");
                                data.AddOption("See~you!");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 6:
                    {
                        if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Performer) < 5)
                        {
                            data.AddText("You~can~only~learn~it~at~Phase~5.");
                            data.AddOption("Oh.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.MySpells.ClientSpells.ContainsKey(1417))
                            {
                                data.AddText("You`ve~already~learned~this~dance.");
                                data.AddOption("Oh.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                client.MySpells.Add(stream, 1417);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                client.SendSysMesage("You`ve~learned~the~Step~Stomp.");
                                data.AddText("You`ve~learned~the~Step~Stomp.~Hope~you`ll~work~on~it~and~learn~more~dances~in~the~future.~See~you!");
                                data.AddOption("See~you!");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 5:
                    {
                        if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Performer) < 7)
                        {
                            data.AddText("You~can~only~learn~it~at~Phase~7.");
                            data.AddOption("Oh.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.MySpells.ClientSpells.ContainsKey(1418))
                            {
                                data.AddText("You`ve~already~learned~this~dance.");
                                data.AddOption("Oh.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                client.MySpells.Add(stream, 1418);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                client.SendSysMesage("You`ve~learned~the~Moonlight.");
                                data.AddText("You`ve~learned~the~Moonlight.~Hope~you`ll~work~on~it~and~learn~more~dances~in~the~future.~See~you!");
                                data.AddOption("See~you!");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 4:
                    {
                        if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Performer) < 9)
                        {
                            data.AddText("You~can~only~learn~it~at~Phase~9.");
                            data.AddOption("Oh.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.MySpells.ClientSpells.ContainsKey(1419))
                            {
                                data.AddText("You`ve~already~learned~this~dance.");
                                data.AddOption("Oh.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                client.MySpells.Add(stream, 1419);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                client.SendSysMesage("You`ve~learned~the~Snow~Wind.");
                                data.AddText("You`ve~learned~the~Snow~Wind.~You~are~the~master~of~dances~now!");
                                data.AddOption("Yay!");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 1:
                    {
                        data.AddText("Good~day!~Please~spare~me~a~few~minutes~so~that~I~can~tell~you~about~the~sub-classes~in~Twin~City.~Each~Sub-Class~has~9~phases,~and~the~higher~the~phase~is,~the~more~bonus~effects~the~sub-class~will~offer.~But~keep~in~mind~that~these");
                        data.AddText("~sub-classes~also~have~a~level~system~and~you~need~to~level~them~up~before~you~can~get~promoted!~You~can~level~up~your~sub-class~by~gaining~study~points.");
                        data.AddOption("How~can~I~get~study~points?", 2);
                        data.AddOption("Oh.~Thanks~for~telling~me.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        data.AddText("Well,~the~only~way~to~get~those~points~is~to~read~the~sub-class~books,~such~as~the~Diligence~Book.~When~you`ve~gained~enough~study~points,~open~the~sub-class~sheet~from~the~character~panel~and");
                        data.AddText("~level~up~your~sub-class~there.~Monsters~in~the~wild~are~always~bothering~young~adventurers,~so~you~might~find~some~books~from~them.");
                        data.AddOption("I~see.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.ApothecarySubClass)]
        public static void ApothecarySubClass(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello~there!~Please~allow~me~to~introduce~to~you~the~sub-class~of~the~Apothecary.~An~Apothecary~is~a~master~of~various~oriental~herbs~and~can~use~their~healing~powers~to~protect~themselves~from~poison~damage.");
                        data.AddText("~Would~you~like~to~join~us?~After~you~join~this~sub-class,~you~can~level~it~up~and~get~promoted~to~gain~more~protection.");
                        data.AddOption("Yes,~I`d~like~to~join!", 3);
                        data.AddOption("I~want~to~get~promoted.", 7);
                        data.AddOption("How~can~I~get~promoted?", 1);
                        data.AddOption("Nice.~I`ll~think~about~it.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                        break;
                    }
                case 7:
                    {
                        if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Apothecary) < 1)
                        {
                            data.AddText("You~are~not~an~Apothecary~yet~and~can`t~get~promoted.~Do~you~want~to~join~the~Apothecary~sub-class~now?");
                            data.AddOption("Yes,~I`d~like~to~join.", 3);
                            data.AddOption("Oh.~Not~now.");
                            data.AddAvatar(113);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Apothecary) == 1)
                            {
                                data.AddText("To~get~promoted~to~Phase~2~and~increase~more~poison~damage~reduced,~you~should~have~a~character~level~of~90~and~become~a~level~2~Apothecary.~Have~you~met~all~these~requirements?");
                                data.AddOption("Positive.", 8);
                                data.AddOption("Oh,~not~yet.");
                                data.AddAvatar(113);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Apothecary) == 2)
                                {
                                    data.AddText("To~get~promoted~to~Phase~3~and~reduce~poison~damage~further,~you~should~have~a~character~level~of~110~and~become~a~level~3~Apothecary.~Have~you~met~all~these~requirements?");
                                    data.AddOption("Positive.", 9);
                                    data.AddOption("Oh,~not~yet.");
                                    data.AddAvatar(113);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Apothecary) == 3)
                                    {
                                        data.AddText("To~get~promoted~to~Phase~4~and~reduce~poison~damage~further,~you~should~have~a~character~level~of~120~and~become~a~level~4~Apothecary.~Have~you~met~all~these~requirements?");
                                        data.AddOption("Positive.", 10);
                                        data.AddOption("Oh,~not~yet.");
                                        data.AddAvatar(113);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Apothecary) == 4)
                                        {
                                            data.AddText("To~get~promoted~to~Phase~5~and~reduce~poison~damage~further,~you~should~have~a~character~level~of~90~and~become~a~level~5~Apothecary.~Have~you~met~all~these~requirements?");
                                            data.AddOption("Positive.", 11);
                                            data.AddOption("Oh,~not~yet.");
                                            data.AddAvatar(113);
                                            data.FinalizeDialog();
                                        }
                                        else
                                        {
                                            if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Apothecary) == 5)
                                            {
                                                data.AddText("To~get~promoted~to~Phase~6~and~reduce~poison~damage~further,~you~should~have~a~character~level~of~110,~~become~a~level~6~Apothecary~and~have~been~reborn~once.~Have~you~met~all~these~requirements?");
                                                data.AddOption("Positive.", 12);
                                                data.AddOption("Oh,~not~yet.");
                                                data.AddAvatar(113);
                                                data.FinalizeDialog();
                                            }
                                            else
                                            {
                                                if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Apothecary) == 6)
                                                {
                                                    data.AddText("To~get~promoted~to~Phase~7~and~reduce~poison~damage~further,~you~should~have~a~character~level~of~120,~~become~a~level~7~Apothecary~and~have~been~reborn~once.~Have~you~met~all~these~requirements?");
                                                    data.AddOption("Positive.", 13);
                                                    data.AddOption("Oh,~not~yet.");
                                                    data.AddAvatar(113);
                                                    data.FinalizeDialog();
                                                }
                                                else
                                                {
                                                    if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Apothecary) == 7)
                                                    {
                                                        data.AddText("To~get~promoted~to~Phase~8~and~reduce~poison~damage~further,~you~should~have~a~character~level~of~120,~~become~a~level~8~Apothecary~and~have~been~reborn~twice.~Have~you~met~all~these~requirements?");
                                                        data.AddOption("Positive.", 14);
                                                        data.AddOption("Oh,~not~yet.");
                                                        data.AddAvatar(113);
                                                        data.FinalizeDialog();
                                                    }
                                                    else
                                                    {
                                                        if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Apothecary) == 8)
                                                        {
                                                            data.AddText("To~get~promoted~to~Phase~9~and~reduce~poison~damage~fully,~you~should~have~a~character~level~of~130,~~become~a~level~9~Apothecary~and~have~been~reborn~twice.~Have~you~met~all~these~requirements?");
                                                            data.AddOption("Positive.", 15);
                                                            data.AddOption("Oh,~not~yet.");
                                                            data.AddAvatar(113);
                                                            data.FinalizeDialog();
                                                        }
                                                        else
                                                        {
                                                            data.AddText("There~is~nothing~more~I~can~teach~you,~now~that~you`ve~reached~the~highest~phase~of~this~sub-class.~Well~done!");
                                                            data.AddOption("Oh,~thanks~anyway.");
                                                            data.AddAvatar(113);
                                                            data.FinalizeDialog();
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        break;
                    }
                case 15:
                    {
                        if (client.Player.Level < 130)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(113);
                            data.AddAvatar(113);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Apothecary) < 9)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(113);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Reborn < 2)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(113);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Apothecary, 9, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~9~Apothecary~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~9~Apothecary~now!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(113);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        break;
                    }
                case 14:
                    {
                        if (client.Player.Level < 120)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(113);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Apothecary) < 8)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(113);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Reborn < 2)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(113);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Apothecary, 8, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    // Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~8~Apothecary~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~8~Apothecary~now!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(113);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        break;
                    }
                case 13:
                    {
                        if (client.Player.Reborn < 2)
                        {
                            if (client.Player.Level < 120)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(113);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Apothecary) < 7)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(113);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.Reborn < 1)
                                    {
                                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                        data.AddOption("Oh.");
                                        data.AddAvatar(113);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Apothecary, 7, client, stream);
                                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                        // Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~7~Apothecary~now!", MsgMessage.ChatMode.TopLeftSystem);
                                        data.AddText("You~are~a~Phase~7~Apothecary~now!");
                                        data.AddOption("Great.");
                                        data.AddAvatar(113);
                                        data.FinalizeDialog();
                                    }
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Apothecary) < 7)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(113);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Reborn < 1)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(113);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Apothecary, 7, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~7~Apothecary~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~7~Apothecary~now!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(113);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        break;
                    }
                case 12:
                    {

                        if (client.Player.Reborn < 2)
                        {
                            if (client.Player.Level < 110)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(113);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Apothecary) < 6)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(113);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.Reborn < 1)
                                    {
                                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                        data.AddOption("Oh.");
                                        data.AddAvatar(113);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Apothecary, 6, client, stream);
                                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                        //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~6~Apothecary~now!", MsgMessage.ChatMode.TopLeftSystem);
                                        data.AddText("You~are~a~Phase~6~Apothecary~now!");
                                        data.AddOption("Great.");
                                        data.AddAvatar(113);
                                        data.FinalizeDialog();
                                    }
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Apothecary) < 6)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(113);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Reborn < 1)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(113);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Apothecary, 6, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    // Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~6~Apothecary~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~6~Apothecary~now!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(113);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        break;
                    }

                case 11:
                    {
                        if (client.Player.Reborn < 2)
                        {
                            if (client.Player.Level < 90)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(113);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Apothecary) < 5)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(113);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.Reborn < 1)
                                    {
                                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                        data.AddOption("Oh.");
                                        data.AddAvatar(113);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Apothecary, 5, client, stream);
                                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                        //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~5~Apothecary~now!", MsgMessage.ChatMode.TopLeftSystem);
                                        data.AddText("You~are~a~Phase~5~Apothecary~now!");
                                        data.AddOption("Great.");
                                        data.AddAvatar(113);
                                        data.FinalizeDialog();
                                    }
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Apothecary) < 5)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(113);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Reborn < 1)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(113);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Apothecary, 5, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~5~Apothecary~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~5~Apothecary~now!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(113);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        break;
                    }
                case 10:
                    {
                        if (client.Player.Reborn < 1)
                        {
                            if (client.Player.Level < 120)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(113);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Apothecary) < 4)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(113);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Apothecary, 4, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~4~Apothecary~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~4~Apothecary~now!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(113);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Apothecary) < 4)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(113);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Apothecary, 4, client, stream);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~4~Apothecary~now!", MsgMessage.ChatMode.TopLeftSystem);
                                data.AddText("You~are~a~Phase~4~Apothecary~now!");
                                data.AddOption("Great.");
                                data.AddAvatar(113);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 9:
                    {
                        if (client.Player.Reborn < 1)
                        {
                            if (client.Player.Level < 110)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(113);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Apothecary) < 3)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(113);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Apothecary, 3, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    // Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~3~Apothecary~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~2~Apothecary~now!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(113);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Apothecary) < 3)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(113);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Apothecary, 3, client, stream);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~3~Apothecary~now!", MsgMessage.ChatMode.TopLeftSystem);
                                data.AddText("You~are~a~Phase~2~Apothecary~now!");
                                data.AddOption("Great.");
                                data.AddAvatar(113);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 8:
                    {
                        if (client.Player.Reborn < 1)
                        {
                            if (client.Player.Level < 90)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(113);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Apothecary) < 2)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(113);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Apothecary, 2, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~2~Apothecary~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~2~Apothecary~now!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(113);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Apothecary) < 2)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(113);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Apothecary, 2, client, stream);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~2~Apothecary~now!", MsgMessage.ChatMode.TopLeftSystem);
                                data.AddText("You~are~a~Phase~2~Apothecary~now!");
                                data.AddOption("Great.");
                                data.AddAvatar(113);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 3:
                    {
                        data.AddText("The~Apothecaries~are~quite~good~at~protecting~themselves~from~poison~damage.~If~you~want~to~join~us,~you~should~have~reached~Level~70~and~pay~me~10~Meteors~or~800~Study~Points.");
                        data.AddText("~After~that,~you~can~start~your~sub-class~training~on~the~`Status`~sheet.~Remember,~a~certain~sub-class~level~is~required~to~promote~the~phase~of~your~sub-class.");
                        data.AddOption("Pay~10~Meteors~to~join.", 6);
                        data.AddOption("Pay~800~Study~Points~to~join.", 4);
                        data.AddOption("Oh,~it~does~not~suit~me.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                        break;
                    }
                case 6:
                    {
                        if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Apothecary) < 1)
                        {
                            if (client.Player.Reborn < 1)
                            {
                                if (client.Player.Level < 70)
                                {
                                    data.AddText("You~will~be~invited~to~join~us~after~you~reach~level~70.~Work~harder!");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(113);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Inventory.Contain(1088001, 10))
                                    {
                                        if (client.Inventory.Remove(1088001, 10, stream))
                                        {
                                            client.Player.SubClass.LearnNewSubClass(Database.DBLevExp.Sort.Apothecary, client, stream);
                                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                            //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~an~Apothecary~now!", MsgMessage.ChatMode.TopLeftSystem);
                                            data.AddText("Welcome~to~the~Apothecary~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Apothecaries.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                                            data.AddOption("Thank~you.");
                                            data.AddAvatar(113);
                                            data.FinalizeDialog();
                                        }
                                    }
                                    else
                                    {
                                        data.AddText("You~don`t~have~10~Meteor.~There~is~nothing~I~can~do~for~you.");
                                        data.AddOption("Oh.~What~a~pity.");
                                        data.AddAvatar(113);
                                        data.FinalizeDialog();
                                    }
                                }
                            }
                            else
                            {
                                if (client.Inventory.Contain(1088001, 10))
                                {
                                    if (client.Inventory.Remove(1088001, 10, stream))
                                    {
                                        client.Player.SubClass.LearnNewSubClass(Database.DBLevExp.Sort.Apothecary, client, stream);
                                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                        // Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~an~Apothecary~now!", MsgMessage.ChatMode.TopLeftSystem);
                                        data.AddText("Welcome~to~the~Apothecary~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Apothecaries.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                                        data.AddOption("Thank~you.");
                                        data.AddAvatar(113);
                                        data.FinalizeDialog();
                                    }
                                }
                                else
                                {
                                    data.AddText("You~don`t~have~10~Meteor.~There~is~nothing~I~can~do~for~you.");
                                    data.AddOption("Oh.~What~a~pity.");
                                    data.AddAvatar(113);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        else
                        {
                            data.AddText("Aha,~you~are~already~an~Apothecary,~remember?~I~suggest~you~focus~your~attention~on~upgrading~your~sub-class~level,~now.");
                            data.AddOption("Oh.");
                            data.AddAvatar(113);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 4:
                    {
                        data.AddText("~~~~Are~you~sure~you~want~to~pay~800~Study~Points~to~join~us?");
                        data.AddOption("Yes,~I`ve~decided!", 5);
                        data.AddOption("No,~I~changed~my~mind.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                        break;
                    }
                case 5:
                    {
                        if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Apothecary) < 1)
                        {
                            if (client.Player.Reborn < 1)
                            {
                                if (client.Player.Level < 70)
                                {
                                    data.AddText("You~will~be~invited~to~join~us~after~you~reach~level~70.~Work~harder!");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(113);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.SubClass.StudyPoints < 800)
                                    {
                                        data.AddText("You~don`t~have~800~Study~Points~to~take~the~sub-class.");
                                        data.AddOption("Alright.");
                                        data.AddAvatar(113);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        client.Player.SubClass.RemoveStudy(client, 800, stream);
                                        {
                                            client.Player.SubClass.LearnNewSubClass(Database.DBLevExp.Sort.Apothecary, client, stream);
                                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                            //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~an~Apothecary~now!", MsgMessage.ChatMode.TopLeftSystem);
                                            data.AddText("Welcome~to~the~Apothecary~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Apothecaries.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                                            data.AddOption("Thank~you.");
                                            data.AddAvatar(113);
                                            data.FinalizeDialog();
                                        }
                                    }
                                }
                            }
                            else
                            {
                                if (client.Player.SubClass.StudyPoints < 800)
                                {
                                    data.AddText("You~don`t~have~800~Study~Points~to~take~the~sub-class.");
                                    data.AddOption("Alright.");
                                    data.AddAvatar(113);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.RemoveStudy(client, 800, stream);
                                    {
                                        client.Player.SubClass.LearnNewSubClass(Database.DBLevExp.Sort.Apothecary, client, stream);
                                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                        //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~an~Apothecary~now!", MsgMessage.ChatMode.TopLeftSystem);
                                        data.AddText("Welcome~to~the~Apothecary~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Apothecaries.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                                        data.AddOption("Thank~you.");
                                        data.AddAvatar(113);
                                        data.FinalizeDialog();
                                    }
                                }
                            }
                        }
                        else
                        {
                            data.AddText("Aha,~you~are~already~an~Apothecary,~remember?~I~suggest~you~focus~your~attention~on~upgrading~your~sub-class~level,~now.");
                            data.AddOption("Oh.");
                            data.AddAvatar(113);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        data.AddText("Good~day!~Please~spare~me~a~few~minutes~so~that~I~can~tell~you~about~the~sub-classes~in~Twin~City.~Each~Sub-Class~has~9~phases,~and~the~higher~the~phase~is,~the~more~bonus~effects~the~sub-class~will~offer.~But~keep~in~mind~that~these");
                        data.AddText("~sub-classes~also~have~a~level~system~and~you~need~to~level~them~up~before~you~can~get~promoted.~You~can~level~up~your~sub-class~by~gaining~study~points.");
                        data.AddOption("How~can~I~get~study~points?", 2);
                        data.AddOption("Oh.~Thanks~for~telling~me.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        data.AddText("Well,~the~only~way~to~get~those~points~is~to~read~the~sub-class~books,~such~as~the~Diligence~Book.~When~you`ve~gained~enough~study~points,~open~the~sub-class~sheet~from~the~character~panel~and");
                        data.AddText("~level~up~the~sub-class~there.~Monsters~in~the~wild~are~always~bothering~young~adventurers,~so~you~might~find~some~books~from~them.");
                        data.AddOption("I~see.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.MartialArtist)]
        public static void MartialArtist(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello~there!~You~look~quite~capable.~Perhaps~you`ll~make~a~great~Martial~Artist.~Please~allow~me~to~explain~the~Martial~Artist~sub-class.~The~Martial~Artist`s~awesome~displays~of~combat~prowess~are~a~wonder~to~behold,~but~a~nightmare~to~face.");
                        data.AddText("~When~you~are~a~Martial~Artist,~you~will~be~able~to~increase~the~chances~of~hitting~with~1.5x~Attack~Power!~");
                        data.AddText("~Would~you~like~to~join~us?~After~you~join~this~sub-class,~you~can~level~it~up~and~get~promoted~to~increase~your~chances~of~hitting~your~enemies~with~more~power!");
                        data.AddOption("Yes,~I`d~like~to~join.", 3);
                        data.AddOption("I~want~to~get~promoted.", 7);
                        data.AddOption("How~can~I~get~promoted?", 1);
                        data.AddOption("Nice.~I`ll~think~about~it.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                        break;
                    }
                case 7:
                    {
                        if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.MartialArtist) < 1)
                        {
                            data.AddText("You~are~not~a~Martial~Artist~yet~and~can`t~get~promoted.~Do~you~want~to~join~the~Martial~Artist~sub-class~now?");
                            data.AddOption("Yes,~I`d~like~to~join.", 3);
                            data.AddOption("Oh.~Not~now.");
                            data.AddAvatar(32);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.MartialArtist) == 1)
                            {
                                data.AddText("To~get~promoted~to~Phase~2~and~increase~the~chance~of~making~1.5x~Attack,~you~should~have~a~character~level~of~90~and~become~a~level~2~Martial~Artist.~Have~you~met~all~these~requirements?");
                                data.AddOption("Positive.", 8);
                                data.AddOption("Oh,~not~yet.");
                                data.AddAvatar(32);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.MartialArtist) == 2)
                                {
                                    data.AddText("To~get~promoted~to~Phase~3~and~increase~your~chances~of~hitting~with~1.5x~Attack,~you~should~have~a~character~level~of~110~and~become~a~level~3~Martial~Artist.~Have~you~met~all~these~requirements?");
                                    data.AddOption("Positive.", 9);
                                    data.AddOption("Oh,~not~yet.");
                                    data.AddAvatar(32);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.MartialArtist) == 3)
                                    {
                                        data.AddText("To~get~promoted~to~Phase~4~and~increase~your~chances~of~hitting~with~1.5x~Attack,~you~should~have~a~character~level~of~120~and~become~a~level~4~Martial~Artist.~Have~you~met~all~these~requirements?");
                                        data.AddOption("Positive.", 10);
                                        data.AddOption("Oh,~not~yet.");
                                        data.AddAvatar(32);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.MartialArtist) == 4)
                                        {
                                            data.AddText("To~get~promoted~to~Phase~5~and~increase~your~chances~of~hitting~with~1.5x~Attack,~you~should~have~a~character~level~of~90,~become~a~level~5~Martial~Artist,~and~have~been~reborn~once.~Have~you~met~all~these~requirements?");
                                            data.AddOption("Positive.", 11);
                                            data.AddOption("Oh,~not~yet.");
                                            data.AddAvatar(32);
                                            data.FinalizeDialog();
                                        }
                                        else
                                        {
                                            if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.MartialArtist) == 5)
                                            {
                                                data.AddText("To~get~promoted~to~Phase~6~and~increase~your~chances~of~hitting~with~1.5x~Attack,~you~should~have~a~character~level~of~110,~become~a~level~6~Martial~Artist,~and~have~been~reborn~once.~Have~you~met~all~these~requirements?");
                                                data.AddOption("Positive.", 12);
                                                data.AddOption("Oh,~not~yet.");
                                                data.AddAvatar(32);
                                                data.FinalizeDialog();
                                            }
                                            else
                                            {
                                                if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.MartialArtist) == 6)
                                                {
                                                    data.AddText("To~get~promoted~to~Phase~7~and~increase~your~chances~of~hitting~with~1.5x~Attack,~you~should~have~a~character~level~of~120,~become~a~level~7~Martial~Artist,~and~have~been~reborn~once.~Have~you~met~all~these~requirements?");
                                                    data.AddOption("Positive.", 13);
                                                    data.AddOption("Oh,~not~yet.");
                                                    data.AddAvatar(32);
                                                    data.FinalizeDialog();
                                                }
                                                else
                                                {
                                                    if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.MartialArtist) == 7)
                                                    {
                                                        data.AddText("To~get~promoted~to~Phase~8~and~increase~your~chances~of~hitting~with~1.5x~Attack,~you~should~have~a~character~level~of~120,~become~a~level~8~Martial~Artist,~and~have~been~reborn~twice.~Have~you~met~all~these~requirements?");
                                                        data.AddOption("Positive.", 14);
                                                        data.AddOption("Oh,~not~yet.");
                                                        data.AddAvatar(32);
                                                        data.FinalizeDialog();
                                                    }
                                                    else
                                                    {
                                                        if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.MartialArtist) == 8)
                                                        {
                                                            data.AddText("To~get~promoted~to~Phase~9~and~increase~your~chances~of~hitting~with~1.5x~Attack,~you~should~have~a~character~level~of~130,~become~a~level~9~Martial~Artist,~and~have~been~reborn~twice.~Have~you~met~all~these~requirements?");
                                                            data.AddOption("Positive.", 15);
                                                            data.AddOption("Oh,~not~yet.");
                                                            data.AddAvatar(32);
                                                            data.FinalizeDialog();
                                                        }
                                                        else
                                                        {
                                                            data.AddText("There~is~nothing~more~I~can~teach~you,~now~that~you`ve~reached~the~highest~phase~of~this~sub-class.~Well~done!");
                                                            data.AddOption("Thank~you.");
                                                            data.AddAvatar(32);
                                                            data.FinalizeDialog();
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        break;
                    }
                case 15:
                    {
                        if (client.Player.Level < 130)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(32);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.MartialArtist) < 9)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(32);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Reborn < 2)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(32);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.MartialArtist, 9, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    // Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~9~Martial~Artist~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~9~Martial~Artist~now!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(32);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        break;
                    }
                case 14:
                    {
                        if (client.Player.Level < 120)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(32);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.MartialArtist) < 8)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(32);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Reborn < 2)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(32);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.MartialArtist, 8, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    // Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~8~Martial~Artist~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~8~Martial~Artist~now!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(32);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        break;
                    }
                case 13:
                    {
                        if (client.Player.Reborn < 2)
                        {
                            if (client.Player.Level < 120)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(32);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.MartialArtist) < 7)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(32);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.Reborn < 1)
                                    {
                                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                        data.AddOption("Oh.");
                                        data.AddAvatar(32);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.MartialArtist, 7, client, stream);
                                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                        // Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~7~Martial~Artist~now!", MsgMessage.ChatMode.TopLeftSystem);
                                        data.AddText("You~are~a~Phase~7~Martial~Artist~now!");
                                        data.AddOption("Great.");
                                        data.AddAvatar(32);
                                        data.FinalizeDialog();
                                    }
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.MartialArtist) < 7)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(32);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Reborn < 1)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(32);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.MartialArtist, 7, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    // Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~7~Martial~Artist~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~7~Martial~Artist~now!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(32);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        break;
                    }
                case 12:
                    {
                        if (client.Player.Reborn < 2)
                        {
                            if (client.Player.Level < 110)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(32);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.MartialArtist) < 6)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(32);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.Reborn < 1)
                                    {
                                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                        data.AddOption("Oh.");
                                        data.AddAvatar(32);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.MartialArtist, 6, client, stream);
                                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                        //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~6~Martial~Artist~now!", MsgMessage.ChatMode.TopLeftSystem);
                                        data.AddText("You~are~a~Phase~6~Martial~Artist~now!");
                                        data.AddOption("Great.");
                                        data.AddAvatar(32);
                                        data.FinalizeDialog();
                                    }
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.MartialArtist) < 6)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(32);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Reborn < 1)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(32);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.MartialArtist, 6, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~6~Martial~Artist~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~6~Martial~Artist~now!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(32);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        break;
                    }
                case 11:
                    {
                        if (client.Player.Reborn < 2)
                        {
                            if (client.Player.Level < 90)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(32);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.MartialArtist) < 5)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(32);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.Reborn < 1)
                                    {
                                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                        data.AddOption("Oh.");
                                        data.AddAvatar(32);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.MartialArtist, 5, client, stream);
                                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                        //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~5~Martial~Artist~now!", MsgMessage.ChatMode.TopLeftSystem);
                                        data.AddText("You~are~a~Phase~5~Martial~Artist~now!");
                                        data.AddOption("Great.");
                                        data.AddAvatar(32);
                                        data.FinalizeDialog();
                                    }
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.MartialArtist) < 5)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(32);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Reborn < 1)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(32);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.MartialArtist, 5, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~5~Martial~Artist~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~5~Martial~Artist~now!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(32);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        break;
                    }
                case 10:
                    {
                        if (client.Player.Reborn < 1)
                        {
                            if (client.Player.Level < 120)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(32);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.MartialArtist) < 4)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(32);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.MartialArtist, 4, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~4~Martial~Artist~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~4~Martial~Artist~now!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(32);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.MartialArtist) < 4)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(32);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.MartialArtist, 4, client, stream);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~4~Martial~Artist~now!", MsgMessage.ChatMode.TopLeftSystem);
                                data.AddText("You~are~a~Phase~4~Martial~Artist~now!");
                                data.AddOption("Great.");
                                data.AddAvatar(32);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 9:
                    {
                        if (client.Player.Reborn < 1)
                        {
                            if (client.Player.Level < 110)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(32);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.MartialArtist) < 3)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(32);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.MartialArtist, 3, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~3~Martial~Artist~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~3~Martial~Artist~now!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(32);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.MartialArtist) < 3)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(32);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.MartialArtist, 3, client, stream);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                // Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~3~Martial~Artist~now!", MsgMessage.ChatMode.TopLeftSystem);
                                data.AddText("You~are~a~Phase~3~Martial~Artist~now!");
                                data.AddOption("Great.");
                                data.AddAvatar(32);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 8:
                    {
                        if (client.Player.Reborn < 1)
                        {
                            if (client.Player.Level < 90)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(32);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.MartialArtist) < 2)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(32);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.MartialArtist, 2, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    // Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~2~Martial~Artist~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~2~Martial~Artist~now!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(32);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.MartialArtist) < 2)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(32);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.MartialArtist, 2, client, stream);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~2~Martial~Artist~now!", MsgMessage.ChatMode.TopLeftSystem);
                                data.AddText("You~are~a~Phase~2~Martial~Artist~now!");
                                data.AddOption("Great.");
                                data.AddAvatar(32);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 3:
                    {
                        data.AddText("Being~a~Martial~Artist,~you`ll~find~your~Critical~Strike~nicely~enhanced.~Interested?~Make~sure~you`ve~reached~Level~70,~and~pay~5~Celestial~Stones~or~800~Study~Points~to~join~us!");
                        data.AddText("~After~that,~you~can~working~on~your~sub-class~skill~on~the~`Status`~sheet.~Remember,~a~certain~sub-class~level~is~required~to~promote~the~phase~of~your~sub-class.");
                        data.AddOption("Pay~5~CelestialStones~to~join.", 6);
                        data.AddOption("Pay~800~Study~Points~to~join.", 4);
                        data.AddOption("Oh,~it~does~not~suit~me.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                        break;
                    }
                case 6:
                    {
                        if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.MartialArtist) < 1)
                        {
                            if (client.Player.Reborn < 1)
                            {
                                if (client.Player.Level < 70)
                                {
                                    data.AddText("You~will~be~invited~to~join~us~after~you~reach~level~70.~Work~harder!");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(32);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Inventory.Contain(721259, 5) || client.Inventory.Contain(721259, 5, 1))
                                    {
                                        if (client.Inventory.Remove(721259, 5, stream))
                                        {
                                            client.Player.SubClass.LearnNewSubClass(Database.DBLevExp.Sort.MartialArtist, client, stream);
                                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                            //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Martial~Artist~now!", MsgMessage.ChatMode.TopLeftSystem);
                                            data.AddText("Welcome~to~the~Martial~Artist~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Martial~Artists.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                                            data.AddOption("Thanks~in~advance.");
                                            data.AddAvatar(32);
                                            data.FinalizeDialog();
                                        }
                                    }
                                    else
                                    {
                                        data.AddText("You~don`t~have~5~Celestial~Stones~to~join~this~sub-class.~Sorry.");
                                        data.AddOption("Oh.");
                                        data.AddAvatar(32);
                                        data.FinalizeDialog();
                                    }
                                }
                            }
                            else
                            {
                                if (client.Inventory.Contain(721259, 5) || client.Inventory.Contain(721259, 5, 1))
                                {
                                    if (client.Inventory.Remove(721259, 5, stream))
                                    {
                                        client.Player.SubClass.LearnNewSubClass(Database.DBLevExp.Sort.MartialArtist, client, stream);
                                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                        // Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Martial~Artist~now!", MsgMessage.ChatMode.TopLeftSystem);
                                        data.AddText("Welcome~to~the~Martial~Artist~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Martial~Artists.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                                        data.AddOption("Thanks~in~advance.");
                                        data.AddAvatar(32);
                                        data.FinalizeDialog();
                                    }
                                }
                                else
                                {
                                    data.AddText("You~don`t~have~5~Celestial~Stones~to~join~this~sub-class.~Sorry.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(32);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        else
                        {
                            data.AddText("Aha,~you~are~already~a~Martial~Artist,~remember?~I~suggest~you~focus~your~attention~on~upgrading~your~sub-class~level,~now.");
                            data.AddOption("Oh.");
                            data.AddAvatar(32);
                            data.FinalizeDialog();
                        }

                        break;
                    }
                case 4:
                    {
                        data.AddText("~~~~Are~you~sure~you~want~to~pay~800~Study~Points~to~join~us?");
                        data.AddOption("Yes,~I`ve~decided!", 5);
                        data.AddOption("No,~I~changed~my~mind.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                        break;
                    }
                case 5:
                    {
                        if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.MartialArtist) < 1)
                        {
                            if (client.Player.Reborn < 1)
                            {
                                if (client.Player.Level < 70)
                                {
                                    data.AddText("You~will~be~invited~to~join~us~after~you~reach~level~70.~Work~harder!");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(32);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.SubClass.StudyPoints < 800)
                                    {
                                        data.AddText("You~don`t~have~800~Study~Points~to~take~the~sub-class.");
                                        data.AddOption("Alright.");
                                        data.AddAvatar(32);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        client.Player.SubClass.RemoveStudy(client, 800, stream);
                                        {
                                            client.Player.SubClass.LearnNewSubClass(Database.DBLevExp.Sort.MartialArtist, client, stream);
                                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                            //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Martial~Artist~now!", MsgMessage.ChatMode.TopLeftSystem);
                                            data.AddText("Welcome~to~the~Martial~Artist~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Martial~Artists.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                                            data.AddOption("Thanks~in~advance.");
                                            data.AddAvatar(32);
                                            data.FinalizeDialog();
                                        }
                                    }
                                }
                            }
                            else
                            {
                                if (client.Player.SubClass.StudyPoints < 800)
                                {
                                    data.AddText("You~don`t~have~800~Study~Points~to~take~the~sub-class.");
                                    data.AddOption("Alright.");
                                    data.AddAvatar(32);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.RemoveStudy(client, 800, stream);
                                    {
                                        client.Player.SubClass.LearnNewSubClass(Database.DBLevExp.Sort.MartialArtist, client, stream);
                                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                        //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Martial~Artist~now!", MsgMessage.ChatMode.TopLeftSystem);
                                        data.AddText("Welcome~to~the~Martial~Artist~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Martial~Artists.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                                        data.AddOption("Thanks~in~advance.");
                                        data.AddAvatar(32);
                                        data.FinalizeDialog();
                                    }
                                }
                            }
                        }
                        else
                        {
                            data.AddText("Aha,~you~are~already~a~Martial~Artist,~remember?~I~suggest~you~focus~your~attention~on~upgrading~your~sub-class~level,~now.");
                            data.AddOption("Oh.");
                            data.AddAvatar(32);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        data.AddText("Good~day!~Please~spare~me~a~few~minutes~so~that~I~can~tell~you~about~the~sub-classes~in~Twin~City.~Each~Sub-Class~has~9~phases,~and~the~higher~the~phase~is,~the~more~bonus~effects~the~sub-class~will~offer.~But~keep~in~mind~that~these");
                        data.AddText("~sub-classes~also~have~a~level~system~and~you~need~to~level~them~up~before~you~can~get~promoted.~You~can~level~up~your~sub-class~by~gaining~study~points.");
                        data.AddOption("How~can~I~get~study~points?", 2);
                        data.AddOption("Oh.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        data.AddText("Well,~the~only~way~to~get~those~points~is~to~read~the~sub-class~books,~such~as~the~Diligence~Book.~When~you`ve~gained~enough~study~points,~open~the~sub-class~sheet~from~the~character~panel~and");
                        data.AddText("~level~up~the~sub-class~there.~Monsters~in~the~wild~are~always~bothering~young~adventurers,~so~you~might~find~some~books~from~them.");
                        data.AddOption("Oh.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.Warlock)]
        public static void Warlock(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Good~day!~Have~you~ever~wondered~what~a~Warlock~is?~Well,~please~allow~me~to~introduce~this~sub-class~to~you.~Warlocks~are~masters~of~the~the~psionic~energies~and~can~increase~their~chances~of~casting~spells~with~2x~Magical~Attack.");
                        data.AddText("~Isn`t~that~wonderful?~Would~you~like~to~join~us?~After~you~join~this~sub-class,~you~can~level~it~up~and~get~promoted~to~increase~your~power!");
                        data.AddOption("Yes,~I`d~like~to~join.", 3);
                        data.AddOption("I~want~to~get~promoted.", 7);
                        data.AddOption("How~can~I~get~promoted?", 1);
                        data.AddOption("Not~my~concern.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                        break;
                    }
                case 7:
                    {
                        if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Warlock) < 1)
                        {
                            data.AddText("You~are~not~a~Warlock~and~can`t~get~promoted.~Do~you~want~to~join~the~Warlock~sub-class~now?");
                            data.AddOption("Yes,~I`d~like~to~join~it.", 3);
                            data.AddOption("Oh.~I`ll~think~about~it.");
                            data.AddAvatar(23);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Warlock) == 1)
                            {
                                data.AddText("To~get~promoted~to~Phase~2~and~increase~your~chances~of~casting~with~2x~Magical~Attack,~you~should~have~a~character~level~of~90~and~become~a~level~2~Warlock.~Have~you~met~all~these~requirements?");
                                data.AddOption("Sure.", 8);
                                data.AddOption("Oh,~not~yet.");
                                data.AddAvatar(23);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Warlock) == 2)
                                {
                                    data.AddText("To~get~promoted~to~Phase~3~and~increase~your~chances~of~casting~with~2x~Magical~Attack,~you~should~have~a~character~level~of~110~and~become~a~level~3~Warlock.~Have~you~met~all~these~requirements?");
                                    data.AddOption("Sure.", 9);
                                    data.AddOption("Oh,~not~yet.");
                                    data.AddAvatar(23);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Warlock) == 3)
                                    {
                                        data.AddText("To~get~promoted~to~Phase~4~and~increase~your~chances~of~casting~with~2x~Magical~Attack,~you~should~have~a~character~level~of~120~and~become~a~level~4~Warlock.~Have~you~met~all~these~requirements?");
                                        data.AddOption("Sure.", 10);
                                        data.AddOption("Oh,~not~yet.");
                                        data.AddAvatar(23);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Warlock) == 4)
                                        {
                                            data.AddText("To~get~promoted~to~Phase~5~and~increase~your~chances~of~casting~with~2x~Magical~Attack,~you~should~have~a~character~level~of~90,~become~a~level~5~Warlock~and~have~been~reborn~once.~Have~you~met~all~these~requirements?");
                                            data.AddOption("Sure.", 11);
                                            data.AddOption("Oh,~not~yet.");
                                            data.AddAvatar(23);
                                            data.FinalizeDialog();
                                        }
                                        else
                                        {
                                            if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Warlock) == 5)
                                            {
                                                data.AddText("To~get~promoted~to~Phase~6~and~increase~your~chances~of~casting~with~2x~Magical~Attack,~you~should~have~a~character~level~of~110,~become~a~level~6~Warlock~and~have~been~reborn~once.~Have~you~met~all~these~requirements?");
                                                data.AddOption("Sure.", 12);
                                                data.AddOption("Oh,~not~yet.");
                                                data.AddAvatar(23);
                                                data.FinalizeDialog();
                                            }
                                            else
                                            {
                                                if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Warlock) == 6)
                                                {
                                                    data.AddText("To~get~promoted~to~Phase~7~and~increase~your~chances~of~casting~with~2x~Magical~Attack,~you~should~have~a~character~level~of~120,~become~a~level~7~Warlock~and~have~been~reborn~once.~Have~you~met~all~these~requirements?");
                                                    data.AddOption("Sure.", 13);
                                                    data.AddOption("Oh,~not~yet.");
                                                    data.AddAvatar(23);
                                                    data.FinalizeDialog();
                                                }
                                                else
                                                {
                                                    if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Warlock) == 7)
                                                    {
                                                        data.AddText("To~get~promoted~to~Phase~8~and~increase~your~chances~of~casting~with~2x~Magical~Attack,~you~should~have~a~character~level~of~120,~become~a~level~8~Warlock~and~have~been~reborn~twice.~Have~you~met~all~these~requirements?");
                                                        data.AddOption("Sure.", 14);
                                                        data.AddOption("Oh,~not~yet.");
                                                        data.AddAvatar(23);
                                                        data.FinalizeDialog();
                                                    }
                                                    else
                                                    {
                                                        if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Warlock) == 8)
                                                        {
                                                            data.AddText("To~get~promoted~to~Phase~9~and~increase~your~chances~of~casting~with~2x~Magical~Attack,~you~should~have~a~character~level~of~130,~become~a~level~9~Warlock~and~have~been~reborn~twice.~Have~you~met~all~these~requirements?");
                                                            data.AddOption("Sure.", 15);
                                                            data.AddOption("Oh,~not~yet.");
                                                            data.AddAvatar(23);
                                                            data.FinalizeDialog();
                                                        }
                                                        else
                                                        {
                                                            data.AddText("There~is~nothing~more~I~can~teach~you,~now~that~you`ve~reached~the~highest~phase~of~this~sub-class.~Well~done!");
                                                            data.AddOption("Oh,~it~does~not~suit~me.");
                                                            data.AddAvatar(23);
                                                            data.FinalizeDialog();
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        break;
                    }
                case 15:
                    {
                        if (client.Player.Level < 130)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(23);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Warlock) < 9)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(23);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Reborn < 2)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(23);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Warlock, 9, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~9~Warlock~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~9~Warlock~now!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(23);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        break;
                    }
                case 14:
                    {
                        if (client.Player.Level < 120)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(23);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Warlock) < 8)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(23);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Reborn < 2)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(23);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Warlock, 8, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~8~Warlock~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~8~Warlock~now!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(23);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        break;
                    }
                case 13:
                    {
                        if (client.Player.Reborn < 2)
                        {
                            if (client.Player.Level < 120)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(23);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Warlock) < 7)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(23);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.Reborn < 1)
                                    {
                                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                        data.AddOption("Oh.");
                                        data.AddAvatar(23);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Warlock, 7, client, stream);
                                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                        //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~7~Warlock~now!", MsgMessage.ChatMode.TopLeftSystem);
                                        data.AddText("You~are~a~Phase~7~Warlock~now!");
                                        data.AddOption("Great.");
                                        data.AddAvatar(23);
                                        data.FinalizeDialog();
                                    }
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Warlock) < 7)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(23);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Reborn < 1)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(23);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Warlock, 7, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~7~Warlock~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~7~Warlock~now!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(23);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        break;
                    }
                case 12:
                    {
                        if (client.Player.Reborn < 2)
                        {
                            if (client.Player.Level < 110)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(23);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Warlock) < 6)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(23);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.Reborn < 1)
                                    {
                                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                        data.AddOption("Oh.");
                                        data.AddAvatar(23);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Warlock, 6, client, stream);
                                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                        // Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~6~Warlock~now!", MsgMessage.ChatMode.TopLeftSystem);
                                        data.AddText("You~are~a~Phase~6~Warlock~now!");
                                        data.AddOption("Great.");
                                        data.AddAvatar(23);
                                        data.FinalizeDialog();
                                    }
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Warlock) < 6)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(23);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Reborn < 1)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(23);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Warlock, 6, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~6~Warlock~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~6~Warlock~now!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(23);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        break;
                    }
                case 11:
                    {
                        if (client.Player.Reborn < 2)
                        {
                            if (client.Player.Level < 90)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(23);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Warlock) < 5)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(23);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.Reborn < 1)
                                    {
                                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                        data.AddOption("Oh.");
                                        data.AddAvatar(23);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Warlock, 5, client, stream);
                                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                        //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~5~Warlock~now!", MsgMessage.ChatMode.TopLeftSystem);
                                        data.AddText("You~are~a~Phase~5~Warlock~now!");
                                        data.AddOption("Great.");
                                        data.AddAvatar(23);
                                        data.FinalizeDialog();
                                    }
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Warlock) < 5)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(23);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Reborn < 1)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(23);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Warlock, 5, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~5~Warlock~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~5~Warlock~now!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(23);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        break;
                    }
                case 10:
                    {
                        if (client.Player.Reborn < 1)
                        {
                            if (client.Player.Level < 120)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(23);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Warlock) < 4)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(23);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Warlock, 4, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~4~Warlock~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~4~Warlock~now!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(23);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Warlock) < 4)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(23);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Warlock, 4, client, stream);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~4~Warlock~now!", MsgMessage.ChatMode.TopLeftSystem);
                                data.AddText("You~are~a~Phase~4~Warlock~now!");
                                data.AddOption("Great.");
                                data.AddAvatar(23);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 9:
                    {
                        if (client.Player.Reborn < 1)
                        {
                            if (client.Player.Level < 110)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(23);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Warlock) < 3)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(23);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Warlock, 3, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~3~Warlock~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~3~Warlock~now!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(23);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Warlock) < 3)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(23);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Warlock, 3, client, stream);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~3~Warlock~now!", MsgMessage.ChatMode.TopLeftSystem);
                                data.AddText("You~are~a~Phase~3~Warlock~now!");
                                data.AddOption("Great.");
                                data.AddAvatar(23);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 8:
                    {
                        if (client.Player.Reborn < 1)
                        {
                            if (client.Player.Level < 90)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(23);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Warlock) < 2)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(23);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Warlock, 2, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~2~Warlock~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~2~Warlock~now");
                                    data.AddOption("Great.");
                                    data.AddAvatar(23);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Warlock) < 2)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(23);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Warlock, 2, client, stream);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~2~Warlock~now!", MsgMessage.ChatMode.TopLeftSystem);
                                data.AddText("You~are~a~Phase~2~Warlock~now");
                                data.AddOption("Great.");
                                data.AddAvatar(23);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 3:
                    {
                        data.AddText("Warlocks~are~masters~of~psionic~energies~who~have~the~chance~to~make~Skill~Critical~Strike.~If~you`ve~reached~Level~70,~just~pay~10~Bombs~or~800~Study~Points,");
                        data.AddText("~and~you`ll~be~one~of~us.~After~that,~you~can~enhance~your~sub-class~skill~on~the~`Status`~sheet.~Remember,~a~certain~sub-class~level~is~required~to~promote~the~phase~of~your~sub-class.");
                        data.AddOption("Pay~10~Bombs~to~join.", 6);
                        data.AddOption("Pay~800~Study~Points~to~join.", 4);
                        data.AddOption("Oh,~it~does~not~suit~me.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                        break;
                    }
                case 6:
                    {
                        if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Warlock) < 1)
                        {
                            if (client.Player.Reborn < 1)
                            {
                                if (client.Player.Level < 70)
                                {
                                    data.AddText("You~will~be~invited~to~join~us~after~you~reach~level~70.~Work~harder!");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(23);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Inventory.Contain(721261, 10))
                                    {
                                        if (client.Inventory.Remove(721261, 10, stream))
                                        {
                                            client.Player.SubClass.LearnNewSubClass(Database.DBLevExp.Sort.Warlock, client, stream);
                                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                            //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Warlock~now.", MsgMessage.ChatMode.TopLeftSystem);
                                            data.AddText("Welcome~to~the~Warlock~community.~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Warlocks.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                                            data.AddOption("Thanks.");
                                            data.AddAvatar(23);
                                            data.FinalizeDialog();
                                        }
                                    }
                                    else
                                    {
                                        data.AddText("You~don`t~have~the~10~Bombs~to~join~the~Warlock~sub-class.");
                                        data.AddOption("Oh.");
                                        data.AddAvatar(23);
                                        data.FinalizeDialog();
                                    }
                                }
                            }
                            else
                            {
                                if (client.Inventory.Contain(721261, 10))
                                {
                                    if (client.Inventory.Remove(721261, 10, stream))
                                    {
                                        client.Player.SubClass.LearnNewSubClass(Database.DBLevExp.Sort.Warlock, client, stream);
                                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                        //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Warlock~now.", MsgMessage.ChatMode.TopLeftSystem);
                                        data.AddText("Welcome~to~the~Warlock~community.~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Warlocks.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                                        data.AddOption("Thanks.");
                                        data.AddAvatar(23);
                                        data.FinalizeDialog();
                                    }
                                }
                                else
                                {
                                    data.AddText("You~don`t~have~the~10~Bombs~to~join~the~Warlock~sub-class.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(23);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        else
                        {
                            data.AddText("Aha,~you~are~already~a~Warlock,~remember?~I~suggest~you~focus~your~attention~on~upgrading~your~sub-class~level,~now.");
                            data.AddOption("Oh.");
                            data.AddAvatar(23);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 4:
                    {
                        data.AddText("~~~~Are~you~sure~you~want~to~pay~800~Study~Points~to~join~us?");
                        data.AddOption("Yes,~I`ve~decided!", 5);
                        data.AddOption("No,~I~changed~my~mind.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                        break;
                    }
                case 5:
                    {
                        if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Warlock) < 1)
                        {
                            if (client.Player.Reborn < 1)
                            {
                                if (client.Player.Level < 70)
                                {
                                    data.AddText("You~will~be~invited~to~join~us~after~you~reach~level~70.~Work~harder!");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(23);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.SubClass.StudyPoints < 800)
                                    {
                                        data.AddText("You~don`t~have~800~Study~Points~to~take~the~sub-class.");
                                        data.AddOption("Alright.");
                                        data.AddAvatar(23);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        client.Player.SubClass.RemoveStudy(client, 800, stream);
                                        {
                                            client.Player.SubClass.LearnNewSubClass(Database.DBLevExp.Sort.Warlock, client, stream);
                                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                            //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Warlock~now.", MsgMessage.ChatMode.TopLeftSystem);
                                            data.AddText("Welcome~to~the~Warlock~community.~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Warlocks.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                                            data.AddOption("Thanks.");
                                            data.AddAvatar(23);
                                            data.FinalizeDialog();
                                        }
                                    }
                                }
                            }
                            else
                            {
                                if (client.Player.SubClass.StudyPoints < 800)
                                {
                                    data.AddText("You~don`t~have~800~Study~Points~to~take~the~sub-class.");
                                    data.AddOption("Alright.");
                                    data.AddAvatar(23);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.RemoveStudy(client, 800, stream);
                                    {
                                        client.Player.SubClass.LearnNewSubClass(Database.DBLevExp.Sort.Warlock, client, stream);
                                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                        //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Warlock~now.", MsgMessage.ChatMode.TopLeftSystem);
                                        data.AddText("Welcome~to~the~Warlock~community.~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Warlocks.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                                        data.AddOption("Thanks.");
                                        data.AddAvatar(23);
                                        data.FinalizeDialog();
                                    }
                                }
                            }
                        }
                        else
                        {
                            data.AddText("Aha,~you~are~already~a~Warlock,~remember?~I~suggest~you~focus~your~attention~on~upgrading~your~sub-class~level,~now.");
                            data.AddOption("Oh.");
                            data.AddAvatar(23);
                            data.FinalizeDialog();
                        }
                        break;
                    }

                case 1:
                    {
                        data.AddText("Good~day!~Please~spare~me~a~few~minutes~so~that~I~can~tell~you~about~the~sub-classes~in~Twin~City.~Each~Sub-Class~has~9~phases,~and~the~higher~the~phase~is,~the~more~bonus~effects~the~sub-class~will~offer.~But~keep~in~mind~that~these");
                        data.AddText("~sub-classes~also~have~a~level~system~and~you~need~to~level~them~up~before~you~can~get~promoted.~You~can~level~up~your~sub-class~by~gaining~study~points.");
                        data.AddOption("How~can~I~get~study~points?", 2);
                        data.AddOption("Oh.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        data.AddText("Well,~the~only~way~to~get~those~points~is~to~read~the~sub-class~books,~such~as~the~Diligence~Book.~When~you`ve~gained~enough~study~points,~open~the~sub-class~sheet~from~the~character~panel~and");
                        data.AddText("~level~up~the~sub-class~there.~Monsters~in~the~wild~are~always~bothering~young~adventurers,~so~you~might~find~some~books~from~them.");
                        data.AddOption("I~see.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.Sage)]
        public static void Sage(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello,~my~friend.~Are~you~here~to~join~the~Sage~sub-class?~Before~we~start,~please~allow~me~to~introduce~this~sub-class~to~you.~Sages~have~strong~spiritual~powers~and~have~a~gruesome~ability~to~reduce~a~target`s");
                        data.AddText("~Magical~Defense.~This~is~very~helpful~in~defeating~those~who~might~underestimate~your~power!");
                        data.AddText("~Would~you~like~to~join~us?~After~you~join~this~sub-class,~you~can~level~it~up~and~get~promoted~to~reduce~more~of~your~target`s~Magical~Defense.");
                        data.AddOption("Yes,~I`d~like~to~join.", 3);
                        data.AddOption("I~want~to~get~promoted.", 7);
                        data.AddOption("How~can~I~get~promoted?", 1);
                        data.AddOption("Not~my~concern.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                        break;
                    }
                case 7:
                    {
                        if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Sage) < 1)
                        {
                            data.AddText("Well,~you~need~to~join~us~before~getting~promoted.~Do~you~want~to~become~a~Sage~now?");
                            data.AddOption("Yes,~I`d~like~to~join~it.", 3);
                            data.AddOption("Oh,~I`m~not~ready~yet.");
                            data.AddAvatar(87);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Sage) == 1)
                            {
                                data.AddText("To~get~promoted~to~Phase~2~and~reduce~more~of~your~target`s~Magical~Defense,~you~should~have~a~character~level~of~90~and~become~a~level~2~Sage.~Have~you~met~all~these~requirements?");
                                data.AddOption("Positive.", 8);
                                data.AddOption("Oh,~not~yet.");
                                data.AddAvatar(87);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Sage) == 2)
                                {
                                    data.AddText("To~get~promoted~to~Phase~3~and~reduce~more~of~your~target`s~Magical~Defense,~you~should~have~a~character~level~of~110~and~become~a~level~3~Sage.~Have~you~met~all~these~requirements?");
                                    data.AddOption("Positive.", 9);
                                    data.AddOption("Oh,~not~yet.");
                                    data.AddAvatar(87);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Sage) == 3)
                                    {
                                        data.AddText("To~get~promoted~to~Phase~4~and~reduce~more~of~your~target`s~Magical~Defense,~you~should~have~a~character~level~of~120~and~become~a~level~4~Sage.~Have~you~met~all~these~requirements?");
                                        data.AddOption("Positive.", 10);
                                        data.AddOption("Oh,~not~yet.");
                                        data.AddAvatar(87);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Sage) == 4)
                                        {
                                            data.AddText("To~get~promoted~to~Phase~5~and~reduce~more~of~your~target`s~Magical~Defense,~you~should~have~a~character~level~of~90,~become~a~level~5~Sage~and~have~been~reborn~once.~Have~you~met~all~these~requirements?");
                                            data.AddOption("Positive.", 11);
                                            data.AddOption("Oh,~not~yet.");
                                            data.AddAvatar(87);
                                            data.FinalizeDialog();
                                        }
                                        else
                                        {
                                            if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Sage) == 5)
                                            {
                                                data.AddText("To~get~promoted~to~Phase~6~and~reduce~more~of~your~target`s~Magical~Defense,~you~should~have~a~character~level~of~110,~become~a~level~6~Sage~and~have~been~reborn~once.~Have~you~met~all~these~requirements?");
                                                data.AddOption("Positive.", 12);
                                                data.AddOption("Oh,~not~yet.");
                                                data.AddAvatar(87);
                                                data.FinalizeDialog();
                                            }
                                            else
                                            {
                                                if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Sage) == 6)
                                                {
                                                    data.AddText("To~get~promoted~to~Phase~7~and~reduce~more~of~your~target`s~Magical~Defense,~you~should~have~a~character~level~of~120,~become~a~level~7~Sage~and~have~been~reborn~once.~Have~you~met~all~these~requirements?");
                                                    data.AddOption("Positive.", 13);
                                                    data.AddOption("Oh,~not~yet.");
                                                    data.AddAvatar(87);
                                                    data.FinalizeDialog();
                                                }
                                                else
                                                {
                                                    if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Sage) == 7)
                                                    {
                                                        data.AddText("To~get~promoted~to~Phase~8~and~reduce~more~of~your~target`s~Magical~Defense,~you~should~have~a~character~level~of~120,~become~a~level~8~Sage~and~have~been~reborn~twice.~Have~you~met~all~these~requirements?");
                                                        data.AddOption("Positive.", 14);
                                                        data.AddOption("Oh,~not~yet.");
                                                        data.AddAvatar(87);
                                                        data.FinalizeDialog();
                                                    }
                                                    else
                                                    {
                                                        if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Sage) == 8)
                                                        {
                                                            data.AddText("To~get~promoted~to~Phase~9~and~reduce~more~of~your~target`s~Magical~Defense,~you~should~have~a~character~level~of~130,~become~a~level~9~Sage~and~have~been~reborn~twice.~Have~you~met~all~these~requirements?");
                                                            data.AddOption("Positive.", 15);
                                                            data.AddOption("Oh,~not~yet.");
                                                            data.AddAvatar(87);
                                                            data.FinalizeDialog();
                                                        }
                                                        else
                                                        {
                                                            data.AddText("There~is~nothing~more~I~can~teach~you,~now~that~you`ve~reached~the~highest~phase~of~this~sub-class.~Well~done!");
                                                            data.AddOption("Oh,~it~does~not~suit~me.");
                                                            data.AddAvatar(87);
                                                            data.FinalizeDialog();
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        break;
                    }
                case 15:
                    {
                        if (client.Player.Level < 130)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(87);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Sage) < 9)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(87);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Reborn < 2)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(87);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Sage, 9, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~9~Sage~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~9~Sage~now!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(87);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        break;
                    }
                case 14:
                    {
                        if (client.Player.Level < 120)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(87);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Sage) < 8)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(87);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Reborn < 2)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(87);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Sage, 8, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~8~Sage~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~8~Sage~now!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(87);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        break;
                    }
                case 13:
                    {
                        if (client.Player.Reborn < 2)
                        {
                            if (client.Player.Level < 120)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(87);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Sage) < 7)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(87);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.Reborn < 1)
                                    {
                                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                        data.AddOption("Oh.");
                                        data.AddAvatar(87);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Sage, 7, client, stream);
                                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                        //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~7~Sage~now!", MsgMessage.ChatMode.TopLeftSystem);
                                        data.AddText("You~are~a~Phase~7~Sage~now!");
                                        data.AddOption("Great.");
                                        data.AddAvatar(87);
                                        data.FinalizeDialog();
                                    }
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Sage) < 7)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(87);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Reborn < 1)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(87);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Sage, 7, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~7~Sage~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~7~Sage~now!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(87);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        break;
                    }
                case 12:
                    {
                        if (client.Player.Reborn < 2)
                        {
                            if (client.Player.Level < 110)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(87);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Sage) < 6)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(87);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.Reborn < 1)
                                    {
                                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                        data.AddOption("Oh.");
                                        data.AddAvatar(87);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Sage, 6, client, stream);
                                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                        //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~6~Sage~now!", MsgMessage.ChatMode.TopLeftSystem);
                                        data.AddText("You~are~a~Phase~6~Sage~now!");
                                        data.AddOption("Great.");
                                        data.AddAvatar(87);
                                        data.FinalizeDialog();
                                    }
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Sage) < 6)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(87);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Reborn < 1)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(87);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Sage, 6, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    // Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~6~Sage~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~6~Sage~now!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(87);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        break;
                    }
                case 11:
                    {
                        if (client.Player.Reborn < 2)
                        {
                            if (client.Player.Level < 90)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(87);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Sage) < 5)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(87);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.Reborn < 1)
                                    {
                                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                        data.AddOption("Oh.");
                                        data.AddAvatar(87);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Sage, 5, client, stream);
                                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                        //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~5~Sage~now!", MsgMessage.ChatMode.TopLeftSystem);
                                        data.AddText("You~are~a~Phase~5~Sage~now!");
                                        data.AddOption("Great.");
                                        data.AddAvatar(87);
                                        data.FinalizeDialog();
                                    }
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Sage) < 5)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(87);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Reborn < 1)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(87);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Sage, 5, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~5~Sage~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~5~Sage~now!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(87);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        break;
                    }
                case 10:
                    {
                        if (client.Player.Reborn < 1)
                        {
                            if (client.Player.Level < 120)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(87);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Sage) < 4)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(87);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Sage, 4, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~4~Sage~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~4~Sage~now!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(87);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Sage) < 4)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(87);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Sage, 4, client, stream);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~4~Sage~now!", MsgMessage.ChatMode.TopLeftSystem);
                                data.AddText("You~are~a~Phase~4~Sage~now!");
                                data.AddOption("Great.");
                                data.AddAvatar(87);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 9:
                    {
                        if (client.Player.Reborn < 1)
                        {
                            if (client.Player.Level < 110)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(87);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Sage) < 3)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(87);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Sage, 3, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~3~Sage~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~3~Sage~now!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(87);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Sage) < 3)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(87);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Sage, 3, client, stream);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~3~Sage~now!", MsgMessage.ChatMode.TopLeftSystem);
                                data.AddText("You~are~a~Phase~3~Sage~now!");
                                data.AddOption("Great.");
                                data.AddAvatar(87);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 8:
                    {
                        if (client.Player.Reborn < 1)
                        {
                            if (client.Player.Level < 90)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(87);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Sage) < 2)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(87);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Sage, 2, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    // Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~2~Sage~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~2~Sage~now!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(87);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Sage) < 2)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(87);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Sage, 2, client, stream);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~2~Sage~now!", MsgMessage.ChatMode.TopLeftSystem);
                                data.AddText("You~are~a~Phase~2~Sage~now!");
                                data.AddOption("Great.");
                                data.AddAvatar(87);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 3:
                    {
                        data.AddText("Want~to~be~a~Sage?~We`re~able~to~reduce~a~target`s~Magical~Defense.~Make~sure~you`ve~reached~Level~70,~and~pay~20~Lucky~Amulets~or~800~Study~Points~to~join~us!~");
                        data.AddText("~After~being~one~of~us,~you~can~work~on~your~sub-class~training~on~the~`Status`~sheet.~Remember,~a~certain~sub-class~level~is~required~to~promote~the~phase~of~your~sub-class.");
                        data.AddOption("Pay~20~Lucky~Amulets~to~join.", 6);
                        data.AddOption("Pay~800~Study~Points~to~join.", 4);
                        data.AddOption("Oh,~it~does~not~suit~me.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                        break;
                    }
                case 6:
                    {
                        if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Sage) < 1)
                        {
                            if (client.Player.Reborn < 1)
                            {
                                if (client.Player.Level < 70)
                                {
                                    data.AddText("You~will~be~invited~to~join~us~after~you~reach~level~70.~Work~harder!");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(87);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Inventory.Contain(723087, 20))
                                    {
                                        if (client.Inventory.Remove(723087, 20, stream))
                                        {
                                            client.Player.SubClass.LearnNewSubClass(Database.DBLevExp.Sort.Sage, client, stream);
                                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                            //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~become~a~Sage.~Excellent!", MsgMessage.ChatMode.TopLeftSystem);
                                            data.AddText("Welcome~to~the~Sage~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Sages.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                                            data.AddOption("Thanks.");
                                            data.AddAvatar(87);
                                            data.FinalizeDialog();
                                        }
                                    }
                                    else
                                    {
                                        data.AddText("Well,~I`m~sorry,~but~you~don`t~have~the~20~Lucky~Amulets~needed~to~join~us.");
                                        data.AddOption("Oh.");
                                        data.AddAvatar(87);
                                        data.FinalizeDialog();
                                    }
                                }
                            }
                            else
                            {
                                if (client.Inventory.Contain(723087, 20))
                                {
                                    if (client.Inventory.Remove(723087, 20, stream))
                                    {
                                        client.Player.SubClass.LearnNewSubClass(Database.DBLevExp.Sort.Sage, client, stream);
                                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                        //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~become~a~Sage.~Excellent!", MsgMessage.ChatMode.TopLeftSystem);
                                        data.AddText("Welcome~to~the~Sage~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Sages.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                                        data.AddOption("Thanks.");
                                        data.AddAvatar(87);
                                        data.FinalizeDialog();
                                    }
                                }
                                else
                                {
                                    data.AddText("Well,~I`m~sorry,~but~you~don`t~have~the~20~Lucky~Amulets~needed~to~join~us.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(87);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        else
                        {
                            data.AddText("Aha,~you~are~already~a~Sage,~remember?~I~suggest~you~focus~your~attention~on~upgrading~your~sub-class~level,~now.");
                            data.AddOption("Oh.");
                            data.AddAvatar(87);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 4:
                    {
                        data.AddText("~~~~Are~you~sure~you~want~to~pay~800~Study~Points~to~join~us?");
                        data.AddOption("Yes,~I`ve~decided!", 5);
                        data.AddOption("No,~I~changed~my~mind.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                        break;
                    }
                case 5:
                    {
                        if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Sage) < 1)
                        {
                            if (client.Player.Reborn < 1)
                            {
                                if (client.Player.Level < 70)
                                {
                                    data.AddText("You~will~be~invited~to~join~us~after~you~reach~level~70.~Work~harder!");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(87);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.SubClass.StudyPoints < 800)
                                    {
                                        data.AddText("You~don`t~have~800~Study~Points~to~take~the~sub-class.");
                                        data.AddOption("Alright.");
                                        data.AddAvatar(87);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        client.Player.SubClass.RemoveStudy(client, 800, stream);
                                        {
                                            client.Player.SubClass.LearnNewSubClass(Database.DBLevExp.Sort.Sage, client, stream);
                                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                            //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~become~a~Sage.~Excellent!", MsgMessage.ChatMode.TopLeftSystem);
                                            data.AddText("Welcome~to~the~Sage~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Sages.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                                            data.AddOption("Thanks.");
                                            data.AddAvatar(87);
                                            data.FinalizeDialog();
                                        }
                                    }
                                }
                            }
                            else
                            {
                                if (client.Player.SubClass.StudyPoints < 800)
                                {
                                    data.AddText("You~don`t~have~800~Study~Points~to~take~the~sub-class.");
                                    data.AddOption("Alright.");
                                    data.AddAvatar(87);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.RemoveStudy(client, 800, stream);
                                    {
                                        client.Player.SubClass.LearnNewSubClass(Database.DBLevExp.Sort.Sage, client, stream);
                                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                        //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~become~a~Sage.~Excellent!", MsgMessage.ChatMode.TopLeftSystem);
                                        data.AddText("Welcome~to~the~Sage~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Sages.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                                        data.AddOption("Thanks.");
                                        data.AddAvatar(87);
                                        data.FinalizeDialog();
                                    }
                                }
                            }
                        }
                        else
                        {
                            data.AddText("Aha,~you~are~already~a~Sage,~remember?~I~suggest~you~focus~your~attention~on~upgrading~your~sub-class~level,~now.");
                            data.AddOption("Oh.");
                            data.AddAvatar(87);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        data.AddText("Good~day!~Please~spare~me~a~few~minutes~so~that~I~can~tell~you~about~the~sub-classes~in~Twin~City.~Each~Sub-Class~has~9~phases,~and~the~higher~the~phase~is,~the~more~bonus~effects~the~sub-class~will~offer.~But~keep~in~mind~that~these");
                        data.AddText("~sub-classes~also~have~a~level~system~and~you~need~to~level~them~to~a~certain~level~before~getting~promoted~to~some~phase.~You~can~level~up~your~sub-class~by~gaining~study~points.");
                        data.AddOption("How~can~I~get~study~points?", 2);
                        data.AddOption("I~see.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        data.AddText("Well,~the~only~way~to~get~those~points~is~to~read~the~sub-class~books,~such~as~the~Diligence~Book.~When~you`ve~gained~enough~study~points,~open~the~sub-class~sheet~from~the~character~panel~and");
                        data.AddText("~level~up~the~sub-class~there.~Monsters~in~the~wild~are~always~bothering~young~adventurers,~so~you~might~find~some~books~from~them.");
                        data.AddOption("I~see.~Thanks.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.ChiMaster)]
        public static void ChiMaster(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello~there!~Please~allow~me~to~introduce~to~you~the~sub-class~of~the~Chi~Master.~The~Chi~Master~is~a~potent~combatant~so~versed~in~counter~attacks,~that~they~have~a~chance~of~preventing~their~enemy~from~landing~Critical~Strikes!");
                        data.AddText("~Would~you~like~to~join~us?~After~you~join~this~sub-class,~you~can~level~it~up~and~get~promoted~to~increase~your~immunity~to~critical~strikes.");
                        data.AddOption("Yes,~I`d~like~to~join~it.", 1);
                        data.AddOption("I~want~to~get~promoted.", 5);
                        data.AddOption("How~can~I~get~promoted?", 14);
                        data.AddOption("Where~to~buy~Yin-Yang~Fruits?", 16);
                        data.AddOption("Not~my~concern.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                        break;
                    }
                case 16:
                    {
                        data.AddText("You~may~pay~5,000~Horse~Racing~points~to~the~Horse~Race~Manager~to~buy~a~Yin~Yang~Fruit.");
                        data.AddOption("Thanks.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                        break;
                    }
                case 14:
                    {
                        data.AddText("Good~day!~Please~spare~me~a~few~minutes~so~that~I~can~tell~you~about~the~sub-classes~in~Twin~City.~Each~Sub-Class~has~9~phases,~and~the~higher~the~phase~is,~the~more~bonus~effects~the~sub-class~will~offer.~But~keep~in~mind~that~these");
                        data.AddText("~sub-classes~also~have~a~level~system~and~you~need~to~level~them~up~before~you~can~get~promoted.~You~can~level~up~your~sub-class~by~gaining~study~points.");
                        data.AddOption("How~can~I~get~study~points?", 15);
                        data.AddOption("Oh.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                        break;
                    }
                case 15:
                    {
                        data.AddText("Well,~the~only~way~to~get~those~points~is~to~read~the~sub-class~books,~such~as~the~Diligence~Book.~When~you`ve~gained~enough~study~points,~open~the~sub-class~sheet~from~the~character~panel~and");
                        data.AddText("~level~up~the~sub-class~there.~Monsters~in~the~wild~are~always~bothering~young~adventurers,~so~you~might~find~some~books~from~them.");
                        data.AddOption("Okay.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                        break;
                    }

                case 5:
                    {
                        if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.ChiMaster) < 1)
                        {
                            data.AddText("You~are~not~a~Chi~Master~yet~and~can`t~get~promoted.~Do~you~want~to~join~the~Chi~Master~sub-class~now?");
                            data.AddOption("Yes,~I`d~like~to~join.", 1);
                            data.AddOption("Oh.~Not~now.");
                            data.AddAvatar(79);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.ChiMaster) == 1)
                            {
                                data.AddText("To~get~promoted~to~Phase~2~and~increase~your~immunity~rate~to~critical~strikes,~you~should~have~a~character~level~of~90~and~become~a~level~2~Chi~Master.~Have~you~met~all~these~requirements?");
                                data.AddText("~");
                                data.AddOption("Positive.", 6);
                                data.AddOption("Oh,~not~yet.");
                                data.AddAvatar(79);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.ChiMaster) == 2)
                                {
                                    data.AddText("To~get~promoted~to~Phase~3~and~increase~your~immunity~rate~to~critical~strikes,~you~should~have~a~character~level~of~110~and~become~a~level~3~Chi~Master.~Have~you~met~all~these~requirements?");
                                    data.AddText("~");
                                    data.AddOption("Positive.", 7);
                                    data.AddOption("Oh,~not~yet.");
                                    data.AddAvatar(79);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.ChiMaster) == 3)
                                    {
                                        data.AddText("To~get~promoted~to~Phase~4~and~increase~your~immunity~rate~to~critical~strikes,~you~should~have~a~character~level~of~120~and~become~a~level~4~Chi~Master.~Have~you~met~all~these~requirements?");
                                        data.AddText("~");
                                        data.AddOption("Positive.", 8);
                                        data.AddOption("Oh,~not~yet.");
                                        data.AddAvatar(79);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.ChiMaster) == 4)
                                        {
                                            data.AddText("To~get~promoted~to~Phase~5~and~increase~your~immunity~rate~to~critical~strikes,~you~should~have~a~character~level~of~90~,~become~a~level~5~Chi~Master~and~have~been~reborn~once.~Have~you~met~all~these~requirements?");
                                            data.AddText("~");
                                            data.AddOption("Positive.", 9);
                                            data.AddOption("Oh,~not~yet.");
                                            data.AddAvatar(79);
                                            data.FinalizeDialog();
                                        }
                                        else
                                        {
                                            if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.ChiMaster) == 5)
                                            {
                                                data.AddText("To~get~promoted~to~Phase~6~and~increase~your~immunity~rate~to~critical~strikes,~you~should~have~a~character~level~of~110~,~become~a~level~6~Chi~Master~and~have~been~reborn~once.~Have~you~met~all~these~requirements?");
                                                data.AddText("~");
                                                data.AddOption("Positive.", 10);
                                                data.AddOption("Oh,~not~yet.");
                                                data.AddAvatar(79);
                                                data.FinalizeDialog();
                                            }
                                            else
                                            {
                                                if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.ChiMaster) == 6)
                                                {
                                                    data.AddText("To~get~promoted~to~Phase~7~and~increase~your~immunity~rate~to~critical~strikes,~you~should~have~a~character~level~of~120~,~become~a~level~7~Chi~Master~and~have~been~reborn~once.~Have~you~met~all~these~requirements?");
                                                    data.AddText("~");
                                                    data.AddOption("Positive.", 11);
                                                    data.AddOption("Oh,~not~yet.");
                                                    data.AddAvatar(79);
                                                    data.FinalizeDialog();
                                                }
                                                else
                                                {
                                                    if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.ChiMaster) == 7)
                                                    {
                                                        data.AddText("To~get~promoted~to~Phase~8~and~increase~your~immunity~rate~to~critical~strikes,~you~should~have~a~character~level~of~120~,~become~a~level~8~Chi~Master~and~have~been~reborn~twice.~Have~you~met~all~these~requirements?");
                                                        data.AddText("~");
                                                        data.AddOption("Positive.", 12);
                                                        data.AddOption("Oh,~not~yet.");
                                                        data.AddAvatar(79);
                                                        data.FinalizeDialog();
                                                    }
                                                    else
                                                    {
                                                        if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.ChiMaster) == 8)
                                                        {
                                                            data.AddText("To~get~promoted~to~Phase~9~and~increase~your~immunity~rate~to~critical~strikes,~you~should~have~a~character~level~of~130~,~become~a~level~9~Chi~Master~and~have~been~reborn~twice.~Have~you~met~all~these~requirements?");
                                                            data.AddText("~");
                                                            data.AddOption("Positive.", 13);
                                                            data.AddOption("Oh,~not~yet.");
                                                            data.AddAvatar(79);
                                                            data.FinalizeDialog();
                                                        }
                                                        else
                                                        {
                                                            data.AddText("There~is~nothing~more~I~can~teach~you,~now~that~you`ve~reached~the~highest~phase~of~this~sub-class.~Well~done!");
                                                            data.AddOption("Oh,~it~does~not~suit~me.");
                                                            data.AddAvatar(79);
                                                            data.FinalizeDialog();
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        break;
                    }
                case 13:
                    {
                        if (client.Player.Level < 130)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(79);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.ChiMaster) < 9)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(79);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Reborn < 2)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(79);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.ChiMaster, 9, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~9~Chi~Master~now.", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~9~Chi~Master~now.");
                                    data.AddOption("Great.");
                                    data.AddAvatar(79);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        break;
                    }
                case 12:
                    {
                        if (client.Player.Level < 120)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(79);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.ChiMaster) < 8)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(79);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Reborn < 2)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(79);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.ChiMaster, 8, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~8~Chi~Master~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~8~Chi~Master~now!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(79);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        break;
                    }
                case 11:
                    {
                        if (client.Player.Reborn < 2)
                        {
                            if (client.Player.Level < 120)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(79);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.ChiMaster) < 7)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(79);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.Reborn < 1)
                                    {
                                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                        data.AddOption("Oh.");
                                        data.AddAvatar(79);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.ChiMaster, 7, client, stream);
                                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                        //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~7~Chi~Master~now!", MsgMessage.ChatMode.TopLeftSystem);
                                        data.AddText("You~are~a~Phase~7~Chi~Master~now!");
                                        data.AddOption("Great.");
                                        data.AddAvatar(79);
                                        data.FinalizeDialog();
                                    }
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.ChiMaster) < 7)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(79);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Reborn < 1)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(79);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.ChiMaster, 7, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~7~Chi~Master~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~7~Chi~Master~now!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(79);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        break;
                    }
                case 10:
                    {
                        if (client.Player.Reborn < 2)
                        {
                            if (client.Player.Level < 110)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(79);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.ChiMaster) < 6)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(79);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.Reborn < 1)
                                    {
                                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                        data.AddOption("Oh.");
                                        data.AddAvatar(79);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.ChiMaster, 6, client, stream);
                                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                        //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~6~Chi~Master~now!", MsgMessage.ChatMode.TopLeftSystem);
                                        data.AddText("You~are~a~Phase~6~Chi~Master~now!");
                                        data.AddOption("Great.");
                                        data.AddAvatar(79);
                                        data.FinalizeDialog();
                                    }
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.ChiMaster) < 6)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(79);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Reborn < 1)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(79);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.ChiMaster, 6, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~6~Chi~Master~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~6~Chi~Master~now!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(79);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        break;
                    }
                case 9:
                    {
                        if (client.Player.Reborn < 2)
                        {
                            if (client.Player.Level < 90)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(79);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.ChiMaster) < 5)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(79);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.Reborn < 1)
                                    {
                                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                        data.AddOption("Oh.");
                                        data.AddAvatar(79);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.ChiMaster, 5, client, stream);
                                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                        //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~5~Chi~Master~now!", MsgMessage.ChatMode.TopLeftSystem);
                                        data.AddText("You~are~a~Phase~5~Chi~Master~now!");
                                        data.AddOption("Great.");
                                        data.AddAvatar(79);
                                        data.FinalizeDialog();
                                    }
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.ChiMaster) < 5)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(79);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Reborn < 1)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(79);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.ChiMaster, 5, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~5~Chi~Master~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~5~Chi~Master~now!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(79);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        break;
                    }
                case 8:
                    {
                        if (client.Player.Reborn < 1)
                        {
                            if (client.Player.Level < 120)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(79);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.ChiMaster) < 4)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(79);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.ChiMaster, 4, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~4~Chi~Master~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~4~Chi~Master~now!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(79);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.ChiMaster) < 4)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(79);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.ChiMaster, 4, client, stream);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                // Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~4~Chi~Master~now!", MsgMessage.ChatMode.TopLeftSystem);
                                data.AddText("You~are~a~Phase~4~Chi~Master~now!");
                                data.AddOption("Great.");
                                data.AddAvatar(79);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 7:
                    {
                        if (client.Player.Reborn < 1)
                        {
                            if (client.Player.Level < 110)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(79);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.ChiMaster) < 3)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(79);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.ChiMaster, 3, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~3~Chi~Master~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~3~Chi~Master~now!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(79);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.ChiMaster) < 3)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(79);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.ChiMaster, 3, client, stream);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                //  Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~3~Chi~Master~now!", MsgMessage.ChatMode.TopLeftSystem);
                                data.AddText("You~are~a~Phase~3~Chi~Master~now!");
                                data.AddOption("Great.");
                                data.AddAvatar(79);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 6:
                    {
                        if (client.Player.Reborn < 1)
                        {
                            if (client.Player.Level < 90)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(79);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.ChiMaster) < 2)
                                {
                                    data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(79);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.ChiMaster, 2, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~2~Chi~Master~now!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("You~are~a~Phase~2~Chi~Master~now!");
                                    data.AddOption("Great.");
                                    data.AddAvatar(79);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.ChiMaster) < 2)
                            {
                                data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("Oh.");
                                data.AddAvatar(79);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.ChiMaster, 2, client, stream);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                //   Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~is~a~Phase~2~Chi~Master~now!", MsgMessage.ChatMode.TopLeftSystem);
                                data.AddText("You~are~a~Phase~2~Chi~Master~now!");
                                data.AddOption("Great.");
                                data.AddAvatar(79);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 1:
                    {
                        data.AddText("The~Chi~Master~focuses~on~immunity~rate~to~critical~strikes~from~enemies.~If~you`ve~reached~Level~70~and~you~want~to~join~us,~give~me~800~Study~Points~or~a~Yin-Yang~Fruit");
                        data.AddText("~that~you~can~buy~from~the~Horse~Race~Manager~at~5,000~Horse~Racing~Points.~After~that,~you~can~start~your~study~of~the~sub-class~on~the~`Status`~sheet.");
                        data.AddText("~Remember,~a~certain~sub-class~level~is~required~to~promote~the~phase~of~your~sub-class.");
                        data.AddOption("Pay~a~Yin-Yang~Fruit~to~join.", 4);
                        data.AddOption("Pay~800~Study~Points~to~join.", 2);
                        data.AddOption("Oh,~it~does~not~suit~me.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                        break;
                    }
                case 4:
                    {
                        if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.ChiMaster) < 1)
                        {
                            if (client.Player.Reborn < 1)
                            {
                                if (client.Player.Level < 70)
                                {
                                    data.AddText("You~will~be~invited~to~join~us~after~you~reach~level~70.~Work~harder!");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(79);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Inventory.Contain(711188, 1))
                                    {
                                        client.Inventory.Remove(711188, 1, stream);
                                        client.Player.SubClass.LearnNewSubClass(Database.DBLevExp.Sort.ChiMaster, client, stream);
                                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                        //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~become~a~Chi~Master!", MsgMessage.ChatMode.TopLeftSystem);
                                        data.AddText("Welcome~to~the~Chi~Master~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Chi~Masters.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                                        data.AddOption("Thanks.");
                                        data.AddAvatar(79);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        data.AddText("I`m~sorry,~you~need~to~buy~a~Yin-Yang~Fruit~from~the~Horse~Race~Manager~and~reach~level~70~to~join~us.");
                                        data.AddOption("Oh.");
                                        data.AddAvatar(79);
                                        data.FinalizeDialog();
                                    }
                                }
                            }
                            else
                            {
                                if (client.Inventory.Contain(711188, 1))
                                {
                                    client.Inventory.Remove(711188, 1, stream);
                                    client.Player.SubClass.LearnNewSubClass(Database.DBLevExp.Sort.ChiMaster, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~become~a~Chi~Master!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("Welcome~to~the~Chi~Master~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Chi~Masters.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                                    data.AddOption("Thanks.");
                                    data.AddAvatar(79);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    data.AddText("I`m~sorry,~you~need~to~buy~a~Yin-Yang~Fruit~from~the~Horse~Race~Manager~and~reach~level~70~to~join~us.");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(79);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        else
                        {
                            data.AddText("Aha,~you~are~already~a~Chi~Master,~remember?~I~suggest~you~focus~your~attention~on~upgrading~your~sub-class~level~now.");
                            data.AddOption("Oh.");
                            data.AddAvatar(79);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        data.AddText("~~~~Are~you~sure~you~want~to~pay~800~Study~Points~to~join~us?");
                        data.AddOption("Yes,~I`ve~decided!", 3);
                        data.AddOption("No,~I~changed~my~mind.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.ChiMaster) < 1)
                        {
                            if (client.Player.Reborn < 1)
                            {
                                if (client.Player.Level < 70)
                                {
                                    data.AddText("You~will~be~invited~to~join~us~after~you~reach~level~70.~Work~harder!");
                                    data.AddOption("Oh.");
                                    data.AddAvatar(79);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.SubClass.StudyPoints < 800)
                                    {
                                        data.AddText("You~don`t~have~800~Study~Points~to~take~the~sub-class.");
                                        data.AddOption("Alright.");
                                        data.AddAvatar(79);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        client.Player.SubClass.RemoveStudy(client, 800, stream);
                                        {
                                            client.Player.SubClass.LearnNewSubClass(Database.DBLevExp.Sort.ChiMaster, client, stream);
                                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                            // Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~become~a~Chi~Master!", MsgMessage.ChatMode.TopLeftSystem);
                                            data.AddText("Welcome~to~the~Chi~Master~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Chi~Masters.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                                            data.AddOption("Thanks.");
                                            data.AddAvatar(79);
                                            data.FinalizeDialog();
                                        }
                                    }
                                }
                            }
                            else
                            {
                                if (client.Player.SubClass.StudyPoints < 800)
                                {
                                    data.AddText("You~don`t~have~800~Study~Points~to~take~the~sub-class.");
                                    data.AddOption("Alright.");
                                    data.AddAvatar(79);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.RemoveStudy(client, 800, stream);
                                    {
                                        client.Player.SubClass.LearnNewSubClass(Database.DBLevExp.Sort.ChiMaster, client, stream);
                                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                        //  Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~become~a~Chi~Master!", MsgMessage.ChatMode.TopLeftSystem);
                                        data.AddText("Welcome~to~the~Chi~Master~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Chi~Masters.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                                        data.AddOption("Thanks.");
                                        data.AddAvatar(79);
                                        data.FinalizeDialog();
                                    }
                                }
                            }
                        }
                        else
                        {
                            data.AddText("Aha,~you~are~already~a~Chi~Master,~remember?~I~suggest~you~focus~your~attention~on~upgrading~your~sub-class~level~now.");
                            data.AddOption("Oh.");
                            data.AddAvatar(79);
                            data.FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.LeadWrangler)]
        public static void LeadWrangler(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("Hey,~there!~Let~me~tell~you~about~the~joys~of~the~Wrangler!~Wranglers~are~able~to~equip~special~armor~on~their~mounts.~As~their~Sub-Class~level~improves,");
                        data.AddText("~their~Max~HP~increases.~Isn`t~it~great?~Would~you~like~to~join~us?");
                        data.AddOption("Yes,~I`d~like~to~join.", 1);
                        data.AddOption("I`d~like~to~get~promoted.", 7);
                        data.AddOption("How~can~I~get~promoted?", 5);
                        data.AddOption("Not~my~concern.");
                        data.AddAvatar(233);
                        data.FinalizeDialog();
                        break;
                    }
                case 7:
                    {
                        if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Wrangler) < 1)
                        {
                            data.AddText("You`re~not~a~Wrangler~yet,~and~can`t~get~promoted.~Would~you~like~to~become~a~Wrangler?");
                            data.AddOption("Yes,~I`d~like~to~join.", 1);
                            data.AddOption("Not~now.");
                            data.AddAvatar(233);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Wrangler) == 1)
                            {
                                data.AddText("To~get~promoted~to~Phase~2~and~be~able~to~equip~better~mount~armor,~your~character~should~reach~Level~90~and~your~Sub-Class~reach~Level~2.");
                                data.AddText("~Have~you~met~all~these~requirements?");
                                data.AddOption("Yup!", 8);
                                data.AddOption("Nope.");
                                data.AddAvatar(233);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Wrangler) == 2)
                                {
                                    data.AddText("To~get~promoted~to~Phase~3~and~be~able~to~equip~better~mount~armor,~your~character~should~reach~Level~110~and~your~Sub-Class~at~Level~3.");
                                    data.AddText("~Have~you~met~all~these~requirements?");
                                    data.AddOption("Yup!", 9);//90028189
                                    data.AddOption("Nope.");
                                    data.AddAvatar(233);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Wrangler) == 3)
                                    {
                                        data.AddText("To~get~promoted~to~Phase~4~and~be~able~to~equip~better~mount~armor,~your~character~should~reach~Level~120~and~your~Sub-Class~at~Level~4.");
                                        data.AddText("~Have~you~met~all~these~requirements?");
                                        data.AddOption("Yup!", 10);//90028239
                                        data.AddOption("Nope.");
                                        data.AddAvatar(233);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Wrangler) == 4)
                                        {
                                            data.AddText("To~get~promoted~to~Phase~5~and~be~able~to~equip~better~mount~armor,~you~should~meet~the~following~requirements:~Be~Reborn~once,~Character~Level~90,~and~Sub-Class~Level~5.");
                                            data.AddText("~Have~you~met~all~these~requirements?");
                                            data.AddOption("Yup!", 11);
                                            data.AddOption("Nope.");
                                            data.AddAvatar(233);
                                            data.FinalizeDialog();
                                        }
                                        else
                                        {
                                            if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Wrangler) == 5)
                                            {
                                                data.AddText("To~get~promoted~to~Phase~6~and~be~able~to~equip~better~mount~armor,~you~should~meet~the~following~requirements:~Be~Reborn~once,~Character~Level~110,~and~Sub-Class~Level~6.");
                                                data.AddText("~Have~you~met~all~these~requirements?");
                                                data.AddOption("Yup!", 12);
                                                data.AddOption("Nope.");
                                                data.AddAvatar(233);
                                                data.FinalizeDialog();
                                            }
                                            else
                                            {
                                                if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Wrangler) == 6)
                                                {
                                                    data.AddText("To~get~promoted~to~Phase~7~and~be~able~to~equip~better~mount~armor,~you~should~meet~the~following~requirements:~Be~Reborn~once,~Character~Level~120,~and~Sub-Class~Level~7.");
                                                    data.AddText("~Have~you~met~all~these~requirements?");
                                                    data.AddOption("Yup!", 13);
                                                    data.AddOption("Nope.");
                                                    data.AddAvatar(233);
                                                    data.FinalizeDialog();
                                                }
                                                else
                                                {
                                                    if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Wrangler) == 7)
                                                    {
                                                        data.AddText("To~get~promoted~to~Phase~8~and~be~able~to~equip~better~mount~armor,~you~should~meet~the~following~requirements:~Be~Reborn~twice,~Character~Level~120,~and~Sub-Class~Level~8.");
                                                        data.AddText("~Have~you~met~all~these~requirements?");
                                                        data.AddOption("Yup!", 14);
                                                        data.AddOption("Nope.");
                                                        data.AddAvatar(233);
                                                        data.FinalizeDialog();
                                                    }
                                                    else
                                                    {
                                                        if (client.Player.SubClass.GetClassPhrase(Database.DBLevExp.Sort.Wrangler) == 8)
                                                        {
                                                            data.AddText("To~get~promoted~to~Phase~9~and~be~able~to~equip~better~mount~armor,~you~should~meet~the~following~requirements:~Be~Reborn~twice,~Character~Level~130,~and~Sub-Class~Level~9.");
                                                            data.AddText("~Have~you~met~all~these~requirements?");
                                                            data.AddOption("Yup!", 15);
                                                            data.AddOption("Nope.");
                                                            data.AddAvatar(233);
                                                            data.FinalizeDialog();
                                                        }
                                                        else
                                                        {
                                                            data.AddText("You`ve~reached~the~highest~phase!~There~is~nothing~else~I~have~to~teach~you.~Go~forth~and~make~us~proud!");
                                                            data.AddOption("Bye.");
                                                            data.AddAvatar(233);
                                                            data.FinalizeDialog();
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        break;
                    }
                case 15:
                    {
                        if (client.Player.Level < 130)
                        {
                            data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("I~see.");
                            data.AddAvatar(233);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Wrangler) < 9)
                            {
                                data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("I~see.");
                                data.AddAvatar(233);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Reborn < 2)
                                {
                                    data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("I~see.");

                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Wrangler, 9, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~become~a~P9~Wrangler!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("Congratulations!~You`ve~been~promoted~to~a~P9~Wrangler!");
                                    data.AddOption("Thanks.");
                                    data.AddAvatar(233);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        break;
                    }
                case 14:
                    {
                        if (client.Player.Level < 120)
                        {
                            data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("I~see.");
                            data.AddAvatar(233);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Wrangler) < 8)
                            {
                                data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("I~see.");
                                data.AddAvatar(233);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Reborn < 2)
                                {
                                    data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("I~see.");
                                    data.AddAvatar(233);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Wrangler, 8, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~become~a~P8~Wrangler!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("Congratulations!~You`ve~been~promoted~to~P8~Wrangler!");
                                    data.AddOption("Thanks.");
                                    data.AddAvatar(233);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        break;
                    }
                case 13:
                    {
                        if (client.Player.Reborn < 2)
                        {
                            if (client.Player.Level < 110)
                            {
                                data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("I~see.");
                                data.AddAvatar(233);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Wrangler) < 7)
                                {
                                    data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("I~see.");
                                    data.AddAvatar(233);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.Reborn < 1)
                                    {
                                        data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                                        data.AddOption("I~see.");
                                        data.AddAvatar(233);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Wrangler, 7, client, stream);
                                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                        //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~become~a~P7~Wrangler!", MsgMessage.ChatMode.TopLeftSystem);
                                        data.AddText("Congratulations!~You`ve~been~promoted~to~P7~Wrangler!");
                                        data.AddOption("Thanks.");
                                        data.AddAvatar(233);
                                        data.FinalizeDialog();
                                    }
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Wrangler) < 7)
                            {
                                data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("I~see.");
                                data.AddAvatar(233);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Reborn < 1)
                                {
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Wrangler, 7, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //   Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~become~a~P7~Wrangler!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("Congratulations!~You`ve~been~promoted~to~P7~Wrangler!");
                                    data.AddOption("Thanks.");
                                    data.AddAvatar(233);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        break;
                    }
                case 12:
                    {
                        if (client.Player.Reborn < 2)
                        {
                            if (client.Player.Level < 110)
                            {
                                data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("I~see.");
                                data.AddAvatar(233);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Wrangler) < 6)
                                {
                                    data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("I~see.");
                                    data.AddAvatar(233);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.Reborn < 1)
                                    {
                                        data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                                        data.AddOption("I~see.");
                                        data.AddAvatar(233);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Wrangler, 6, client, stream);
                                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                        //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~become~a~P6~Wrangler!", MsgMessage.ChatMode.TopLeftSystem);
                                        data.AddText("Congratulations!~You`ve~been~promoted~to~a~P6~Wrangler!");
                                        data.AddOption("Thanks.");
                                        data.AddAvatar(233);
                                        data.FinalizeDialog();
                                    }
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Wrangler) < 6)
                            {
                                data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("I~see.");
                                data.AddAvatar(233);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Reborn < 1)
                                {
                                    data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("I~see.");
                                    data.AddAvatar(233);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Wrangler, 6, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //    Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~become~a~P6~Wrangler!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("Congratulations!~You`ve~been~promoted~to~a~P6~Wrangler!");
                                    data.AddOption("Thanks.");
                                    data.AddAvatar(233);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        break;
                    }
                case 11:
                    {
                        if (client.Player.Reborn < 2)
                        {
                            if (client.Player.Level < 90)
                            {
                                data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("I~see.");
                                data.AddAvatar(233);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Wrangler) < 5)
                                {
                                    data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("I~see.");
                                    data.AddAvatar(233);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.Reborn < 1)
                                    {
                                        data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                                        data.AddOption("I~see.");
                                        data.AddAvatar(233);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Wrangler, 5, client, stream);
                                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                        //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~become~a~P5~Wrangler!", MsgMessage.ChatMode.TopLeftSystem);
                                        data.AddText("Congratulations!~You`ve~been~promoted~to~a~P5~Wrangler!");
                                        data.AddOption("Thanks.");
                                        data.AddAvatar(233);
                                        data.FinalizeDialog();
                                    }
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Wrangler) < 5)
                            {
                                data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("I~see.");
                                data.AddAvatar(233);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Reborn < 1)
                                {
                                    data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("I~see.");
                                    data.AddAvatar(233);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Wrangler, 5, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //     Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~become~a~P5~Wrangler!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("Congratulations!~You`ve~been~promoted~to~a~P5~Wrangler!");
                                    data.AddOption("Thanks.");
                                    data.AddAvatar(233);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        break;
                    }
                case 10:
                    {
                        if (client.Player.Reborn < 1)
                        {
                            if (client.Player.Level < 120)
                            {
                                data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("I~see.");
                                data.AddAvatar(233);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Wrangler) < 4)
                                {
                                    data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("I~see.");
                                    data.AddAvatar(233);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Wrangler, 4, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //   Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~become~a~P4~Wrangler!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("Congratulations!~You`ve~been~promoted~to~a~P4~Wrangler!");
                                    data.AddOption("Thanks.");
                                    data.AddAvatar(233);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Wrangler) < 4)
                            {
                                data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("I~see.");
                                data.AddAvatar(233);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Wrangler, 4, client, stream);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~become~a~P4~Wrangler!", MsgMessage.ChatMode.TopLeftSystem);
                                data.AddText("Congratulations!~You`ve~been~promoted~to~a~P4~Wrangler!");
                                data.AddOption("Thanks.");
                                data.AddAvatar(233);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 9:
                    {
                        if (client.Player.Reborn < 1)
                        {
                            if (client.Player.Level < 110)
                            {
                                data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("I~see.");
                                data.AddAvatar(233);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Wrangler) < 3)
                                {
                                    data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("I~see.");
                                    data.AddAvatar(233);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Wrangler, 3, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~become~a~P3~Wrangler!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("Congratulations!~You`ve~been~promoted~to~a~P3~Wrangler!");
                                    data.AddOption("Thanks.");
                                    data.AddAvatar(233);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Wrangler) < 3)
                            {
                                data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("I~see.");
                                data.AddAvatar(233);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Wrangler, 3, client, stream);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~become~a~P3~Wrangler!", MsgMessage.ChatMode.TopLeftSystem);
                                data.AddText("Congratulations!~You`ve~been~promoted~to~a~P3~Wrangler!");
                                data.AddOption("Thanks.");
                                data.AddAvatar(233);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 8:
                    {
                        if (client.Player.Reborn < 1)
                        {
                            if (client.Player.Level < 90)
                            {
                                data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("I~see.");
                                data.AddAvatar(233);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Wrangler) < 2)
                                {
                                    data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                                    data.AddOption("I~see.");
                                    data.AddAvatar(233);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Wrangler, 2, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    //Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~become~a~P2~Wrangler!", MsgMessage.ChatMode.TopLeftSystem);
                                    data.AddText("Congratulations!~You`ve~been~promoted~to~a~P2~Wrangler!");
                                    data.AddOption("Thanks.");
                                    data.AddAvatar(233);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Wrangler) < 2)
                            {
                                data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                                data.AddOption("I~see.");
                                data.AddAvatar(233);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                client.Player.SubClass.SetPhrase(Database.DBLevExp.Sort.Wrangler, 2, client, stream);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                //  Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~become~a~P2~Wrangler!", MsgMessage.ChatMode.TopLeftSystem);
                                data.AddText("Congratulations!~You`ve~been~promoted~to~a~P2~Wrangler!");
                                data.AddOption("Thanks.");
                                data.AddAvatar(233);
                                data.FinalizeDialog();
                            }

                        }
                        break;
                    }
                case 5:
                    {
                        data.AddText("Each~Sub-Class~has~9~Phases.~The~higher~the~phase~is,~the~more~bonus~effects~you~will~get.");
                        data.AddText("~But~keep~in~mind~that~these~Sub-Classes~also~have~a~level~system,~and~you~need~to~level~them~up~before~you~can~get~promoted.~You~can~level~up~your~Sub-Class~by~gaining~Study~Points.");
                        data.AddOption("How~can~I~get~Study~Points?", 6);
                        data.AddOption("I~see.");
                        data.AddAvatar(233);
                        data.FinalizeDialog();
                        break;
                    }
                case 6:
                    {
                        data.AddText("Well,~the~only~way~to~get~those~points~is~to~read~the~Sub-Class~books,~such~as~the~Diligence~Book.~When~you`ve~gained~enough~Study~Points,");
                        data.AddText("~open~the~Sub-Class~sheet~from~the~character~panel~and~level~up~the~Sub-Class,~there.~Monsters~in~the~wild~are~always~bothering~young~adventurers,");
                        data.AddText("~so~you~might~find~some~books~after~you~kill~them.");
                        data.AddOption("Got~it.");
                        data.AddAvatar(233);
                        data.FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        data.AddText("Wranglers~are~able~to~equip~special~armor~on~their~mounts.~If~you`ve~reached~Level~40,~you~can~pay~40~Saddles~or~800~Study~Points~to~join~us.~");
                        data.AddText("~After~being~a~Wrangler,~you~can~enhance~your~sub-class~skill~on~`Status`~sheet.~Remember,~a~certain~sub-class~level~is~required~to~promote~the~phase~of~your~sub-class.");
                        data.AddOption("Pay~40~Saddles~to~join.", 2);
                        data.AddOption("Pay~800~Study~Points~to~join.", 3);
                        data.AddOption("I~see.");
                        data.AddAvatar(233);
                        data.FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        data.AddText("~~~~Are~you~sure~you~want~to~pay~800~Study~Points~to~join~us?");
                        data.AddOption("Yes,~I`ve~decided!", 4);
                        data.AddOption("No,~I~changed~my~mind.");
                        data.AddAvatar(233);
                        data.FinalizeDialog();
                        break;
                    }
                case 4:
                    {
                        if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Wrangler) < 1)
                        {
                            if (client.Player.Reborn < 1)
                            {
                                if (client.Player.Level < 70)
                                {
                                    data.AddText("I`m~sorry,~but~you~have~to~reach~at~least~Level~70~to~join~our~fine~group~of~adventurers.");
                                    data.AddOption("Alright.");
                                    data.AddAvatar(233);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.SubClass.StudyPoints < 800)
                                    {
                                        data.AddText("You~don`t~have~800~Study~Points~to~take~the~sub-class.");
                                        data.AddOption("Alright.");
                                        data.AddAvatar(233);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        client.Player.SubClass.RemoveStudy(client, 800, stream);

                                        client.Player.SubClass.LearnNewSubClass(Database.DBLevExp.Sort.Wrangler, client, stream);
                                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                        //   Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~joined~up~with~the~Wranglers!", MsgMessage.ChatMode.TopLeftSystem);
                                        data.AddText("Each~Sub-Class~has~9~phases.~If~you~want~to~get~promoted~one~day,~you`ll~come~talk~to~me.");
                                        data.AddOption("I~will.");
                                        data.AddAvatar(233);
                                        data.FinalizeDialog();

                                    }
                                }
                            }
                            else
                            {
                                if (client.Player.SubClass.StudyPoints < 800)
                                {
                                    data.AddText("You~don`t~have~800~Study~Points~to~take~the~sub-class.");
                                    data.AddOption("Alright.");
                                    data.AddAvatar(233);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.SubClass.RemoveStudy(client, 800, stream);
                                    {
                                        client.Player.SubClass.LearnNewSubClass(Database.DBLevExp.Sort.Wrangler, client, stream);
                                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                        // Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~joined~up~with~the~Wranglers!", MsgMessage.ChatMode.TopLeftSystem);
                                        data.AddText("Each~Sub-Class~has~9~phases.~If~you~want~to~get~promoted~one~day,~you`ll~come~talk~to~me.");
                                        data.AddOption("I~will.");
                                        data.AddAvatar(233);
                                        data.FinalizeDialog();
                                    }
                                }
                            }
                        }
                        else
                        {
                            data.AddText("Aha,~you~are~already~a~Wrangler,~remember?~I~suggest~you~focus~your~attention~on~upgrading~your~standing~with~us!");
                            data.AddOption("Thanks~for~reminding~me.");
                            data.AddAvatar(233);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.Player.SubClass.GetClassLevel(Database.DBLevExp.Sort.Wrangler) < 1)
                        {
                            if (client.Player.Reborn < 1)
                            {
                                if (client.Player.Level < 70)
                                {
                                    data.AddText("I`m~sorry,~but~you~have~to~reach~at~least~Level~70~to~join~our~fine~group~of~adventurers.");
                                    data.AddOption("Alright.");
                                    data.AddAvatar(233);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Inventory.Contain(723903, 40))
                                    {
                                        if (client.Inventory.Remove(723903, 40, stream))
                                        {
                                            client.Player.SubClass.LearnNewSubClass(Database.DBLevExp.Sort.Wrangler, client, stream);
                                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                            // Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~joined~up~with~the~Wranglers!", MsgMessage.ChatMode.TopLeftSystem);
                                            data.AddText("Each~Sub-Class~has~9~phases.~If~you~want~to~get~promoted~one~day,~you`ll~come~talk~to~me.");
                                            data.AddOption("I~will.");
                                            data.AddAvatar(233);
                                            data.FinalizeDialog();
                                        }
                                    }
                                    else
                                    {
                                        data.AddText("Sorry,~but~I~don`t~see~40~Saddles~in~your~inventory.~You~should~bring~them~with~you,~next~time.");
                                        data.AddOption("OK.");
                                        data.AddAvatar(233);
                                        data.FinalizeDialog();
                                    }
                                }
                            }
                            else
                            {
                                if (client.Inventory.Contain(723903, 40))
                                {
                                    if (client.Inventory.Remove(723903, 40, stream))
                                    {
                                        client.Player.SubClass.LearnNewSubClass(Database.DBLevExp.Sort.Wrangler, client, stream);
                                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                        // Role.Core.SendGlobalMessage(stream, "" + client.Player.Name + "~has~joined~up~with~the~Wranglers!", MsgMessage.ChatMode.TopLeftSystem);
                                        data.AddText("Each~Sub-Class~has~9~phases.~If~you~want~to~get~promoted~one~day,~you`ll~come~talk~to~me.");
                                        data.AddOption("I~will.");
                                        data.AddAvatar(233);
                                        data.FinalizeDialog();
                                    }
                                }
                                else
                                {
                                    data.AddText("Sorry,~but~I~don`t~see~40~Saddles~in~your~inventory.~You~should~bring~them~with~you,~next~time.");
                                    data.AddOption("OK.");
                                    data.AddAvatar(233);
                                    data.FinalizeDialog();
                                }
                            }
                        }
                        else
                        {
                            data.AddText("Aha,~you~are~already~a~Wrangler,~remember?~I~suggest~you~focus~your~attention~on~upgrading~your~standing~with~us!");
                            data.AddOption("Thanks~for~reminding~me.");
                            data.AddAvatar(233);
                            data.FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.SubClassManager)]
        public static void SubClassManager(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("In addition to the existing 7 classes, there are 7 sub-classes for you to choose, which will grant you many bonus effects.");
                        data.AddText(" The 7 sub-classes are Apothecary, Chi Master, Martial Artist, Warlock, Sage, Performer, Lead Wrangler. Do you want to choose a sub-class to");
                        data.AddText("~enhance the strength of your character?");
                        data.AddOption("Sub-Class~Hall", 1);
                        data.AddOption("See~you~later.");
                        data.AddAvatar(76);
                        data.FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        client.Teleport(51, 71, 6072);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.ArenaGuard)]
        public static void ArenaGuard(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("A suited weapon is a thing that you can`t do without nowadays. I keep faith in it.");
                        data.AddOption("Attractive.");
                        data.AddAvatar(94);
                        data.FinalizeDialog();
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.IronsmithChou)]
        public static void IronsmithChou(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I`m actually a dead man. Hey, don`t be afraid. Before I died, I had made numerous helmets");
                        data.AddText("~for the emperor and his generals. But one day, I made a big mistake and were killed. After that, I");
                        data.AddText("~decided to make helmets for anyone who is honest and diligent.");
                        data.AddOption("That`s~good.");
                        data.AddAvatar(85);
                        data.FinalizeDialog();
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.PrizeOfficer2)]
        public static void PrizeOfficer2(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("All your rewards have been sent to your mail. Don`t forget to check and see whether you have any reward not claimed.");
                        data.AddOption("Okay.");
                        data.AddAvatar(10);
                        data.FinalizeDialog();
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.BirdExorcist)]
        public static void BirdExorcist(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Sigh, I should have felt the danger earlier. The Ancient Devil sealed away a thousand years ago is gonna wake up! I`m afraid a war is inevitable.");
                        data.AddOption("What~can~I~do?", 1);
                        data.AddOption("Goodness!~I`d~better~flee!");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        data.AddText("Bring your people together, and collect amulets of 7 classes by completing the given tests in the Ancient Island. If you have Ninjas, Monks, Saints or Pirates in your team,");
                        data.AddText("~they`ll get the amulets after finishing the test of any classes.");
                        data.AddOption("Okay,~what~to~do~next?", 2);
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        data.AddText("If your team holds a Monk Amulet, use that amulet to combine all the other amulets. If not, ask any one in your team to take all the 7 amulets and turn on a shining yellow switch");
                        data.AddText("~to bring out the Ancient Devil. Kill the devil before its power fully recovered! So, what do you say?");
                        data.AddOption("I~love~challenge!", 3);
                        data.AddOption("I~need~a~break!");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        if (client.Player.Level < 50)
                        {
                            client.CreateBoxDialog("You~should~be~Level~50~or~above~to~take~this~quest.");
                        }
                        else
                        {
                            client.Teleport(191, 232, 1052);
                        }
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.CommanderKerry)]
        public static void CommanderKerry(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.Felix, client.Player.Class, 1825);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.GuideZhang, client.Player.Class, 1826);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("My friend. Can you tell Felix that I miss him so much?");
                            data.AddOption("Yep.~I~will.", 1);
                            data.AddOption("I`m~just~passing~by.");
                            data.AddAvatar(43);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                    && client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted) == false)
                            {
                                data.AddText("My friend. Can you tell Felix that I miss him so much?");
                                data.AddOption("Yep.~I~will.", 20);
                                data.AddOption("I`m~just~passing~by.");
                                data.AddAvatar(43);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("My friend. Can you tell Felix that I miss him so much?");
                                data.AddOption("Yep.~I~will.", 30);
                                data.AddOption("I`m~just~passing~by.");
                                data.AddAvatar(43);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("My friend. Can you tell Felix that I miss him so much?");
                            data.AddOption("Yep.~I~will.", 1);//1273300
                            data.AddOption("I`m~just~passing~by.");
                            data.AddAvatar(43);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 30:
                    {
                        data.AddText("My days are numbered...will you tell him that I am really sorry, and I miss him very much? Will you?");
                        data.AddOption("OK.", 12);
                        data.AddAvatar(43);
                        data.FinalizeDialog();
                        break;
                    }
                case 20:
                    {
                        data.AddText("My days are numbered...will you tell him that I am really sorry, and I miss him very much? Will you?");
                        data.AddOption("OK.", 12);
                        data.AddAvatar(43);
                        data.FinalizeDialog();
                        break;
                    }

                case 1:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1, 5))
                        {
                            data.AddText("I don`t even know who you are. Why do you want to kill me?");
                            data.AddOption("For~Felix!", 4);
                            data.AddAvatar(43);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1, 4))
                        {
                            data.AddText("Be careful and be quick...Step into 1 of the eyes of the Maze Puzzle in 10 seconds and I will send you out to Felix...");
                            data.AddOption("I`ll~try.", 10);
                            data.AddAvatar(43);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1, 3))
                        {
                            data.AddText("Be careful and be quick...Step into 2 of the eyes of the Maze Puzzle in 10 seconds and I will send you out to Felix...");
                            data.AddOption("I`ll~try.", 10);
                            data.AddAvatar(43);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1, 2))
                        {
                            data.AddText("Be careful and be quick...Step into 3 of the eyes of the Maze Puzzle in 10 seconds and I will send you out to Felix...");
                            data.AddOption("I`ll~try.", 10);
                            data.AddAvatar(43);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1, 1))
                        {
                            data.AddText("Be careful and be quick...Step into 4 of the eyes of the Maze Puzzle in 10 seconds and I will send you out to Felix...");
                            data.AddOption("I`ll~try.", 10);
                            data.AddAvatar(43);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("What did you come for, young hero?");
                            data.AddOption("For~your~life.", 2);
                            data.AddAvatar(43);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 10:
                    {
                        client.CreateBoxDialog("Get ready for the Maze Puzzle.");
                        client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 0, 5);
                        break;
                    }
                case 4:
                    {
                        data.AddText("Oh, Felix! My son! He is still alive. I miss him so much!");
                        data.AddOption("What?", 5);
                        data.AddAvatar(43);
                        data.FinalizeDialog();
                        break;
                    }
                case 5:
                    {
                        data.AddText("It is a long story. Many years ago, I mistakenly killed Felix`s birth parents, that is why I took to raise him up. Felix finally got to know that it was me,");
                        data.AddText("~and he will never forgive me. I know that.");
                        data.AddOption("I~see.", 6);
                        data.AddAvatar(43);
                        data.FinalizeDialog();
                        break;
                    }
                case 6:
                    {
                        data.AddText("My days are numbered...will you tell him that I am really sorry, and I miss him very much? Will you?");
                        data.AddOption("OK.", 11);
                        data.AddAvatar(43);
                        data.FinalizeDialog();//finish quest here!!
                        break;
                    }
                case 11:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Remove(710567, 1, stream);
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);

                            client.CreateBoxDialog("You~received~100~Silver.");

                            data.AddText("My days are numbered...will you tell him that I am really sorry, and I miss him very much? Will you?");
                            data.AddOption("OK.", 12);
                            data.AddAvatar(43);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 12:
                    {
                        client.Teleport(671, 782, 1015);
                        client.CreateBoxDialog("You~have~been~teleported~out~of~the~Bandit~Chamber.~Now~tell~Felix~the~whole~story.");
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
                case 3:
                    {
                        client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 0, 1);
                        client.CreateBoxDialog("Step into 5 of the eyes of the Maze Puzzle within 10 seconds and break the Maze Puzzle.");
                        break;
                    }
                case 2:
                    {
                        data.AddText("For my life? What makes you so cocky...Hey, see what, if you could step into 5 of the eyes of the Maze Puzzle within 10 seconds");
                        data.AddText("~I will give you a chance.");
                        data.AddOption("Interesting.", 3);
                        data.AddAvatar(43);
                        data.FinalizeDialog();
                        break;
                    }
            }
        }


        [NpcAttribute(NpcID.GuideZhang)]
        public static void GuideZhang(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.Felix, client.Player.Class, 1825);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.GuideZhang, client.Player.Class, 1826);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Sorry, Commander Kerry is busy, and you don`t have the Golden Token. You`d better leave.");
                            data.AddOption("Hey,~it`s~an~important~thing.", 1);
                            data.AddOption("OK.");
                            data.AddAvatar(13);
                            data.FinalizeDialog();

                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                      && client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            data.AddText("Sorry, Commander Kerry is busy, and you don`t have the Golden Token. You`d better leave.");
                            data.AddOption("OK.");
                            data.AddAvatar(13);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Sorry, Commander Kerry is busy, and you don`t have the Golden Token. You`d better leave.");
                            data.AddOption("OK.");
                            data.AddAvatar(13);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Player.OnTransform)
                        {
                            if (client.Inventory.Contain(710567, 1))
                            {
                                data.AddText("What? You have the Golden Token. I will teleport you to Commander Kerry, now.");
                                data.AddOption("OK.", 2);
                                data.AddAvatar(13);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, Commander Kerry is busy, and you don`t have the Golden Token. You`d better leave.");
                                data.AddOption("OK.");
                                data.AddAvatar(13);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            if (client.Inventory.Contain(710567, 1))
                            {
                                data.AddText("Though you have the Golden Token, you are not a bandit. I can`t teleport you to Commander Kerry.");
                                data.AddOption("I~see.");
                                data.AddAvatar(13);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, Commander Kerry is busy, and you don`t have the Golden Token. You`d better leave.");
                                data.AddOption("OK.");
                                data.AddAvatar(13);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Contain(710567, 1))
                        {
                            client.Teleport(78, 57, 1818);
                            client.CreateBoxDialog("You were teleported to the Bandit Chamber.");
                            client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, Commander Kerry is busy, and you don`t have the Golden Token. You`d better leave.");
                            data.AddOption("OK.");
                            data.AddAvatar(13);
                            data.FinalizeDialog();
                        }

                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.Felix)]
        public static void Felix(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaskmasterChang, client.Player.Class, 1819);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Felix, client.Player.Class, 1820);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Felix, client.Player.Class, 1821);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Felix, client.Player.Class, 1822);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Felix, client.Player.Class, 1823);
            var ActiveQuest6 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Felix, client.Player.Class, 1824);
            var ActiveQuest7 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Felix, client.Player.Class, 1825);
            var ActiveQuest8 = Database.QuestInfo.GetFinishQuest((uint)NpcID.GuideZhang, client.Player.Class, 1826);
            var ActiveQuest9 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Felix, client.Player.Class, 1827);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Hero, I need yor help! Years ago, my parents were killed by Commander Kerry. I have to avenge my parents,");
                            data.AddText("~but Commander Kerry is so powerful that I can`t defeat him by myself. Can you help me?");
                            data.AddOption("Sure.~I~can~do~it.", 1);
                            data.AddOption("It`s~none~of~my~business.");
                            data.AddAvatar(117);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                        && client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted) == false)
                            {
                                data.AddText("Hero, I need yor help! Years ago, my parents were killed by Commander Kerry. I have to avenge my parents,");
                                data.AddText("~but Commander Kerry is so powerful that I can`t defeat him by myself. Can you help me?");
                                data.AddOption("Sure.~I~can~do~it.", 4);
                                data.AddOption("It`s~none~of~my~business.");
                                data.AddAvatar(117);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Hero, I need yor help! Years ago, my parents were killed by Commander Kerry. I have to avenge my parents,");
                                data.AddText("~but Commander Kerry is so powerful that I can`t defeat him by myself. Can you help me?");
                                data.AddOption("Sure.~I~can~do~it.", 5);
                                data.AddOption("It`s~none~of~my~business.");
                                data.AddAvatar(117);
                                data.FinalizeDialog();
                            }

                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                   && client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted) == false)
                            {
                                data.AddText("Hero, I need yor help! Years ago, my parents were killed by Commander Kerry. I have to avenge my parents,");
                                data.AddText("~but Commander Kerry is so powerful that I can`t defeat him by myself. Can you help me?");
                                data.AddOption("Sure.~I~can~do~it.", 8);
                                data.AddOption("It`s~none~of~my~business.");
                                data.AddAvatar(117);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Hero, I need yor help! Years ago, my parents were killed by Commander Kerry. I have to avenge my parents,");
                                data.AddText("~but Commander Kerry is so powerful that I can`t defeat him by myself. Can you help me?");
                                data.AddOption("Sure.~I~can~do~it.", 9);
                                data.AddOption("It`s~none~of~my~business.");
                                data.AddAvatar(117);
                                data.FinalizeDialog();
                            }
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
             && client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted) == false)
                            {
                                data.AddText("Hero, I need yor help! Years ago, my parents were killed by Commander Kerry. I have to avenge my parents,");
                                data.AddText("~but Commander Kerry is so powerful that I can`t defeat him by myself. Can you help me?");
                                data.AddOption("Sure.~I~can~do~it.", 12);
                                data.AddOption("It`s~none~of~my~business.");
                                data.AddAvatar(117);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Hero, I need yor help! Years ago, my parents were killed by Commander Kerry. I have to avenge my parents,");
                                data.AddText("~but Commander Kerry is so powerful that I can`t defeat him by myself. Can you help me?");
                                data.AddOption("Sure.~I~can~do~it.", 13);
                                data.AddOption("It`s~none~of~my~business.");
                                data.AddAvatar(117);
                                data.FinalizeDialog();
                            }
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
         && client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted) == false)
                            {
                                data.AddText("Hero, I need yor help! Years ago, my parents were killed by Commander Kerry. I have to avenge my parents,");
                                data.AddText("~but Commander Kerry is so powerful that I can`t defeat him by myself. Can you help me?");
                                data.AddOption("Sure.~I~can~do~it.", 16);
                                data.AddOption("It`s~none~of~my~business.");
                                data.AddAvatar(117);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Hero, I need yor help! Years ago, my parents were killed by Commander Kerry. I have to avenge my parents,");
                                data.AddText("~but Commander Kerry is so powerful that I can`t defeat him by myself. Can you help me?");
                                data.AddOption("Sure.~I~can~do~it.", 17);
                                data.AddOption("It`s~none~of~my~business.");
                                data.AddAvatar(117);
                                data.FinalizeDialog();
                            }
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
   && client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted) == false)
                            {
                                data.AddText("Hero, I need yor help! Years ago, my parents were killed by Commander Kerry. I have to avenge my parents,");
                                data.AddText("~but Commander Kerry is so powerful that I can`t defeat him by myself. Can you help me?");
                                data.AddOption("Sure.~I~can~do~it.", 20);
                                data.AddOption("It`s~none~of~my~business.");
                                data.AddAvatar(117);
                                data.FinalizeDialog();
                            }

                            else
                            {
                                data.AddText("Hero, I need yor help! Years ago, my parents were killed by Commander Kerry. I have to avenge my parents,");
                                data.AddText("~but Commander Kerry is so powerful that I can`t defeat him by myself. Can you help me?");
                                data.AddOption("Sure.~I~can~do~it.", 21);
                                data.AddOption("It`s~none~of~my~business.");
                                data.AddAvatar(117);
                                data.FinalizeDialog();
                            }

                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
&& client.Player.QuestGUI.CheckQuest(ActiveQuest7.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest7.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted) == false)
                            {
                                data.AddText("Hero, I need yor help! Years ago, my parents were killed by Commander Kerry. I have to avenge my parents,");
                                data.AddText("~but Commander Kerry is so powerful that I can`t defeat him by myself. Can you help me?");
                                data.AddOption("Sure.", 24);
                                data.AddOption("It`s~none~of~my~business.");
                                data.AddAvatar(117);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Hero, I need yor help! Years ago, my parents were killed by Commander Kerry. I have to avenge my parents,");
                                data.AddText("~but Commander Kerry is so powerful that I can`t defeat him by myself. Can you help me?");
                                data.AddOption("Sure.~I~can~do~it.", 25);
                                data.AddOption("It`s~none~of~my~business.");
                                data.AddAvatar(117);
                                data.FinalizeDialog();
                            }

                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest7.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
&& client.Player.QuestGUI.CheckQuest(ActiveQuest8.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest8.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("Hero, I need yor help! Years ago, my parents were killed by Commander Kerry. I have to avenge my parents,");
                                data.AddText("~but Commander Kerry is so powerful that I can`t defeat him by myself. Can you help me?");
                                data.AddOption("Sure.~I~can~do~it.", 30);
                                data.AddOption("It`s~none~of~my~business.");
                                data.AddAvatar(117);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Hero, I need yor help! Years ago, my parents were killed by Commander Kerry. I have to avenge my parents,");
                                data.AddText("~but Commander Kerry is so powerful that I can`t defeat him by myself. Can you help me?");
                                data.AddOption("It`s~none~of~my~business.");
                                data.AddAvatar(117);
                                data.FinalizeDialog();
                            }
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest8.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
&& client.Player.QuestGUI.CheckQuest(ActiveQuest9.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest9.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("Hero, I need yor help! Years ago, my parents were killed by Commander Kerry. I have to avenge my parents,");
                                data.AddText("~but Commander Kerry is so powerful that I can`t defeat him by myself. Can you help me?");
                                data.AddOption("Sure.~I~can~do~it.", 33);
                                data.AddOption("It`s~none~of~my~business.");
                                data.AddAvatar(117);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                client.CreateBoxDialog("You~are~heading~for~Taskmaster~Chang.");
                            }
                        }
                        else
                        {
                            data.AddText("Hero, I need yor help! Years ago, my parents were killed by Commander Kerry. I have to avenge my parents,");
                            data.AddText("~but Commander Kerry is so powerful that I can`t defeat him by myself. Can you help me?");
                            data.AddOption("It`s~none~of~my~business.");
                            data.AddAvatar(117);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 33:
                    {
                        data.AddText("I don`t know. I need some time to think about it. It just happened so suddenly that I`m totally confused now.");
                        data.AddText("~Thanks, you really helped me a lot. Now you can claim your rewards from Taskmaster Chang.");
                        data.AddOption("OK.", 32);
                        data.AddAvatar(117);
                        data.FinalizeDialog();
                        break;
                    }
                case 30:
                    {
                        data.AddText("Have I done all the things wrong? Commander Kerry really treated me well. Maybe there is no right or wrong in the world.");
                        data.AddOption("Do~you~want~to~go~back?", 31);
                        data.AddAvatar(117);
                        data.FinalizeDialog();
                        break;
                    }
                case 31:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest8.MissionId))
                        {
                            client.Player.Money += 6000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.GainExpBall(100);
                            client.SendSysMesage("You received 1 hour EXP and 6,000 Silver!");
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "recovery");

                            data.AddText("I don`t know. I need some time to think about it. It just happened so suddenly that I`m totally confused now.");
                            data.AddText("~Thanks, you really helped me a lot. Now you can claim your rewards from Taskmaster Chang.");
                            data.AddOption("OK.", 32);
                            data.AddAvatar(117);
                            data.FinalizeDialog();
                        }

                        break;
                    }
                case 32:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest9, 0);
                        client.CreateBoxDialog("You~are~heading~for~Taskmaster~Chang.");
                        break;
                    }
                case 25:
                    {
                        data.AddText("Great! You`ve collected all 5 tokens! Now I will compose them into 1 token. It is called the Token. All the Bandits will respect you once them see the token.");
                        data.AddText("~I will dress you just like a Bandit. Then you can meet with Guide Zhang, and he can teleport you to the Bandit Chamber. But you will");
                        data.AddText("~turn back after 2 minutes.");
                        data.AddOption("I~see.", 26);
                        data.AddOption("I~lost~the~token.", 27);
                        data.AddAvatar(117);
                        data.FinalizeDialog();
                        break;
                    }
                case 27:
                    {
                        if (client.Inventory.Contain(710567, 1))
                        {
                            data.AddText("Sorry, but you`ve had the token in your inventory.");
                            data.AddOption("I~forgot.");
                            data.AddAvatar(117);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("The token is very important. You should take good care of it.");
                            data.AddOption("Sorry.", 28);
                            data.AddAvatar(117);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 28:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.Inventory.Add(stream, 710567);
                            client.CreateBoxDialog("You received a Golden Token!");
                        }
                        else
                        {
                            client.CreateBoxDialog("Your inventory is full. You`ll need to make some room, first.");
                        }
                        break;
                    }
                case 26://trans
                    {
                        if (client.Player.OnTransform)
                        {
                            data.AddText("Guide Zhang (Bird Island, 636, 656) can teleport you to Commander Kerry in the Bandit Chamber.");
                            data.AddOption("I~see.");
                            data.AddAvatar(117);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.TransformInfo = new Role.ClientTransform(client.Player);
                            client.Player.TransformInfo.CreateTransform(stream, (uint)client.Player.HitPoints, 201, (int)90, 8213);
                            data.AddText("Now you look just like a bandit. You can find Guide Zhang (Bird Island, 636, 656) to teleport you to the Bandit Chamber. But the disguise will only last for 2 minutes.");
                            data.AddOption("OK.");
                            data.AddAvatar(117);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 24:
                    {

                        data.AddText("I will dress you just like a bandit. Then you can meet with Guide Zhang, and he can teleport you to the Bandit Chamber. But you will");
                        data.AddText("~turn back after 90 seonds.");
                        data.AddOption("I~see.", 23);
                        data.AddAvatar(117);
                        data.FinalizeDialog();
                        break;
                    }
                case 23:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (!client.Inventory.Contain(710567, 1))
                            {
                                client.Player.TransformInfo = new Role.ClientTransform(client.Player);
                                client.Player.TransformInfo.CreateTransform(stream, (uint)client.Player.HitPoints, 201, (int)90, 8213);
                                client.Player.QuestGUI.Accept(ActiveQuest7, 0);
                                client.CreateBoxDialog("You~received~a~Golden~Token~and~were~disguised~as~a~bandit,~and~it~will~only~last~for~2~minutes.");
                                client.Inventory.Add(stream, 710567);
                            }
                            else
                            {
                                client.CreateBoxDialog("You~received~a~Golden~Token~and~were~disguised~as~a~bandit,~and~it~will~only~last~for~2~minutes.");
                            }
                        }
                        else
                        {
                            data.AddText("You inventory is full. You`ll need to make some room, first.");
                            data.AddOption("OK.");
                            data.AddAvatar(117);
                            data.FinalizeDialog();
                        }

                        break;
                    }
                case 21:
                    {
                        if (client.Inventory.Contain(710566, 1))
                        {
                            data.AddText("Great! You`ve collected all 5 tokens! Now I will compose them into 1 Golden Token. All the Bandits will respect you once them see the token.");
                            data.AddOption("OK.", 22);//1273000
                            data.AddAvatar(117);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("If you can kill the Senior Bandit, you will have the chance to get the Scarlet Token.");
                            data.AddOption("I~see.");
                            data.AddAvatar(117);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 22:
                    {
                        if (client.Inventory.Contain(710566, 1))
                        {
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest6.MissionId))
                            {
                                client.Inventory.Remove(710566, 1, stream);
                                client.Player.Money += 100;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);

                                client.CreateBoxDialog("You~received~100~Silver.");
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "recovery");
                                data.AddText("I will dress you just like a bandit. Then you can meet with Guide Zhang, and he can teleport you to the Bandit Chamber. But you will");
                                data.AddText("~turn back after 90 seonds.");
                                data.AddOption("I~see.", 23);
                                data.AddAvatar(117);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("If you can kill the Senior Bandit, you will have the chance to get the Scarlet Token.");
                            data.AddOption("I~see.");
                            data.AddAvatar(117);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 20:
                    {
                        data.AddText("The Senior Bandits (Bird Island, 570, 416) has the Scarlet Token. He is much stronger than all the former Bandits, so you`ll need to pay more attention.");
                        data.AddText("~You`ll have the chance to get the token by killing him.");
                        data.AddOption("I~see.", 19);
                        data.AddAvatar(117);
                        data.FinalizeDialog();
                        break;
                    }
                case 17:
                    {
                        if (client.Inventory.Contain(710565, 1))
                        {
                            data.AddText("You are much stronger than I imagined. I think my revenge will succeed, soon! There is still one thing we need to find Commander Kerry.");
                            data.AddOption("What~is~it?", 18);//1272960
                            data.AddAvatar(117);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("The Bandit Deliverers appear around Bird Island (431, 453). Only killing 10 of them will the Pitch Token appears.");
                            data.AddOption("OK.");
                            data.AddAvatar(117);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 18:
                    {
                        if (client.Inventory.Contain(710565, 1))
                        {
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest5.MissionId))
                            {
                                client.Inventory.Remove(710565, 1, stream);
                                client.Player.Money += 100;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);

                                client.CreateBoxDialog("You~received~100~Silver.");
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "recovery");
                                data.AddText("The Senior Bandits (Bird Island, 570, 416) has the Scarlet Token. He is much stronger than all the former Bandits, so you`ll need to pay more attention.");
                                data.AddText("~You`ll have the chance to get the token by killing him.");
                                data.AddOption("I~see.", 19);
                                data.AddAvatar(117);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("The Bandit Deliverers appear around Bird Island (431, 453). Only killing 10 of them will the Pitch Token appears.");
                            data.AddOption("OK.");
                            data.AddAvatar(117);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 19:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest6, 0);
                        client.CreateBoxDialog("Kill~the~Senior~Bandits~(Bird~Island,~570~416).");
                        break;
                    }
                case 16:
                    {
                        data.AddText("Actually I don`t want you to fight against the Bandit Deliverers, but we have to get the Pitch Token. You`ll need to kill 10");
                        data.AddText("~Bandit Deliverers on Bird Island (525,~345) to get the Pitch Token.");
                        data.AddOption("I~see.", 15);
                        data.AddAvatar(117);
                        data.FinalizeDialog();
                        break;
                    }
                case 13:
                    {
                        if (client.Inventory.Contain(710564, 1))
                        {
                            data.AddText("Great! You`ve got the Black Token. Now, caccording to the information on it, the Pitch Token is held by the Bandit Deliverers.");
                            data.AddOption("What~should~I~do?", 14);//1272920
                            data.AddAvatar(117);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("I think only 10 Bandits and 1 Bandit Courier around Bird Island (316, 567) won`t be a trouble to you!");
                            data.AddText("~Kill them, and then you`ll get the Black Token.");
                            data.AddOption("I~see.");
                            data.AddAvatar(117);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 15:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest5, 0);
                        client.CreateBoxDialog("Kill~10~Bandit~Deliverers~on~Bird~Island~(525,~345).");
                        break;
                    }
                case 14:
                    {
                        if (client.Inventory.Contain(710564, 1))
                        {
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                            {
                                client.Inventory.Remove(710564, 1, stream);
                                client.Player.Money += 100;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);

                                client.CreateBoxDialog("You~received~100~Silver.");
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "recovery");

                                data.AddText("Actually I don`t want you to fight against the Bandit Deliverers, but we have to get the Pitch Token. You`ll need to kill 10");
                                data.AddText("~Bandit Deliverers on Bird Island (525,~345) to get the Pitch Token.");
                                data.AddOption("I~see.", 15);
                                data.AddAvatar(117);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("I think only 10 Bandits and 1 Bandit Courier around Bird Island (316, 567) won`t be a trouble to you!");
                            data.AddText("~Kill them, and then you`ll get the Black Token.");
                            data.AddOption("I~see.");
                            data.AddAvatar(117);
                            data.FinalizeDialog();
                        }

                        break;
                    }
                case 12:
                    {
                        data.AddText("The Indigo Token shows that a Bandit Courier has the Black Token, who is hiding among 10 Bandits. If you kill all the Bandits,");
                        data.AddText("~the Bandit Couriers will appear.");
                        data.AddOption("I~see.", 11);
                        data.AddAvatar(117);
                        data.FinalizeDialog();
                        break;
                    }
                case 9:
                    {
                        if (client.Inventory.Contain(710563, 1))
                        {
                            data.AddText("Great! You`ve found the Indigo Token! I must check it carefully. Thanks a lot.");
                            data.AddOption("You`re~welcome.", 10);//1272880
                            data.AddAvatar(117);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Well, be patient! You will find the Indigo Token if you kill enough Bandits L98 (around Bird Island 455, 466).");
                            data.AddOption("Alright.");
                            data.AddAvatar(117);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 10:
                    {
                        if (client.Inventory.Contain(710563, 1))
                        {
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                            {
                                client.Inventory.Remove(710563, 1, stream);
                                client.Player.Money += 100;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);

                                client.CreateBoxDialog("You~received~100~Silver.");
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "recovery");

                                data.AddText("The Indigo Token shows that a Bandit Courier has the Black Token, who is hiding among 10 Bandits. If you kill all the Bandits,");
                                data.AddText("~the Bandit Couriers will appear.");
                                data.AddOption("I~see.", 11);
                                data.AddAvatar(117); data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Well, be patient! You will find the Indigo Token if you kill enough Bandits L98 (around Bird Island 455, 466).");
                            data.AddOption("Alright.");
                            data.AddAvatar(117);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 11:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        client.CreateBoxDialog("Kill~the~Bandits~around~Bird~Island~(530,349)~and~find~the~Bandit~Courier.");
                        break;
                    }
                case 5:
                    {
                        if (client.Inventory.Contain(710562, 1) && client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 50))
                        {
                            data.AddText("Good! It is the Red Token. It shows that the Indigo Token is kept by a Bandit L98 .");
                            data.AddOption("How~to~find~it?", 6);//1272840
                            data.AddAvatar(117);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("The Red Token is held by the Bandit Leader L97  (around Bird Island 486, 481). Only if you kill 50 Bandits L97 will He appears.");
                            data.AddText("~Without this token, we won`t be able to find the other tokens.");
                            data.AddOption("I~see.");
                            data.AddAvatar(117);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 6:
                    {
                        if (client.Inventory.Contain(710562, 1) && client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 50))
                        {
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                            {
                                client.Inventory.Remove(710562, 1, stream);
                                client.Player.Money += 100;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);

                                client.CreateBoxDialog("You~received~100~Silver.");
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "recovery");
                                data.AddText("The Red Token shows the Indigo Token is kept by a Bandit L98, but I don`t know which one he is exactly.");
                                data.AddText("~You`ll need to keep killing the Bandits L98 until you find the token.");
                                data.AddOption("I~see.", 7);//1272855
                                data.AddAvatar(117);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 8:
                    {
                        data.AddText("The Red Token shows the Indigo Token is kept by a Bandit L98, but I don`t know which one he is exactly.");
                        data.AddText("~You`ll need to keep killing the Bandits L98 until you find the token.");
                        data.AddOption("I~see.", 7);
                        data.AddAvatar(117);
                        data.FinalizeDialog();
                        break;
                    }
                case 7:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        client.CreateBoxDialog("Kill~Bandits~L98~(around~Bird~Island~257,~162).");
                        break;
                    }
                case 1:
                    {
                        data.AddText("Your are much stronger than me. I think it will be no problem for you to defeat Commander Kerry, but it`s difficult to get to him.");
                        data.AddText("~You must get 4 tokens from the Bandits around Bird Island, first.");
                        data.AddOption("I`ll~help~you.", 2);
                        data.AddOption("Too~dangerous~for~me.");
                        data.AddAvatar(117);
                        data.FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You completed the quest and received 100 Silver!");
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "recovery");

                            data.AddText("Great! Now let`s start from the Red Token. You`ll need to kill 50 Bandits L97 (around Bird Island 262,117) until the Bandit Leader L97 shows up.");
                            data.AddText("~When he has been killed, you will obtain a Red Token. Only with it, I can find out where is the next token.");
                            data.AddOption("I~see.", 3);
                            data.AddAvatar(117);
                            data.FinalizeDialog();

                        }
                        break;
                    }
                case 4:
                    {
                        data.AddText("Great! Now let`s start from the Red Token. You`ll need to kill 50 Bandits L97 (around Bird Island 262,117) until the Bandit Leader L97 shows up.");
                        data.AddText("~When he has been killed, you will obtain a Red Token. Only with it, I can find out where is the next token.");
                        data.AddOption("I~see.", 3);
                        data.AddAvatar(117);
                        data.FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.CreateBoxDialog("Kill~Bandits~L97~(around~Bird~Island~262,117).");
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.CommanderAid4)]
        public static void CommanderAid4(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {

            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        switch (Program.GetRandom.Next(0, 8))
                        {
                            case 0:
                                {
                                    data.AddText("Long live Commander Kerry!");
                                    data.AddOption("Whatever.");
                                    data.AddAvatar(100);
                                    data.FinalizeDialog();
                                    break;
                                }
                            case 1:
                                {
                                    data.AddText("Long live Commander Kerry!");
                                    data.AddOption("Whatever.");
                                    data.AddAvatar(100);
                                    data.FinalizeDialog();
                                    break;
                                }
                            case 2:
                                {
                                    data.AddText("I have a rendezvous with death.");
                                    data.AddOption("Neat!");
                                    data.FinalizeDialog();
                                    break;
                                }
                            case 3:
                                {
                                    data.AddText("I have a rendezvous with death.");
                                    data.AddOption("Neat!");
                                    data.AddAvatar(100);
                                    data.FinalizeDialog();
                                    break;
                                }
                            case 4:
                                {
                                    data.AddText("I will do anything for Commander Kerry.");
                                    data.AddOption("As~you~wish.");
                                    data.FinalizeDialog();
                                    break;
                                }
                            case 5:
                                {
                                    data.AddText("I will do anything for Commander Kerry.");
                                    data.AddOption("As~you~wish.");
                                    data.AddAvatar(100);
                                    data.FinalizeDialog();
                                    break;
                                }
                            case 6:
                                {
                                    data.AddText("Hey, you look just like me....why don`t you join us instead?");
                                    data.AddOption("Like~you?~No~way.");
                                    data.FinalizeDialog();
                                    break;
                                }
                            case 7:
                                {
                                    data.AddText("Hey, you look just like me....why don`t you join us instead?");
                                    data.AddOption("Like~you?~No~way.");
                                    data.AddAvatar(100);
                                    data.FinalizeDialog();
                                    break;
                                }
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.CommanderAid3)]
        public static void CommanderAid3(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {

            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        switch (Program.GetRandom.Next(0, 8))
                        {
                            case 0:
                                {
                                    data.AddText("Long live Commander Kerry!");
                                    data.AddOption("Whatever.");
                                    data.AddAvatar(100);
                                    data.FinalizeDialog();
                                    break;
                                }
                            case 1:
                                {
                                    data.AddText("Long live Commander Kerry!");
                                    data.AddOption("Whatever.");
                                    data.AddAvatar(100);
                                    data.FinalizeDialog();
                                    break;
                                }
                            case 2:
                                {
                                    data.AddText("I have a rendezvous with death.");
                                    data.AddOption("Neat!");
                                    data.FinalizeDialog();
                                    break;
                                }
                            case 3:
                                {
                                    data.AddText("I have a rendezvous with death.");
                                    data.AddOption("Neat!");
                                    data.AddAvatar(100);
                                    data.FinalizeDialog();
                                    break;
                                }
                            case 4:
                                {
                                    data.AddText("I will do anything for Commander Kerry.");
                                    data.AddOption("As~you~wish.");
                                    data.FinalizeDialog();
                                    break;
                                }
                            case 5:
                                {
                                    data.AddText("I will do anything for Commander Kerry.");
                                    data.AddOption("As~you~wish.");
                                    data.AddAvatar(100);
                                    data.FinalizeDialog();
                                    break;
                                }
                            case 6:
                                {
                                    data.AddText("Hey, you look just like me....why don`t you join us instead?");
                                    data.AddOption("Like~you?~No~way.");
                                    data.FinalizeDialog();
                                    break;
                                }
                            case 7:
                                {
                                    data.AddText("Hey, you look just like me....why don`t you join us instead?");
                                    data.AddOption("Like~you?~No~way.");
                                    data.AddAvatar(100);
                                    data.FinalizeDialog();
                                    break;
                                }
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.CommanderAid2)]
        public static void CommanderAid2(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {

            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        switch (Program.GetRandom.Next(0, 8))
                        {
                            case 0:
                                {
                                    data.AddText("Long live Commander Kerry!");
                                    data.AddOption("Whatever.");
                                    data.AddAvatar(100);
                                    data.FinalizeDialog();
                                    break;
                                }
                            case 1:
                                {
                                    data.AddText("Long live Commander Kerry!");
                                    data.AddOption("Whatever.");
                                    data.AddAvatar(100);
                                    data.FinalizeDialog();
                                    break;
                                }
                            case 2:
                                {
                                    data.AddText("I have a rendezvous with death.");
                                    data.AddOption("Neat!");
                                    data.FinalizeDialog();
                                    break;
                                }
                            case 3:
                                {
                                    data.AddText("I have a rendezvous with death.");
                                    data.AddOption("Neat!");
                                    data.AddAvatar(100);
                                    data.FinalizeDialog();
                                    break;
                                }
                            case 4:
                                {
                                    data.AddText("I will do anything for Commander Kerry.");
                                    data.AddOption("As~you~wish.");
                                    data.FinalizeDialog();
                                    break;
                                }
                            case 5:
                                {
                                    data.AddText("I will do anything for Commander Kerry.");
                                    data.AddOption("As~you~wish.");
                                    data.AddAvatar(100);
                                    data.FinalizeDialog();
                                    break;
                                }
                            case 6:
                                {
                                    data.AddText("Hey, you look just like me....why don`t you join us instead?");
                                    data.AddOption("Like~you?~No~way.");
                                    data.FinalizeDialog();
                                    break;
                                }
                            case 7:
                                {
                                    data.AddText("Hey, you look just like me....why don`t you join us instead?");
                                    data.AddOption("Like~you?~No~way.");
                                    data.AddAvatar(100);
                                    data.FinalizeDialog();
                                    break;
                                }
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.CommanderAid1)]
        public static void CommanderAid1(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {

            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        switch (Program.GetRandom.Next(0, 8))
                        {
                            case 0:
                                {
                                    data.AddText("Long live Commander Kerry!");
                                    data.AddOption("Whatever.");
                                    data.AddAvatar(100);
                                    data.FinalizeDialog();
                                    break;
                                }
                            case 1:
                                {
                                    data.AddText("Long live Commander Kerry!");
                                    data.AddOption("Whatever.");
                                    data.AddAvatar(100);
                                    data.FinalizeDialog();
                                    break;
                                }
                            case 2:
                                {
                                    data.AddText("I have a rendezvous with death.");
                                    data.AddOption("Neat!");
                                    data.FinalizeDialog();
                                    break;
                                }
                            case 3:
                                {
                                    data.AddText("I have a rendezvous with death.");
                                    data.AddOption("Neat!");
                                    data.AddAvatar(100);
                                    data.FinalizeDialog();
                                    break;
                                }
                            case 4:
                                {
                                    data.AddText("I will do anything for Commander Kerry.");
                                    data.AddOption("As~you~wish.");
                                    data.FinalizeDialog();
                                    break;
                                }
                            case 5:
                                {
                                    data.AddText("I will do anything for Commander Kerry.");
                                    data.AddOption("As~you~wish.");
                                    data.AddAvatar(100);
                                    data.FinalizeDialog();
                                    break;
                                }
                            case 6:
                                {
                                    data.AddText("Hey, you look just like me....why don`t you join us instead?");
                                    data.AddOption("Like~you?~No~way.");
                                    data.FinalizeDialog();
                                    break;
                                }
                            case 7:
                                {
                                    data.AddText("Hey, you look just like me....why don`t you join us instead?");
                                    data.AddOption("Like~you?~No~way.");
                                    data.AddAvatar(100);
                                    data.FinalizeDialog();
                                    break;
                                }
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.FloodDemonBox)]
        public static void FloodDemonBox(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            if (!client.Inventory.Contain(720652, 1))
                return;
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("You should open your Demon Box in a secret place far away from the guards and other players! Do not open it at the border of the map!");
                        data.AddText("~By killing the Flood Demon, you will have a chance to get a Fantasy CP Pack (13800 CPs). Are you sure you want to release it now?");
                        data.AddOption("Yes!", 1);
                        data.AddOption("Wait...");
                        data.FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.MyHouse != null && client.Player.DynamicID == client.Player.UID)
                        {
                            if (client.Player.View.ContainMobInScreen("FloodDemon"))
                            {
                                client.SendSysMesage("The Flood Demon was released! Hurry and kill it to get the rewards!", MsgMessage.ChatMode.System);
                                break;
                            }

                            client.Inventory.Remove(720652, 1, stream);
                            Database.Server.AddMapMonster(stream, client.Map, 2422, client.Player.X, client.Player.Y, 3, 3, 1, client.Player.DynamicID, true);
                            client.SendSysMesage("You opened the Flood Demon Box and a Flood Demon was released! Hurry and kill it to get your reward!", MsgMessage.ChatMode.System);
                        }
                        else
                        {
                            client.SendSysMesage("The Demon Box is unavailable for use in the cities and Market.", MsgMessage.ChatMode.System);
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.AncientDemonBox)]
        public static void AncientDemonBox(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            if (!client.Inventory.Contain(720651, 1))
                return;
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("You should open your Demon Box in a secret place far away from the guards and other players! Do not open it at the border of the map!");
                        data.AddText("~By killing the Ancient Demon, you will have a chance to get a Mystic CP Pack (6900~CPs). Are you sure you want to release it now?");
                        data.AddText("~now?");
                        data.AddOption("Yes!", 1);
                        data.AddOption("Wait...");
                        data.FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.MyHouse != null && client.Player.DynamicID == client.Player.UID)
                        {
                            if (client.Player.View.ContainMobInScreen("AncientDemon"))
                            {
                                client.SendSysMesage("The Ancient Demon was released! Hurry and kill it to get the rewards!", MsgMessage.ChatMode.System);
                                break;
                            }
                            client.Inventory.Remove(720651, 1, stream);
                            Database.Server.AddMapMonster(stream, client.Map, 2421, client.Player.X, client.Player.Y, 3, 3, 1, client.Player.DynamicID, true);
                            client.SendSysMesage("You opened the Ancient Demon Box and an Ancient Demon was released! Hurry and kill it to get your reward!", MsgMessage.ChatMode.System);
                        }
                        else
                        {
                            client.SendSysMesage("The Demon Box is unavailable for use in the cities and Market.", MsgMessage.ChatMode.System);
                        }
                        break;
                    }
            }

        }
        [NpcAttribute(NpcID.DemonBox)]
        public static void DemonBox(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            if (!client.Inventory.Contain(720650, 1))
                return;
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("You should open your Demon Box in a secret place far away from the guards and other players! Do not open it at the border of the map!");
                        data.AddText("~By killing the Demon, you will have a chance to get a Joy CP Pack (1380 CPs). Are you sure you want to release it now?");
                        data.AddOption("Yes!", 1);
                        data.AddOption("Wait...");
                        data.FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.MyHouse != null && client.Player.DynamicID == client.Player.UID)
                        {
                            if (client.Player.View.ContainMobInScreen("Demon"))
                            {
                                client.SendSysMesage("The Demon was released! Hurry and kill it to get the rewards!", MsgMessage.ChatMode.System);
                                break;
                            }
                            client.Inventory.Remove(720650, 1, stream);
                            Database.Server.AddMapMonster(stream, client.Map, 2420, client.Player.X, client.Player.Y, 3, 3, 1, client.Player.DynamicID, true);
                            client.SendSysMesage("You opened the Demon Box and a demon was released! Hurry and kill it to get the reward!", MsgMessage.ChatMode.System);
                        }
                        else
                        {
                            client.SendSysMesage("The Demon Box is unavailable for use in the cities and Market.", MsgMessage.ChatMode.System);
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.AuroraDemonBox)]
        public static void AuroraDemonBox(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            if (!client.Inventory.Contain(720674, 1))
                return;
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("If you open the Aurora Demon Box, a demon will be released! After you kill it, you`ll have a chance to get a Pilgrim CP Pack (690000 CPs)! I");
                        data.AddText("~suggest you open it in a secret place to keep from being robbed. Are you sure you want to open it and release the demon now?");
                        data.AddOption("Yes!", 1);
                        data.AddOption("Wait...");
                        data.FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.MyHouse != null && client.Player.DynamicID == client.Player.UID)
                        {
                            if (client.Player.View.ContainMobInScreen("AuroraDemon"))
                            {
                                client.SendSysMesage("The Aurora Demon was released! Hurry and kill it to get the rewards!", MsgMessage.ChatMode.System);
                                break;
                            }
                            client.Inventory.Remove(720674, 1, stream);
                            Database.Server.AddMapMonster(stream, client.Map, 2438, client.Player.X, client.Player.Y, 3, 3, 1, client.Player.DynamicID, true);
                            client.SendSysMesage("You opened the Aurora Demon Box and a demon was released! Hurry and kill it to get the rewards!", MsgMessage.ChatMode.System);
                        }
                        else
                        {
                            client.SendSysMesage("The Demon Box is unavailable for use in the cities and Market.", MsgMessage.ChatMode.System);
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.SacredDemonBox)]
        public static void SacredDemonBox(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            if (!client.Inventory.Contain(720673, 1))
                return;
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("If you open the Sacred Demon Box, a demon will be released! After you kill it, you`ll have a chance to get a Kylin CP Pack (276000 CPs)! I");
                        data.AddText("~suggest you open it somewhere safe from prying eyes. Are you sure you want to open it and release the demon now?");
                        data.AddOption("Yes!", 1);
                        data.AddOption("Wait...");
                        data.FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.MyHouse != null && client.Player.DynamicID == client.Player.UID)
                        {
                            if (client.Player.View.ContainMobInScreen("SacredDemon"))
                            {
                                client.SendSysMesage("The Sacred Demon was released! Hurry and kill it to get the rewards!", MsgMessage.ChatMode.System);
                                break;
                            }
                            client.Inventory.Remove(720673, 1, stream);
                            Database.Server.AddMapMonster(stream, client.Map, 2437, client.Player.X, client.Player.Y, 3, 3, 1, client.Player.DynamicID, true);
                            client.SendSysMesage("You opened the Sacred Demon Box and a Sacred Demon was released! Hurry and kill it to get the rewards!", MsgMessage.ChatMode.System);
                        }
                        else
                        {
                            client.SendSysMesage("The Demon Box is unavailable for use in the cities and Market.", MsgMessage.ChatMode.System);
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.ChaosDemonBox)]
        public static void ChaosDemonBox(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            if (!client.Inventory.Contain(720672, 1))
                return;
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("You should open your Demon Box in a secret place far away from the guards and other players! Do not open it at the border of the map!");
                        data.AddText("~By killing the Chaos Demon, you will have a chance to get a Nimbus CP Pack (138000 CPs). Are you sure you want to release it now?");
                        data.AddOption("Yes!", 1);
                        data.AddOption("Wait...");
                        data.FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.MyHouse != null && client.Player.DynamicID == client.Player.UID)
                        {

                            if (client.Player.View.ContainMobInScreen("ChaosDemon"))
                            {
                                client.SendSysMesage("The Chaos Demon was released! Hurry and kill it to get the rewards!", MsgMessage.ChatMode.System);
                                break;
                            }
                            client.Inventory.Remove(720672, 1, stream);
                            Database.Server.AddMapMonster(stream, client.Map, 2436, client.Player.X, client.Player.Y, 3, 3, 1, client.Player.DynamicID, true);
                            client.SendSysMesage("You opened the Chaos Demon Box and a Chaos Demon was released! Hurry and kill it to get the rewards!", MsgMessage.ChatMode.System);
                        }
                        else
                        {
                            client.SendSysMesage("The Demon Box is unavailable for use in the cities and Market.", MsgMessage.ChatMode.System);
                        }
                        break;

                    }
            }
        }
        [NpcAttribute(NpcID.HeavenDemonBox)]
        public static void HeavenDemonBox(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            if (!client.Inventory.Contain(720671, 1))
                return;
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("You should open your Demon Box in a secret place far away from the guards and other players! Do not open it at the border of the map!");
                        data.AddText("~By killing the Heaven Demon, you will have a chance to get a Frost CP Pack (69000 CPs). Are you sure you want to release it now?");
                        data.AddOption("Yes!", 1);
                        data.AddOption("Wait...");
                        data.FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.MyHouse != null && client.Player.DynamicID == client.Player.UID)
                        {
                            if (client.Player.View.ContainMobInScreen("HeavenDemon"))
                            {
                                client.SendSysMesage("The Heaven Demon was released! Hurry and kill it to get the rewards!", MsgMessage.ChatMode.System);
                                break;
                            }

                            client.Inventory.Remove(720671, 1, stream);
                            Database.Server.AddMapMonster(stream, client.Map, 2435, client.Player.X, client.Player.Y, 3, 3, 1, client.Player.DynamicID, true);
                            client.SendSysMesage("You opened the Heaven Demon Box and a Heaven Demon was released! Hurry and kill it to get the rewards!", MsgMessage.ChatMode.System);
                        }
                        else
                        {
                            client.SendSysMesage("The Demon Box is unavailable for use in the cities and Market.", MsgMessage.ChatMode.System);
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.PrizeCenterTeleporter1)]
        public static void PrizeCenterTeleporter1(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello!~You~want~to~exchange~for~rewards~of~the~`Treasure~In~The~Blue`~event?~I~can~send~you~to~the~Prize~Center.~If~I~just~sent~you~to~somewhere,~you~need~to~wait~3~minutes~to~use");
                        data.AddText("~the~teleporter~again,~since~there~are~too~many~people.~So,~where~do~you~want~to~go?");
                        data.AddOption("The~Prize~Center.", 1);
                        data.AddOption("Twin~City.", 2);
                        data.AddOption("I`m~just~passing~by.", 255);
                        data.AddAvatar(14).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        client.Teleport(428, 378, 1002);

                        break;
                    }
                case 1:
                    {
                        if (DateTime.Now > client.Player.JoinPrizeNpcOctopus.AddSeconds(180))
                        {

                            client.Teleport(33, 33, 1068);
                            client.Player.JoinPrizeNpcOctopus = DateTime.Now;
                        }
                        else
                        {
                            data.AddText("Sorry,~but~I~remember~I~have~sent~you~to~somewhere~just~now~and~it~hasn`t~been~3~minutes~since~that.~Please~be~patient,~okay?~");
                            data.AddOption("Alright.", 255);
                            data.AddAvatar(14).FinalizeDialog();

                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.PrizeCenterTeleporter2)]
        public static void PrizeCenterTeleporter2(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello!~You~want~to~exchange~for~rewards~of~the~`Treasure~In~The~Blue`~event?~I~can~send~you~to~the~Prize~Center.~If~I~just~sent~you~to~somewhere,~you~need~to~wait~3~minutes~to~use");
                        data.AddText("~the~teleporter~again,~since~there~are~too~many~people.~So,~where~do~you~want~to~go?");
                        data.AddOption("The~Prize~Center.", 1);
                        data.AddOption("Twin~City.", 2);
                        data.AddOption("I`m~just~passing~by.", 255);
                        data.AddAvatar(14).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        client.Teleport(428, 378, 1002);

                        break;
                    }
                case 1:
                    {
                        if (DateTime.Now > client.Player.JoinPrizeNpcOctopus.AddSeconds(180))
                        {

                            client.Teleport(33, 33, 1068);
                            client.Player.JoinPrizeNpcOctopus = DateTime.Now;
                        }
                        else
                        {
                            data.AddText("Sorry,~but~I~remember~I~have~sent~you~to~somewhere~just~now~and~it~hasn`t~been~3~minutes~since~that.~Please~be~patient,~okay?~");
                            data.AddOption("Alright.", 255);
                            data.AddAvatar(14).FinalizeDialog();

                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.PrizeCenterTeleporter3)]
        public static void PrizeCenterTeleporter3(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello!~You~want~to~exchange~for~rewards~of~the~`Treasure~In~The~Blue`~event?~I~can~send~you~to~the~Prize~Center.~If~I~just~sent~you~to~somewhere,~you~need~to~wait~3~minutes~to~use");
                        data.AddText("~the~teleporter~again,~since~there~are~too~many~people.~So,~where~do~you~want~to~go?");
                        data.AddOption("The~Prize~Center.", 1);
                        data.AddOption("Twin~City.", 2);
                        data.AddOption("I`m~just~passing~by.", 255);
                        data.AddAvatar(14).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        client.Teleport(428, 378, 1002);

                        break;
                    }
                case 1:
                    {
                        if (DateTime.Now > client.Player.JoinPrizeNpcOctopus.AddSeconds(180))
                        {

                            client.Teleport(33, 33, 1068);
                            client.Player.JoinPrizeNpcOctopus = DateTime.Now;
                        }
                        else
                        {
                            data.AddText("Sorry,~but~I~remember~I~have~sent~you~to~somewhere~just~now~and~it~hasn`t~been~3~minutes~since~that.~Please~be~patient,~okay?~");
                            data.AddOption("Alright.", 255);
                            data.AddAvatar(14).FinalizeDialog();

                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.PrizeOfficer)]
        public static void PrizeOfficer(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello! I'm the prize NPC and i'm here to deliver your donations ")
                        .AddOption("Claim my donation points!", 1)
                        .AddOption("Open the donations shop!", 2)
                        .AddOption("Just passing by.", 255)
                        .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 2:
                    {
                        ActionQuery action = new ActionQuery()
                        {
                            Type = ActionType.OpenDialog,
                            ObjId = client.Player.UID,
                            dwParam = 464,
                            wParam1 = client.Player.X,
                            wParam2 = client.Player.Y
                        };
                        client.Send(stream.ActionCreate(&action));
                        break;
                    }
                case 1:
                    {
                        //       if (!client.Inventory.HaveSpace(5))
                        //       {
                        //           data.AddText("Please make 5 more space in your inventory.")
                        //.AddOption("Let me check.", 255)
                        //.AddAvatar(63).FinalizeDialog();
                        //           break;
                        //       }
                        var prizes = PayPalHandler.getItems(client.AccountName(client.Player.Name));
                        foreach (var item in prizes)
                        {
                            switch (item.Key)
                            {
                                case 1:
                                    {
                                        client.Player.DonationPoints += (uint)(10 * item.Value);
                                        client.Player.SendUpdate(stream, client.Player.DonationPoints, MsgUpdate.DataType.RaceShopPoints);
                                        PayPalHandler.logDonation(client.AccountName(client.Player.Name), client.Player.Name, item.Value + " 10 donation points.");

                                        break;
                                    }
                                case 2:
                                    {
                                        client.Player.DonationPoints += (uint)(22 * item.Value);
                                        client.Player.SendUpdate(stream, client.Player.DonationPoints, MsgUpdate.DataType.RaceShopPoints);
                                        PayPalHandler.logDonation(client.AccountName(client.Player.Name), client.Player.Name, item.Value + " 22 donation points.");

                                        break;
                                    }
                                case 3:
                                    {
                                        client.Player.DonationPoints += (uint)(35 * item.Value);
                                        client.Player.SendUpdate(stream, client.Player.DonationPoints, MsgUpdate.DataType.RaceShopPoints);
                                        PayPalHandler.logDonation(client.AccountName(client.Player.Name), client.Player.Name, item.Value + " 35 donation points.");
                                        break;
                                    }
                                    //case 1:// Level 140     
                                    //    {
                                    //        client.UpdateLevel(stream, 120, true);
                                    //        client.UpdateLevel(stream, 140, true);
                                    //        PayPalHandler.logDonation(client.AccountName(client.Player.Name), client.Player.Name, item.Value + " Level 140");
                                    //        break;
                                    //    }
                                    //case 2:// 250k Cps - 50$
                                    //    {
                                    //        for (int i = 0; i < item.Value; i++)
                                    //        {
                                    //            client.Player.ConquerPoints += 6000000;
                                    //        }
                                    //        PayPalHandler.logDonation(client.AccountName(client.Player.Name), client.Player.Name, item.Value + " 6,000,000 Cps");
                                    //        break;
                                    //    }
                                    //case 3:// 30k Cps - 10$
                                    //    {
                                    //        for (int i = 0; i < item.Value; i++)
                                    //        {
                                    //            client.Player.ConquerPoints += 1000000;
                                    //        }
                                    //        PayPalHandler.logDonation(client.AccountName(client.Player.Name), client.Player.Name, item.Value + " 1,000,000 Cps");
                                    //        break;
                                    //    }
                                    //case 4:// VIP Level 6 30 Days - 20$
                                    //    {
                                    //        for (int i = 0; i < item.Value; i++)
                                    //        {
                                    //            client.Inventory.Add(stream, 780000);//vip 30 days.
                                    //        }
                                    //        PayPalHandler.logDonation(client.AccountName(client.Player.Name), client.Player.Name, item.Value + " VIP level 6");
                                    //        break;
                                    //    }
                                    //case 5:// Rare-items pack
                                    //    {
                                    //        for (int i = 0; i < item.Value; i++)
                                    //        {
                                    //            client.Inventory.Add(stream, 721169);//vip 30 days.
                                    //        }
                                    //        PayPalHandler.logDonation(client.AccountName(client.Player.Name), client.Player.Name, item.Value + " Ultimate Pack");
                                    //        break;
                                    //    }
                                    //case 6:// Rare-items pack
                                    //    {
                                    //        for (int i = 0; i < item.Value; i++)
                                    //        {
                                    //            client.Inventory.Add(stream, 721168);
                                    //        }
                                    //        PayPalHandler.logDonation(client.AccountName(client.Player.Name), client.Player.Name, item.Value + " Ultimate Pack");
                                    //        break;
                                    //    }
                                    //case 3:// 30k Cps - 10$
                                    //    {
                                    //        for (int i = 0; i < item.Value; i++)
                                    //        {
                                    //            client.Player.ConquerPoints += 30000;
                                    //        }
                                    //        PayPalHandler.logDonation(client.AccountName(client.Player.Name), client.Player.Name, item.Value + " 250,000 Cps");
                                    //        break;
                                    //    }
                            }

                        }
                        if (prizes.Count == 0)
                        {
                            data.AddText("You have nothing to claim.");
                            data.AddOption("Thanks.", 255);
                            data.AddAvatar(63).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You claimed sucessfully.");
                            data.AddOption("Thanks.", 255);
                            data.AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.PrizeCenterTeleporter4)]
        public static void PrizeCenterTeleporter4(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello!~You~want~to~exchange~for~rewards~of~the~`Treasure~In~The~Blue`~event?~I~can~send~you~to~the~Prize~Center.~If~I~just~sent~you~to~somewhere,~you~need~to~wait~3~minutes~to~use");
                        data.AddText("~the~teleporter~again,~since~there~are~too~many~people.~So,~where~do~you~want~to~go?");
                        data.AddOption("The~Prize~Center.", 1);
                        data.AddOption("Twin~City.", 2);
                        data.AddOption("I`m~just~passing~by.", 255);
                        data.AddAvatar(14).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        client.Teleport(428, 378, 1002);

                        break;
                    }
                case 1:
                    {
                        if (DateTime.Now > client.Player.JoinPrizeNpcOctopus.AddSeconds(180))
                        {

                            client.Teleport(33, 33, 1068);
                            client.Player.JoinPrizeNpcOctopus = DateTime.Now;
                        }
                        else
                        {
                            data.AddText("Sorry,~but~I~remember~I~have~sent~you~to~somewhere~just~now~and~it~hasn`t~been~3~minutes~since~that.~Please~be~patient,~okay?~");
                            data.AddOption("Alright.", 255);
                            data.AddAvatar(14).FinalizeDialog();

                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.PrizeCenterTeleporter5)]
        public static void PrizeCenterTeleporter5(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello!~You~want~to~exchange~for~rewards~of~the~`Treasure~In~The~Blue`~event?~I~can~send~you~to~the~Prize~Center.~If~I~just~sent~you~to~somewhere,~you~need~to~wait~3~minutes~to~use");
                        data.AddText("~the~teleporter~again,~since~there~are~too~many~people.~So,~where~do~you~want~to~go?");
                        data.AddOption("The~Prize~Center.", 1);
                        data.AddOption("Twin~City.", 2);
                        data.AddOption("I`m~just~passing~by.", 255);
                        data.AddAvatar(14).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        client.Teleport(428, 378, 1002);

                        break;
                    }
                case 1:
                    {
                        if (DateTime.Now > client.Player.JoinPrizeNpcOctopus.AddSeconds(180))
                        {

                            client.Teleport(33, 33, 1068);
                            client.Player.JoinPrizeNpcOctopus = DateTime.Now;
                        }
                        else
                        {
                            data.AddText("Sorry,~but~I~remember~I~have~sent~you~to~somewhere~just~now~and~it~hasn`t~been~3~minutes~since~that.~Please~be~patient,~okay?~");
                            data.AddOption("Alright.", 255);
                            data.AddAvatar(14).FinalizeDialog();

                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.PrizeCenterTeleporter6)]
        public static void PrizeCenterTeleporter6(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello!~You~want~to~exchange~for~rewards~of~the~`Treasure~In~The~Blue`~event?~I~can~send~you~to~the~Prize~Center.~If~I~just~sent~you~to~somewhere,~you~need~to~wait~3~minutes~to~use");
                        data.AddText("~the~teleporter~again,~since~there~are~too~many~people.~So,~where~do~you~want~to~go?");
                        data.AddOption("The~Prize~Center.", 1);
                        data.AddOption("Twin~City.", 2);
                        data.AddOption("I`m~just~passing~by.", 255);
                        data.AddAvatar(14).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        client.Teleport(428, 378, 1002);

                        break;
                    }
                case 1:
                    {
                        if (DateTime.Now > client.Player.JoinPrizeNpcOctopus.AddSeconds(180))
                        {

                            client.Teleport(33, 33, 1068);
                            client.Player.JoinPrizeNpcOctopus = DateTime.Now;
                        }
                        else
                        {
                            data.AddText("Sorry,~but~I~remember~I~have~sent~you~to~somewhere~just~now~and~it~hasn`t~been~3~minutes~since~that.~Please~be~patient,~okay?~");
                            data.AddOption("Alright.", 255);
                            data.AddAvatar(14).FinalizeDialog();

                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.PrizeCenterTeleporter7)]
        public static void PrizeCenterTeleporter7(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello!~You~want~to~exchange~for~rewards~of~the~`Treasure~In~The~Blue`~event?~I~can~send~you~to~the~Prize~Center.~If~I~just~sent~you~to~somewhere,~you~need~to~wait~3~minutes~to~use");
                        data.AddText("~the~teleporter~again,~since~there~are~too~many~people.~So,~where~do~you~want~to~go?");
                        data.AddOption("The~Prize~Center.", 1);
                        data.AddOption("Twin~City.", 2);
                        data.AddOption("I`m~just~passing~by.", 255);
                        data.AddAvatar(14).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        client.Teleport(428, 378, 1002);

                        break;
                    }
                case 1:
                    {
                        if (DateTime.Now > client.Player.JoinPrizeNpcOctopus.AddSeconds(180))
                        {

                            client.Teleport(33, 33, 1068);
                            client.Player.JoinPrizeNpcOctopus = DateTime.Now;
                        }
                        else
                        {
                            data.AddText("Sorry,~but~I~remember~I~have~sent~you~to~somewhere~just~now~and~it~hasn`t~been~3~minutes~since~that.~Please~be~patient,~okay?~");
                            data.AddOption("Alright.", 255);
                            data.AddAvatar(14).FinalizeDialog();

                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.PrizeCenterTeleporter8)]
        public static void PrizeCenterTeleporter8(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello!~You~want~to~exchange~for~rewards~of~the~`Treasure~In~The~Blue`~event?~I~can~send~you~to~the~Prize~Center.~If~I~just~sent~you~to~somewhere,~you~need~to~wait~3~minutes~to~use");
                        data.AddText("~the~teleporter~again,~since~there~are~too~many~people.~So,~where~do~you~want~to~go?");
                        data.AddOption("The~Prize~Center.", 1);
                        data.AddOption("Twin~City.", 2);
                        data.AddOption("I`m~just~passing~by.", 255);
                        data.AddAvatar(14).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        client.Teleport(428, 378, 1002);

                        break;
                    }
                case 1:
                    {
                        if (DateTime.Now > client.Player.JoinPrizeNpcOctopus.AddSeconds(180))
                        {

                            client.Teleport(33, 33, 1068);
                            client.Player.JoinPrizeNpcOctopus = DateTime.Now;
                        }
                        else
                        {
                            data.AddText("Sorry,~but~I~remember~I~have~sent~you~to~somewhere~just~now~and~it~hasn`t~been~3~minutes~since~that.~Please~be~patient,~okay?~");
                            data.AddOption("Alright.", 255);
                            data.AddAvatar(14).FinalizeDialog();

                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.PakYan)]
        public static void PakYan(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {


            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.GuidofFieryDragon, 0, 3631);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.PakYan, 0, 3632);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.FlameAltar, 0, 3649);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Good to see you back! Is everything all right?")
                     .AddOption("I~have~good~news~for~you.", 4).AddAvatar(67)
              .FinalizeDialog();
                            break;
                        }
                        if (!client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("Are you here to give our Bright Tribe a hand?")
                       .AddOption("Yes, exactly", 1).AddAvatar(67)
                .FinalizeDialog();
                            break;
                        }
                        else if (!client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {

                                data.AddText("Do you have any news about the Elder and others? I`m really worried about them.")
                   .AddOption("I`ll go and check.", 3).AddAvatar(67)
            .FinalizeDialog();
                                break;
                            }
                            data.AddText("Two days ago, Chong Yan Elder led a group to find the Flame Temple which is not only our ")
                         .AddText("tribe`s holy zone, but also they key to complety activate the Mystery Pearl and stop the ")
                         .AddText("Fiery Dragon Volcano from eruption, However, there is still no message from them.")
                   .AddOption("I'll go find them.", 3)
                   .AddOption("Don`t worry, they`ll be fine.", 255).AddAvatar(67)
            .FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("We`ve finally arrived home, and we`ll spare no effort to restore our")
                                .AddText("~homeland to its former glory.")
                .AddOption("Bright~Fortune.~(Daily)", 10).AddAvatar(67)
         .FinalizeDialog();
                        }

                        break;
                    }
                case 10:
                    {
                        if (client.Player.ClaimTowerAmulets == 0)
                        {
                            data.AddText("For our tribe`s helpers, I`ll never be stingy with rewards for them. Under the Fiery Dragon region, there are not only massive magma chambers,")
                              .AddText("~but also mythical treasures. Are you interested? You can claim Hunting Amulets from me every day. Wish you a harvest!")
                              .AddText("    Reward: <tip color=0xfff05050 desc=Bloody#Jade,#Bright#Star#Stone,#Blazing#CP#Fragment,#Champion#Points,#etc.>Treasure of Dragon</tip>")
              .AddOption("Claim~5~Hunting~Amulets.", 11).AddAvatar(67)
       .FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("How is your treasure hunting today? It must be a harvest! If you`re still interested, come to me tomorrow.")
                  .AddOption("Great!", 255).AddAvatar(67)
           .FinalizeDialog();
                        }
                        break;
                    }
                case 11:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more spaces in you inventory.")
                   .AddOption("Let me check.", 255).AddAvatar(67)
            .FinalizeDialog();
                            break;
                        }
                        if (client.Player.ClaimTowerAmulets == 0)
                        {
                            client.Player.ClaimTowerAmulets = 1;
                            client.Inventory.AddItemWitchStack(3008993, 0, 5, stream);
                            client.Teleport(40, 347, 3998);
                            client.CreateBoxDialog("The Chief of Bright Tribe gave you 5 Hunting Amulets which will bring you surprises.");
                        }
                        break;
                    }
                case 4:
                    {
                        data.AddText("Really? We`ve been waiting hundreds of years for this moment! We can finally worship")
                            .AddText("~our ancestors in the Flame Temple. From now on, you`re the most honored friend to")
                            .AddText("~the Bright Tribe. I don`t know how to thank you enough.")
                    .AddOption("It`s~my~pleasure.", 5).AddAvatar(67)
             .FinalizeDialog();
                        break;
                    }
                case 5:
                    {
                        data.AddText("The Elder and others have been rescued when you were on the journey to find the Flame Temple.")
                              .AddText("~They just can`t wait to see the Flame Altar in front of the temple. If the Mystery Pearl can be activated")
                              .AddText("~at the altar, we`ll be able to prevent the Fiery Dragon Volcano from eruption. Would you like to join us?")
                            .AddOption("Sure.", 6).AddAvatar(67)
                            .FinalizeDialog();
                        break;
                    }
                case 6:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                        {
                            client.Player.Money += 1000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.Inventory.Add(stream, 3200344, 3);
                        }
                        var action = new ActionQuery()
                        {
                            ObjId = client.Player.UID,
                            Type = ActionType.DrawStory,
                            dwParam = 1004

                        };
                        client.Send(stream.ActionCreate(&action));
                        break;
                    }
                case 1:
                    {
                        if (!client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        var action = new ActionQuery()
                        {
                            ObjId = client.Player.UID,
                            Type = ActionType.DrawStory,
                            dwParam = 1001

                        };
                        client.Send(stream.ActionCreate(&action));
                        data.AddText("For many times, I dreamed of returning home, but forgot almost everything upon waking.It`s saied ")
                            .AddText("the Fiery Dragon was a prosperous land, and there Bright ancestors lived in a golden age. Look at")
                            .AddText(" it now, our homeland has become utterly desolate. It`s really depressing.")
                      .AddOption("We still have hope.", 2).AddAvatar(67)
               .FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        if (!client.Inventory.HaveSpace(3))
                        {
                            data.AddText("Please make 3 more spaces in you inventory.")
                   .AddOption("Let me check.", 255).AddAvatar(67)
            .FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.GainExpBall(300, true, Role.Flags.ExperienceEffect.angelwing);
                            client.SendSysMesage("You received 3 Twilight Star Stones!", MsgMessage.ChatMode.System);
                            client.Player.Money += 1000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.Inventory.Add(stream, 3009000, 3);
                        }
                        data.AddText("Two days ago, Chong Yan Elder led a group to find the Flame Temple which is not only our ")
                           .AddText("tribe`s holy zone, but also they key to complety activate the Mystery Pearl and stop the ")
                           .AddText("Fiery Dragon Volcano from eruption, However, there is still no message from them.")
                     .AddOption("I'll go find them.", 3)
                     .AddOption("Don`t worry, they`ll be fine.", 255).AddAvatar(67)
              .FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.Player.QuestGUI.SendAutoPatcher(ActiveQuest2.FinishNpcId.Map, ActiveQuest2.FinishNpcId.X, ActiveQuest2.FinishNpcId.Y, ActiveQuest2.FinishNpcId.ID);
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.FlameAltar)]
        public static void FlameAltar(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.ChingYan, 0, 3643);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.FlameAltar, 0, 3644);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.FlameAltar, 0, 3645);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.FlameAltar, 0, 3646);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)NpcID.FlameAltar, 0, 3647);
            var ActiveQuest6 = Database.QuestInfo.GetFinishQuest((uint)NpcID.FlameAltar, 0, 3648);
            var ActiveQuest7 = Database.QuestInfo.GetFinishQuest((uint)NpcID.FlameAltar, 0, 3649);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("You`ve finally arrived at relics of the Flame Temple. At the center of the temple square,")
                                .AddText("~there is a ruined pentagonal altar carved with complex patterns at each side.")
              .AddOption("It`s~amazing!", 1)
       .FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("(Hurry and go collect Building Stones to repair the ruined altar.)")
                   .AddOption("Use~stones~to~repair~altar.", 3)
            .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("(You found two sides of the altar were seriously damaged, and Metal and Fire icons were absent from the elemental patterns.")
                              .AddText("~You should restore the Flame Altar, first. Look around and collect appropriate Building Stones.")
            .AddOption("Go~find~Building~Stones.", 2)
     .FinalizeDialog();
                            }

                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("(The altar is dead without the Wheel of Nature.")
                                    .AddText("~Hurry and retrieve it from the Clawed Rock Devils.)")
                   .AddOption("Place~the~wheel~on~the~altar.", 10)
            .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("(To further restore the altar, you`ll need to switch on the five elemental forces resting in the Wheel of Nature.")
                          .AddText("~But where is the Wheel of Nature? It must be stolen by the Clawed Rock Devils nearby.")
                          .AddText("~Go retrieve the wheel from the Clawed Rock Devils.)")
                          .AddOption("Go~retrieve~the~wheel.", 6)
                          .FinalizeDialog();
                            }

                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("(The Metal Force is essential to motivate the Mystery Pearl. With the Metal Force,")
                                    .AddText("~you can light the Metal icon on the altar.)")
                   .AddOption("Spin~the~Wheel~of~Nature.", 13)
            .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("(It`s said the Mystery Pearl contains terrific power which can only be motivated by the purest Metal Force.")
                         .AddText("~Is it true? If you have the Earth Force, please transform it into Metal Force on the Wheel of Nature.)")
                         .AddOption("Go~make~the~Metal~Force.", 12)
                         .FinalizeDialog();
                            }

                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("(Put the Lava Flower on the Wheel of Nature, and spin the wheel to extract Fire Force.")
                                    .AddText("~When you light the Fire icon with the Fire Force, the Flame Altar will be fully restored and activated.)")
                   .AddOption("Extract~the~Fire~Force.", 20)
            .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("(It`s said the Mystery Pearl contains terrific power which can only be motivated by the purest Metal Force.")
                         .AddText("~Is it true? If you have the Earth Force, please transform it into Metal Force on the Wheel of Nature.)")
                         .AddOption("Go~make~the~Metal~Force.", 15)
                         .FinalizeDialog();
                            }

                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("(Insert the Essence of Star into the eyes of the altar, and you`ll achieve the final success against the Fiery Dragon Volcano.)")
                   .AddOption("Extract~the~Essence~of~Star.", 23)
            .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("(It requires a large number of Star Ores to extract the Essence of Star.")
                                 .AddText("~The Hellfire Beasts are known to carry such ores.")
                .AddOption("Go~collect~Star~Ores.", 22).FinalizeDialog();
                            }

                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest7.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest7.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("(You`ve finished your job here. Hurry and report back to Chief Pak Yan.)")
                .AddOption("Okay.", 25)
         .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("(Everything is ready. Hurry and report back to Chief Pak Yan!)")
                .AddOption("Okay.", 25).FinalizeDialog();
                            }

                        }
                        else
                        {

                            data.AddText("(The Flame Altar is a special place for the Bright tribe to hold grand sacrifice events.)")
                    .AddOption("I~see.", 255).FinalizeDialog();
                        }
                        break;
                    }
                case 25:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest7, 0);
                        client.Player.QuestGUI.SendAutoPatcher(ActiveQuest7.FinishNpcId.Map, ActiveQuest7.FinishNpcId.X, ActiveQuest7.FinishNpcId.Y, ActiveQuest7.FinishNpcId.ID);
                        break;
                    }
                case 23:
                    {
                        if (client.Inventory.Contain(3008748, 100))
                        {
                            data.AddText("(With the aid of the Essence of Star, the energy of Flame Altar becomes steady.")
            .AddText("~You`ve finished your job. Hurry and report back to Chief Pak Yan. He`ll take care of the rest")
            .AddText("~to suppress the Fiery Dragon Volcano with the Mystery Pearl.)")
                            .AddOption("I`ve~finally~made~it!", 24)
      .FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("(The airflow around the altar is getting unstable. You need to insert the Essence of Star into the eyes of the altar quickly.")
                .AddText("~Don`t jinx it. Hurry and go collect Star Ores from the Hellfire Beasts.)")
                                .AddOption("I`m~on~the~way.", 22)
          .FinalizeDialog();
                        }
                        break;
                    }
                case 24:
                    {
                        if (!client.Inventory.HaveSpace(2))
                        {
                            data.AddText("Please make 2 more spaces in you inventory.")
                   .AddOption("Let me check.", 255)
            .FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest6.MissionId))
                        {

                            client.SendSysMesage("You received a Radiant Star Stone!", MsgMessage.ChatMode.System);
                            client.Inventory.RemoveStackItem(3008748, 100, stream);
                            client.Inventory.Add(stream, 3200346);
                            client.Inventory.Add(stream, 3009002);
                            client.Player.Money += 5000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }
                        data.AddText("(You`ve finished your job here. Hurry and report back to Chief Pak Yan.)")
                 .AddOption("Okay.", 25)
          .FinalizeDialog();
                        break;
                    }
                case 22:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest6, 0);
                        client.Player.QuestGUI.SendAutoPatcher(3998, 522, 347, 0);
                        break;
                    }
                case 21:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in you inventory.")
                   .AddOption("Let me check.", 255)
            .FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest5.MissionId))
                        {
                            client.Inventory.Remove(3008747, 10, stream);
                            client.Inventory.Add(stream, 3200345);
                            client.Player.Money += 5000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }
                        data.AddText("(It requires a large number of Star Ores to extract the Essence of Star.")
                                .AddText("~The Hellfire Beasts are known to carry such ores.")
               .AddOption("Go~collect~Star~Ores.", 22).FinalizeDialog();
                        break;
                    }
                case 20:
                    {
                        if (client.Inventory.Contain(3008747, 10))
                        {
                            data.AddText("(With the recovery of the Fire icon, the five elemental icons shine more brightly. You`re now very close to")
                             .AddText("~the ultimate success: place the Essence of Star at the eye of the altar to comfort the restless airflow,")
                             .AddText("~and then burn the power of Mystery Pearl to completely freeze the Fiery Dragon Volcano.)")
                             .AddOption("I`ll~try~my~best.", 21)
                             .FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("(To fully activated the Flame Altar, you still need the Fire Force which can be extracted")
                                .AddText("~from the flowers blooming by the Lava Pool.)")
                                .AddOption("Head~to~the~Lava~Pool.", 15)
                                .FinalizeDialog();

                        }

                        break;
                    }
                case 13:
                    {
                        if (client.Inventory.Contain(3008745, 1))
                        {
                            data.AddText("(Rolling slowly, the Wheel of Nature successfully transformed the Earth Force into Metal Force,")
                                 .AddText("~with the Metal icon shining brightly. Now, you can turn to switch on the Fire Force.)")
                .AddOption("Everything~will~go~well.", 14)
         .FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don`t have the Earth Force which can be transformed into the Metal Force through the Wheel of Nature.")
                                   .AddText("~When enough Essences of Earth are collected, you can extract the Earth Force from them.")
                  .AddOption("Go~collect~Essence~of~Earth.", 12)
           .FinalizeDialog();
                        }
                        break;
                    }
                case 15:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest5, 0);
                        client.Player.QuestGUI.SendAutoPatcher(3998, 559, 685, 0);
                        break;
                    }
                case 14:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in you inventory.")
                   .AddOption("Let me check.", 255)
            .FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                        {
                            client.Inventory.Remove(3008745, 1, stream);
                            client.Inventory.Add(stream, 3200346);
                            client.Player.Money += 5000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }
                        data.AddText("(The Metal element has been recovered, and it`s time to explore the Fire Force.")
                                .AddText("~As the totem of the Bright tribe, Fire is essential to their altar.")
                                .AddText("~Not far away from the Flame Temple, there is a Lava Pool where special flowers are blooming.")
                                .AddText("~You can extract the purest Fire Force from the Lava Flowers.)")
               .AddOption("Head~to~the~Lava~Pool.", 15).FinalizeDialog();
                        break;
                    }
                case 16:
                    {
                        break;
                    }
                case 10:
                    {
                        if (client.Inventory.Contain(3008743, 1))
                        {
                            data.AddText("(You placed the Wheel of Nature at the center of the altar, and saw the icons of five elements")
                                 .AddText("~giving out faint light. What a good beginning! Before burning the power of Mystery Pearl, you")
                                 .AddText("~need to switch on the five elemental forces through the Wheel of Nature.")
                .AddOption("Good.", 11)
         .FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("(The Wheel of Nature is the key to fully restore the altar,")
                                   .AddText("~which is also a must to energize the Mystery Pearl. Hurry and retrieve the wheel from the Clawed Rock Devils.)")
                  .AddOption("I`m~on~the~way.", 6)
           .FinalizeDialog();
                        }
                        break;
                    }
                case 12:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        client.Player.QuestGUI.SendAutoPatcher(3998, 482, 216, 0);
                        break;
                    }
                case 11:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in you inventory.")
                   .AddOption("Let me check.", 255)
            .FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                        {
                            client.Inventory.Remove(3008743, 1, stream);
                            client.Inventory.Add(stream, 3200346);
                            client.Player.Money += 5000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }
                        data.AddText("(It`s said the Mystery Pearl contains terrific power which can only be motivated by the purest Metal Force.")
                            .AddText("~Is it true? If you have the Earth Force, please transform it into Metal Force on the Wheel of Nature.)")
                            .AddOption("Go~make~the~Metal~Force.", 12)
                            .FinalizeDialog();

                        break;
                    }
                case 6:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        client.Player.QuestGUI.SendAutoPatcher(3998, 307, 102, 0);
                        break;
                    }
                case 3:
                    {
                        if (client.Inventory.Contain(3008742, 50))
                        {
                            data.AddText("(The altar has been roughly restored by using some unique Building Stones.)")
                  .AddOption("I`m~so~tired.", 5)
           .FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("(To restore the altar, you need to collect more Building Stones.)")
                     .AddOption("Go~collect~more~stones.", 4)
              .FinalizeDialog();
                        }
                        break;
                    }
                case 5:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in you inventory.")
                   .AddOption("Let me check.", 255)
            .FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.Inventory.RemoveStackItem(3008742, 50, stream);
                            client.Inventory.Add(stream, 3200346);
                            client.Player.Money += 5000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }
                        data.AddText("(To further restore the altar, you`ll need to switch on the five elemental forces resting in the Wheel of Nature.")
                            .AddText("~But where is the Wheel of Nature? It must be stolen by the Clawed Rock Devils nearby.")
                            .AddText("~Go retrieve the wheel from the Clawed Rock Devils.)")
                            .AddOption("Go~retrieve~the~wheel.", 6)
                            .FinalizeDialog();

                        break;
                    }
                case 4:
                    {
                        client.Player.QuestGUI.SendAutoPatcher(3998, 596, 447, 0);
                        break;
                    }
                case 1:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in you inventory.")
                   .AddOption("Let me check.", 255)
            .FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            var action = new ActionQuery()
                            {
                                ObjId = client.Player.UID,
                                Type = ActionType.DrawStory,
                                dwParam = 1003

                            };
                            client.Send(stream.ActionCreate(&action));

                            client.Inventory.Add(stream, 3200344);
                            client.Player.Money += 1000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }
                        data.AddText("(You found two sides of the altar were seriously damaged, and Metal and Fire icons were absent from the elemental patterns.")
                               .AddText("~You should restore the Flame Altar, first. Look around and collect appropriate Building Stones.")
             .AddOption("Go~find~Building~Stones.", 2)
      .FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.Player.QuestGUI.SendAutoPatcher(3998, 596, 447, 0);

                        break;
                    }
            }

        }
        [NpcAttribute(NpcID.LavaFlower1)]
        public static void LavaFlower1(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            if (client.Player.QuestGUI.CheckQuest(3647, MsgQuestList.QuestListItem.QuestStatus.Accepted))
            {
                if (client.Inventory.Contain(3008747, 10))
                {
                    client.SendSysMesage("You've already picked enough Lava Flowers. No need to collect more.", MsgMessage.ChatMode.System);
                    return;
                }
                client.Player.AddPick(stream, "Collecting...", 2);
            }
        }
        [NpcAttribute(NpcID.LavaFlower2)]
        public static void LavaFlower2(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            if (client.Player.QuestGUI.CheckQuest(3647, MsgQuestList.QuestListItem.QuestStatus.Accepted))
            {
                if (client.Inventory.Contain(3008747, 10))
                {
                    client.SendSysMesage("You've already picked enough Lava Flowers. No need to collect more.", MsgMessage.ChatMode.System);
                    return;
                }
                client.Player.AddPick(stream, "Collecting...", 2);
            }
        }
        [NpcAttribute(NpcID.LavaFlower3)]
        public static void LavaFlower3(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            if (client.Player.QuestGUI.CheckQuest(3647, MsgQuestList.QuestListItem.QuestStatus.Accepted))
            {
                if (client.Inventory.Contain(3008747, 10))
                {
                    client.SendSysMesage("You've already picked enough Lava Flowers. No need to collect more.", MsgMessage.ChatMode.System);
                    return;
                }
                client.Player.AddPick(stream, "Collecting...", 2);
            }
        }
        [NpcAttribute(NpcID.LavaFlower4)]
        public static void LavaFlower4(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            if (client.Player.QuestGUI.CheckQuest(3647, MsgQuestList.QuestListItem.QuestStatus.Accepted))
            {
                if (client.Inventory.Contain(3008747, 10))
                {
                    client.SendSysMesage("You've already picked enough Lava Flowers. No need to collect more.", MsgMessage.ChatMode.System);
                    return;
                }
                client.Player.AddPick(stream, "Collecting...", 2);
            }
        }
        [NpcAttribute(NpcID.LavaFlower5)]
        public static void LavaFlower5(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            if (client.Player.QuestGUI.CheckQuest(3647, MsgQuestList.QuestListItem.QuestStatus.Accepted))
            {
                if (client.Inventory.Contain(3008747, 10))
                {
                    client.SendSysMesage("You've already picked enough Lava Flowers. No need to collect more.", MsgMessage.ChatMode.System);
                    return;
                }
                client.Player.AddPick(stream, "Collecting...", 2);
            }
        }
        [NpcAttribute(NpcID.LavaFlower6)]
        public static void LavaFlower6(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            if (client.Player.QuestGUI.CheckQuest(3647, MsgQuestList.QuestListItem.QuestStatus.Accepted))
            {
                if (client.Inventory.Contain(3008747, 10))
                {
                    client.SendSysMesage("You've already picked enough Lava Flowers. No need to collect more.", MsgMessage.ChatMode.System);
                    return;
                }
                client.Player.AddPick(stream, "Collecting...", 2);
            }
        }
        [NpcAttribute(NpcID.LavaFlower7)]
        public static void LavaFlower7(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            if (client.Player.QuestGUI.CheckQuest(3647, MsgQuestList.QuestListItem.QuestStatus.Accepted))
            {
                if (client.Inventory.Contain(3008747, 10))
                {
                    client.SendSysMesage("You've already picked enough Lava Flowers. No need to collect more.", MsgMessage.ChatMode.System);
                    return;
                }
                client.Player.AddPick(stream, "Collecting...", 2);
            }
        }
        [NpcAttribute(NpcID.ChingYan)]
        public static void ChingYan(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.ChongYan, 0, 3640);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ChingYan, 0, 3641);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ChingYan, 0, 3642);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ChingYan, 0, 3643);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Cough... Cough... Who is there?! I`m not afraid of you! I`ll avenge for the sacrificed people!")
              .AddOption("The~Elder~sent~me~here.", 1).AddAvatar(90)
       .FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("Have you eli... eliminate the monsters?")
       .AddOption("Yes!", 4);
                                if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 15, 1) == false)
                                    data.AddOption("Give me one more drink.", 3);
                                data.AddAvatar(90)
                     .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Um... I`ve never seen you before. The Elder... The Elder sent you here? You need to prove it.")
                          .AddText("~Kill the Lava Scorpions, and... and offer this bottle of Strong Drink to the sacrificed Bright heroes.")
                          .AddText("~Go, go kill the monsters, and I`ll believe you.")
          .AddOption("Okay.", 2).AddAvatar(90)
   .FinalizeDialog();
                            }

                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("Why are you still here? I`m incurable. Don`t waste your time.")
                                    .AddOption("Accept~the~treatment.", 7).AddAvatar(90)
             .FinalizeDialog();

                            }
                            else
                            {
                                data.AddText("Thanks for fulfilling my last wish! Now... Now I can die without anything to regret.")
                          .AddText("~In my next life, I may have a chance to thank you.")
                    .AddOption("Stop~it.~I`ll~save~you.", 6).AddAvatar(90)
             .FinalizeDialog();
                            }

                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("Really? Oh, sorry... I was too nervous and angry. Monsters... Monsters killed my friends. It`s blood for blood!")
                      .AddOption("They`ll~pay~the~price.", 11).AddAvatar(90)
               .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You`re looking for the Flame Temple? If not I can`t even walk, I`ll go with you.")
                              .AddText("~Don`t worry. I know how to contact my tribe. Just go and do your job.")
                       .AddOption("Take~care!", 11).AddAvatar(90)
                .FinalizeDialog();
                            }

                        }
                        else
                        {
                            data.AddText("Really? Oh, sorry... I was too nervous and angry. Monsters... Monsters killed my friends. It`s blood for blood!")
                      .AddOption("They`ll~pay~the~price.", 255).AddAvatar(90)
               .FinalizeDialog();
                        }


                        break;
                    }
                case 10:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in you inventory.")
                   .AddOption("Let me check.", 255).AddAvatar(90)
            .FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                        {
                            client.Inventory.Remove(3008741, 10, stream);
                            client.Inventory.Add(stream, 3200345);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        data.AddText("You`re looking for the Flame Temple? If not I can`t even walk, I`ll go with you.")
                            .AddText("~Don`t worry. I know how to contact my tribe. Just go and do your job.")
                     .AddOption("Take~care!", 11).AddAvatar(90)
              .FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        client.Player.QuestGUI.SendAutoPatcher(ActiveQuest4.FinishNpcId.Map, ActiveQuest4.FinishNpcId.X, ActiveQuest4.FinishNpcId.Y, ActiveQuest4.FinishNpcId.ID);
                        break;
                    }
                case 7:
                    {
                        if (client.Inventory.Contain(3008741, 10))
                        {


                            data.AddText("How did you collect so many White Herbs? You`re too kind. I felt much better now.")
                                .AddOption("Take~a~good~rest.", 10).AddAvatar(90)
                 .FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("(Ching Yan was seriously injred. To save him, you need to collect enough White Herbs. ")
                              .AddText("There is nothing more important then saving a life. Hurry and pick the White Herbs!)")
                              .AddOption("I need more White Herbs.", 6).AddAvatar(90)
               .FinalizeDialog();
                        }
                        break;
                    }
                case 5:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 15, 1))
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                data.AddText("Please make 1 more space in you inventory.")
                       .AddOption("Let me check.", 255).AddAvatar(90)
                .FinalizeDialog();
                                break;
                            }
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                            {
                                client.Inventory.Remove(3008740, 1, stream);
                                client.Inventory.Add(stream, 3200346);
                                client.Player.Money += 5000;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            }
                        }
                        data.AddText("Thanks for fulfilling my last wish! Now... Now I can die without anything to regret.")
                            .AddText("~In my next life, I may have a chance to thank you.")
                      .AddOption("Stop~it.~I`ll~save~you.", 6).AddAvatar(90)
               .FinalizeDialog();
                        break;
                    }
                case 6:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        client.Player.QuestGUI.SendAutoPatcher(3998, 273, 273, 0);
                        break;
                    }
                case 4:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 15, 1))
                        {
                            data.AddText("Alas... My friends... You can rest in peace now.")
                                .AddOption("I`m~sorry.", 5)
                                .AddAvatar(90).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Don`t try to cheat... cheat me! See, so many monsters still... still get away whit their crimesc! Hurry and kill them all!")
                                   .AddOption("Got it!", 2)
                                   .AddAvatar(90).FinalizeDialog();
                        }

                        break;
                    }
                case 3:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(3200344, 1))
                            {
                                data.AddText("The drink is... is still in your inventory. Why did you ask more?")
                                    .AddOption("Sorry, I forgot it.", 255)
                                    .AddAvatar(90).FinalizeDialog();
                            }
                            else
                            {
                                if (!client.Inventory.HaveSpace(1))
                                {
                                    data.AddText("Please make 1 more space in you inventory.")
                           .AddOption("Let me check.", 255).AddAvatar(90)
                    .FinalizeDialog();
                                    break;
                                }
                                client.Inventory.Add(stream, 3200344);
                                data.AddText("Cough... You lost the drink? Alright, alright... I'll give you another one, but keep it well.")
                        .AddOption("Okay.", 255).AddAvatar(90)
                 .FinalizeDialog();
                            }

                        }
                        break;
                    }
                case 1:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in you inventory.")
                   .AddOption("Let me check.", 255).AddAvatar(90)
            .FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Add(stream, 3200344);
                            client.Player.Money += 1000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }
                        data.AddText("Um... I`ve never seen you before. The Elder... The Elder sent you here? You need to prove it.")
                            .AddText("~Kill the Lava Scorpions, and... and offer this bottle of Strong Drink to the sacrificed Bright heroes.")
                            .AddText("~Go, go kill the monsters, and I`ll believe you.")
            .AddOption("Okay.", 2).AddAvatar(90)
     .FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        if (!client.Inventory.Contain(3008740, 1))
                            client.Inventory.Add(stream, 3008740);
                        client.Player.QuestGUI.SendAutoPatcher(3998, 230, 273, 0);
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.WhiteHerb1)]
        public static void WhiteHerb1(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            if (client.Player.QuestGUI.CheckQuest(3642, MsgQuestList.QuestListItem.QuestStatus.Accepted))
            {
                if (client.Inventory.Contain(3008741, 10))
                {
                    client.SendSysMesage("You've already picked enough number of White Herbs.", MsgMessage.ChatMode.System);
                    return;
                }
                client.Player.AddPick(stream, "Collecting...", 2);
            }
        }
        [NpcAttribute(NpcID.WhiteHerb2)]
        public static void WhiteHerb2(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            if (client.Player.QuestGUI.CheckQuest(3642, MsgQuestList.QuestListItem.QuestStatus.Accepted))
            {
                if (client.Inventory.Contain(3008741, 10))
                {
                    client.SendSysMesage("You've already picked enough number of White Herbs.", MsgMessage.ChatMode.System);
                    return;
                }
                client.Player.AddPick(stream, "Collecting...", 2);
            }
        }
        [NpcAttribute(NpcID.WhiteHerb3)]
        public static void WhiteHerb3(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            if (client.Player.QuestGUI.CheckQuest(3642, MsgQuestList.QuestListItem.QuestStatus.Accepted))
            {
                if (client.Inventory.Contain(3008741, 10))
                {
                    client.SendSysMesage("You've already picked enough number of White Herbs.", MsgMessage.ChatMode.System);
                    return;
                }
                client.Player.AddPick(stream, "Collecting...", 2);
            }
        }
        [NpcAttribute(NpcID.WhiteHerb4)]
        public static void WhiteHerb4(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            if (client.Player.QuestGUI.CheckQuest(3642, MsgQuestList.QuestListItem.QuestStatus.Accepted))
            {
                if (client.Inventory.Contain(3008741, 10))
                {
                    client.SendSysMesage("You've already picked enough number of White Herbs.", MsgMessage.ChatMode.System);
                    return;
                }
                client.Player.AddPick(stream, "Collecting...", 2);
            }
        }
        [NpcAttribute(NpcID.WhiteHerb5)]
        public static void WhiteHerb5(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            if (client.Player.QuestGUI.CheckQuest(3642, MsgQuestList.QuestListItem.QuestStatus.Accepted))
            {
                if (client.Inventory.Contain(3008741, 10))
                {
                    client.SendSysMesage("You've already picked enough number of White Herbs.", MsgMessage.ChatMode.System);
                    return;
                }
                client.Player.AddPick(stream, "Collecting...", 2);
            }
        }
        [NpcAttribute(NpcID.WhiteHerb6)]
        public static void WhiteHerb6(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            if (client.Player.QuestGUI.CheckQuest(3642, MsgQuestList.QuestListItem.QuestStatus.Accepted))
            {
                if (client.Inventory.Contain(3008741, 10))
                {
                    client.SendSysMesage("You've already picked enough number of White Herbs.", MsgMessage.ChatMode.System);
                    return;
                }
                client.Player.AddPick(stream, "Collecting...", 2);
            }
        }



        [NpcAttribute(NpcID.WoundedBrightTribesman)]
        public static void WoundedBrightTribesman(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {

            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("Ow, stupid, stupid! I promised to the Chief to keep the Elder safe, but I can`t even protect myself now.")
                            .AddText("~I won`t forgive myself if the Elder gets into any trouble.")
          .AddOption("Let~me~help~you~out.", 255).AddAvatar(32)
   .FinalizeDialog();
                        break;
                    }
            }
        }


        [NpcAttribute(NpcID.BrightGuard)]
        public static void BrightGuard(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {

            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("I`ve tried my best to protect the Elder. Hope the Elder is okay.")
                            .AddText("~Disgusting monsters, I`ll kill you all someday.")
          .AddOption("You~will.", 255).AddAvatar(30)
   .FinalizeDialog();
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.BrokenForgeFurnace)]
        public static void BrokenForgeFurnace(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.ChongYan, 0, 3635);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.BrokenForgeFurnace, 0, 3636);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.BrokenForgeFurnace, 0, 3637);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.BrokenForgeFurnace, 0, 3638);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)NpcID.BrokenForgeFurnace, 0, 3639);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("In the deep corner, you discovered a Forge Furnace which was broken but still majestic,")
                                .AddText("~A huge number of monsters emerged from the furnace. It must be the root of the monster crisis.")

                        .AddOption("Check~the~furnace~carefully.", 1)
                           .FinalizeDialog();
                        }
                        else if (!client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("(You need to collect the Rune Fragments to complete the runes on the Forge Furnace first.)")
                 .AddOption("Use the Rune Fragment.", 2)
          .FinalizeDialog();

                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            data.AddText("(You read the runes on the Forge Furnace carefully, and understood the most words.)")
         .AddOption("Read~the~rune.", 6)
  .FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("(When you`re approaching the Forge Furnace, the Holy Hammer started shaking suddenly.")
                         .AddText("~You watched around and found a possible cause of the shaking - a hammering block.")
                         .AddText("~Why not hit the block with your Holy Hammer?)")
     .AddOption("Hit~the~block.", 10)
.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("(Since the Rune Fragments were collected from the alien monsters,")
                          .AddText("~you can probably find the Holy Hammer from their boss.)")
      .AddOption("Head~to~see~their~boss.", 9)
.FinalizeDialog();
                            }
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("(This Forge furnace is broken, but still majestic. The ancient rune engraved on its surface tells ")
                                    .AddText("the history of the Bringht Tribes.)")
                                    .AddOption("Pick up the Metal Block", 14).FinalizeDialog();

                            }
                            else
                            {
                                data.AddText("(You looked inside the furnace, and found an ugly Black Metal Block which made ")
                           .AddText("~you felt nervous. Perhaps, Chong Yan Elder knows more about this item.)")
       .AddOption("Give~the~block~to~the~Elder.", 13)
  .FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("(This Forge Furnace is broken, but still majestic. The ancient rune engraved on its surface")
                         .AddText("~tells the history of the Bright Tribe.)")
     .AddOption("What~a~huge~furnace.", 255)
.FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in you inventory.")
                   .AddOption("Let me check.", 255)
            .FinalizeDialog();
                            break;
                        }

                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {

                            client.Inventory.Add(stream, 3005127);
                            client.Player.Money += 1000000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }
                        data.AddText("(You tried to read the rune on the furnace, but found too many parts missing.)")
                  .AddOption("Collect~rune~fragments~nearby.", 2)
           .FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(3008752, 8))
                            {
                                data.AddText("(You`ve finally collected all the missing parts, and complete the runes on the furnace.)")
              .AddOption("What~does~it~say?", 4)
       .FinalizeDialog();
                            }
                            else
                            {

                                data.AddText("(You should have 8 Rune Fragments to complete the runes.)")
                .AddOption("Go collect more.", 3)
         .FinalizeDialog();
                            }
                        }
                        else
                        {
                            client.Player.QuestGUI.SendAutoPatcher(3998, 226, 406, 0);
                            client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        }
                        break;
                    }
                case 4:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in you inventory.")
                   .AddOption("Let me check.", 255)
            .FinalizeDialog();
                            break;
                        }
                        if (client.Inventory.Contain(3008752, 8))
                        {
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                            {
                                client.Inventory.Remove(3008752, 8, stream);
                                client.Inventory.Add(stream, 3200346);
                                client.Inventory.Add(stream, 3005127);
                                client.Player.Money += 5000000;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);

                            }
                        }

                        data.AddText("(You read the runes on the Forge Furnace carefully, and understood the most words.)")
           .AddOption("Read~the~rune.", 6)
    .FinalizeDialog();
                        break;
                    }
                case 6:
                    {
                        var action = new ActionQuery()
                        {
                            ObjId = client.Player.UID,
                            Type = ActionType.DrawStory,
                            dwParam = 1002

                        };
                        client.Send(stream.ActionCreate(&action));

                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        data.AddText("(It was the biggest forge furnace in ancient Bright, which had produced countless famous weapons.")
                            .AddText("~According to the runes, the Master Blacksmith was the most brilliant craftsman for metal working,")
                            .AddText("~and ranked only next to the Chief of Bright Tribe.)")
        .AddOption("I~see.", 7)
 .FinalizeDialog();
                        break;
                    }
                case 7:
                    {
                        data.AddText("You noted that a hammer icon always appeared when the Master Blacksmith was mentioned in the runes.")
                            .AddText("~Is this Holy Hammer a symbol of the Master Blacksmith? If you can find it, something amazing")
                            .AddText("~may happen. Do you want to have a try?")
        .AddOption("Go~and~look~for~the~hammer.", 8)
 .FinalizeDialog();
                        break;
                    }
                case 8:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in you inventory.")
                   .AddOption("Let me check.", 255)
            .FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                        {
                            client.Inventory.Add(stream, 3200344);
                            client.Inventory.Add(stream, 3005127);
                            client.Player.Money += 1000000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }
                        data.AddText("(Since the Rune Fragments were collected from the alien monsters,")
                         .AddText("~you can probably find the Holy Hammer from their boss.)")
     .AddOption("Head~to~see~their~boss.", 9)
.FinalizeDialog();
                        break;
                    }
                case 9:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        client.Player.QuestGUI.SendAutoPatcher(3998, 392, 706, 0);
                        break;
                    }
                case 10:
                    {
                        if (client.Inventory.Contain(3008750, 1))
                        {
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "Attack35r");
                            data.AddText("(When you hit the block with the Holy Hammer, an invisible energy wave bursted out, ")
                       .AddText("~killing the alien monsters in silence. No more monsters creep out from the furnace.")
                       .AddText("~It seems the hammer power has fully suppressed the evil force in the furnace.)")
   .AddOption("Great!", 12)
.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("(You don`t have the Holy Hammer to hit the block. Go challenge the Violet Bat King, and you'll ")
                         .AddText("have a change to get hammer after defeating him.)")
     .AddOption("I see.", 11)
.FinalizeDialog();
                        }
                        break;
                    }
                case 12:
                    {
                        if (!client.Inventory.HaveSpace(2))
                        {
                            data.AddText("Please make 2 more spaces in you inventory.")
                   .AddOption("Let me check.", 255)
            .FinalizeDialog();
                            break;
                        }
                        if (client.Inventory.Contain(3008750, 1))
                        {
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                            {
                                client.Inventory.Remove(3008750, 1, stream);
                                client.Inventory.Add(stream, 3009001, 2);
                                client.Inventory.Add(stream, 3005127);
                                client.Inventory.Add(stream, 3200346);
                                client.Player.Money += 5000;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                client.SendSysMesage("You received 2 Bright Star Stones!", MsgMessage.ChatMode.System);
                            }
                        }
                        data.AddText("(You looked inside the furnace, and found an ugly Black Metal Block which made ")
                        .AddText("~you felt nervous. Perhaps, Chong Yan Elder knows more about this item.)")
    .AddOption("Give~the~block~to~the~Elder.", 13)
.FinalizeDialog();
                        break;
                    }
                case 13:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in you inventory.")
                   .AddOption("Let me check.", 255)
            .FinalizeDialog();
                            break;
                        }
                        client.Player.QuestGUI.Accept(ActiveQuest5, 0);
                        if (!client.Inventory.Contain(3008751, 1))
                            client.Inventory.Add(stream, 3008751);
                        client.Player.QuestGUI.SendAutoPatcher(ActiveQuest5.FinishNpcId.Map, ActiveQuest5.FinishNpcId.X, ActiveQuest5.FinishNpcId.Y, 0);
                        break;
                    }
                case 14:
                    {
                        if (!client.Inventory.Contain(3008751, 1))
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                data.AddText("Please make 1 more space in you inventory.")
                       .AddOption("Let me check.", 255)
                .FinalizeDialog();
                                break;
                            }
                            client.Inventory.Add(stream, 3008751);
                        }
                        data.AddText("(The Black Metal Block is already in your inventory. Hurry and talk to Chong Yan Elder about this block.)")
               .AddOption("I`ll go now.", 15)
        .FinalizeDialog();
                        break;
                    }
                case 15:
                    {
                        client.Player.QuestGUI.SendAutoPatcher(ActiveQuest5.FinishNpcId.Map, ActiveQuest5.FinishNpcId.X, ActiveQuest5.FinishNpcId.Y, 0);
                        break;
                    }
                case 11:
                    {
                        client.Player.QuestGUI.SendAutoPatcher(3998, 392, 706, 0);
                        break;
                    }
                case 3:
                    {
                        client.Player.QuestGUI.SendAutoPatcher(3998, 226, 406, 0);

                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.ChongYan)]
        public static void ChongYan(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.RemainofBrightTribesman, 0, 3633);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ChongYan, 0, 3634);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ChongYan, 0, 3635);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.BrokenForgeFurnace, 0, 3639);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ChongYan, 0, 3640);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Why did you come back again?")
              .AddOption("I go something for you.", 10).AddAvatar(67)
       .FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("HELP! HELP! Could you help me out?")
                             .AddOption("What`s~wrong?", 1).AddAvatar(67)
                                .FinalizeDialog();
                            break;
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("Have you cleared those monsters nearby?")
                .AddOption("Yes, It's safe now.", 4).AddAvatar(67)
         .FinalizeDialog();


                            }
                            else
                            {
                                data.AddText("Hero, you saved my life, and I am eternally grateful! We got attacked by a horde of")
                              .AddText("~strange monsters. It happened all of a sudden, and we suffered heavy casualties.")
                              .AddText("~We got no way to go, and retreated here.")
                .AddOption("What~kind~of~monsters?", 2).AddAvatar(67)
         .FinalizeDialog();
                            }
                            break;
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {

                                data.AddText("We're okay. Please go find the Flame Temple and remember my words. It's so urgent!")
                                             .AddOption("I`ll start off now.", 255).AddAvatar(67)
                                      .FinalizeDialog();
                                break;
                            }
                            data.AddText("The Chief asked you to find us? If so, you must have known the importance of the Flame Temple.")
                              .AddText("~To stop the Fiery Dragon Volcano from eruption, we have to completely activate the Mystery Pearl")
                              .AddText("~at the altar in front of the temple. If we failed, the flowing lava will swallow all living things,")
                              .AddText("~repeating the disaster of our ancestors. How stupid I am to get stuck here at this critical moment.")
                              .AddText("~I feel so sorry to my people.")
                .AddOption("I~can~help~you.", 6).AddAvatar(67)
         .FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false &&
                        client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("Time is limited. Please hit the road now.")
                      .AddOption("Okay.", 12).AddAvatar(67)
                      .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Now the monsters have been swept off, we`ll continue to find the Flame Temple.")
                            .AddText("~You can go first, and I`ll inform our Chief. If you see our lost tribesmen, please give them a hand.")
                            .AddOption("Got~it.", 12).AddAvatar(67)
                            .FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("i got stuck here, you my people are still waiting for my news about the Flame Temple. ")
                      .AddText("I don't want to disappoint them.")
  .AddOption("You'll be okay.", 255).AddAvatar(67)
.FinalizeDialog();
                        }

                        break;
                    }
                case 10:
                    {
                        data.AddText("You meant you got this metal block from the Forge Furnace? It`s hard to tell what it is,")
                            .AddText("~but the material looks the same as that of the top Bright craftsman`s ID token.")
                            .AddText("~Well, I`ll go ask the scholars in our tribe.")
                            .AddOption("Is~there~anything~I~can~help?", 11).AddAvatar(67)
                            .FinalizeDialog();
                        break;
                    }
                case 12:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest5, 0);
                        client.Player.QuestGUI.SendAutoPatcher(ActiveQuest5.FinishNpcId.Map, ActiveQuest5.FinishNpcId.X, ActiveQuest5.FinishNpcId.Y, ActiveQuest5.FinishNpcId.ID);

                        break;
                    }
                case 11:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in you inventory.")
                   .AddOption("Let me check.", 255).AddAvatar(67)
            .FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                        {
                            client.Inventory.Remove(3008751, 1, stream);
                            client.Inventory.Add(stream, 3200344);
                            client.Player.Money += 500000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        data.AddText("Now the monsters have been swept off, we`ll continue to find the Flame Temple.")
                         .AddText("~You can go first, and I`ll inform our Chief. If you see our lost tribesmen, please give them a hand.")
                         .AddOption("Got~it.", 12).AddAvatar(67)
                         .FinalizeDialog();
                        break;
                    }
                case 6:
                    {
                        data.AddText("It`s great! See that Fiery Dragon Volcano over there? The Flame Temple was built at the foot of the volcano.")
                            .AddText("~First, you need to break through the monster siege. When you find the Flame Temple and restore its altar,")
                            .AddText("~put this Mystery Pearl at the altar. Then, I`ll do the rest to completely dispel the crisis of Fiery Dragon.")
                                            .AddOption("I~see.~Take~care~of~yourself!", 7).AddAvatar(67)
                                     .FinalizeDialog();
                        break;
                    }
                case 7:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        client.Player.QuestGUI.SendAutoPatcher(ActiveQuest3.FinishNpcId.Map, ActiveQuest3.FinishNpcId.X, ActiveQuest3.FinishNpcId.Y, ActiveQuest3.FinishNpcId.ID);
                        break;
                    }
                case 5:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 10))
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                data.AddText("Please make 1 more space in you inventory.")
                       .AddOption("Let me check.", 255).AddAvatar(67)
                .FinalizeDialog();
                                break;
                            }
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                            {
                                client.Inventory.Add(stream, 3200346);
                                client.Player.Money += 5000;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);

                            }
                            data.AddText("The Chief asked you to find us? If so, you must have known the importance of the Flame Temple.")
                                                            .AddText("~To stop the Fiery Dragon Volcano from eruption, we have to completely activate the Mystery Pearl")
                                                            .AddText("~at the altar in front of the temple. If we failed, the flowing lava will swallow all living things,")
                                                            .AddText("~repeating the disaster of our ancestors. How stupid I am to get stuck here at this critical moment.")
                                                            .AddText("~I feel so sorry to my people.")
                                              .AddOption("I~can~help~you.", 6).AddAvatar(67)
                                       .FinalizeDialog();
                        }
                        break;
                    }
                case 4:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 10))
                        {

                            data.AddText("Thanks for your help! We`re finally safe now.")
                                             .AddOption("You`re~welcome.", 5).AddAvatar(67)
                                      .FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("There are still many monsters crawling around. Could you kill more?")
                                              .AddOption("Okay.", 3).AddAvatar(67)
                                       .FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        data.AddText("I don`t know, but I saw flame runes imprinted on their body. Every time I tried to approach them,")
                               .AddText("~I got burnt. You know, it`s impossible for me to kill so many monsters. Could you help me?")
                               .AddText("~Please kill the monsters surrounding us, and my people can be saved.")
                 .AddOption("Count~on~me!", 3).AddAvatar(67)
          .FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.Player.QuestGUI.SendAutoPatcher(client.Player.Map, 145, 338, 0);
                        break;
                    }
                case 1:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in you inventory.")
                   .AddOption("Let me check.", 255).AddAvatar(67)
            .FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Add(stream, 3200344);
                            client.Player.Money += 1000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }
                        data.AddText("Hero, you saved my life, and I am eternally grateful! We got attacked by a horde of")
                                .AddText("~strange monsters. It happened all of a sudden, and we suffered heavy casualties.")
                                .AddText("~We got no way to go, and retreated here.")
                  .AddOption("What~kind~of~monsters?", 2).AddAvatar(67)
           .FinalizeDialog();
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.RemainofBrightTribesman)]
        public static void RemainofBrightTribesman(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            //3633
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.PakYan, 0, 3632);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.RemainofBrightTribesman, 0, 3633);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("You found a burnt body on the way to find the Elder.")
                             .AddOption("Have~a~check.", 1).AddAvatar(67)
                                .FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {

                            data.AddText("We couldn`t afford any delay. Chong Yan Elder and other must have encountered terrific enemy.")
                         .AddText(" Hurry and follow their footsteps. Hope it`s not too late.")
                .AddOption("Let`s go!", 2).AddAvatar(67)
         .FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("(The Bright Tribesman`s body was left lying on the read.)")
                             .AddOption("Poor guy.", 255).AddAvatar(67)
                                .FinalizeDialog();

                        }
                        break;
                    }
                case 1:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in you inventory.")
                   .AddOption("Let me check.", 255).AddAvatar(67)
            .FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.GainExpBall(300, true, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.Money += 1000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }
                        data.AddText("(It seems the body has been burnt, and his remaining accessories belonged to the Bright Tribe.")
                            .AddText("~You found many bloodstains and footsteps along the road. The Bright tribesmen must have a")
                            .AddText("~tough fight here, and retreated to that direction.)")
                   .AddOption("Follow~the~footsteps.", 2).AddAvatar(67)
            .FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.Player.QuestGUI.SendAutoPatcher(ActiveQuest2.FinishNpcId.Map, ActiveQuest2.FinishNpcId.X, ActiveQuest2.FinishNpcId.Y, ActiveQuest2.FinishNpcId.ID);
                        break;
                    }
            }

        }


        [NpcAttribute(NpcID.GuidofFieryDragon)]
        public static void GuidofFieryDragon(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("Have you been to the Fiery Dragon region? The land was home to the Bright Tribe.")
                            .AddText("~I wonder what it looks like now.")
                     .AddOption("Send~me~to~Fiery~Dragon.", 1)
                     .AddOption("You`ll~return~home~soon.", 255).AddAvatar(7)
              .FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        client.Player.QuestGUI.SendAutoPatcher(4020, 73, 98, 0);
                        break;
                    }
            }

        }
        [NpcAttribute(NpcID.Steed3Pack)]
        public static void Steed3Pack(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            if (!client.Inventory.Contain(3007283, 1, 1))
            {
                client.CreateBoxDialog("Sorry, you don`t have a Steed+1Pack.");
                return;
            }

            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("You can claim one from the three +3 Steeds (B) in this pack. Which one do you like?")
                            .AddOption("+3 White Steed(B)", 1)
                       .AddOption("+3 Brown Steed(B)", 5)
                       .AddOption("+3 Black Steed(B)", 10)
                       .AddOption("Nevermind", 255)
                       .FinalizeDialog();
                        break;
                    }
                case 10:
                    {
                        data.AddText("Are you sure you want to claim a +3 Black Steed (B) from this pack?")
                           .AddOption("Yes.", 11)
                      .AddOption("No.", 255)
                      .FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        client.SendSysMesage("You received +3 Black Steed (B)!", MsgMessage.ChatMode.System);
                        client.Inventory.Remove(3007283, 1, stream);
                        client.Inventory.AddSteed(stream, 300000, 1, 3, true, 255, 0, 150);
                        break;
                    }
                case 5:
                    {
                        data.AddText("Are you sure you want to claim a +3 Brown Steed (B) from this pack?")
                           .AddOption("Yes.", 6)
                      .AddOption("No.", 255)
                      .FinalizeDialog();
                        break;
                    }
                case 6:
                    {
                        client.SendSysMesage("You received +3 Brown Steed (B)!", MsgMessage.ChatMode.System);
                        client.Inventory.Remove(3007283, 1, stream);
                        client.Inventory.AddSteed(stream, 300000, 1, 3, true, 0, 150, 255);
                        break;
                    }
                case 1:
                    {
                        data.AddText("Are you sure you want to claim a +3 White Steed (B) from this pack?")
                           .AddOption("Yes.", 2)
                      .AddOption("No.", 255)
                      .FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        client.SendSysMesage("You received +3 White Steed (B)!", MsgMessage.ChatMode.System);
                        client.Inventory.Remove(3007283, 1, stream);
                        client.Inventory.AddSteed(stream, 300000, 1, 3, true, 150, 255, 0);
                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.Steed1Pack)]
        public static void Steed1Pack(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            if (!client.Inventory.Contain(3007287, 1, 1))
            {
                client.CreateBoxDialog("Sorry, you don`t have a Steed+1Pack.");
                return;
            }

            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("You can claim one from the three +1 Steeds (B) in this pack. Which one do you like?")
                            .AddOption("+1 White Steed(B)", 1)
                       .AddOption("+1 Brown Steed(B)", 5)
                       .AddOption("+1 Black Steed(B)", 10)
                       .AddOption("Nevermind", 255)
                       .FinalizeDialog();
                        break;
                    }
                case 10:
                    {
                        data.AddText("Are you sure you want to claim a +1 Black Steed (B) from this pack?")
                           .AddOption("Yes.", 11)
                      .AddOption("No.", 255)
                      .FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        client.SendSysMesage("You received +1 Black Steed (B)!", MsgMessage.ChatMode.System);
                        client.Inventory.Remove(3007287, 1, stream);
                        client.Inventory.AddSteed(stream, 300000, 1, 1, true, 255, 0, 150);
                        break;
                    }
                case 5:
                    {
                        data.AddText("Are you sure you want to claim a +1 Brown Steed (B) from this pack?")
                           .AddOption("Yes.", 6)
                      .AddOption("No.", 255)
                      .FinalizeDialog();
                        break;
                    }
                case 6:
                    {
                        client.SendSysMesage("You received +1 Brown Steed (B)!", MsgMessage.ChatMode.System);
                        client.Inventory.Remove(3007287, 1, stream);
                        client.Inventory.AddSteed(stream, 300000, 1, 1, true, 0, 150, 255);
                        break;
                    }
                case 1:
                    {
                        data.AddText("Are you sure you want to claim a +1 White Steed (B) from this pack?")
                           .AddOption("Yes.", 2)
                      .AddOption("No.", 255)
                      .FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        client.SendSysMesage("You received +1 White Steed (B)!", MsgMessage.ChatMode.System);
                        client.Inventory.Remove(3007287, 1, stream);
                        client.Inventory.AddSteed(stream, 300000, 1, 1, true, 150, 255, 0);
                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.ServerTransfer)]
        public static void ServerTransfer(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("Guys, I`m responsible for transferring servers. If you don`t wanna stay here anymore, ")
                            .AddText("I can help anytime except 07:00 - 09:30 and 15:00 - 17:30. Anything?")
                  .AddOption("Yeah,~tell~me~more~about~it.", 1)
                  .AddOption("I~wanna~transfer~now.", 10)
                  .AddOption("Nothing.", 255).AddAvatar(186)
                  .FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        data.AddText("I like curious people, seriously. There`re something you need to do before transferring:")
                       .AddText("1. Cancel all your relationships with this server, including guild, clan, mentor, trade partner and marriage./n")
                       .AddText("2. Make sure you aren`t detaining other players` equipment, or your equipment is being detained by others./n")
                       .AddText("3. Retrieve all items from your itemboxes in your house./n")
                        .AddText("4. Claim all your TQ Point Cards./n")
                         .AddText("5. View all your unread messages./n")
                          .AddText("6. Claim your mentor exp./n")
                          .AddText("After that, give me 1,000,000 CPs, done!")
             .AddOption("I~got~it.", 255).AddAvatar(186)
             .FinalizeDialog();
                        break;
                    }
                case 10:
                    {
                        if (Program.OnMainternance)
                        {
                            client.CreateBoxDialog("You are not eligible to get transferred right now , please wait for maintenance .");
                            return;
                        }

                        data.AddText("Select a server to transfer. ");
                        foreach (var server in Database.GroupServerList.CanTransferServers(client.Intrn))
                            data.AddOption("" + server.Name + "", (byte)(100 + server.ID));
                        data.AddOption("Nothing.", 255)
                            .AddAvatar(186)
                        .FinalizeDialog();
                        break;
                    }
                default:
                    {
                        if (Option > 100)
                        {
                            if (client.Intrn == false)
                            {
                                if (client.Player.ConquerPoints < 1000000)
                                {
                                    data.AddText("You need to have 1kk CPs for transfer ! ")
                    .AddOption("I~see.", 255).AddAvatar(186)
                    .FinalizeDialog();
                                    break;
                                }
                            }
                            /*if (client.Warehouse.HaveItemsInBanks())
                            {
                                data.AddText("You need to clean your all werehouses before you transfer!")
                 .AddOption("I~see.", 255).AddAvatar(186)
                 .FinalizeDialog();

                                return;
                            }
                            if (client.MyWardrobe.HaveItems())
                            {
                                data.AddText("You need to clean your Wardrobe(garment/mount) before you transfer!")
             .AddOption("I~see.", 255).AddAvatar(186)
             .FinalizeDialog();
                                return;
                            }*/

                            if (client.Player.Associate.HaveAsociats())
                            {
                                data.AddText("Remove your (trade parteners/friends/mentor/apprentice) before transfer!")
               .AddOption("I~see.", 255).AddAvatar(186)
               .FinalizeDialog();
                                return;
                            }
                            if (client.Player.SpouseUID != 0)
                            {
                                data.AddText("You need to be divorced before transfer!")
                                    .AddOption("I~see.", 255).AddAvatar(186)
                                    .FinalizeDialog();
                                return;
                            }
                            if (client.Player.MyGuild != null || client.Player.MyClan != null)
                            {
                                data.AddText("Please remove your character from Guild , Clan and Union before transfer!")
                                .AddOption("I~see.", 255).AddAvatar(186)
                                .FinalizeDialog();
                                return;
                            }

                            if (client.Player.IsCheckedPass == false)
                            {
                                client.CreateBoxDialog("Make~sure~you~have~entered~a~correct~secondary~password~in~the~warehouse!");
                                return;
                            }
                            var server = Database.GroupServerList.GetServer((uint)(Option - 100));
                            if (server != null)
                            {

                                client.Player.MessageBox("Are~you~sure~you~want~to~transfer~to~" + server.Name + "~server? Note: all your items in waredrobe, warehouses and sash will be removed",
                                    p => p.Player.InitializeTransfer(server.ID), null, 0, MsgStaticMessage.Messages.None);

                            }
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.BlackFridayAccesory)]
        public static void BlackFridayAccesory(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            if (!client.Inventory.Contain(3100053, 1))
                return;
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                      .AddOption("Let me check.", 255).AddAvatar(7)
                      .FinalizeDialog();
                            break;
                        }
                        data.AddText("Select the Accesory you need.");
                        byte page = (byte)(Option + 1);
                        int tocount = (int)Math.Min(Database.ItemType.TopAccesorys.Count, (page * 10));
                        for (int x = page - 1; x < tocount; x++)
                        {
                            var garment = Database.ItemType.TopAccesorys[x];
                            Database.ItemType.DBItem DBInfo;
                            if (Database.ItemType.Accessorys.TryGetValue(garment, out DBInfo))
                            {
                                data.AddOption("" + DBInfo.Name + "", (byte)(100 + x));
                            }

                        }
                        data.AddOption("Next Page", page)
                    .AddAvatar(7)
                    .FinalizeDialog();
                        break;
                    }
                default:
                    {
                        if (Option < 100)
                        {
                            data.AddText("Select the Accessory you need.");
                            byte page = (byte)(Option + 1);
                            int tocount = (int)Math.Min(Database.ItemType.TopAccesorys.Count, (page * 10));
                            for (int x = (page - 1) * 10; x < tocount; x++)
                            {
                                var garment = Database.ItemType.TopAccesorys[x];
                                Database.ItemType.DBItem DBInfo;
                                if (Database.ItemType.Accessorys.TryGetValue(garment, out DBInfo))
                                {
                                    data.AddOption("" + DBInfo.Name + "", (byte)(100 + x));
                                }
                            }
                            if (tocount % 10 == 0)
                                data.AddOption("Next Page", page);
                            data.AddAvatar(7)
                            .FinalizeDialog();
                        }
                        else //get garment.
                        {
                            client.Player.BuyItemS = Database.ItemType.TopAccesorys[Option - 100];
                            Database.ItemType.DBItem DBInfo;
                            if (Database.ItemType.Accessorys.TryGetValue(client.Player.BuyItemS, out DBInfo))
                            {
                                data.AddText("Are you sure you wanna buy this Accessory (" + DBInfo.Name + ")?!")
                          .AddOption("Sure.", 250)
                          .AddOption("Show me the Accessory.", 251)
                          .AddOption("Let me check.", 255).AddAvatar(7)
                          .FinalizeDialog();
                            }
                        }

                        break;
                    }
                case 250:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                      .AddOption("Let me check.", 255).AddAvatar(7)
                      .FinalizeDialog();
                            break;
                        }
                        if (client.Player.BuyItemS != 0)
                        {
                            client.Inventory.Remove(3100053, 1, stream);

                            client.Inventory.Add(stream, client.Player.BuyItemS, 1, 0, 1);
                            Database.ItemType.DBItem DBInfo;
                            if (Database.ItemType.Accessorys.TryGetValue(client.Player.BuyItemS, out DBInfo))
                                client.CreateBoxDialog("You received 1 " + DBInfo.Name + "");
                            client.Player.BuyItemS = 0;

                        }
                        break;
                    }
                case 251:
                    {

                        Database.ItemType.DBItem DBInfo;
                        if (Database.ItemType.Accessorys.TryGetValue(client.Player.BuyItemS, out DBInfo))
                        {
                            ShowChatItems.ShowFakeItem(client, stream, client.Player.BuyItemS, DBInfo.Durability);

                            data.AddText("Are you sure you wanna buy this Accessory (" + DBInfo.Name + ")?!")
                                .AddOption("Sure.", 250)
                                .AddOption("Show me the Accessory.", 251)
                                .AddOption("Let me check.", 255).AddAvatar(7)
                                .FinalizeDialog();
                        }
                        break;
                    }
            }
        }


        [NpcAttribute(NpcID.IdealDesgner)]
        public static void IdealDesgner(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I can turn a Spirit of Legend into a random temporary Phoenix Cup or <tip color=0xfff05050 desc=A#certain#number#of#cup#fragments#can#be#combined#into#the#corresponding#Phoenix#Cup.>cup fragment</tip>.")
                            .AddText("~Equipping the Phoenix Cup will bring you attribute bonus. If you have any cup that you don`t need anymore, you can exchange it for <tip color=0xfff05050 desc=30#fragments#can#be#combined#into#a#90-day#Holy#Phoenix#Cup.>Holy Phoenix Cup Fragment</tip> or")
                            .AddText("~Chi Points.")
                   .AddOption("Use~the~Spirit~of~Legend.", 1)
                   .AddOption("Swap~for~cup~fragment~or~Chi.", 255)
                   .AddOption("Learn~more~about~Phoenix~Cups.", 30)
                   .AddOption("I`ll~talk~to~you~later.", 255)
                   .AddAvatar(7).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(3300056, 5))
                        {
                            data.AddText("f you really want the Phoenix Cup, you can also pay 5 Spirit of Legend to make a try.")
                  .AddOption("Deal!~Here~are~5xSpiritofLegend.", 5)
                  .AddOption("I`ll~think~about~it.", 255).AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("It seems you don`t have 5x Spirit of Legend. If you really want the Phoenix Cup, you can also pay 15,000 CPs to make a try.")
                    .AddOption("Deal!~Here~are~15,000~CPs.", 2)
                    .AddOption("I`ll~think~about~it.", 255).AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                case 5:
                    {
                        data.AddText("Are you sure you want to try with 5x Spirit of Legend?")
            .AddOption("Yes.~I`ll~pay~the~5xSpiritofLegend.", 6)
            .AddOption("I`ll~think~about~it.", 255).AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 6:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                     .AddOption("Let me check.", 255).AddAvatar(4).FinalizeDialog();
                            break;
                        }
                        if (client.Inventory.Contain(3300056, 5))
                        {
                            client.Inventory.Remove(3300056, 5, stream);
                            byte rand = (byte)Program.GetRandom.Next(1, 3);
                            byte count = (byte)Program.GetRandom.Next(1, 3);
                            switch (rand)
                            {
                                case 1:
                                    {

                                        client.SendSysMesage("You received SilverPhoenixCupFragment*" + count + "!", MsgMessage.ChatMode.System);
                                        client.Inventory.AddItemWitchStack(3300053, 0, count, stream);
                                        break;
                                    }
                                case 2:
                                    {
                                        client.SendSysMesage("You received GoldenPhoenixCupFragment*" + count + "!", MsgMessage.ChatMode.System);
                                        client.Inventory.AddItemWitchStack(3300054, 0, count, stream);
                                        break;
                                    }
                                default:
                                    {
                                        client.SendSysMesage("You received HolyPhoenixCupFragment*" + count + "!", MsgMessage.ChatMode.System);
                                        client.Inventory.AddItemWitchStack(3300055, 0, count, stream);
                                        break;
                                    }
                            }
                        }
                        else
                        {
                            data.AddText("You should give me a Spirit of Legend or 15,000 CPs before trying to make a phoenix cup.")
             .AddOption("Okay.", 255).AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        data.AddText("Are you sure you want to try with 15,000 CPs instead of a Spirit of Legend?")
              .AddOption("Yes.~I`ll~pay~the~money.", 3)
              .AddOption("I`ll~think~about~it.", 255).AddAvatar(7).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                     .AddOption("Let me check.", 255).AddAvatar(4).FinalizeDialog();
                            break;
                        }
                        if (client.Player.ConquerPoints >= 15000)
                        {
                            client.Player.ConquerPoints -= 15000;
                            byte rand = (byte)Program.GetRandom.Next(1, 3);
                            byte count = (byte)Program.GetRandom.Next(1, 3);
                            switch (rand)
                            {
                                case 1:
                                    {

                                        client.SendSysMesage("You received SilverPhoenixCupFragment*" + count + "!", MsgMessage.ChatMode.System);
                                        client.Inventory.AddItemWitchStack(3300053, 0, count, stream);
                                        break;
                                    }
                                case 2:
                                    {
                                        client.SendSysMesage("You received GoldenPhoenixCupFragment*" + count + "!", MsgMessage.ChatMode.System);
                                        client.Inventory.AddItemWitchStack(3300054, 0, count, stream);
                                        break;
                                    }
                                default:
                                    {
                                        client.SendSysMesage("You received HolyPhoenixCupFragment*" + count + "!", MsgMessage.ChatMode.System);
                                        client.Inventory.AddItemWitchStack(3300055, 0, count, stream);
                                        break;
                                    }
                            }
                        }
                        else
                        {
                            data.AddText("You should give me a Spirit of Legend or 15,000 CPs before trying to make a phoenix cup.")
             .AddOption("Okay.", 255).AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                case 30:
                    {
                        data.AddText("The Cross-server Elite PK Tournament will award 4 kinds of phoenix cups which grant different attributes.")
                          .AddText("~Which cup would you like to know about?")
                 .AddOption("Holy~Phoenix~Cup.", 31)
                 .AddOption("Golden~Phoenix~Cup.", 32)
                 .AddOption("Silver~Phoenix~Cup.", 33)
                 .AddOption("Bronze~Phoenix~Cup.", 34).AddAvatar(7).FinalizeDialog();
                        break;
                    }
                case 31:
                    {
                        data.AddText("Holy Phoenix Cup's basic attributes: 1% Blessed, HP +1200, MP +1200, Defense +1000, \n")
                        .AddText("                  P-Strike +1%, M-Strike +1%, Break +1%,      Anti-break +1% \n")
                        .AddText("Bonus attributes if tempered: Lv.3 Toxin Eraser, Lv.5 Draining Touch, Lv.2 Blood Spawn, \n")
                        .AddText("                   Lv.5 Free Soul, Lv.5 Killing Flash, Lv.3 Straight Life, HP +500")
               .AddOption("I~see.", 255).AddAvatar(7).FinalizeDialog();
                        break;
                    }
                case 32:
                    {
                        data.AddText("Golden Phoenix Cup's basic attributes: 1% Blessed, HP +1000, MP +1000, Defense +500 \n")
                        .AddText("Bonus attributes if tempered: Lv.3 Toxin Eraser, Lv.4 Draining Touch, Lv.2 Blood Spawn, \n")
                        .AddText("                  Lv.4 Free Soul, Lv.4 Killing Flash, Lv.3 Straight Life, HP +300 \n")
               .AddOption("I~see.", 255).AddAvatar(7).FinalizeDialog();
                        break;
                    }
                case 33:
                    {
                        data.AddText("Silver Phoenix Cup's basic attributes: 1% Blessed, HP +900, MP +900, Defense +300 \n")
                        .AddText("Bonus attributes if tempered: Lv.3 Toxin Eraser, Lv.3 Draining Touch, Lv.1 Blood Spawn, \n")
                        .AddText("                  Lv.3 Free Soul, Lv.3 Killing Flash, Lv.2 Straight Life \n")
               .AddOption("I~see.", 255).AddAvatar(7).FinalizeDialog();
                        break;
                    }
                case 34:
                    {
                        data.AddText("Bronze Phoenix Cup's basic attributes: 1% Blessed, HP +800, MP +800, Defense +150 \n")
                        .AddText("Bonus attributes if tempered: Lv.3 Toxin Eraser, Lv.2 Draining Touch, Lv.2 Killing Flash,  Lv.2 Free Soul \n")
               .AddOption("I~see.", 255).AddAvatar(7).FinalizeDialog();
                        break;
                    }
            }
        }


        [NpcAttribute(NpcID.AstralPheonix)]
        public static void AstralPheonix(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("1.Join the Cross-Server Elite PK Tournament and you can get Elite Points. \n")
                            .AddText("2.Elite Points can be used to exchange for reward. \n")
                            .AddText("3.Top 8 players can get valuable reward such as exclusive halo and garments.")
                   .AddOption("I~see.", 255).AddAvatar(4).FinalizeDialog();
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.HolyPhoenixCup)]
        public static void HolyPhoenixCup(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {

                        data.AddText(" 					                  *Holy Phoenix Cup* \n")
                            .AddText(" ???????????????????????????????????????????????????????????? \n")
                            .AddText(" 					[Basic Attributes]				[Bonus Attributes If Tempered] \n")
                            .AddText(" 					HP +1200					 Lv.3 Toxin Eraser \n")
                            .AddText(" 					MP +1200					 Lv.5 Draining Touch \n")
                            .AddText(" 					Defense +1000			 Lv.2 Blood Spawn \n")
                            .AddText(" 					P-Strike +1%				 Lv.5 Free Soul \n")
                            .AddText(" 					M-Strike +1%				 Lv.5 Killing Flash \n")
                            .AddText(" 					Break +1%					 Lv.3 Straight Life \n")
                             .AddText(" 				Anti-break +1%				 HP +500 \n")
                            .AddText(" ???????????????????????????????????????????????????????????? \n")
                            .AddText("  				Holy Phoenix Cup`s Duration: 90 days")
                   //.AddOption("Change 50 legend spirit..", 255)
                   .AddOption("I~see ", 255)
                   .AddAvatar(318).FinalizeDialog();


                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.GoldenPhoenixCup)]
        public static void GoldenPhoenixCup(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {

                        data.AddText(" 					                  *Golden Phoenix Cup* \n")
                            .AddText(" ???????????????????????????????????????????????????????????? \n")
                            .AddText(" 					[Basic Attributes]				[Bonus Attributes If Tempered] \n")
                            .AddText(" 					HP +1000					 Lv.3 Toxin Eraser \n")
                            .AddText(" 					MP +1000					 Lv.4 Draining Touch \n")
                            .AddText(" 					Defense +500			 Lv.2 Blood Spawn \n")
                            .AddText(" 					1% Blessed			    Lv.4 Free Soul \n")
                             .AddText("											Lv.4 Killing Flash \n")
                            .AddText(" 											Lv.3 Straight Life \n")
                             .AddText(" 										   HP +300 \n")
                            .AddText(" ???????????????????????????????????????????????????????????? \n")
                            .AddText("  				Golden Phoenix Cup`s Duration: 90 days")
                   .AddOption("I~see ", 255)
                   .AddAvatar(317).FinalizeDialog();


                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.SilverPheoenixCup)]
        public static void SilverPheoenixCup(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);


            switch (Option)
            {
                case 0:
                    {

                        data.AddText(" 					                   *Silver Phoenix Cup* \n")
                            .AddText(" ???????????????????????????????????????????????????????????? \n")
                            .AddText(" 					[Basic Attributes]				[Bonus Attributes If Tempered] \n")
                            .AddText(" 					HP +900					Lv.3 Toxin Eraser \n")
                            .AddText(" 					MP +900					Lv.3 Draining Touch \n")
                            .AddText(" 					Defense +300		  Lv.1 Blood Spawn \n")
                            .AddText(" 					1% Blessed			  Lv.3 Free Soul \n")
                             .AddText("										         Lv.3 Killing Flash \n")
                            .AddText(" 										         Lv.2 Straight Life \n")
                            .AddText(" ???????????????????????????????????????????????????????????? \n")
                            .AddText("  				Silver Phoenix Cup`s Duration: 60 days")
                   .AddOption("I~see ", 255)
                   .AddAvatar(316).FinalizeDialog();


                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.BronzePhoenixCup)]
        public static void BronzePhoenixCup(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {

                        data.AddText(" 					                   *Bronze Phoenix Cup* \n")
                            .AddText(" ???????????????????????????????????????????????????????????? \n")
                            .AddText(" 					[Basic Attributes]				[Bonus Attributes If Tempered] \n")
                            .AddText(" 					HP +800					Lv.3 Toxin Eraser \n")
                            .AddText(" 					MP +800					Lv.2 Draining Touch \n")
                            .AddText(" 					Defense +150		  Lv.2 Killing Flash \n")
                            .AddText(" 					1% Blessed			  Lv. Free Soul2 \n")
                            .AddText(" ???????????????????????????????????????????????????????????? \n")
                            .AddText(" 				        Bronze Phoenix Cup`s Duration: 30 days")

                   .AddOption("I~see ", 255)
                   .AddAvatar(315).FinalizeDialog();


                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.SelectSacredRefineryPack)]
        public static void SelectSacredMaterial(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {

            {
                if (!client.Inventory.Contain(3004249, 1))
                {
                    client.CreateBoxDialog("Sorry, you don`t have a SacredRefineryPack.");
                    return;
                }
            }


            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        {
                            data.AddText("Choose what Refineries with level 6 you need .")
                             .AddOption("Detoxication[Bag]. ", 32) //32
                             .AddOption("Detoxication[Necklace]. ", 33)
                             .AddOption("Breakthrough[Bracelet]. ", 34)
                             .AddOption("Breakthrough[Ring]. ", 36)
                             .AddOption("Penetration[Bracelet]. ", 37)
                             .AddOption("Detoxication[Armor]. ", 38)
                             .AddOption("Next Page.", 39)
                                   .AddAvatar(200)
                                  .FinalizeDialog();
                        }


                        break;
                    }




                #region null2
                case 31:
                    {
                        data.AddText("Choose what Refineries with level 6 you need .")
                        .AddOption("Detoxication[Bag]. ", 32)
                        .AddOption("Detoxication[Necklace]. ", 33)
                        .AddOption("Breakthrough[Bracelet]. ", 34)
                        .AddOption("Breakthrough[Ring]. ", 36)
                        .AddOption("Penetration[Bracelet]. ", 37)
                        .AddOption("Detoxication[Armor]. ", 38)
                        .AddOption("Next Page.", 39)

                          .AddAvatar(200)
                        .FinalizeDialog();
                        break;
                    }
                #endregion
                #region Next Page 1
                case 39:
                    {
                        data.AddText("Choose what Refineries with level 6 you need .")
                        .AddOption("Counteraction[Necklace]. ", 15)
                        .AddOption("Breakthrough[2-Handed]. ", 16)
                        .AddOption("CriticalStrike[Ring]. ", 17)
                        .AddOption("M-Defense[Bracelet]. ", 18)
                        .AddOption("CriticalStrike[2-Handed]. ", 19)
                        .AddOption("M-Defense[Ring]. ", 20)
                        .AddOption("Next Page.", 21)
                          .AddAvatar(200)
                          .FinalizeDialog();
                        break;
                    }
                #endregion
                #region Next Page 2
                case 21:
                    {
                        data.AddText("Choose what Refineries with level 6 you need .")
                        .AddOption("Penetration[Bag]. ", 22)
                        .AddOption("Block[Shield]. ", 23)
                        .AddOption("Detoxication[Boots]. ", 24)
                        .AddOption("Counteraction[Bag]. ", 25)
                        .AddOption("Breakthrough[Bow]. ", 26)
                        .AddOption("Immunity[Boots]. ", 27)
                        .AddOption("Next Page.", 28)
                          .AddAvatar(200)
                          .FinalizeDialog();
                        break;
                    }
                #endregion
                #region Next Page 3
                case 28:
                    {
                        data.AddText("Choose what Refineries with level 6 you need .")
                        .AddOption("SkillC.Strike[Bracelet]. ", 29)
                        .AddOption("CriticalStrike[Bow]. ", 30)
                        .AddOption("M-Defense[Bag]. ", 41)
                        .AddOption("Penetration[HeadGear]. ", 42)
                        .AddOption("Block[HeadGear]. ", 43)
                        .AddOption("Detoxication[Headgear]. ", 44)
                        .AddOption("Next Page.", 45)
                          .AddAvatar(200)
                          .FinalizeDialog();
                        break;
                    }
                #endregion
                #region Next Page 4
                case 45:
                    {
                        data.AddText("Choose what Refineries with level 6 you need .")
                        .AddOption("SkillC.Strike[Bracelet]. ", 29)
                        .AddOption("CriticalStrike[Bow]. ", 30)
                        .AddOption("M-Defense[Bag]. ", 41)
                        .AddOption("Penetration[HeadGear]. ", 42)
                        .AddOption("Block[HeadGear]. ", 43)
                        .AddOption("Detoxication[Headgear]. ", 44)
                        .AddOption("Next Page.", 46)
                          .AddAvatar(200)
                          .FinalizeDialog();
                        break;
                    }
                #endregion
                #region Next Page 5
                case 46:
                    {
                        data.AddText("Choose what Refineries with level 6 you need .")
                        .AddOption("Counteraction[Armor]. ", 47)
                        .AddOption("Breakthrough[1-Handed]. ", 48)
                        .AddOption("Intensification[Headgear]. ", 49)
                        .AddOption("Immunity[Armor]. ", 83)
                        .AddOption("SkillC.Strike[Backsword]. ", 84)
                        .AddOption("CriticalStrike[1-Handed]. ", 85)
                        .AddOption("Next Page.", 86)
                          .AddAvatar(200)
                          .FinalizeDialog();
                        break;
                    }
                #endregion
                #region Next Page 6
                case 86:
                    {
                        data.AddText("Choose what Refineries with level 6 you need .")
                        .AddOption("M-Defense[Necklace]. ", 87)
                        .AddOption("SkillC.Strike[Backsword]. ", 88)
                        .AddOption("Penetration[Bracelet]. ", 89)
                        .AddOption("Detoxication[Bag]. ", 90)
                        .AddOption("Penetration[Headgear]. ", 91)
                        .AddOption("Detoxication[Necklace]. ", 92)
                        .AddOption("Next Page.", 93)
                          .AddAvatar(200)
                          .FinalizeDialog();
                        break;
                    }
                #endregion
                #region Next Page 7
                case 93:
                    {
                        data.AddText("Choose what Refineries with level 6 you need .")
                        .AddOption("Detoxication[Boots]. ", 94)
                        .AddOption("Detoxication[Armor]. ", 95)
                        .AddOption("Detoxication[Headgear]. ", 96)
                        .AddOption("Block[Shield]. ", 97)
                        .AddOption("Breakthrough[Bow]. ", 101)
                        .AddOption("Breakthrough[2-Handed]. ", 102)
                        .AddOption("Next Page.", 103)
                          .AddAvatar(200)
                          .FinalizeDialog();
                        break;
                    }
                #endregion
                #region Next Page 7
                case 103:
                    {
                        data.AddText("Choose what Refineries with level 6 you need .")
                        .AddOption("Breakthrough[1-Handed]. ", 104)
                        .AddOption("CriticalStrike[2-Handed]. ", 105)
                        .AddOption("CriticalStrike[1-Handed]. ", 106)
                        .AddOption("CriticalStrike[Bow]. ", 107)
                        .AddOption("First page.", 31) //aici
                          .AddAvatar(200)
                         .FinalizeDialog();
                        break;
                    }
                #endregion

                #region Level 6 Refainaries.

                case 107: //CriticalStrike[Bow]
                    {


                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");
                        client.Inventory.Add(stream, 3004147, 1);



                        break;
                    }

                case 106: //CriticalStrike[1-Handed]
                    {



                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");
                        client.Inventory.Add(stream, 3004137, 1);


                        break;
                    }
                case 105: //CriticalStrike[2-Handed]
                    {


                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");

                        client.Inventory.Add(stream, 3004156, 1);


                        break;
                    }

                case 104: //Breakthrough[1-Handed]
                    {


                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");

                        client.Inventory.Add(stream, 3004141, 1);


                        break;
                    }

                case 102: //Breakthrough[2-Handed]
                    {


                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");


                        client.Inventory.Add(stream, 3004159, 1);


                        break;
                    }
                case 101: //Breakthrough[Bow].
                    {

                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");



                        client.Inventory.Add(stream, 3004150, 1);


                        break;
                    }

                case 97: //Block[Shield].
                    {

                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");



                        client.Inventory.Add(stream, 3004153, 1);


                        break;
                    }

                case 96: //Detoxication[Headgear]
                    {


                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");

                        client.Inventory.Add(stream, 3004143, 1);


                        break;
                    }

                case 95: //Detoxication[Armor]
                    {



                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");

                        client.Inventory.Add(stream, 3004161, 1);


                        break;
                    }

                case 94: //Detoxication[Boots]
                    {



                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");


                        client.Inventory.Add(stream, 3004152, 1);


                        break;
                    }
                case 92: //Detoxication[Necklace]
                    {


                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");


                        client.Inventory.Add(stream, 3004165, 1);


                        break;
                    }

                case 91: //Penetration[Headgear]
                    {


                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");


                        client.Inventory.Add(stream, 3004145, 1);


                        break;
                    }


                case 90: //Detoxication[Bag]
                    {


                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");


                        client.Inventory.Add(stream, 3004154, 1);

                        break;
                    }


                case 89: //Penetration[Bracelet]
                    {


                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");


                        client.Inventory.Add(stream, 3004162, 1);


                        break;
                    }

                case 88: //SkillC.Strike[Backsword]
                    {


                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");


                        client.Inventory.Add(stream, 3004138, 1);


                        break;
                    }

                case 87: //M-Defense[Necklace]
                    {


                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");


                        client.Inventory.Add(stream, 3004136, 1);


                        break;
                    }


                case 85: //CriticalStrike[1-Handed]
                    {


                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");


                        client.Inventory.Add(stream, 3004137, 1);


                        break;
                    }


                case 84: //SkillC.Strike[Backsword].
                    {


                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");


                        client.Inventory.Add(stream, 3004138, 1);


                        break;
                    }

                case 83: //Immunity[Armor].
                    {


                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");


                        client.Inventory.Add(stream, 3004139, 1);


                        break;
                    }


                case 49: //Intensification[Headgear]
                    {

                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");

                        client.Inventory.Add(stream, 3004140, 1);


                        break;
                    }


                case 48: //Breakthrough[1-Handed]
                    {



                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");


                        client.Inventory.Add(stream, 3004141, 1);


                        break;
                    }


                case 47: //Counteraction[Armor]
                    {


                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");

                        client.Inventory.Add(stream, 3004142, 1);


                        break;
                    }


                case 44: //Detoxication[HeadGear]
                    {


                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");


                        client.Inventory.Add(stream, 3004143, 1);


                        break;
                    }


                case 43: //Block[HeadGear]
                    {


                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");


                        client.Inventory.Add(stream, 3004144, 1);


                        break;
                    }


                case 42: //Penetration[HeadGear]
                    {


                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");


                        client.Inventory.Add(stream, 3004145, 1);


                        break;
                    }

                case 41: //M-Defense[Bag]
                    {



                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");


                        client.Inventory.Add(stream, 3004146, 1);


                        break;
                    }

                case 30: //CriticalStrike[Bow]
                    {


                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");


                        client.Inventory.Add(stream, 3004147, 1);


                        break;
                    }

                case 29: //SkillC.Strike[Bracelet]
                    {


                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");


                        client.Inventory.Add(stream, 3004148, 1);


                        break;
                    }

                case 27: //Immunity[Boots]
                    {


                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");


                        client.Inventory.Add(stream, 3004149, 1);


                        break;
                    }

                case 26: //Breakthrough[Bow]
                    {


                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");


                        client.Inventory.Add(stream, 3004150, 1);


                        break;
                    }

                case 25: //Counteraction[Bag]
                    {


                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");


                        client.Inventory.Add(stream, 3004151, 1);

                        break;
                    }

                case 24: //Detoxication[Boots]
                    {


                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");


                        client.Inventory.Add(stream, 3004152, 1);


                        break;
                    }

                case 23: //Block[Shield]
                    {


                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");


                        client.Inventory.Add(stream, 3004153, 1);


                        break;
                    }


                case 22: //Penetration[Bag]
                    {


                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");


                        client.Inventory.Add(stream, 3004154, 1);


                        break;
                    }

                case 20: //M-Defense[Ring]
                    {


                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");


                        client.Inventory.Add(stream, 3004155, 1);


                        break;
                    }

                case 19: //CriticalStrike[2-Handed]
                    {





                        client.Inventory.Add(stream, 3004156, 1);

                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");
                        break;
                    }

                case 18: //M-Defense[Bracelet]
                    {


                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");


                        client.Inventory.Add(stream, 3004157, 1);


                        break;
                    }

                case 17: //CriticalStrike[Ring]
                    {


                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");


                        client.Inventory.Add(stream, 3004158, 1);

                        break;
                    }

                case 16: //Breakthrough[2-Handed]
                    {


                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");


                        client.Inventory.Add(stream, 3004159, 1);


                        break;
                    }

                case 15: //Counteraction[Necklace]
                    {


                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");


                        client.Inventory.Add(stream, 3004160, 1);


                        break;
                    }
                case 37: //Penetration[Bracelet]
                    {


                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");


                        client.Inventory.Add(stream, 3004162, 1);


                        break;
                    }
                case 36: //Breakthrough[Ring]
                    {


                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");

                        client.Inventory.Add(stream, 3004163, 1);



                        break;
                    }

                case 34: //Breakthrough[Bracelet]
                    {


                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");

                        client.Inventory.Add(stream, 3004164, 1);


                        break;
                    }
                case 33: //Detoxication[Necklace]
                    {


                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");


                        client.Inventory.Add(stream, 3004165, 1);


                        break;
                    }
                case 32: //Detoxication[Bag]
                    {


                        client.Inventory.Remove(3004249, 1, stream);
                        client.CreateBoxDialog("You received 1 Sacred Refinery Material.");

                        client.Inventory.Add(stream, 3004166, 1);


                        break;
                    }
                    #endregion
            }
        }

        public static void KingDoomCrystals(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            //To claim a bounty, you should kill 50 enemies in the Realm.
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.Crystal, client.Player.Class, 35028);

            switch (Option)
            {
                case 0:
                    {

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted) == false)
                        {
                            client.SendSysMesage("You`ve already claimed a bounty today. No more to claim.", MsgMessage.ChatMode.System);
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                data.AddText("Please make 1 more space in your inventory.")
                          .AddOption("Let me check.", 255)
                          .FinalizeDialog();
                                break;
                            }
                            if (client.Player.QuestGUI.CheckKingDomQuest(ActiveQuest.MissionId, 50))
                            {
                                client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId);
                                client.CreateBoxDialog("You`ve restored peace to the Realm by killing to enemy soldiers, and received a Realm Crystal Fragment.");

                            }
                            else
                                client.CreateBoxDialog("To claim a bounty, you should kill 50 enemies in the Realm.");
                        }
                        else
                            client.CreateBoxDialog("To claim a bounty, you should kill 50 enemies in the Realm.");

                        break;
                    }
            }

        }


        [NpcAttribute(NpcID.GoldPrizeToken)]
        public static void GoldPrizeToken(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {

            if (!client.Inventory.Contain(723467, 1))
            {
                client.CreateBoxDialog("Sorry, you don`t have a LordToken.");
                return;
            }



            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("Hey " + client.Player.Name + "! I`m the LordToken and I can provide you with the great Cups.")
                          .AddOption("3 LordTokens for GoldPrize.", 1)
                          .AddOption("1 LordToken for SilverPrize.", 2)
                          .AddOption("Nevermind.", 255)
                          .FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Inventory.Contain(723467, 3))
                            {
                                string MSG = "Congratulation to " + client.Player.Name + " ! he/she managed to open the legendary LordToken and received 1 GoldPrize.";
                                Program.SendGlobalPackets.Enqueue(new MsgMessage(MSG, MsgMessage.MsgColor.red, MsgMessage.ChatMode.System).GetArray(stream));
                                client.Inventory.Remove(723467, 3, stream);
                                client.Inventory.Add(stream, 2100075, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            }
                            else
                                client.CreateBoxDialog("You dont have 3 Lord Tokens.");
                        }
                        else
                        {
                            client.CreateBoxDialog("Please make 1 more space in your inventory.");
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Inventory.Contain(723467, 1))
                            {
                                string MSG = "Congratulation to " + client.Player.Name + " ! he/she managed to open the LordToken and received 1 SilverPrize.";
                                Program.SendGlobalPackets.Enqueue(new MsgMessage(MSG, MsgMessage.MsgColor.red, MsgMessage.ChatMode.System).GetArray(stream));
                                client.Inventory.Remove(723467, 1, stream);
                                client.Inventory.Add(stream, 2100065, 1);
                            }
                            else
                                client.CreateBoxDialog("You dont have 1 Lord Tokens.");
                        }
                        else
                        {
                            client.CreateBoxDialog("Please make 1 more space in your inventory.");
                        }
                        break;
                    }

            }
        }

        [NpcAttribute(NpcID.SashFragment_Realm)]
        public static void SashFragment_Realm(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {

            if (!client.Inventory.Contain(3600024, 1))
            {
                client.CreateBoxDialog("Sorry, you don`t have a SashFragment(Realm).");
                return;
            }



            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("You`ll have a 20% chance to get a Sash (S) if using this fragment alone, or lose it if failed.")
                            .AddText("~While if you have 5 fragments, you can surely combine them into a Sash (S). How many fragments would you like to use?")
                          .AddOption("1~fragment.~(20%~chance)", 1)
                          .AddOption("Combine~5~fragments.", 10)
                          .FinalizeDialog();
                        break;
                    }
                case 10:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                      .AddOption("Let me check.", 255)
                      .FinalizeDialog();
                            break;
                        }
                        if (client.Inventory.Contain(3600024, 1, 0))
                        {
                            client.Inventory.Remove(3600024, 5, stream);
                            client.Inventory.Add(stream, 1100003);
                            data.AddText("You successfully made a Sash (S)!")
                  .AddOption("Great!", 255)
                  .FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You should have 5 Sash Fragments to combine them into a Sash (S). Please retry when you have enough fragments.")
                   .AddOption("Alright.", 255)
                   .FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                      .AddOption("Let me check.", 255)
                      .FinalizeDialog();
                            break;
                        }
                        client.Inventory.Remove(3600024, 1, stream);
                        if (Role.Core.Rate(20))
                        {
                            client.Inventory.Add(stream, 1100003);
                            data.AddText("Wow, it must be your lucky day! You successfully made a Sash (S)!")
                   .AddOption("Great!", 255)
                   .FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("The fragment vanished since you failed to make a Sash (S) with it.")
                    .AddOption("Great!", 255)
                    .FinalizeDialog();
                        }
                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.ExplosiveDevide1)]
        public static void ExplosiveDevide1(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.KingdomMissionEnvoy, client.Player.Class, 35024);

            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted) == false)
                        {
                            client.SendSysMesage("You've already enabled the Explosive Device today. No need to do it again.", MsgMessage.ChatMode.System);
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckKingDomQuest(ActiveQuest.MissionId, 1) == false)
                            {
                                client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 1);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, id, true, "firemagic");
                                client.CreateBoxDialog("The Deserted Village has been burnt down into ashes. Report back to the Kingdom Mission Envoy and claim your reward.");

                            }
                            else
                                client.SendSysMesage("You've already enabled the Explosive Device today. No need to do it again.", MsgMessage.ChatMode.System);
                        }
                        else
                            client.SendSysMesage("You've already enabled the Explosive Device today. No need to do it again.", MsgMessage.ChatMode.System);

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.ExplosiveDevide2)]
        public static void ExplosiveDevide2(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.KingdomMissionEnvoy, client.Player.Class, 35024);

            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted) == false)
                        {
                            client.SendSysMesage("You've already enabled the Explosive Device today. No need to do it again.", MsgMessage.ChatMode.System);
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckKingDomQuest(ActiveQuest.MissionId, 1) == false)
                            {
                                client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 1);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, id, true, "firemagic");
                                client.CreateBoxDialog("The Deserted Village has been burnt down into ashes. Report back to the Kingdom Mission Envoy and claim your reward.");
                            }
                            else
                                client.SendSysMesage("You've already enabled the Explosive Device today. No need to do it again.", MsgMessage.ChatMode.System);
                        }
                        else
                            client.SendSysMesage("You've already enabled the Explosive Device today. No need to do it again.", MsgMessage.ChatMode.System);

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.ExplosiveDevide3)]
        public static void ExplosiveDevide3(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.KingdomMissionEnvoy, client.Player.Class, 35024);

            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted) == false)
                        {
                            client.SendSysMesage("You've already enabled the Explosive Device today. No need to do it again.", MsgMessage.ChatMode.System);
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckKingDomQuest(ActiveQuest.MissionId, 1) == false)
                            {
                                client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 1);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, id, true, "firemagic");
                                client.CreateBoxDialog("The Deserted Village has been burnt down into ashes. Report back to the Kingdom Mission Envoy and claim your reward.");
                            }
                            else
                                client.SendSysMesage("You've already enabled the Explosive Device today. No need to do it again.", MsgMessage.ChatMode.System);
                        }
                        else
                            client.SendSysMesage("You've already enabled the Explosive Device today. No need to do it again.", MsgMessage.ChatMode.System);

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.ExplosiveDevide4)]
        public static void ExplosiveDevide4(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.KingdomMissionEnvoy, client.Player.Class, 35024);

            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted) == false)
                        {
                            client.SendSysMesage("You've already enabled the Explosive Device today. No need to do it again.", MsgMessage.ChatMode.System);
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckKingDomQuest(ActiveQuest.MissionId, 1) == false)
                            {
                                client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 1);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, id, true, "firemagic");
                                client.CreateBoxDialog("The Deserted Village has been burnt down into ashes. Report back to the Kingdom Mission Envoy and claim your reward.");
                            }
                            else
                                client.SendSysMesage("You've already enabled the Explosive Device today. No need to do it again.", MsgMessage.ChatMode.System);
                        }
                        else
                            client.SendSysMesage("You've already enabled the Explosive Device today. No need to do it again.", MsgMessage.ChatMode.System);

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.HellConquer_EU)]
        public static void HellConquer_EU(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ServerInfo = Database.GroupServerList.GetServer(1);
            if (ServerInfo == null)
                return;

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I`m the keeper of [" + ServerInfo.Name + "] server. You`ll find a keeper like me in each server.")
                            .AddText("~If you want to visit another server, you need to register with me. I can also help you")
                            .AddText("~return to your original server. Please carefully learn about the rules before taking the trip.");
                        data.AddOption("Take~me~to~server~[" + ServerInfo.Name + "].", 1)
                            .AddOption("How~to~travel~across~server?", 10)
                            .AddOption("What~should~I~pay~attention~to?", 11)
                           .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Player.OnTransform)
                        {
                            client.Player.TransformInfo.FinishTransform();
                        }
                        if (client.Player.ServerID == ServerInfo.ID)
                        {
                            client.Socket.Disconnect();
                        }
                        else
                        {
                            client.Send(stream.ConnectionInfoCreate(1, ServerInfo.ID));
                        }
                        break;
                    }
                case 10:
                    {
                        data.AddText("If you want to go to another server, talk to the Cross-server Keeper in your server to enter the Realm,")
                            .AddText("~and then register with the Cross-server Keeper of the destination server in the Realm. If return,")
                            .AddText("~you`ll take the same procedures. First, go transit in the Realm. Then, find the Keeper of your original server")
                            .AddText("~to get back. Please make sure you`ve learned all rules and matters before taking a cross-server trip.");
                        data.AddOption("What~should~I~pay~attention~to?", 11)
                           .AddAvatar(7).FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        data.AddText("While visiting a new server, your information about character level, rebirth times, equipment, nobility,")
                             .AddText("~mentor and apprentice, and bonus BP of guild and clan will also be registered in the server, however,")
                             .AddText("~only chat and PK functions are available now. The chat channels include Talk, Whisper, Team, Guild,")
                             .AddText("~Clan, Friend, Service, World and Ally. If you were killed in the Realm, you`ll also revive there.");
                        data.AddOption("What~functions~are~unavailable?", 12)
                           .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 12:
                    {
                        data.AddText("In the Realm, you`re not able to use the functions related to money, item trade, forging,")
                             .AddText("~social contact, Arena, Mentor gains, welfare, enlightenment, sending flowers and all PvP")
                             .AddText("~matches. Things will get right after I send you back to your original server.");
                        data.AddOption("I~see.", 255)
                           .AddAvatar(7).FinalizeDialog();

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.HellConquer_US)]
        public static void HellConquer_US(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ServerInfo = Database.GroupServerList.GetServer(2);
            if (ServerInfo == null)
                return;

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I`m the keeper of [" + ServerInfo.Name + "] server. You`ll find a keeper like me in each server.")
                            .AddText("~If you want to visit another server, you need to register with me. I can also help you")
                            .AddText("~return to your original server. Please carefully learn about the rules before taking the trip.");
                        data.AddOption("Take~me~to~server~[" + ServerInfo.Name + "].", 1)
                            .AddOption("How~to~travel~across~server?", 10)
                            .AddOption("What~should~I~pay~attention~to?", 11)
                           .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Player.OnTransform)
                        {
                            client.Player.TransformInfo.FinishTransform();
                        }
                        if (client.Player.ServerID == ServerInfo.ID)
                        {
                            client.Socket.Disconnect();
                        }
                        else
                        {
                            client.Send(stream.ConnectionInfoCreate(1, ServerInfo.ID));
                        }
                        break;
                    }
                case 10:
                    {
                        data.AddText("If you want to go to another server, talk to the Cross-server Keeper in your server to enter the Realm,")
                            .AddText("~and then register with the Cross-server Keeper of the destination server in the Realm. If return,")
                            .AddText("~you`ll take the same procedures. First, go transit in the Realm. Then, find the Keeper of your original server")
                            .AddText("~to get back. Please make sure you`ve learned all rules and matters before taking a cross-server trip.");
                        data.AddOption("What~should~I~pay~attention~to?", 11)
                           .AddAvatar(7).FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        data.AddText("While visiting a new server, your information about character level, rebirth times, equipment, nobility,")
                             .AddText("~mentor and apprentice, and bonus BP of guild and clan will also be registered in the server, however,")
                             .AddText("~only chat and PK functions are available now. The chat channels include Talk, Whisper, Team, Guild,")
                             .AddText("~Clan, Friend, Service, World and Ally. If you were killed in the Realm, you`ll also revive there.");
                        data.AddOption("What~functions~are~unavailable?", 12)
                           .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 12:
                    {
                        data.AddText("In the Realm, you`re not able to use the functions related to money, item trade, forging,")
                             .AddText("~social contact, Arena, Mentor gains, welfare, enlightenment, sending flowers and all PvP")
                             .AddText("~matches. Things will get right after I send you back to your original server.");
                        data.AddOption("I~see.", 255)
                           .AddAvatar(7).FinalizeDialog();

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.OurCoqnuer_EU)]
        public static void OurCoqnuer_EU(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ServerInfo = Database.GroupServerList.GetServer(3);
            if (ServerInfo == null)
                return;

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I`m the keeper of [" + ServerInfo.Name + "] server. You`ll find a keeper like me in each server.")
                            .AddText("~If you want to visit another server, you need to register with me. I can also help you")
                            .AddText("~return to your original server. Please carefully learn about the rules before taking the trip.");
                        data.AddOption("Take~me~to~server~[" + ServerInfo.Name + "].", 1)
                            .AddOption("How~to~travel~across~server?", 10)
                            .AddOption("What~should~I~pay~attention~to?", 11)
                           .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Player.OnTransform)
                        {
                            client.Player.TransformInfo.FinishTransform();
                        }
                        if (client.Player.ServerID == ServerInfo.ID)
                        {
                            client.Socket.Disconnect();
                        }
                        else
                        {
                            client.Send(stream.ConnectionInfoCreate(1, ServerInfo.ID));
                        }
                        break;
                    }
                case 10:
                    {
                        data.AddText("If you want to go to another server, talk to the Cross-server Keeper in your server to enter the Realm,")
                            .AddText("~and then register with the Cross-server Keeper of the destination server in the Realm. If return,")
                            .AddText("~you`ll take the same procedures. First, go transit in the Realm. Then, find the Keeper of your original server")
                            .AddText("~to get back. Please make sure you`ve learned all rules and matters before taking a cross-server trip.");
                        data.AddOption("What~should~I~pay~attention~to?", 11)
                           .AddAvatar(7).FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        data.AddText("While visiting a new server, your information about character level, rebirth times, equipment, nobility,")
                             .AddText("~mentor and apprentice, and bonus BP of guild and clan will also be registered in the server, however,")
                             .AddText("~only chat and PK functions are available now. The chat channels include Talk, Whisper, Team, Guild,")
                             .AddText("~Clan, Friend, Service, World and Ally. If you were killed in the Realm, you`ll also revive there.");
                        data.AddOption("What~functions~are~unavailable?", 12)
                           .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 12:
                    {
                        data.AddText("In the Realm, you`re not able to use the functions related to money, item trade, forging,")
                             .AddText("~social contact, Arena, Mentor gains, welfare, enlightenment, sending flowers and all PvP")
                             .AddText("~matches. Things will get right after I send you back to your original server.");
                        data.AddOption("I~see.", 255)
                           .AddAvatar(7).FinalizeDialog();

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.OurCoqnuer_US)]
        public static void OurCoqnuer_US(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ServerInfo = Database.GroupServerList.GetServer(4);
            if (ServerInfo == null)
                return;

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I`m the keeper of [" + ServerInfo.Name + "] server. You`ll find a keeper like me in each server.")
                            .AddText("~If you want to visit another server, you need to register with me. I can also help you")
                            .AddText("~return to your original server. Please carefully learn about the rules before taking the trip.");
                        data.AddOption("Take~me~to~server~[" + ServerInfo.Name + "].", 1)
                            .AddOption("How~to~travel~across~server?", 10)
                            .AddOption("What~should~I~pay~attention~to?", 11)
                           .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Player.OnTransform)
                        {
                            client.Player.TransformInfo.FinishTransform();
                        }
                        if (client.Player.ServerID == ServerInfo.ID)
                        {
                            client.Socket.Disconnect();
                        }
                        else
                        {
                            client.Send(stream.ConnectionInfoCreate(1, ServerInfo.ID));
                        }
                        break;
                    }
                case 10:
                    {
                        data.AddText("If you want to go to another server, talk to the Cross-server Keeper in your server to enter the Realm,")
                            .AddText("~and then register with the Cross-server Keeper of the destination server in the Realm. If return,")
                            .AddText("~you`ll take the same procedures. First, go transit in the Realm. Then, find the Keeper of your original server")
                            .AddText("~to get back. Please make sure you`ve learned all rules and matters before taking a cross-server trip.");
                        data.AddOption("What~should~I~pay~attention~to?", 11)
                           .AddAvatar(7).FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        data.AddText("While visiting a new server, your information about character level, rebirth times, equipment, nobility,")
                             .AddText("~mentor and apprentice, and bonus BP of guild and clan will also be registered in the server, however,")
                             .AddText("~only chat and PK functions are available now. The chat channels include Talk, Whisper, Team, Guild,")
                             .AddText("~Clan, Friend, Service, World and Ally. If you were killed in the Realm, you`ll also revive there.");
                        data.AddOption("What~functions~are~unavailable?", 12)
                           .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 12:
                    {
                        data.AddText("In the Realm, you`re not able to use the functions related to money, item trade, forging,")
                             .AddText("~social contact, Arena, Mentor gains, welfare, enlightenment, sending flowers and all PvP")
                             .AddText("~matches. Things will get right after I send you back to your original server.");
                        data.AddOption("I~see.", 255)
                           .AddAvatar(7).FinalizeDialog();

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.RealmEnvoy)]
        public static void RealmEnvoy(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.ServerID == Database.GroupServerList.MyServerInfo.ID)
                        {
                            data.AddText("I`m serving the Realm. After you travel to other servers, you can find me to return to the Realm.");
                            data.AddOption("I~see.", 255)
                               .AddAvatar(43).FinalizeDialog();
                            break;
                        }
                        else
                        {
                            if (client.Player.OnTransform)
                            {
                                client.Player.TransformInfo.FinishTransform();
                            }
                            data.AddText("I have the code to enter the Realm. If you want to return to the Realm, i can help you.");
                            data.AddOption("Return to the Realm.", 1)
                                .AddOption("I see.", 255)
                               .AddAvatar(43).FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        client.Send(stream.ConnectionInfoCreate(1, Database.GroupServerList.InterServer.ID));
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.PokerMillionaireLee)]
        public static void PokerMillionaireLee(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("Good choice! You can just pay 100,000 Silver to pack 50,000,000 Silver into a Medium Silver Bag or pack")
                            .AddText("~100,000,000 Silver into a Big Silver Bag.");
                        data.AddOption("Pack~50,000,000~Silver.", 3)
                            .AddOption("Pack~100,000,000~Silver.", 1)
                           .AddAvatar(7).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        data.AddText("Are you sure you want to pay 100,000 Silver to pack 100,000,000 Silver into a Big Silver Bag?");
                        data.AddOption("Yes.", 2)
                            .AddOption("No.", 255)
                           .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.HaveSpace(1) == false)
                        {
                            data.AddText("Please make 1 more space in your inventory.");
                            data.AddOption("Let me check.", 255)
                               .AddAvatar(7).FinalizeDialog();
                            break;
                        }
                        if (client.Player.Money >= 100100000)
                        {
                            client.Player.Money -= 100100000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.Inventory.Add(stream, 3005837);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 100,100,000 Silver in total.");
                            data.AddOption("My~bad.", 255)
                               .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                case 3:
                    {
                        data.AddText("Are you sure you want to pay 100,000 Silver to pack 50,000,000 Silver into a Medium Silver Bag?");
                        data.AddOption("Yes.", 4)
                            .AddOption("No.", 255)
                           .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 4:
                    {
                        if (client.Inventory.HaveSpace(1) == false)
                        {
                            data.AddText("Please make 1 more space in your inventory.");
                            data.AddOption("Let me check.", 255)
                               .AddAvatar(7).FinalizeDialog();
                            break;
                        }
                        if (client.Player.Money >= 50100000)
                        {
                            client.Player.Money -= 50100000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.Inventory.Add(stream, 3005836);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 50,100,000 Silver in total.");
                            data.AddOption("My~bad.", 255)
                               .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.AuntPeach)]
        public static void AuntPeach(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.StoneColumn, client.Player.Class, 1806);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.AuntPeach, client.Player.Class, 1807);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("When we two parted, in silence and tears, my dear. The dew of the morning, stuck chilled. It felt like the")
                            .AddText("~warning of what I feel now. How should I greet thee? With silence and tears.");

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Do~you~know~the~bag?", 1);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == true &&
                            client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("I`ve~got~the~Blunt~Sword.", 4);


                        data.AddOption("Beautiful.", 255).AddAvatar(186).FinalizeDialog();


                        break;
                    }
                case 1:
                    {

                        data.AddText("Oh, this is the Peach Bag I made for my husband. Where did you get it? He left twenty years ago... No, he will come")
                            .AddText("~back...He promised...no...");
                        data.AddOption("Take~this~Bag.", 2)
                           .AddAvatar(186).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        data.AddText("As you may have guessed by now, Obscure Warrior is my husband. Twenty years ago, he left for a duel, but he never")
                       .AddText("~came back ever since then. I made this Peach bag. Look, there is a note inside it.");
                        data.AddOption("Let~me~see.", 3)
                           .AddAvatar(186).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        client.CreateBoxDialog("Aunt~Peach~found~a~Note~in~the~Peach~Bag~and~gave~it~to~you.");
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Remove(721842, 1, stream);
                            client.Player.Money += 6000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You've received EXP worth 1 EXP Ball and 6,000 Silver!", MsgMessage.ChatMode.System);

                        }
                        data.AddText("I will do what my husband told me to. As for the Divine Sword, oh, there is never such thing.")
                     .AddText("~My husband excels in using sword, and that Divine Sword they were talking about was only a normal sword.");
                        data.AddOption("Brilliant.", 4)
                           .AddAvatar(186).FinalizeDialog();
                        break;
                    }
                case 4:
                    {
                        data.AddText("Thank you for bringing the message. Please take this as your reward.");

                        data.AddOption("My~pleasure.", 5)
                           .AddAvatar(186).FinalizeDialog();
                        break;
                    }
                case 5:
                    {
                        data.AddText("You know my feelings, right? Leave me alone, please... Oh, by the way, you can claim your reward from Taskmaster Chang.");

                        data.AddOption("OK,~I~will.", 6)
                            .AddOption("I`m~leaving.", 255)
                           .AddAvatar(186).FinalizeDialog();
                        break;
                    }
                case 6:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.CreateBoxDialog("Hurry~to~claim~your~reward~from~Taskmaster~Chang!");

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.ObscureWarrior)]
        public static void ObscureWarrior(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {


            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.Harvey, client.Player.Class, 1801);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.StoneColumn, client.Player.Class, 1802);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.StoneColumn, client.Player.Class, 1803);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.StoneColumn, client.Player.Class, 1804);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Harvey, client.Player.Class, 1805);
            var ActiveQuest6 = Database.QuestInfo.GetFinishQuest((uint)NpcID.StoneColumn, client.Player.Class, 1806);

            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I`m like a candle in the wind. But you are so young, so vigorous...I have engraved the essence of my blade skills on the four")
                            .AddText("~columns around you. You may click them to get some experience.");

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("How~long~have~you~been~here?", 1);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == true &&
                            client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("I`ve~got~the~Blunt~Sword.", 3);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == true &&
                              client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("What~can~I~do~for~you?", 5);

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == true &&
                            client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("What~can~I~do~for~you?", 7);

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == true &&
                           client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("I`ve~got~something~for~you.", 10);

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == true &&
                         client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("I`ve~got~something~for~you.", 11);


                        data.AddOption("Okay.", 255).AddAvatar(57).FinalizeDialog();


                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest5.MissionId))
                        {
                            client.Inventory.Remove(721841, 1, stream);
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You've completed the quest and received 100 Silver!", MsgMessage.ChatMode.System);
                        }
                        data.AddText("I thought Blade Han would keep his word...");
                        data.AddOption("Harvey`s~Letter,~for~you.", 11)
                           .AddAvatar(57).FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        data.AddText("So I have been waiting for nothing for 20 years? Sigh... This is my last wish. Will you take this Peach Bag to Aunt Peach on Bird Island (765,602)? She will tell you more about")
                            .AddText("~the Divine Sword.");
                        data.AddOption("Gotcha.", 12)
                            .AddOption("Later.", 255)
                           .AddAvatar(57).FinalizeDialog();
                        break;
                    }
                case 12:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.");
                            data.AddOption("Let me check.", 255)
                               .AddAvatar(64).FinalizeDialog();
                            break;
                        }
                        if (client.Inventory.Contain(721842, 1) == false)
                            client.Inventory.Add(stream, 721842);

                        client.Teleport(503, 652, 1000);
                        client.CreateBoxDialog("Obscure~Warrior~took~out~a~Peach~Bag,~gave~it~to~you,~and~teleported~you~to~Desert~City.");
                        client.Player.QuestGUI.Accept(ActiveQuest6, 0);
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Remove(721843, 1, stream);
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You've completed the quest and received 100 Silver!", MsgMessage.ChatMode.System);
                        }
                        data.AddText("Haha, I have been here since 20 years ago. Someone finally came...");
                        data.AddOption("I`m~looking~for~you.", 2)
                           .AddAvatar(57).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        data.AddText("One`s success relies on thousands of deaths. I have been looking forward for that duel for years... But it just never occurred...");
                        data.AddOption("Tell~me~about~Divine~Sword.", 3)
                           .AddAvatar(57).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 200)
                                && client.Inventory.Contain(721845, 1))
                            {

                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                                {
                                    client.Inventory.Remove(721845, 1, stream);
                                    client.Player.Money += 100;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                    client.SendSysMesage("You've completed the quest and received 100 Silver!", MsgMessage.ChatMode.System);
                                }
                                data.AddText("My hero, you are as might as your fame suggests!");
                                data.AddOption("Thank~you.", 5)
                                   .AddAvatar(57).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Hey you! Why don`t you kill 200 Blade Ghosts L83 and take back the Blunt Sword first?!");
                                data.AddOption("Okay.", 4)
                                    .AddOption("I~am~kinda~busy~right~now.", 255)
                                   .AddAvatar(57).FinalizeDialog();
                            }

                            break;
                        }
                        data.AddText("Divine Sword? Of course, what else can you want from me... Well, it`s in the hands of the Blade Ghosts in Desert (165,276),")
                            .AddText("~but turned into Blunt Sword. Kill 200 Blade Ghosts and take Blunt Sword back to me, maybe I will do something about it.");

                        data.AddOption("I`m~in!", 4)
                            .AddOption("I`ll~think~about~it.", 255)
                           .AddAvatar(57).FinalizeDialog();
                        break;
                    }
                case 4:
                    {

                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.Teleport(165, 271, 1000);
                        client.CreateBoxDialog("After~a~dazzling~flash,~you~arrived~at~Desert~(165,276).~It`s~about~time~to~conquer~those~stupid~Blade~Ghosts!");

                        break;
                    }
                case 5:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(721846, 5))
                            {
                                data.AddText("Good job! I knew I could count on you!");
                                data.AddOption("No~problem.", 7)
                                   .AddAvatar(57).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Well, I need 5 Blade Ghost Fangs. It seems that you haven`t brought enough of them.");
                                data.AddOption("Send~me~back~to~Desert.", 6)
                                    .AddOption("I~am~kinda~busy~right~now.", 255)
                                   .AddAvatar(57).FinalizeDialog();

                            }
                            break;
                        }
                        data.AddText("Now, I need 5 Blade Ghost Fangs to sharpen the Sword and restore")
                            .AddText("~its power. You will do me the favor?");
                        data.AddOption("Of~course.", 6)
                            .AddOption("Sorry,~I~can`t~help.", 255)
                           .AddAvatar(57).FinalizeDialog();
                        break;
                    }
                case 6:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        client.Teleport(165, 271, 1000);
                        client.CreateBoxDialog("You~have~been~teleported~to~the~Level~83~Blade~Ghosts.");
                        break;
                    }
                case 7:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(721846, 5))
                            {

                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                                {
                                    client.Inventory.Remove(721846, 5, stream);
                                    client.Player.Money += 100;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                    client.SendSysMesage("You've completed the quest and received 100 Silver!", MsgMessage.ChatMode.System);
                                }
                            }
                        }
                        data.AddText("I see a hero in you, my child, just like me when I was young... so ambitious, so bold... Oh, if only I could defeat Blade Han!");
                        data.AddOption("Who~is~it?", 8)
                           .AddAvatar(57).FinalizeDialog();
                        break;
                    }
                case 8:
                    {
                        data.AddText("Blade Han is famous for his `Fervent Blade`. We had a rendezvous here, to set a duel. I have been waiting for years...")
                            .AddText("~Will you find him for me?");
                        data.AddOption("I~should~visit~Harvey.", 9)
                            .AddOption("I`ll~think~about~it.", 255)
                           .AddAvatar(57).FinalizeDialog();
                        break;
                    }
                case 9:
                    {
                        client.CreateBoxDialog("Weird,~Blade~Han~looked~just~like~Harvey~in~Desert~City~(495,579).~Find~him~to~learn~more.");
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        client.Teleport(503, 652, 1000);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.StoneColumn1)]
        public static void StoneColumn1(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            if (client.Player.QuestGUI.CheckQuest(11, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                client.Player.QuestGUI.Accept(new Database.QuestInfo.DBQuest() { Intentions = 4, MissionId = 11 }, 0);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(11, 1) || client.Player.QuestGUI.CheckQuest(11, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {

                            data.AddText("You have already learnt these inscriptions. You can`t learn them again.");
                            data.AddOption("All~right~then.", 255).FinalizeDialog();
                        }
                        else
                        {
                            client.Player.QuestGUI.IncreaseQuestObjectives(stream, 11, 1);
                            data.AddText("You obtained experience worth 1/12 of an EXP Ball after reading those inscriptions on the Stone Columns.");
                            data.FinalizeDialog();
                            client.GainExpBall(100, false);
                            if (client.Player.QuestGUI.CheckObjectives(11, 1, 1, 1, 1))
                                client.Player.QuestGUI.FinishQuest(11);

                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "recovery");
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.StoneColumn2)]
        public static void StoneColumn2(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            if (client.Player.QuestGUI.CheckQuest(11, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                client.Player.QuestGUI.Accept(new Database.QuestInfo.DBQuest() { Intentions = 4, MissionId = 11 }, 0);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(11, 0, 1) || client.Player.QuestGUI.CheckQuest(11, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {

                            data.AddText("You have already learnt these inscriptions. You can`t learn them again.");
                            data.AddOption("All~right~then.", 255).FinalizeDialog();
                        }
                        else
                        {
                            client.Player.QuestGUI.IncreaseQuestObjectives(stream, 11, 0, 1);
                            data.AddText("You obtained experience worth 1/12 of an EXP Ball after reading those inscriptions on the Stone Columns.");
                            data.FinalizeDialog();
                            client.GainExpBall(100, false);
                            if (client.Player.QuestGUI.CheckObjectives(11, 1, 1, 1, 1))
                                client.Player.QuestGUI.FinishQuest(11);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "recovery");
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.StoneColumn3)]
        public static void StoneColumn3(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            if (client.Player.QuestGUI.CheckQuest(11, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                client.Player.QuestGUI.Accept(new Database.QuestInfo.DBQuest() { Intentions = 4, MissionId = 11 }, 0);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(11, 0, 0, 1) || client.Player.QuestGUI.CheckQuest(11, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {

                            data.AddText("You have already learnt these inscriptions. You can`t learn them again.");
                            data.AddOption("All~right~then.", 255).FinalizeDialog();
                        }
                        else
                        {
                            client.Player.QuestGUI.IncreaseQuestObjectives(stream, 11, 0, 0, 1);
                            data.AddText("You obtained experience worth 1/12 of an EXP Ball after reading those inscriptions on the Stone Columns.");
                            data.FinalizeDialog();
                            client.GainExpBall(100, false);
                            if (client.Player.QuestGUI.CheckObjectives(11, 1, 1, 1, 1))
                                client.Player.QuestGUI.FinishQuest(11);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "recovery");
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.StoneColumn4)]
        public static void StoneColumn4(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            if (client.Player.QuestGUI.CheckQuest(11, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                client.Player.QuestGUI.Accept(new Database.QuestInfo.DBQuest() { Intentions = 4, MissionId = 11 }, 0);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(11, 0, 0, 0, 1) || client.Player.QuestGUI.CheckQuest(11, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {

                            data.AddText("You have already learnt these inscriptions. You can`t learn them again.");
                            data.AddOption("All~right~then.", 255).FinalizeDialog();
                        }
                        else
                        {
                            client.Player.QuestGUI.IncreaseQuestObjectives(stream, 11, 0, 0, 0, 1);
                            data.AddText("You obtained experience worth 1/12 of an EXP Ball after reading those inscriptions on the Stone Columns.");
                            data.FinalizeDialog();
                            client.GainExpBall(100, false);
                            if (client.Player.QuestGUI.CheckObjectives(11, 1, 1, 1, 1))
                                client.Player.QuestGUI.FinishQuest(11);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "recovery");
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.StoneColumn)]
        public static void StoneColumn(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {


            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.Harvey, client.Player.Class, 1801);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.AuntPeach, client.Player.Class, 1807);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("You need to post the Stone Spell onto the Stone Column to see what will happen.");

                        if ((client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted)
                            || client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            && client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Place~the~spell.", 1);



                        data.AddOption("Not~now.", 255).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        client.CreateBoxDialog("You~opened~your~eyes~and~find~yourself~in~the~Crypt.");
                        client.Teleport(52, 57, 1801);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Harvey)]
        public static void Harvey(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {

            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaskmasterChang, client.Player.Class, 1800);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Harvey, client.Player.Class, 1801);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.StoneColumn, client.Player.Class, 1804);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Harvey, client.Player.Class, 1805);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Have you ever seen an isis oasis? That is a sea of green, interspersed with towering, rock mountains and surrounded")
                           .AddText("~by the formidable Desert. Maybe only the legendary Obscure Warrior can survive the daunting Desert.");

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Taskmaster~Chang~sent~me~here.", 1);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                             && client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Who`s~Obscure~Warrior?", 2);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("You~know~Blade~Han?", 6);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                           && client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Who`s~Obscure~Warrior?", 7);


                        data.AddOption("You~bet!", 255)
                        .AddAvatar(64).FinalizeDialog();


                        break;
                    }
                case 6:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You've completed the quest and received 100 Silver!", MsgMessage.ChatMode.System);
                        }
                        data.AddText("Well, yes, that is my father. He was famous for wielding blades. Twenty years ago")
                            .AddText("~he went to the Desert for a duel. But he didn`t find the Warrior as there was a horrific sand storm. Pity.");
                        data.AddOption("Sorry~to~hear~that.", 7)
                           .AddAvatar(64).FinalizeDialog();


                        break;
                    }
                case 7:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Have you ever seen an isis oasis? That is a sea of green, interspersed with towering, rock mountains and surrounded")
                     .AddText("~by the formidable Desert. Maybe only the legendary Obscure Warrior can survive the daunting Desert.");
                            data.AddOption("You~bet!", 255)
                               .AddAvatar(64).FinalizeDialog();
                            break;
                        }
                        data.AddText("Because of this unfinished dream, my father shelved his blade and took to drinking... So I began to search for the Divine Sword")
                          .AddText("~to realize his dream. Please take this letter to the Ghost of Obscure Warrior and let him rest in peace.");
                        data.AddOption("Okay.~Gimme.", 8)
                            .AddOption("Later.", 255)
                           .AddAvatar(64).FinalizeDialog();
                        break;
                    }
                case 8:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.");
                            data.AddOption("Let me check.", 255)
                               .AddAvatar(64).FinalizeDialog();
                            break;
                        }
                        if (client.Inventory.Contain(721841, 1) == false)
                            client.Inventory.Add(stream, 721841);
                        client.CreateBoxDialog("Harvey~gave~the~letter~to~you.");
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        break;
                    }
                case 1:
                    {
                        data.AddText("I have kept this secret for years...");
                        data.AddOption("Can~you~tell~me?", 2)
                           .AddAvatar(64).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You've completed the quest and received 100 Silver!", MsgMessage.ChatMode.System);
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {

                            data.AddText("Twenty years ago, a brave warrior appeared, helping the poor while punishing the bad. No one knows where he was from. So they")
                      .AddText("~called him Obscure Warrior. Go find Blade Ghost L83 (165,276) to find out more about him, and get his Stone Spell from them.");
                            data.AddOption("I~see.", 255)
                               .AddAvatar(64).FinalizeDialog();

                            break;
                        }
                        data.AddText("People won`t forget those people who have helped them. A pure heart shouldn`t be forgotten. You heard of the Obscure Warrior before,")
                            .AddText("~right? Do you want to know more?");
                        data.AddOption("All~ears.", 3)
                           .AddAvatar(64).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        data.AddText("Rumor is spread that Obscure Warrior went for a duel in the Desert but never came back. He had an enormously powerful weapon, the")
                          .AddText("~Divine Sword. I learnt that anyone who could find him would get the Sword. But the Desert... Hey, are you interested?");
                        data.AddOption("Risk~nothing,~gain~nothing.", 4)
                            .AddOption("Not~really.", 255)
                           .AddAvatar(64).FinalizeDialog();
                        break;
                    }
                case 4:
                    {
                        data.AddText("Indeed! I heard the Level 83 Blade Ghosts have a Stone Spell that was once possessed by Obscure")
                         .AddText("~Warrior. Find them at (165,276) and get the spell first. Goodbye for now.");
                        data.AddOption("Okay.", 5)
                           .AddAvatar(64).FinalizeDialog();
                        break;
                    }
                case 5:
                    {
                        client.CreateBoxDialog("Hunt~Level~83~Blade~Ghosts~(165,276)~to~get~the~Stone~Spell!");
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Carolyn)]
        public static void Carolyn(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {

            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.FarmerLynn, client.Player.Class, 1798);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Carolyn, client.Player.Class, 1799);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hey, there! My father asked you to persuade me to marry, right?");

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Yes.", 1);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                             && client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Yup!", 4);

                        data.AddOption("I`ll~leave~you~alone.", 255)
                        .AddAvatar(109).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        data.AddText("Well, answer my question, first!");
                        data.AddOption("Okay!", 2)
                            .AddOption("Not~interested.", 255)
                           .AddAvatar(109).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        data.AddText("Listen carefully. Which kind of Jade can a Leaf Stone and a Maple Stone be fused into?");
                        data.AddOption("Rune~Jade.", 3)
                           .AddOption("Moon~Jade.", 10)
                           .AddOption("Sun~Jade.", 10)
                           .AddOption("Ocean~Jade.", 10)
                           .AddAvatar(109).FinalizeDialog();
                        break;
                    }
                case 10:
                    {
                        data.AddText("Sorry, but you`ll need to go study up a little more.")
                        .AddOption("Ok.", 255)
                        .AddAvatar(109).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        data.AddText("Bingo! Wow, you are so brilliant! Um, I`m starting to like you... Could you tell me...would you...marry me?")
                            .AddOption("I~like~you,~too.~But~sorry...", 4)
                            .AddAvatar(109).FinalizeDialog();
                        break;
                    }
                case 4:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You~managed~to~persuade~Carolyn!~You`ve~received~3,000~Silver~and~EXP~worth~1/2~EXP~Ball!");
                        }



                        data.AddText("I`m so happy to become your friend. Now go claim your reward from Taskmaster Chang!")
                          .AddOption("See~ya.", 5)
                          .AddAvatar(109).FinalizeDialog();
                        break;
                    }
                case 5:
                    {
                        client.CreateBoxDialog("You~managed~to~persuade~Carolyn!~Go~claim~your~reward~from~Taskmaster~Chang.");
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.FarmerLynn)]
        public static void FarmerLynn(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaskmasterChang, client.Player.Class, 1795);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.FarmerLynn, client.Player.Class, 1796);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.FarmerLynn, client.Player.Class, 1797);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.FarmerLynn, client.Player.Class, 1798);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Ah, a hero! Please stop and have a talk with me! You see, my days are slowly ending... I`ve been working on my")
                            .AddText("~farm for my whole life, and to be frank, I`m still quite poor. Wait, let me ask you something first. Have you married, yet?");

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Taskmaster~Chang~sent~me~here.", 1);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                             && client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("What~about~the~house?", 2);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                             && client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("What~about~the~house?", 5);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                           && client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("What~about~the~house?", 7);

                        data.AddOption("Um.~What`s~up?", 255)
                        .AddAvatar(67).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You've completed the quest and received 100 Silver!", MsgMessage.ChatMode.System);
                        }
                        data.AddText("This problem is killing me. I have to look for someone to help me make sure she is taken care of.");
                        data.AddOption("What`s~the~problem?", 2)
                           .AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(710581, 10))
                            {
                                data.AddText("Wow, you made it! This house will be done in no time! Thank you!");
                                data.AddOption("You`re~welcome.", 5)
                                   .AddAvatar(67).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("I need 10 hunks of Marble to build a house for my daughter. You can get them from the Rock Monsters. It won`t be hard for you, right?");
                                data.AddOption("Yup.", 255)
                                   .AddAvatar(67).FinalizeDialog();
                            }

                            break;
                        }
                        data.AddText("You`ll help me?! That`s the best news I`ve heard today! First, she needs a house. It won`t be difficult for you, right?");
                        data.AddOption("Er?~Buy~one~for~you?", 3)
                            .AddOption("No~way.", 255)
                           .AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        data.AddText("No, no. I`m not a greedy man. You just help me get some marble. Let me see...1, 2, 3...um, I need 10 slabs of marble. You can get them")
                         .AddText("~from the Rock Monsters. Just take your time and make sure they`re good quality!");
                        data.AddOption("Wait~a~second.", 4)
                           .AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 4:
                    {
                        client.CreateBoxDialog("Hurry~to~hunt~the~Rock~Monsters~to~get~10~hunks~of~Marble.");
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);

                        break;
                    }
                case 5:
                    {
                        if (client.Inventory.Contain(710581, 10))
                        {
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                            {
                                client.Inventory.Remove(710581, 10, stream);
                                client.Player.Money += 100;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                client.SendSysMesage("You`ve~received~100~Silver!", MsgMessage.ChatMode.System);
                            }

                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(710582, 1) && client.Inventory.Contain(710583, 1)
                                && client.Inventory.Contain(710584, 1))
                            {
                                data.AddText("Wow, unbelievable! You got them? Thank you so much, hero!");
                                data.AddOption("You`re~welcome.", 7)
                                   .AddAvatar(67).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Yeah, jade! My daughter likes the Rune Jade, Moon Jade and Sun Jade very much. Each of the jades needs to be fused by 2 special stones.")
                                    .AddText("~A Leaf Stone and a Maple Stone can be fused into a Rune Jade. An Ocean Stone and a Leaf Stone can be fused into a Sun Jade.")
                                    .AddText("~The Moon Jade needs to be fused by a Maple Stone and an Ocean Stone. You can get these special stones from Level 78 Rock Monsters. Understand?");
                                data.AddOption("Yes.", 255)
                                   .AddAvatar(67).FinalizeDialog();
                            }

                            break;
                        }
                        data.AddText("I still need some decorations for the house... Just imagine, if you lived in a big, empty")
                            .AddText("~stone house... Oh, it`s far too dull for a girl of her tastes.");
                        data.AddOption("I`d~like~to~help.", 6)
                            .AddOption("Decorations?", 255)
                           .AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 6:
                    {
                        client.CreateBoxDialog("Hurry~and~hunt~the~Level~78~Rock~Monsters~for~the~stones~to~make~the~3~jades!");
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        break;
                    }
                case 7:
                    {
                        if (client.Inventory.Contain(710582, 1) && client.Inventory.Contain(710583, 1)
                                  && client.Inventory.Contain(710584, 1))
                        {
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                            {
                                client.Inventory.Remove(710582, 1, stream);
                                client.Inventory.Remove(710583, 1, stream);
                                client.Inventory.Remove(710584, 1, stream);
                                client.Player.Money += 100;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                client.SendSysMesage("You`ve~received~100~Silver!", MsgMessage.ChatMode.System);
                            }
                        }
                        data.AddText("My daughter is 30 years old and wants to be single forever! Please try to persuade her to change her mind!")
                            .AddText("~But since she`s really childish, unless you can correctly answer her questions she won`t listen to you.");
                        data.AddOption("I`ll~try~my~best.", 9)
                           .AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 9:
                    {
                        client.CreateBoxDialog("You~promised~to~try~and~persuade~Farmer~Lynn`s~daughter~to~marry.");
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.TaoistShine)]
        public static void TaoistShine(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.JerkWang, client.Player.Class, 1790);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaoistShine, client.Player.Class, 1791);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaoistShine, client.Player.Class, 1792);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Reverence for nature and ancestor spirits is important. Never fool around with celestials.");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("You~knew~Mo~Mo?", 1);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                             && client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Trust~me.~I`ll~find~Mo~Mo.", 2);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                           && client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("How~to~get~there?", 10);

                        data.AddOption("Any~ideas?", 255)
                        .AddAvatar(67).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You've completed the quest and received 100 Silver!", MsgMessage.ChatMode.System);
                        }
                        data.AddText("You came for Mo Mo? I`ve heard the story. It`s weird...");
                        data.AddOption("Any~ideas?", 2)
                           .AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(721712, 1))
                            {
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                                {

                                    client.Player.Money += 100;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                    client.SendSysMesage("You've completed the quest and received 100 Silver!", MsgMessage.ChatMode.System);
                                }
                                data.AddText("This Powder is used to bewilder little kids and kidnap them to Ghost City.");
                                data.AddOption("Okay.", 10)
                                   .AddAvatar(67).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Hey you! You already have one!");
                                data.AddOption("Oh,~yeah.", 255)
                                   .AddAvatar(67).FinalizeDialog();
                            }

                            break;
                        }
                        data.AddText("I`m afraid he has entered Ghost City, by mistake. Here I have a Charm, with it, you can enter there, too.");
                        data.AddOption("Gimme.", 3)
                            .AddOption("I`m~not~going~there.", 255)
                           .AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 10:
                    {
                        data.AddText("Take this Powder and use it where Mo Mo was seen missing, and you will be able to enter the city.");
                        data.AddOption("Okay.", 11)
                            .AddOption("I`ll~go~there~later.", 255)
                           .AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.");
                            data.AddOption("Let me check.", 255)
                               .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        if (!client.Inventory.Contain(721713, 1))
                            client.Inventory.Add(stream, 721713);
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        client.CreateBoxDialog("Try~your~best~to~rescue~Mo~Mo.");
                        break;
                    }
                case 3:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.");
                            data.AddOption("Let me check.", 255)
                               .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        if (!client.Inventory.Contain(721713, 1))
                            client.Inventory.Add(stream, 721713);

                        client.CreateBoxDialog("You~obtained~a~Charm~from~Taoist~Shine.");
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.Ghost_SweetyPuddy)]
        public static void Ghost_SweetyPuddy(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("This place is great!");
                        data.AddOption("You~bet.", 255)
                           .AddAvatar(36).FinalizeDialog();
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Dark_SweetyPuddy)]
        public static void Dark_SweetyPuddy(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("This place is great!");
                        data.AddOption("You~bet.", 255)
                           .AddAvatar(36).FinalizeDialog();
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Dark_SweetyLily)]
        public static void Dark_SweetyLily(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("Come and play with me!");
                        data.AddOption("Nope.", 255)
                           .AddAvatar(143).FinalizeDialog();
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.Ghost_SweetyLily)]
        public static void Ghost_SweetyLily(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("Come and play with me!");
                        data.AddOption("Nope.", 255)
                           .AddAvatar(143).FinalizeDialog();
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Dark_SweetyMindy)]
        public static void Dark_SweetyMindy(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("I like here.");
                        data.AddOption("Whatever.", 255)
                           .AddAvatar(36).FinalizeDialog();
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Ghost_SweetyMindy)]
        public static void Ghost_SweetyMindy(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("I like here.");
                        data.AddOption("Whatever.", 255)
                           .AddAvatar(36).FinalizeDialog();
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Dark_SweetyDay)]
        public static void Dark_SweetyDay(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("It rocks here!");
                        data.AddOption("It~sucks.", 255)
                           .AddAvatar(143).FinalizeDialog();
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Ghost_SweetyDay)]
        public static void Ghost_SweetyDay(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("It rocks here!");
                        data.AddOption("It~sucks.", 255)
                           .AddAvatar(143).FinalizeDialog();
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Ghost_SweetyCuty)]
        public static void Ghost_SweetyCuty(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("Best playground ever!");
                        data.AddOption("It`s~dangerous.", 255)
                           .AddAvatar(36).FinalizeDialog();
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Dark_SweetyCuty)]
        public static void Dark_SweetyCuty(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("Best playground ever!");
                        data.AddOption("It`s~dangerous.", 255)
                           .AddAvatar(36).FinalizeDialog();
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.Ghost_FiendAltar1)]
        public static void Ghost_FiendAltar1(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.");
                            data.AddOption("Let me check.", 255).FinalizeDialog();
                            break;
                        }
                        if (client.Inventory.Contain(721712, 1))
                        {
                            client.CreateBoxDialog("You`ve~already~got~the~Powder~in~inventory.");
                        }
                        else
                        {
                            client.CreateBoxDialog("You`ve~found~some~powder.~Hurry~to~deliver~it~to~Taoist~Shine.");
                            client.Inventory.Add(stream, 721712);
                        }
                        client.Teleport(274, 299, 1002);

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Ghost_FiendAltar2)]
        public static void Ghost_FiendAltar2(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.");
                            data.AddOption("Let me check.", 255).FinalizeDialog();
                            break;
                        }
                        if (client.Inventory.Contain(721712, 1))
                        {
                            client.CreateBoxDialog("You`ve~already~got~the~Powder~in~inventory.");
                        }
                        else
                        {
                            client.CreateBoxDialog("You`ve~found~some~powder.~Hurry~to~deliver~it~to~Taoist~Shine.");
                            client.Inventory.Add(stream, 721712);
                        }
                        client.Teleport(274, 299, 1002);

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Ghost_FiendAltar3)]
        public static void Ghost_FiendAltar3(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.");
                            data.AddOption("Let me check.", 255).FinalizeDialog();
                            break;
                        }
                        if (client.Inventory.Contain(721712, 1))
                        {
                            client.CreateBoxDialog("You`ve~already~got~the~Powder~in~inventory.");
                        }
                        else
                        {
                            client.CreateBoxDialog("You`ve~found~some~powder.~Hurry~to~deliver~it~to~Taoist~Shine.");
                            client.Inventory.Add(stream, 721712);
                        }
                        client.Teleport(274, 299, 1002);

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Ghost_FiendAltar4)]
        public static void Ghost_FiendAltar4(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.");
                            data.AddOption("Let me check.", 255).FinalizeDialog();
                            break;
                        }
                        if (client.Inventory.Contain(721712, 1))
                        {
                            client.CreateBoxDialog("You`ve~already~got~the~Powder~in~inventory.");
                        }
                        else
                        {
                            client.CreateBoxDialog("You`ve~found~some~powder.~Hurry~to~deliver~it~to~Taoist~Shine.");
                            client.Inventory.Add(stream, 721712);
                        }
                        client.Teleport(274, 299, 1002);

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Ghost_MoMo)]
        public static void Ghost_MoMo(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("Here is way better than home. I could play all day here. Mom and Dad would only scold me for anything I do.");
                        data.AddOption("You~should~go~home.", 1)
                           .AddAvatar(36).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        data.AddText("You will find some clues near Fete Pillar (162,217).");
                        data.FinalizeDialog();
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.Dark_MoMo)]
        public static void Dark_MoMo(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaoistShine, client.Player.Class, 1792);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Dark_MoMo, client.Player.Class, 1793);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("I love here! It`s fun! I`m not going home!");
                        data.AddOption("Your~mom~is~worried~about~you!", 1)
                            .AddOption("If~you~like.", 255)
                           .AddAvatar(36).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(721714, 1))
                        {
                            data.AddText("It`s dark. I`m scared.");
                            data.AddOption("Take~the~Bezoar.", 2)
                               .AddAvatar(36).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You still don`t get the Bezoar. Go get it.");
                            data.AddOption("I`m~on~my~way.", 255)
                               .AddAvatar(36).FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You've completed the quest and received 100 Silver!", MsgMessage.ChatMode.System);
                        }
                        data.AddText("I love here! It`s fun! I`m not going home!");
                        data.AddOption("Go~with~me.", 3)
                            .AddOption("If~you~like.", 255)
                           .AddAvatar(36).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        data.AddText("Thanks for bringing me home! My mother must prepare a reward for you! Go talk to her!");
                        data.AddOption("I~will.", 4)
                            .AddOption("If~you~like.", 255)
                           .AddAvatar(36).FinalizeDialog();
                        break;
                    }
                case 4:
                    {
                        client.Teleport(302, 280, 1002);
                        client.CreateBoxDialog("Mo~Mo~took~the~Bezoar~and~returned~home.~Hurry~to~find~Aunt~Zhang~to~claim~your~reward!");
                        client.Inventory.Remove(721714, 1, stream);
                        client.Inventory.Remove(721712, 1, stream);
                        client.Inventory.Remove(721713, 1, stream);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.JerkWang)]
        public static void JerkWang(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.AuntZhang, client.Player.Class, 1788);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.JerkWang, client.Player.Class, 1789);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.JerkWang, client.Player.Class, 1790);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Impossible is nothing. Nothing is impossible.");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Where`s~Mo~Mo?", 1);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                             && client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("I`m~trying~find~Mo~Mo.", 3);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                           && client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Do~you~have~any~solution?", 10);
                        data.AddOption("Just~do~it.", 255)
                        .AddAvatar(74).FinalizeDialog();


                        break;
                    }
                case 1:
                    {

                        data.AddText("It was all my fault. I should have kept an eye on him. I was reading. Mo Mo was out playing alone.");
                        data.AddOption("Then~what?", 2)
                           .AddAvatar(74).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You've completed the quest and received 100 Silver!", MsgMessage.ChatMode.System);
                        }
                        data.AddText("Some one saw him disappear in the east of the city all of a sudden. Will you find him for me?");
                        data.AddOption("Sure.", 3)
                            .AddOption("I`m~afraid.", 255)
                           .AddAvatar(74).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 1, 1, 1))
                        {
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                            {
                                client.Inventory.Remove(721717, 1, stream);
                                client.Player.Money += 100;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                client.SendSysMesage("You've completed the quest and received 100 Silver!", MsgMessage.ChatMode.System);
                                data.AddText("It`s all my fault... I should have been more careful...");
                                data.AddOption("What~shall~we~do?", 10)
                                   .AddAvatar(74).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("Mo Mo was seen in these three spots: (269,215), (298,205) and (357,304). Please search there.");
                        data.AddOption("I`m~on~my~way.", 4)
                           .AddAvatar(74).FinalizeDialog();
                        break;
                    }
                case 4:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.");
                            data.AddOption("Let me check.", 255)
                               .AddAvatar(74).FinalizeDialog();
                            break;
                        }
                        if (!client.Inventory.Contain(721717, 1))
                            client.Inventory.Add(stream, 721717);
                        client.CreateBoxDialog("You`ve~obtained~Magic~Fireworks~from~the~Jerk~Wang.");
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
                case 10:
                    {
                        data.AddText("Ah... now I remember, maybe you should visit Taoist Shine (245,258). He lives in Twin City")
                            .AddText("~and knows all the secrets behind peculiarity.");
                        data.AddOption("I`ll~visit~him.", 11).AddOption("I`m~not~going~anywhere.", 255)
                           .AddAvatar(74).FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        data.AddText("Taoist Shine (245,258) must know why. Please pay him a visit.");
                        data.AddOption("Good~idea!", 255)
                           .AddAvatar(74).FinalizeDialog();
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.AuntZhang)]
        public static void AuntZhang(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaskmasterChang, client.Player.Class, 1787);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.AuntZhang, client.Player.Class, 1788);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Dark_MoMo, client.Player.Class, 1793);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.AuntZhang, client.Player.Class, 1794);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Childern are happiest when celebrating festivals...They are running around everywhere. But sometimes they might get lost...");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Taskmaster~Chang~sent~me~here.", 1);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                            && client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("You~should~be~careful.", 2);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                         && client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Your~son~is~back!", 10);

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
               && client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("I`ve~found~your~son!", 11);
                        data.AddOption("I~agree.", 255)
                        .AddAvatar(155).FinalizeDialog();


                        break;
                    }
                case 10:
                    {

                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                        {
                            client.Player.Money += 6000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("If you forgot some skills or you qualifed for rebirth, you can learn skills in Job Center.", MsgMessage.ChatMode.System);
                            client.SendSysMesage("You've received EXP worth 1 EXP Ball and 6,000 Silver!", MsgMessage.ChatMode.System);
                        }
                        data.AddText("Thank you for saving my son. Please take this as my token of my gratitude.");
                        data.AddOption("My~pleasure.", 11)
                           .AddAvatar(155).FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        data.AddText("I really appreciate your help! Please go claim your reward from Taskmaster Chang!");
                        data.AddOption("I~will.", 12)
                           .AddAvatar(155).FinalizeDialog();
                        break;
                    }
                case 12:
                    {
                        client.CreateBoxDialog("Go~claim~your~reward~from~Taskmaster~Chang!");
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You've completed the quest and received 100 Silver!", MsgMessage.ChatMode.System);

                        }
                        data.AddText("Mo Mo is lost! Please, you have to help me!");
                        data.AddOption("How~did~it~happen?", 2)
                           .AddAvatar(155).FinalizeDialog();


                        break;
                    }
                case 2:
                    {

                        data.AddText("Have you seen my son on your way here? His name is Mo Mo. He is a cute little boy, about this height... I couldn`t find him.")
                            .AddText("~He was with Jerk Wang (347,232), setting off Magic Fireworks, but he didn`t come back last night.");
                        data.AddOption("I`ll~give~him~a~visit.", 3)
                            .AddOption("Sorry~to~hear~that.", 255)
                           .AddAvatar(155).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        client.CreateBoxDialog("Hurry~and~talk~to~Jerk~Wang~(TwinCity~347,232)!");
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
            }
        }
        //SuperHeadgearPack
        [NpcAttribute(NpcID.SuperHeadgearPack)]
        public static void SuperHeadgearPack(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Take a good look and pick one.");
                        if (client.Player.Class <= 15)
                        {
                            data.AddOption("Super~Monk~Coronet.", 1);
                            data.AddOption("Super~Jade~Earring.", 9);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Class <= 25)
                            {
                                data.AddOption("Super~Violent~Helmet.", 2);
                                data.AddOption("Super~Jade~Earring.", 9);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Class <= 45)
                                {
                                    data.AddOption("Super~Antler~Hat.", 3);
                                    data.AddOption("Super~Jade~Earring.", 9);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.Class <= 55)
                                    {
                                        data.AddOption("Super~Evil~Hood.", 4);
                                        data.AddOption("Super~Jade~Earring.", 9);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (client.Player.Class <= 65)
                                        {
                                            data.AddOption("Super~Headband~Of~Holy~Light.", 5);
                                            data.AddOption("Super~Jade~Earring.", 9);
                                            data.FinalizeDialog();
                                        }
                                        else
                                        {
                                            if (client.Player.Class <= 75)
                                            {
                                                data.AddOption("Super~Cruelty~Hat.", 6);
                                                data.AddOption("Super~Jade~Earring.", 9);
                                                data.FinalizeDialog();
                                            }
                                            else
                                            {
                                                if (client.Player.Class <= 85)
                                                {
                                                    data.AddOption("Super~Shadow~Hood.", 7);
                                                    data.AddOption("Super~Jade~Earring.", 9);
                                                    data.FinalizeDialog();
                                                }
                                                else if (client.Player.Class <= 145)
                                                {
                                                    data.AddOption("Super~Crane~Cap.", 8);
                                                    data.AddOption("Super~Jade~Earring.", 9);
                                                    data.FinalizeDialog();
                                                }
                                                else
                                                {
                                                    data.AddOption("Super~WindWalker~Cap.", 10);
                                                    data.AddOption("Super~Jade~Earring.", 9);
                                                    data.FinalizeDialog();
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        break;
                    }
                case 10:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Inventory.Remove(728247, 1, stream))
                            {
                                client.Inventory.Add(stream, 722136, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Inventory.Add(stream, 101089, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.CreateBoxDialog("You~opened~the~pack~and~received~a~Super~Crane~Cap!");
                            }
                        }
                        else
                        {
                            client.CreateBoxDialog("Please~prepare~one~slot~in~your~inventory.");
                        }
                        break;
                    }
                case 8:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Inventory.Remove(728247, 1, stream))
                            {
                                client.Inventory.Add(stream, 722136, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Inventory.Add(stream, 114089, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.CreateBoxDialog("You~opened~the~pack~and~received~a~Super~Crane~Cap!");
                            }
                        }
                        else
                        {
                            client.CreateBoxDialog("Please~prepare~one~slot~in~your~inventory.");
                        }
                        break;
                    }
                case 7:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Inventory.Remove(728247, 1, stream))
                            {
                                client.Inventory.Add(stream, 148089, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Inventory.Add(stream, 722136, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.CreateBoxDialog("You~received~an~Super~Shadow~Hood~and~an~EXP~Ball!");
                            }
                        }
                        else
                        {
                            client.CreateBoxDialog("Please~prepare~one~slot~in~your~inventory.");
                        }
                        break;
                    }
                case 6:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Inventory.Remove(728247, 1, stream))
                            {
                                client.Inventory.Add(stream, 144089, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Inventory.Add(stream, 722136, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.CreateBoxDialog("You~opened~the~pack~and~received~a~Super~Cruelty~Hat.");
                            }
                        }
                        else
                        {
                            client.CreateBoxDialog("Please~prepare~one~slot~in~your~inventory.");
                        }
                        break;
                    }
                case 5:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Inventory.Remove(728247, 1, stream))
                            {
                                client.Inventory.Add(stream, 722136, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Inventory.Add(stream, 143089, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.CreateBoxDialog("You~opened~the~pack~and~received~a~Super~Headband~Of~Holy~Light!");
                            }
                        }
                        else
                        {
                            client.CreateBoxDialog("Please~prepare~one~slot~in~your~inventory.");
                        }
                        break;
                    }
                case 4:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Inventory.Remove(728247, 1, stream))
                            {
                                client.Inventory.Add(stream, 722136, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Inventory.Add(stream, 123089, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.CreateBoxDialog("You~opened~the~pack~and~received~a~Super~Evil~Hood!");
                            }
                        }
                        else
                        {
                            client.CreateBoxDialog("Please~prepare~one~slot~in~your~inventory.");
                        }
                        break;
                    }
                case 3:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Inventory.Remove(728247, 1, stream))
                            {
                                client.Inventory.Add(stream, 722136, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Inventory.Add(stream, 113069, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.CreateBoxDialog("You~opened~the~pack~and~received~a~Super~Antler~Hat!");
                            }
                        }
                        else
                        {
                            client.CreateBoxDialog("Please~prepare~one~slot~in~your~inventory.");
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Inventory.Remove(728247, 1, stream))
                            {
                                client.Inventory.Add(stream, 722136, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Inventory.Add(stream, 111089, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.CreateBoxDialog("You~opened~the~pack~and~received~a~Super~Violent~Helmet!");
                            }
                        }
                        else
                        {
                            client.CreateBoxDialog("Please~prepare~one~slot~in~your~inventory.");
                        }
                        break;
                    }
                case 9:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Inventory.Remove(728247, 1, stream))
                            {
                                client.Inventory.Add(stream, 722136, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Inventory.Add(stream, 117089, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.CreateBoxDialog("You~opened~the~pack~and~received~a~Super~Jade~Earring!");
                            }
                        }
                        else
                        {
                            client.CreateBoxDialog("Please~prepare~one~slot~in~your~inventory.");
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Inventory.Remove(728247, 1, stream))
                            {
                                client.Inventory.Add(stream, 722136, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Inventory.Add(stream, 118089, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.CreateBoxDialog("You~opened~the~pack~and~received~a~Super~Monk~Coronet!");
                            }
                        }
                        else
                        {
                            client.CreateBoxDialog("Please~prepare~one~slot~in~your~inventory.");
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.DoctorKnowitAll)]
        public static void DoctorKnowitAll(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.PoorXiao, client.Player.Class, 1809);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DoctorKnowitAll, client.Player.Class, 1810);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.PoorXiao, client.Player.Class, 1811);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DoctorKnowitAll, client.Player.Class, 1812);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DoctorKnowitAll, client.Player.Class, 1813);
            var ActiveQuest6 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DoctorKnowitAll, client.Player.Class, 1814);
            var ActiveQuest7 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DoctorKnowitAll, client.Player.Class, 1815);
            var ActiveQuest8 = Database.QuestInfo.GetFinishQuest((uint)NpcID.PoorXiao, client.Player.Class, 1816);
            var ActiveQuest9 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DoctorKnowitAll, client.Player.Class, 1817);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest8.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("You know what? They all call me Doctor Know-it-All because I know the secrets beneath all disease...all of them, understand?");
                            data.AddOption("The~pill~isn`t~working!", 40);
                            data.AddOption("Are~you~nuts?");
                            data.AddAvatar(67);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("You know what? They all call me Doctor Know-it-All because I know the secrets beneath all disease...all of them, understand?");
                            data.AddOption("Help~Poor~Xiao~then!", 1);
                            data.AddOption("Whatever.");
                            data.AddAvatar(67);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("You know what? They all call me Doctor Know-it-All because I know the secrets beneath all disease...all of them, understand?");
                            data.AddOption("What~do~you~need?", 10);
                            data.AddOption("Leave.");
                            data.AddAvatar(67);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false
                            && client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("You know what? They all call me Doctor Know-it-All because I know the secrets beneath all disease...all of them, understand?");
                                data.AddOption("How~will~you~help~Xiao?", 5);
                                data.AddOption("See~ya.");
                                data.AddAvatar(67);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You must pay me a meteor and then I will make the Peel Pill for Xiao. The pill is made by Bird Blood, Ginseng Grease and Hawk Claw. But they are toxic and there are");
                                data.AddText("~side-effects when people take this...I can`t guarantee its effects either...you know...Anything is possible...");
                                data.AddOption("Let~me~ask~Xiao,~first.", 3);
                                data.AddAvatar(67);
                                data.FinalizeDialog();
                            }
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false
                       && client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("You know what? They all call me Doctor Know-it-All because I know the secrets beneath all disease...all of them, understand?");
                                data.AddOption("You~need~Bird~Blood,~right?", 14);
                                data.AddOption("See~ya~later.");
                                data.AddAvatar(67);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You know what? They all call me Doctor Know-it-All because I know the secrets beneath all disease...all of them, understand?");
                                data.AddOption("Tell~me~what~shall~I~do.", 12);
                                data.AddOption("No...");
                                data.AddAvatar(67);
                                data.FinalizeDialog();
                            }
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false
               && client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("You know what? They all call me Doctor Know-it-All because I know the secrets beneath all disease...all of them, understand?");
                                data.AddOption("You~need~Bitter~Ginseng?", 21);
                                data.AddOption("Yes...");
                                data.AddAvatar(67);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You know what? They all call me Doctor Know-it-All because I know the secrets beneath all disease...all of them, understand?");
                                data.AddOption("What~else~do~you~need?", 20);
                                data.AddOption("I`ll~catch~ya~later.");
                                data.AddAvatar(67);
                                data.FinalizeDialog();
                            }
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false
         && client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("You know what? They all call me Doctor Know-it-All because I know the secrets beneath all disease...all of them, understand?");
                                data.AddOption("You~need~Hawk~Claws?", 27);
                                data.AddOption("Yup.");
                                data.AddAvatar(67);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You know what? They all call me Doctor Know-it-All because I know the secrets beneath all disease...all of them, understand?");
                                data.AddOption("You~need~anything~else?", 26);
                                data.AddOption("Nope.");
                                data.AddAvatar(67);
                                data.FinalizeDialog();
                            }

                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest7.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false
&& client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest7.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("You know what? They all call me Doctor Know-it-All because I know the secrets beneath all disease...all of them, understand?");
                                data.AddOption("May~I~have~a~Peel~Pill?", 33);
                                data.AddOption("I~don`t~need~to~understand.");
                                data.AddAvatar(67);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You know what? They all call me Doctor Know-it-All because I know the secrets beneath all disease...all of them, understand?");
                                data.AddOption("How`s~going~with~the~pill?", 30);
                                data.AddOption("...");
                                data.AddAvatar(67);
                                data.FinalizeDialog();
                            }
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest9.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false
&& client.Player.QuestGUI.CheckQuest(ActiveQuest8.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {

                            data.AddText("You know what? They all call me Doctor Know-it-All because I know the secrets beneath all disease...all of them, understand?");
                            data.AddOption("What`s~the~problem~with~Xiao?", 44);
                            data.AddOption("Crazy.");
                            data.AddAvatar(67);
                            data.FinalizeDialog();

                        }
                        else
                        {
                            data.AddText("You know what? They all call me Doctor Know-it-All because I know the secrets beneath all disease...all of them, understand?");
                            data.AddOption("Whatever.");
                            data.AddAvatar(67);
                            data.FinalizeDialog();
                        }

                        break;
                    }
                case 44:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest9.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("According to my records, only Golden Rocs may suffer from this kind of syndrome...");
                            data.AddText("~General Yue is said to be the incarnation of a Golden Roc. So I have the theory, Xiao is his descendent.");
                            data.AddOption("I`ll~tell~him.");
                            data.AddAvatar(67);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Calm down, let me check first ... According to my records, only Golden Rocs may suffer from this kind of syndrome...");
                            data.AddText("~General Yue is said to be the incarnation of a Golden Roc. So I have the theory, Xiao is his descendent.");
                            data.AddOption("I`ll~tell~him.", 43);
                            data.AddOption("You~can`t~be~serious.");
                            data.AddAvatar(67);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 40:
                    {
                        data.AddText("I heard that General Yue, the great hero, was the incarnation of a Golden Roc. Is it possible that Poor Xiao is his descendent?");
                        data.AddOption("What?!", 41);
                        data.AddAvatar(67);
                        data.FinalizeDialog();
                        break;
                    }
                case 41:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest8.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You`ve received 100 Silver!");
                            data.AddText("Calm down, let me check first ... According to my records, only Golden Rocs may suffer from this kind of syndrome...");
                            data.AddText("~General Yue is said to be the incarnation of a Golden Roc. So I have the theory, Xiao is his descendent.");
                            data.AddOption("I`ll~tell~him.", 43);
                            data.AddOption("You~can`t~be~serious.");
                            data.AddAvatar(67);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 43:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest9, 0);
                        break;
                    }
                case 33:
                    {
                        if (client.Inventory.Contain(721911, 1))
                        {
                            data.AddText("You`ve already got a Peel Pill!");
                            data.AddOption("Oh,~yes.");
                            data.AddAvatar(67);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You lost it? You should have been more careful! Well, I will give you a new one.");
                            data.AddOption("Thank~you.", 34);
                            data.AddAvatar(67);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 34:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.Inventory.Add(stream, 721911);
                            client.CreateBoxDialog("You`ve~received~the~Peel~Pill.~Hurry~to~take~it~to~Poor~Xiao!");
                        }
                        else
                        {
                            data.AddText("Hey, hey! Your inventory is full! Prepare some room, please.");
                            data.AddOption("Okay.");
                            data.AddAvatar(67);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 30:
                    {
                        data.AddText("Come come! I`ve made it, the Peel Pill! Now hurry up and take it to Poor Xiao.");
                        data.AddOption("Yes,~sir!", 31);
                        data.AddAvatar(67);
                        data.FinalizeDialog();
                        break;
                    }
                case 31:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.Inventory.Add(stream, 721911);
                            client.Player.QuestGUI.Accept(ActiveQuest7, 0);
                            client.CreateBoxDialog("You`ve~received~the~Peel~Pill.~Hurry~to~take~it~to~Poor~Xiao!");
                            data.AddText("Come come! I`ve made it, the Peel Pill! Now hurry up and take it to Poor Xiao.");
                            data.AddOption("Yes,~sir!", 255);
                            data.AddAvatar(67);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Hey, hey! Your inventory is full! Prepare some room, please.");
                            data.AddOption("Okay.");
                            data.AddAvatar(67);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 27:
                    {
                        data.AddText("Only when you kill 2 of them within 1 minute, will you get a Hawk Claw. So have you got 5 Hawk Claws?");
                        data.AddOption("Yes.~Here~you~are.", 28);
                        data.AddOption("Not~yet.");
                        data.AddAvatar(67);
                        data.FinalizeDialog();

                        break;
                    }
                case 28:
                    {
                        if (client.Inventory.Contain(721910, 5))
                        {
                            client.Player.QuestGUI.FinishQuest(ActiveQuest6.MissionId);
                            client.Inventory.Remove(721910, 1, stream);
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You`ve received 100 Silver!");
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Inventory.Add(stream, 721911);
                                client.Player.QuestGUI.Accept(ActiveQuest7, 0);
                                client.CreateBoxDialog("You`ve~received~the~Peel~Pill.~Hurry~to~take~it~to~Poor~Xiao!");
                                data.AddText("Come come! I`ve made it, the Peel Pill! Now hurry up and take it to Poor Xiao.");
                                data.AddOption("Yes,~sir!", 255);
                                data.AddAvatar(67);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Hey, hey! Your inventory is full! Prepare some room, please.");
                                data.AddOption("Okay.");
                                data.AddAvatar(67);
                                data.FinalizeDialog();
                            }

                        }
                        else
                        {
                            data.AddText("I need 5 Hawk Claws. Otherwise I`m not able to make the Peel Pill.");
                            data.AddOption("No~problem.");
                            data.AddAvatar(67);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 26:
                    {
                        data.AddText("Good, now I need 5 Hawk Claws. You`re going to hunt the Level 93 Hawks. Only when you kill 2 of them within 1 minute, will you get a Hawk Claw.");
                        data.AddOption("I~see.", 25);
                        data.AddAvatar(67);
                        data.FinalizeDialog();
                        break;
                    }
                case 25:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest6, 0);
                        client.CreateBoxDialog("Hurry~to~collect~5~Hawk~Claws!");
                        break;
                    }
                case 21:
                    {
                        data.AddText("Bitter Ginseng is made by Haw King`s Gallbladderr. You`ve got it?");
                        data.AddOption("Yes,~here~it~is.", 22);
                        data.AddOption("Not~yet.");
                        data.AddAvatar(67);
                        data.FinalizeDialog();
                        break;
                    }
                case 22:
                    {
                        if (client.Inventory.Contain(721908, 1))
                        {
                            client.Inventory.Remove(721912, 1, stream);
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You`ve received 100 Silver!");
                            client.Player.QuestGUI.FinishQuest(ActiveQuest5.MissionId);
                            client.Inventory.Remove(721908, 1, stream);
                            data.AddText("Good, now I need 5 Hawk Claws. You`re going to hunt the Level 93 Hawks. Only when you kill 2 of them within 1 minute, will you get a Hawk Claw.");
                            data.AddOption("I~see.", 25);
                            data.AddAvatar(67);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Inventory.Contain(721912, 1))
                            {
                                data.AddText("I need 1 Bitter Ginseng to make Ginseng Grease. Please take the Gallbladder drops from Haw King on Bird Island (451,676)");
                                data.AddOption("I~see.");
                                data.AddAvatar(67);
                                data.FinalizeDialog();

                            }
                            else
                            {
                                data.AddText("You lost the map? It`s okay. I`ll give you another.");
                                data.AddOption("Thank~you.", 23);
                                data.AddAvatar(67);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 23:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.Inventory.Add(stream, 721912);
                            client.CreateBoxDialog("You`ve~got~a~Ginseng~Map.~Right~click~to~read~it.");
                        }
                        else
                        {
                            data.AddText("Your inventory is full! Hurry to make some room!");
                            data.AddOption("I`ll~do~right~away.");
                            data.AddAvatar(67);
                            data.AddAvatar(67);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 20:
                    {
                        data.AddText("It`s made by Haw King`s Gallbladderr. Here`s a map, telling you where the Bitter Ginseng could be found. Use the Gallbladderr at the spots");
                        data.AddText("~and you may find a Bitter Ginseng.");
                        data.AddOption("Gimme~the~map.", 17);
                        data.AddAvatar(67);
                        data.FinalizeDialog();
                        break;
                    }

                case 14:
                    {
                        data.AddText("I need 10 samples of Bird Blood. Have you got them?");
                        data.AddOption("Yes.~Here~you~are.", 15);
                        data.AddOption("Not~yet.");
                        data.AddAvatar(67);
                        data.FinalizeDialog();
                        break;
                    }
                case 15:
                    {
                        if (client.Inventory.Contain(721906, 10))
                        {
                            data.AddText("Good job. Now, you are going to find a Bitter Ginseng.");
                            data.AddOption("How~to~get~one?", 16);//1272310
                            data.AddAvatar(67);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Hey, there! You don`t have enough Bird Blood. I need 10. You got it?");
                            data.AddOption("Yes.");
                            data.AddAvatar(67);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 16:
                    {

                        if (client.Inventory.Contain(721906, 10))
                        {
                            client.Inventory.Remove(721906, 10, stream);
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                            {
                                client.Player.Money += 100;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "recovery");
                                client.SendSysMesage("You`ve received 100 Silver!");
                                data.AddText("It`s made by Haw King`s Gallbladderr. Here`s a map, telling you where the Bitter Ginseng could be found. Use the Gallbladderr at the spots");
                                data.AddText("~and you may find a Bitter Ginseng.");
                                data.AddOption("Gimme~the~map.", 17);
                                data.AddAvatar(67);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 17:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest5, 0);
                        if (client.Inventory.Contain(721912, 1))
                        {
                            data.AddText("You`ve got a map, already!");
                            data.AddOption("Alright.");
                            data.AddAvatar(67);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Inventory.Add(stream, 721912);
                                client.CreateBoxDialog("You`ve~got~a~Ginseng~Map.~Right~click~to~read~it.");
                            }
                            else
                            {
                                data.AddText("Your inventory is full! Hurry to make some room!");
                                data.AddOption("I`ll~do~right~away.");
                                data.AddAvatar(67);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 10:
                    {
                        data.AddText("I need a Meteor. Do you have?");
                        data.AddOption("Yes.~Here~it~is.", 11);
                        data.AddOption("Not~yet.");
                        data.AddAvatar(67);
                        data.FinalizeDialog();

                        break;
                    }
                case 11:
                    {
                        if (client.Inventory.Contain(1088001, 1))
                        {
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                            {
                                client.Inventory.Remove(1088001, 1, stream);
                                client.Player.Money += 100;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "recovery");
                                client.SendSysMesage("You`ve received 100 Silver!");
                                client.CreateBoxDialog("You~gave~the~doctor~a~Meteor.");
                                data.AddText("You`re kindhearted, huh?");
                                data.AddOption("Tell~me~the~recipe!", 12);
                                data.AddAvatar(67);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("I need a Meteor. Do not bother me again unless you have got one.");
                            data.AddOption("Sorry.");
                            data.AddAvatar(67);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 12:
                    {
                        data.AddText("Well, first of all, you`re going to gather 10 samples of Bird Blood. You can get them from the Birdmen and Level 88 Birdmen.");
                        data.AddOption("I`ll~be~back~soon.", 13);
                        data.AddAvatar(67);
                        data.FinalizeDialog();
                        break;
                    }
                case 13:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        break;
                    }
                case 1:
                    {
                        data.AddText("I know the antidote for Poor Xiao`s weird disease!");
                        data.AddOption("What~is~it?", 2);
                        data.AddOption("Impress~me.");
                        data.AddAvatar(67);
                        data.FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);

                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "recovery");
                            client.SendSysMesage("You`ve received 100 Silver!");
                            data.AddText("You must pay me a meteor and then I will make the Peel Pill for Xiao. The pill is made by Bird Blood, Ginseng Grease and Hawk Claw. But they are toxic and there are");
                            data.AddText("~side-effects when people take this...I can`t guarantee its effects either...you know...Anything is possible...");
                            data.AddOption("Let~me~ask~Xiao,~first.", 3);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 5:
                    {
                        data.AddText("You must pay me a meteor and then I will make the Peel Pill for Xiao. The pill is made by Bird Blood, Ginseng Grease and Hawk Claws. But they are toxic and there are");
                        data.AddText("~side-effects when people take this...I can`t guarantee its effects either...");
                        data.AddOption("Let~me~ask~Xiao,~first.");
                        data.AddAvatar(67);
                        data.FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        data.AddText("You know what? They all call me Doctor Know-it-All because I know the secrets beneath all disease...all of them, understand?");
                        data.AddOption("How~will~you~help~Xiao?", 4);
                        data.AddOption("See~ya.");
                        data.AddAvatar(67);
                        data.FinalizeDialog();
                        break;
                    }
                case 4:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);

                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.PoorXiao)]
        public static void PoorXiao(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaskmasterChang, client.Player.Class, 1808);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.PoorXiao, client.Player.Class, 1809);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DoctorKnowitAll, client.Player.Class, 1810);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.PoorXiao, client.Player.Class, 1811);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DoctorKnowitAll, client.Player.Class, 1815);
            var ActiveQuest6 = Database.QuestInfo.GetFinishQuest((uint)NpcID.PoorXiao, client.Player.Class, 1816);
            var ActiveQuest7 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DoctorKnowitAll, client.Player.Class, 1817);
            var ActiveQuest8 = Database.QuestInfo.GetFinishQuest((uint)NpcID.PoorXiao, client.Player.Class, 1818);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest7.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Come and enjoy the beautiful scenery of Bird Island with me...");
                            data.AddOption("You~knew~General~Yue?", 30);
                            data.AddOption("Bye.");
                            data.AddAvatar(56);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Come and enjoy the beautiful scenery of Bird Island with me...");
                            data.AddOption("I`ve~got~the~pill.", 20);
                            data.AddOption("Just~passing~by.");
                            data.AddAvatar(56);
                            data.FinalizeDialog();
                            break;
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Come and enjoy the beautiful scenery of Bird Island with me...");
                            data.AddOption("Taskmaster~Chang~sent~me~here.", 1);
                            data.AddOption("Enjoy~yourself.");
                            data.AddAvatar(56);
                            data.FinalizeDialog();
                            break;
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Come and enjoy the beautiful scenery of Bird Island with me...");
                            data.AddOption("Let~me~tell~you~something.", 10);
                            data.AddOption("Okay.");
                            data.AddAvatar(56);
                            data.FinalizeDialog();
                        }
                        else if (!client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                            && client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("Come and enjoy the beautiful scenery of Bird Island with me...");
                            data.AddOption("I`ll~help~you.", 4);
                            data.AddOption("I`ll~leave~you~alone.");
                            data.AddAvatar(56);
                            data.FinalizeDialog();
                        }
                        else if (!client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                        && client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            if (!client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("The pill is toxic? And the Meteor, I don`t have any...");
                                data.AddOption("What`s~your~opinion?", 11);
                                data.AddAvatar(56);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Come and enjoy the beautiful scenery of Bird Island with me...");
                                data.AddOption("Have~you~made~your~choice?", 13);
                                data.AddOption("I`ll~be~back~soon.");
                                data.AddAvatar(56);
                                data.FinalizeDialog();
                            }
                        }
                        else if (!client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                   && client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {

                            data.AddText("Come and enjoy the beautiful scenery of Bird Island with me...");
                            data.AddOption("Here`s~the~antidote.", 22);
                            data.AddOption("I`m~busy.");
                            data.AddAvatar(56);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest8.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Come and enjoy the beautiful scenery of Bird Island with me...");
                            data.AddOption("I`m~leaving.");
                            data.AddAvatar(56);
                            data.FinalizeDialog();
                        }
                        else if (!client.Player.QuestGUI.CheckQuest(ActiveQuest8.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
               && client.Player.QuestGUI.CheckQuest(ActiveQuest7.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("Thank you, for bringing me the pill and helping me know my identity! Please go claim your reward from Taskmaster Chang.");
                            data.AddOption("I~will.", 33);
                            data.AddOption("Later.");
                            data.AddAvatar(56);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Come and enjoy the beautiful scenery of Bird Island with me...");
                            data.AddOption("I`m~leaving.");
                            data.AddAvatar(56);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 33:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest8, 0);
                        client.CreateBoxDialog("Go~claim~your~reward~from~Taskmaster~Chang!");
                        break;
                    }
                case 30:
                    {
                        data.AddText("My parents passed away when I was young, leaving only a Jade Pendant. The words inscribed on it say, `Serve thy country`.");
                        data.AddText("~Now I know I am one of the descendents of General Yue, the great hero.");
                        data.AddOption("That`s~true.", 31);
                        data.AddAvatar(7);
                        data.FinalizeDialog();
                        break;
                    }
                case 31:
                    {
                        data.AddText("Since I`ve known my identity, I`ll work hard and never disappoint my ancestors. Thank you! Please go claim your reward from Taskmaster Chang.");
                        data.AddOption("My~pleasure.", 32);
                        data.AddAvatar(7);
                        data.FinalizeDialog();
                        break;
                    }
                case 32:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest7.MissionId))
                        {
                            client.Player.Money += 6000;
                            client.GainExpBall(600);
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "recovery");
                            client.CreateBoxDialog("You`ve~gained~EXP~worth~1~EXP~Ball~and~6,000~Silver.~Hurry~to~claim~your~reward~from~Taskmaster~Chang!");
                            client.Player.QuestGUI.Accept(ActiveQuest8, 0);
                        }
                        break;
                    }
                case 20:
                    {
                        data.AddText("You`ve got the pill? Great!");
                        data.AddOption("Hurry~to~take~it!", 21);
                        data.AddAvatar(56);
                        data.FinalizeDialog();
                        break;
                    }
                case 21:
                    {

                        if (client.Inventory.Contain(721911, 1))
                        {
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest5.MissionId))
                            {
                                client.Inventory.Remove(721911, 1, stream);
                                client.Player.Money += 100;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                client.SendSysMesage("You`ve received 100 Silver!", MsgMessage.ChatMode.System);
                                data.AddText("Oh my god! Are you sure it is the antidote? The wings do not disappear! No, look at my face! It turns golden!");
                                data.AddOption("I`ll~ask~the~doctor!", 23);
                                data.AddAvatar(56);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Are you kidding me? Please, go find Doctor Know-it-All right away.");
                            data.AddOption("Okay.");
                            data.AddAvatar(56);
                            data.FinalizeDialog();
                        }

                        break;
                    }
                case 22:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Oh my god! Are you sure it is the antidote? The wings do not disappear! No, look at my face! It turns golden!");
                            data.AddOption("I`ll~ask~the~doctor!");
                            data.AddAvatar(56);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Oh my god! Are you sure it is the antidote? The wings do not disappear! No, look at my face! It turns golden!");
                            data.AddOption("I`ll~ask~the~doctor!", 23);
                            data.AddAvatar(56);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 23:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest6, 0);
                        break;
                    }
                case 13:
                    {
                        data.AddText("I will try it, no matter what might happen. But I still need a Meteor to complete the prescription of the Peel Pill.");
                        data.AddOption("Don`t~worry.");
                        data.AddAvatar(56);

                        data.FinalizeDialog();
                        break;
                    }
                case 10:
                    {
                        data.AddText("The pill is toxic? And the Meteor, I don`t have any...");
                        data.AddOption("What`s~your~opinion?", 11);
                        data.AddAvatar(56);
                        data.FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You`ve received 100 Silver!", MsgMessage.ChatMode.System);
                            data.AddText("Alright, I`m willing to have a try. But you see, I`m poor and it`s impossible for me to afford a Meteor...");
                            data.AddOption("You~can~count~on~me.", 12);
                            data.AddOption("Sorry~about~it.");
                            data.AddAvatar(56);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 12:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        break;
                    }
                case 4:
                    {
                        if (client.Player.QuestGUI.CheckQuest(1809, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Thank you. Please find Doctor Know-it-All on Bird Island (701,595) as soon as possible.");
                            data.AddOption("I`m~on~my~way.");
                            data.AddAvatar(56);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Thank you. Please find Doctor Know-it-All on Bird Island (701,595) as soon as possible.");
                            data.AddOption("I`m~on~my~way.", 3);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        data.AddText("Hello! Please don`t get scared by me...These ugly feathers grew all over my body out of a blue. I learnt that");
                        data.AddText("~Doctor Know-it-All on Bird Island (701,595) has a special prescription for this. Will you give me a hand?");
                        data.AddOption("Of~course~I~will.", 2);
                        data.AddOption("Sorry,~not~now.");
                        data.AddAvatar(56);
                        data.FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "recovery");
                            client.SendSysMesage("You`ve received 100 Silver!", MsgMessage.ChatMode.System);
                            data.AddText("Thank you. Please find Doctor Know-it-All on Bird Island (701,595) as soon as possible.");
                            data.AddOption("I`m~on~my~way.", 3);
                            data.AddAvatar(56);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 3:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
            }
        }


        //ClothingPack
        [NpcAttribute(NpcID.ClothingPack)]
        public static void ClothingPack(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Take a good look and pick one.");
                        if (client.Player.Class <= 15)
                        {
                            data.AddOption("Super~Conquest~Armor.", 1);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Class <= 25)
                            {
                                data.AddOption("Super~Phoenix~Armor.", 2);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Class <= 45)
                                {
                                    data.AddOption("Super~Phoenix~Jerkin.", 3);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.Class <= 55)
                                    {
                                        data.AddOption("Super~Owl~Vest.", 4);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (client.Player.Class <= 65)
                                        {
                                            data.AddOption("Super~Robe~Of~The~Buddha.", 5);
                                            data.FinalizeDialog();
                                        }
                                        else
                                        {
                                            if (client.Player.Class <= 75)
                                            {
                                                data.AddOption("Super~Whale~Coat.", 6);
                                                data.FinalizeDialog();
                                            }
                                            else
                                            {
                                                if (client.Player.Class <= 85)
                                                {
                                                    data.AddOption("L120~Super~Yellow~Combat~Suit.", 7);
                                                    data.FinalizeDialog();
                                                }
                                                else if (client.Player.Class <= 145)
                                                {
                                                    data.AddOption("Super~Pine~Robe.", 8);
                                                    data.FinalizeDialog();
                                                }
                                                else
                                                {
                                                    data.AddOption("Super~WindWalker~Armor.", 9);
                                                    data.FinalizeDialog();
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        break;
                    }
                case 9:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Inventory.Remove(728251, 1, stream))
                            {
                                client.Inventory.Add(stream, 722136, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Inventory.Add(stream, 170109, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.CreateBoxDialog("You~opened~the~pack~and~received~a~Super~Conquest~Armor(B)!");
                            }
                        }
                        else
                        {
                            client.CreateBoxDialog("Please~prepare~one~slot~in~your~inventory.");
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Inventory.Remove(728251, 1, stream))
                            {
                                client.Inventory.Add(stream, 722136, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Inventory.Add(stream, 130109, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.CreateBoxDialog("You~opened~the~pack~and~received~a~Super~Conquest~Armor(B)!");
                            }
                        }
                        else
                        {
                            client.CreateBoxDialog("Please~prepare~one~slot~in~your~inventory.");
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Inventory.Remove(728251, 1, stream))
                            {
                                client.Inventory.Add(stream, 722136, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Inventory.Add(stream, 131109, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.CreateBoxDialog("You~opened~the~pack~and~received~a~Super~Phoenix~Armor(B)!");
                            }
                        }
                        else
                        {
                            client.CreateBoxDialog("Please~prepare~one~slot~in~your~inventory.");
                        }
                        break;
                    }
                case 3:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Inventory.Remove(728251, 1, stream))
                            {
                                client.Inventory.Add(stream, 722136, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Inventory.Add(stream, 133109, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.CreateBoxDialog("You~opened~the~pack~and~received~a~Super~Phoenix~Jerkin(B)!");
                            }
                        }
                        else
                        {
                            client.CreateBoxDialog("Please~prepare~one~slot~in~your~inventory.");
                        }
                        break;
                    }
                case 4:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Inventory.Remove(728251, 1, stream))
                            {
                                client.Inventory.Add(stream, 722136, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Inventory.Add(stream, 135109, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.CreateBoxDialog("You~opened~the~pack~and~received~a~Super~Owl~Vest(B)!");
                            }
                        }
                        else
                        {
                            client.CreateBoxDialog("Please~prepare~one~slot~in~your~inventory.");
                        }
                        break;
                    }
                case 5:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Inventory.Remove(728251, 1, stream))
                            {
                                client.Inventory.Add(stream, 722136, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Inventory.Add(stream, 136109, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.CreateBoxDialog("You~opened~the~pack~and~received~a~Super~Robe~Of~The~Buddha(B)!");
                            }
                        }
                        else
                        {
                            client.CreateBoxDialog("Please~prepare~one~slot~in~your~inventory.");
                        }
                        break;
                    }
                case 6:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Inventory.Remove(728251, 1, stream))
                            {
                                client.Inventory.Add(stream, 139109, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Inventory.Add(stream, 722136, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.CreateBoxDialog("You~opened~the~pack~and~received~a~Super~WhaleCoat.");
                            }
                        }
                        else
                        {
                            client.CreateBoxDialog("Please~prepare~one~slot~in~your~inventory.");
                        }
                        break;
                    }
                case 7:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Inventory.Remove(728251, 1, stream))
                            {
                                client.Inventory.Add(stream, 138109, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Inventory.Add(stream, 722136, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.CreateBoxDialog("You~received~an~Level~120~Super~Yellow~Combat~Suit~and~an~EXP~Ball!");
                            }
                        }
                        else
                        {
                            client.CreateBoxDialog("Please~prepare~one~slot~in~your~inventory.");
                        }
                        break;
                    }
                case 8:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Inventory.Remove(728251, 1, stream))
                            {
                                client.Inventory.Add(stream, 722136, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.Inventory.Add(stream, 134109, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.CreateBoxDialog("You~opened~the~pack~and~received~a~Super~Pine~Robe(B)!");
                            }
                        }
                        else
                        {
                            client.CreateBoxDialog("Please~prepare~one~slot~in~your~inventory.");
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.TaskmasterChang)]
        public static void TaskmasterChang(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaskmasterChang, client.Player.Class, 1718);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ThiefWong, client.Player.Class, 1722);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaskmasterChang, client.Player.Class, 1723);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.VeteranHong, client.Player.Class, 1726);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaskmasterChang, client.Player.Class, 1727);
            var ActiveQuest6 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ScholarWu, client.Player.Class, 1732);
            var ActiveQuest7 = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaskmasterChang, client.Player.Class, 1733);
            var ActiveQuest8 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ArtisanLuo, client.Player.Class, 1737);
            var ActiveQuest9 = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaskmasterChang, client.Player.Class, 1738);
            var ActiveQuest10 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Minstrel, client.Player.Class, 1744);
            var ActiveQuest11 = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaskmasterChang, client.Player.Class, 1745);
            var ActiveQuest12 = Database.QuestInfo.GetFinishQuest((uint)NpcID.OfficerBao, client.Player.Class, 1750);
            var ActiveQuest13 = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaskmasterChang, client.Player.Class, 1751);
            var ActiveQuest14 = Database.QuestInfo.GetFinishQuest((uint)NpcID.KungfuMaster, client.Player.Class, 1757);
            var ActiveQuest15 = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaskmasterChang, client.Player.Class, 1781);
            var ActiveQuest16 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DuSan, client.Player.Class, 1786);

            var ActiveQuest17 = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaskmasterChang, client.Player.Class, 1787);
            var ActiveQuest18 = Database.QuestInfo.GetFinishQuest((uint)NpcID.AuntZhang, client.Player.Class, 1794);

            var ActiveQuest19 = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaskmasterChang, client.Player.Class, 1795);
            var ActiveQuest20 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Carolyn, client.Player.Class, 1799);



            var ActiveQuest21 = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaskmasterChang, client.Player.Class, 1800);
            var ActiveQuest22 = Database.QuestInfo.GetFinishQuest((uint)NpcID.AuntPeach, client.Player.Class, 1807);

            var ActiveQuest23 = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaskmasterChang, client.Player.Class, 1808);
            var ActiveQuest24 = Database.QuestInfo.GetFinishQuest((uint)NpcID.PoorXiao, client.Player.Class, 1818);

            var ActiveQuest25 = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaskmasterChang, client.Player.Class, 1819);
            var ActiveQuest26 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Felix, client.Player.Class, 1827);


            var ActiveQuest27 = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaskmasterChang, client.Player.Class, 1828);
            var ActiveQuest28 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Louis, client.Player.Class, 1834);

            var ActiveQuest29 = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaskmasterChang, client.Player.Class, 1835);
            var ActiveQuest30 = Database.QuestInfo.GetFinishQuest((uint)NpcID.MasterMoMo, client.Player.Class, 1839);

            var ActiveQuest31 = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaskmasterChang, client.Player.Class, 1840);
            var ActiveQuest32 = Database.QuestInfo.GetFinishQuest((uint)NpcID.OldBeggar, client.Player.Class, 1852);

            var ActiveQuest33 = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaskmasterChang, client.Player.Class, 200);
            switch (Option)
            {
                case 33:
                case 0:
                    {

                        data.AddText("Everyone wants to be a hero, and so do I, but Rome wasn`t built in a day.")
                          .AddText("~If you are dreaming of becoming a celebrity around here, I can help you get prepared. Please be noted that Reincarnated players can`t accept quests from me.");
                        data.AddOption("The~Connector~(" + GetStrTask(client, ActiveQuest2) + ").", 1);
                        data.AddOption("Spun~Gold~Armor~(" + GetStrTask(client, ActiveQuest4) + ").", 4)
                            .AddOption("Azure~Pill~(" + GetStrTask(client, ActiveQuest6) + ").", 7)
                            .AddOption("Artisan`s~Feather~(" + GetStrTask(client, ActiveQuest8) + ").", 10)
                            .AddOption("Mystic~Ring~(" + GetStrTask(client, ActiveQuest10) + ").", 13)
                            .AddOption("Next~page.", 16)
                            .AddOption("Wait,~I`m~not~ready~yet!", 255)
                           .AddAvatar(72).FinalizeDialog();

                        break;
                    }

                case 16:
                    {

                        data.AddText("Everyone wants to be a hero, and so do I, but Rome wasn`t built in a day.")
                         .AddText("~If you are dreaming of becoming a celebrity around here, I can help you get prepared. Please be noted that Reincarnated players can`t accept quests from me.");
                        data.AddOption("Frantic~Monkeys~(" + GetStrTask(client, ActiveQuest12) + ").", 17)
                             .AddOption("Soul~of~General~(" + GetStrTask(client, ActiveQuest14) + ").", 20)
                                .AddOption("Mad~Man~(" + GetStrTask(client, ActiveQuest16) + ").", 24)
                                .AddOption("Ghost~City~(" + GetStrTask(client, ActiveQuest18) + ").", 30)
                                .AddOption("Tomboy`s~Marriage~(" + GetStrTask(client, ActiveQuest20) + ").", 40)
                                .AddOption("Desert~Blood~(" + GetStrTask(client, ActiveQuest22) + ").", 50)
                                .AddOption("Previous.", 33)
                            .AddOption("Next~page.", 55)
                           .AddAvatar(72).FinalizeDialog();
                        break;
                    }
                case 55:
                    {
                        data.AddText("Everyone wants to be a hero, and so do I, but Rome wasn`t built in a day.")
                    .AddText("~If you are dreaming of becoming a celebrity around here, I can help you get prepared. Please be noted that Reincarnated players can`t accept quests from me.");
                        data.AddOption("Hero`s~Wings~(" + GetStrTask(client, ActiveQuest24) + ").", 60)
                            .AddOption("Family~Feud~(" + GetStrTask(client, ActiveQuest26) + ").", 70)
                            .AddOption("Desert~Treasure~(" + GetStrTask(client, ActiveQuest28) + ").", 80)
                             .AddOption("Desert~Expedition~(" + GetStrTask(client, ActiveQuest30) + ").", 90)
                             .AddOption("Power~Book~(" + GetStrTask(client, ActiveQuest32) + ").", 100)
                                .AddOption("TempestWings.~(" + GetStrTask(client, ActiveQuest33) + ").", 110)
                              .AddOption("Previous.", 16)
                           //Desert~Expedition~
                           .AddAvatar(72).FinalizeDialog();
                        break;
                    }
                case 110:
                    {
                        if (client.Player.Level < 120)
                        {
                            data.AddText("Sorry, but you`ll need to reach at least Level 120 to accept the quest.");
                            data.AddOption("I~see.");
                            data.AddAvatar(72);
                            data.FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest33.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("The~Tempest~Wings~have~appeared!~It`s~an~intelligent~talisman~to~boost~your~strength,~as~well~as~a~dazzling~symbol~of~nobility,");
                            data.AddText("~making~you~stand~out~in~a~second.~Wanna~be~the~Champion~of~champions?~Go~and~find~Mr.~Wonder~(212,196)~in~Phoenix~Castle");
                            data.AddText("~to~forge~a~pair~of~Tempest~Wings.");
                            data.AddOption("Take~me~to~see~Mr.~Wonder.", 111);
                            data.AddOption("Close.");
                            data.AddAvatar(72);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest33.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            {
                                data.AddText("You`ve~already~completed~the~quest,~haven`t~you?");
                                data.AddOption("Yeah,~you`re~right.");
                                data.AddAvatar(72);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("The~Tempest~Wings~have~appeared!~It`s~an~intelligent~talisman~to~boost~your~strength,~as~well~as~a~dazzling~symbol~of~nobility,");
                                data.AddText("~making~you~stand~out~in~a~second.~Wanna~be~the~Champion~of~champions?~Go~and~find~Mr.~Wonder~(212,196)~in~Phoenix~Castle");
                                data.AddText("~to~forge~a~pair~of~Tempest~Wings.");
                                data.AddOption("Take~me~to~see~Mr.~Wonder.", 111);
                                data.AddOption("Close.");
                                data.AddAvatar(72);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }

                case 111:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest33, 0);
                        client.Player.QuestGUI.SendAutoPatcher(1011, 212, 196, 10850);
                        break;
                    }
                case 100:
                    {
                        if (client.Player.Level < 115)
                        {
                            data.AddText("Sorry, but you`ll need to reach at least Level 115 to accept the quest.");
                            data.AddOption("I~see.");
                            data.AddAvatar(72);
                            data.FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest32.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("You`ve already completed the quest.");
                            data.AddOption("I~forgot.");
                            data.AddAvatar(72);
                            data.FinalizeDialog();
                            break;//1262670
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest32.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("There`s an Old Beggar at the entrance of the Labyrinth (263,135). He has a very special book about the essence of all the secrets behind Chinese Martial Arts.");
                            data.AddText("If you are interested in it, pay a visit to him.");
                            data.AddOption("Claim~rewards.", 102);
                            data.AddOption("I`ll~think~about~it.");
                            data.AddAvatar(72);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (!client.Player.QuestGUI.CheckQuest(ActiveQuest31.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            {
                                data.AddText("There`s an Old Beggar at the entrance of the Labyrinth (391,235). He has a very special book about the essence of all the secrets behind Chinese Martial Arts.");
                                data.AddText("If you are interested in it, pay a visit to him.");
                                data.AddOption("Accept~the~quest.", 101);
                                data.AddOption("I~see.");
                                data.AddAvatar(72);
                                data.FinalizeDialog();
                                break;
                            }
                            data.AddText("Sorry, but you didn`t complete the quest.");
                            data.AddOption("I~see.");
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 102:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest32.MissionId))
                            {
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "angelwing");
                                client.Inventory.Add(stream, 728251, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.CreateBoxDialog("You~completed~the~quest~and~received~a~L120~Super~Clothing~Pack!");
                            }
                        }
                        else
                        {
                            client.CreateBoxDialog("Your~inventory~is~full.~You`ll~need~to~make~some~room,~first.");
                        }
                        break;
                    }
                case 101:
                    {
                        client.CreateBoxDialog("Hurry~to~pay~a~visit~to~the~Old~Beggar.");
                        client.Player.QuestGUI.Accept(ActiveQuest31, 0);
                        break;
                    }
                case 90:
                    {
                        if (client.Player.Level < 105)
                        {
                            data.AddText("Sorry, but you`ll need to reach at least Level 105 to accept the quest.");
                            data.AddOption("I~see.");
                            data.AddAvatar(72);
                            data.FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest30.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("You`ve already completed the quest.");
                            data.AddOption("I~forgot.");
                            data.AddAvatar(72);
                            data.FinalizeDialog();
                            break;//1262670
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest30.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Master Mo Mo in Desert City (520,589) is a nobleman who is fond of making gunpowder and researching new weapons. But");
                            data.AddText("~he seems to be in trouble. Help him. When it is done, you can claim rewards from me.");
                            data.AddOption("Claim~rewards.", 92);
                            data.AddOption("I`ll~think~about~it.");
                            data.AddAvatar(72);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (!client.Player.QuestGUI.CheckQuest(ActiveQuest29.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            {
                                data.AddText("Master Mo Mo in Desert City (520,589) is a nobleman who is fond of making gunpowder and researching new weapons. But");
                                data.AddText("~he seems to be in trouble. Help him. When it is done, you can claim rewards from me.");
                                data.AddOption("Accept~the~quest.", 91);
                                data.AddOption("I`ll~think~about~it.");
                                data.AddAvatar(72);
                                data.FinalizeDialog();
                                break;
                            }
                            data.AddText("Sorry, but you didn`t complete the quest.");
                            data.AddOption("I~see.");
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 92:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest30.MissionId))
                            {
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "angelwing");
                                client.Inventory.Add(stream, 728250, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.CreateBoxDialog("You~completed~the~quest~and~received~a~L110~Super~Ring~Pack!");
                            }
                        }
                        else
                        {
                            client.CreateBoxDialog("Your~inventory~is~full.~You`ll~need~to~make~some~room,~first.");
                        }
                        break;
                    }
                case 91:
                    {
                        client.CreateBoxDialog("Hurry~up~to~help~Master~Mo~Mo~in~Desert~City!");
                        client.Player.QuestGUI.Accept(ActiveQuest29, 0);
                        break;
                    }
                case 80://1264450
                    {
                        if (client.Player.Level < 98)
                        {
                            data.AddText("Sorry, but you`ll need to reach at least Level 98 to accept the quest.");
                            data.AddOption("I~see.");
                            data.AddAvatar(72);
                            data.FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest28.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("You`ve already completed the quest.");
                            data.AddOption("I~forgot.");
                            data.AddAvatar(72);
                            data.FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest28.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Louis in Desert City (466,649) is looking for the Zen Scripture, the Victory Portrait and the Buddha Relic. He needs your help.");
                            data.AddOption("Claim~rewards.", 82);
                            data.AddOption("I`ll~think~about~it.");
                            data.AddAvatar(72);
                            data.FinalizeDialog();
                            //1264340
                        }
                        else
                        {
                            if (!client.Player.QuestGUI.CheckQuest(ActiveQuest27.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            {
                                data.AddText("Louis in Desert City (466,649) is looking for the Zen Scripture, the Victory Portrait and the Buddha Relic. He needs your help.");
                                data.AddOption("Accept~the~quest.", 81);
                                data.AddOption("I`ll~think~about~it.");
                                data.AddAvatar(72);
                                data.FinalizeDialog();
                                break;
                            }
                            data.AddText("Sorry, but you didn`t complete the quest.");
                            data.AddOption("I~see.");
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 82:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest28.MissionId))
                            {
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "angelwing");
                                client.Inventory.Add(stream, 728249, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                client.CreateBoxDialog("You~completed~the~quest~and~received~a~L100~Super~Boots~Pack!");
                            }
                        }
                        else
                        {
                            client.CreateBoxDialog("Your~inventory~is~full.~You`ll~need~to~make~some~room,~first.");
                        }

                        break;
                    }

                case 81:
                    {
                        client.CreateBoxDialog("Hurry~up~to~help~Louis~in~Desert~City.");
                        client.Player.QuestGUI.Accept(ActiveQuest27, 0);
                        break;
                    }
                case 70:
                    {
                        if (client.Player.Level < 95)
                        {
                            data.AddText("Sorry, but you`ll need to reach at least Level 95 to accept the quest.");
                            data.AddOption("I~see.");
                            data.AddAvatar(72);
                            data.FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest26.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("You`ve already completed the quest.");
                            data.AddOption("I~forgot.");
                            data.AddAvatar(72);
                            data.FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest26.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Felix on Bird Island (686,547) is plagued by the fact that his parents were killed by his foster father, who is a Bandit");
                            data.AddText("~Leader. Help him seek revenge in honor of his parents. When it is done, you can claim rewards from me.");
                            data.AddOption("Claim~rewards.", 72);
                            data.AddOption("I`ll~think~about~it.");
                            data.AddAvatar(72);
                            data.FinalizeDialog();

                            //1264340
                        }
                        else
                        {
                            if (!client.Player.QuestGUI.CheckQuest(ActiveQuest25.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            {
                                data.AddText("Felix on Bird Island (686,547) is plagued by the fact that his parents were killed by his foster father, who is a Bandit");
                                data.AddText("~Leader. Help him seek revenge in honor of his parents. When it is done, you can claim rewards from me.");
                                data.AddOption("Accept~the~quest.", 71);
                                data.AddOption("I`ll~think~about~it.");
                                data.AddAvatar(72);
                                data.FinalizeDialog();
                                break;
                            }
                            data.AddText("Sorry, but you didn`t complete the quest.");
                            data.AddOption("I~see.");
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 72:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest26.MissionId))
                            {
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "angelwing");
                                client.Inventory.Add(stream, 728248);
                                client.CreateBoxDialog("You~completed~the~quest~and~received~a~L97~Super~Necklace~Pack!");
                            }
                        }
                        else
                            client.CreateBoxDialog("Your~inventory~is~full.~You`ll~need~to~make~some~room,~first.");
                        break;
                    }
                case 71:
                    {
                        client.CreateBoxDialog("Hurry~up~to~help~Felix~on~Bird~Island!");
                        client.Player.QuestGUI.Accept(ActiveQuest25, 0);
                        // 1264320
                        break;
                    }
                case 60:
                    {
                        if (client.Player.Level < ActiveQuest24.Lv_min)
                        {
                            data.AddText("Sorry, but you`ll need to reach at least Level " + ActiveQuest24 + " to accept the quest.");
                            data.AddOption("I~see.");
                            data.AddAvatar(72);
                            data.FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest24.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("You`ve already completed the quest `Hero`s Wings`, haven`t you?");
                            data.AddOption("Oh,~yeah.");
                            data.AddAvatar(72);
                            data.FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest24.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Poor Xiao on Bird Island (725,541) caught a strange disease which made his body covered by plumes. You need to visit");
                            data.AddText("~Doctor Know-it-All for him.");
                            data.AddOption("Done!~Claim~my~reward!", 61);
                            data.AddOption("Leave.");
                            data.AddAvatar(72);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (!client.Player.QuestGUI.CheckQuest(ActiveQuest23.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            {
                                data.AddText("Poor Xiao on Bird Island (725,541) caught a strange disease which made his body covered by plumes. You need to visit");
                                data.AddText("~Doctor Know-it-All for him.");
                                data.AddOption("You~can~count~on~me.", 62);
                                data.AddOption("None~of~my~business.");
                                data.AddAvatar(72);
                                data.FinalizeDialog();
                                break;
                            }
                            data.AddText("I`m not giving you anything, you know, unless you complete the quest `Hero`s Wings`!");
                            data.AddOption("I~see.");
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 62:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest23.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            client.CreateBoxDialog("Hurry~up~and~set~off~right~away!");
                        }
                        else
                        {
                            client.Player.QuestGUI.Accept(ActiveQuest23, 0);
                            client.CreateBoxDialog("Hurry~up~and~set~off~right~away!");
                        }
                        break;
                    }
                case 61:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest24.MissionId))
                            {
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "angelwing");
                                client.Inventory.Add(stream, 728247);
                                client.CreateBoxDialog("You`ve~completed~the~quest~`Hero`s~Wings`~and~received~a~Super~Headgear~Pack!");
                            }
                        }
                        else
                        {
                            client.CreateBoxDialog("Your~inventory~is~full.~Make~some~room~first,~and~then~claim~the~reward,~later!");
                        }

                        break;
                    }
                case 50:
                    {
                        if (client.Player.Level < ActiveQuest22.Lv_min)
                        {
                            data.AddText("Sorry, but you`ll need to reach at least Level " + ActiveQuest24 + " to accept the quest.");
                            data.AddOption("I~see.");
                            data.AddAvatar(72);
                            data.FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest22.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("You`ve already completed the quest `Desert Blood`, haven`t you?");
                            data.AddOption("Oh,~yeah.", 255).AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest22.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Harvey, in Desert City (495,579) is searching for a Divine Sword once possessed by an Obscure Warrior.")
                    .AddText("~Go try to help him.");
                            data.AddOption("Done!~Claim~my~reward!", 52)
                                .AddOption("Leave.", 255)
                               .AddAvatar(72).FinalizeDialog();
                            break;
                        }

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest21.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted)
                            || client.Player.QuestGUI.CheckQuest(ActiveQuest21.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("I`m not giving you anything, you know, unless you complete the quest `Desert Blood`!");
                            data.AddOption("Alright.", 255).AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest21.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted) == false)
                        {
                            data.AddText("Harvey, in Desert City (495,579) is searching for a Divine Sword once possessed by an Obscure Warrior.")
                  .AddText("~Go try to help him.");
                            data.AddOption("You~can~count~on~me.", 51)
                                .AddOption("None~of~my~business.", 255)
                               .AddAvatar(72).FinalizeDialog();
                        }
                        break;
                    }
                case 51:
                    {
                        client.CreateBoxDialog("Hurry~up~and~set~off~right~away!");
                        client.Player.QuestGUI.Accept(ActiveQuest21, 0);
                        break;
                    }
                case 52:
                    {

                        if (client.Inventory.HaveSpace(1) == false)
                        {
                            data.AddText("Please make 1 more space in your inventory");
                            data.AddOption("Let me check.", 255).AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest22.MissionId))
                        {
                            client.Inventory.Add(stream, 728242);
                            client.CreateBoxDialog("You`ve~completed~the~quest~`Desert~Blood`~and~received~a~Level~90~Elite~Ring~Pack!");
                        }

                        break;
                    }
                case 40:
                    {
                        if (client.Player.Level < ActiveQuest20.Lv_min)
                        {
                            data.AddText("Sorry, but you`ll need to reach at least Level " + ActiveQuest24 + " to accept the quest.");
                            data.AddOption("I~see.");
                            data.AddAvatar(72);
                            data.FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest20.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("You`ve already completed the `Tomboy`s Marriage` quest, haven`t you?");
                            data.AddOption("Oh,~yeah.", 255).AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest20.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Farmer Lynn in Desert City (461,661) feels great anxiety about his daughter, Carolyn, who still isn`t married at the age of 30.")
                    .AddText("~Will you go talk to him? I`ve prepared a whopping reward for a hero kind enough to help him out.");
                            data.AddOption("Claim~rewards.", 42)
                                .AddOption("Leave.", 255)
                               .AddAvatar(72).FinalizeDialog();
                            break;
                        }

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest19.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted)
                      || client.Player.QuestGUI.CheckQuest(ActiveQuest19.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("I`m not giving you anything, you know, unless you complete the quest: `Tomboy`s Marriage`!");
                            data.AddOption("I~see.", 255).AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest19.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted) == false)
                        {
                            data.AddText("Farmer Lynn in Desert City (461,661) feels great anxiety about his daughter, Carolyn, who still isn`t married at the age of 30.")
                  .AddText("~Will you go talk to him? I`ve prepared a whopping reward for a hero kind enough to help him out.");
                            data.AddOption("You~can~count~on~me.", 41)
                                .AddOption("None~of~my~business.", 255)
                               .AddAvatar(72).FinalizeDialog();
                        }
                        break;
                    }
                case 42:
                    {
                        if (client.Inventory.HaveSpace(1) == false)
                        {
                            data.AddText("Please make 1 more space in your inventory");
                            data.AddOption("Let me check.", 255).AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest20.MissionId))
                        {
                            client.Inventory.Add(stream, 728241);
                            client.CreateBoxDialog("You`ve~completed~the~`Tomboy`s~Marriage`~quest~and~received~a~Level~82~Elite~Necklace~Pack!");
                        }
                        break;
                    }
                case 41:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest19, 0);
                        client.CreateBoxDialog("Hurry~up~and~set~off,~right~away!");
                        break;
                    }

                case 30:
                    {
                        if (client.Player.Level < ActiveQuest18.Lv_min)
                        {
                            data.AddText("Sorry, but you`ll need to reach at least Level " + ActiveQuest24 + " to accept the quest.");
                            data.AddOption("I~see.");
                            data.AddAvatar(72);
                            data.FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest18.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("You`ve already completed the quest `Ghost City`, haven`t you?");
                            data.AddOption("Oh,~yeah.", 255).AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest18.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Aunt Zhang (361,459) is looking everywhere for her son Mo Mo. He went missing in Twin City,")
                    .AddText("~the Taoist Shine should know the reason beneath this mystery.");
                            data.AddOption("Done!~Claim~my~reward!", 32)
                                .AddOption("None~of~my~business!", 255)
                               .AddAvatar(72).FinalizeDialog();
                            break;
                        }

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest17.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted)
                         || client.Player.QuestGUI.CheckQuest(ActiveQuest17.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("I`m not giving you anything, you know, unless you complete the quest `Ghost City`!");
                            data.AddOption("I~see.", 255).AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest17.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted) == false)
                        {
                            data.AddText("Aunt Zhang (240,326) is looking everywhere for her son Mo Mo. He went missing in Twin City, and his uncle believed that")
                  .AddText("~the Taoist Shine should know the reason beneath this mystery.");
                            data.AddOption("You~can~count~on~me.", 31)
                                .AddOption("None~of~my~business.", 255)
                               .AddAvatar(72).FinalizeDialog();
                        }
                        break;
                    }
                case 31:
                    {
                        client.CreateBoxDialog("Hurry~up~and~set~off~right~away!");
                        client.Player.QuestGUI.Accept(ActiveQuest17, 0);
                        break;
                    }
                case 32:
                    {
                        if (client.Inventory.HaveSpace(1) == false)
                        {
                            data.AddText("Please make 1 more space in your inventory");
                            data.AddOption("Let me check.", 255).AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest18.MissionId))
                        {
                            client.Inventory.Add(stream, 728246);
                            client.CreateBoxDialog("You`ve~completed~the~quest~`Ghost~City`~and~received~a~Level~87~Elite~Armor~Pack!");
                        }
                        break;
                    }
                case 24:
                    {
                        if (client.Player.Level < ActiveQuest16.Lv_min)
                        {
                            data.AddText("Sorry, but you`ll need to reach at least Level " + ActiveQuest24 + " to accept the quest.");
                            data.AddOption("I~see.");
                            data.AddAvatar(72);
                            data.FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest16.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("You`ve already completed the quest `Mad~Man`, haven`t you?");
                            data.AddOption("Oh,~yeah.", 255).AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest16.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Du San in Ape City (552,601) was the nephew of General Du (396,233). Du San turned lunatic out of the blue, with snakebites all")
                    .AddText("~over his body. General needs somebody to kill those Snake Men for revenge.");
                            data.AddOption("Done!~Claim~my~reward!", 26)
                                .AddOption("None~of~my~business!", 255)
                               .AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest15.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted)
                          || client.Player.QuestGUI.CheckQuest(ActiveQuest15.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("I`m not giving you anything, you know, unless you complete the quest `Mad~Man`!");
                            data.AddOption("I~see.", 255).AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        data.AddText("Du San in Ape City (552,601) was the nephew of General Du (396,233). Du San turned lunatic out of the blue, with snakebites all")
                   .AddText("~over his body. General needs somebody to kill those Snake Men for revenge.");
                        data.AddOption("You~can~count~on~me.", 25)
                            .AddOption("None~of~my~business!", 255)
                           .AddAvatar(72).FinalizeDialog();

                        break;
                    }
                case 26:
                    {

                        if (client.Inventory.HaveSpace(1) == false)
                        {
                            data.AddText("Please make 1 more space in your inventory");
                            data.AddOption("Let me check.", 255).AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest16.MissionId))
                        {
                            client.Inventory.Add(stream, 728245);
                            client.CreateBoxDialog("You`ve~completed~the~quest~`Mad~Man`~and~received~a~Level~67~Elite~Headgear~Pack!");
                        }

                        break;
                    }
                case 25:
                    {

                        client.Player.QuestGUI.Accept(ActiveQuest15, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Hurry~up~and~set~off~right~away!", ActiveQuest15.FinishNpcId.Map, ActiveQuest15.FinishNpcId.X, ActiveQuest15.FinishNpcId.Y, ActiveQuest15.FinishNpcId.ID);

                        break;
                    }
                case 20:
                    {
                        if (client.Player.Level < ActiveQuest14.Lv_min)
                        {
                            data.AddText("Sorry, but you`ll need to reach at least Level " + ActiveQuest24 + " to accept the quest.");
                            data.AddOption("I~see.");
                            data.AddAvatar(72);
                            data.FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest14.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("You`ve already completed the quest `Soul~of~General`, haven`t you?");
                            data.AddOption("Oh,~yeah.", 255).AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest14.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("General Amber (879,562) in Ape City lived a heroic life. But his spirit couldn`t rest in peace because of unfinished business.")
                                .AddText("~He needs your help.");
                            data.AddOption("Done!~Claim~my~reward!", 22)
                                .AddOption("None~of~my~business!", 255)
                               .AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest13.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted)
                              || client.Player.QuestGUI.CheckQuest(ActiveQuest13.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("I`m not giving you anything, you know, unless you complete the quest `Soul of General`!");
                            data.AddOption("I~see.", 255).AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        data.AddText("General Amber (879,562) in Ape City lived a heroic life. But his spirit couldn`t rest in peace because of unfinished business.")
                   .AddText("~He needs your help.");
                        data.AddOption("You~can~count~on~me.", 21)
                            .AddOption("None~of~my~business!", 255)
                           .AddAvatar(72).FinalizeDialog();

                        break;
                    }
                case 22:
                    {

                        if (client.Inventory.HaveSpace(1) == false)
                        {
                            data.AddText("Please make 1 more space in your inventory");
                            data.AddOption("Let me check.", 255).AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest14.MissionId))
                        {
                            client.Inventory.Add(stream, 728244);
                            client.CreateBoxDialog("You`ve~completed~the~quest~`Soul~of~General`~and~received~a~Level~60~Elite~Boot~Pack!");
                        }
                        break;
                    }
                case 21:
                    {

                        client.Player.QuestGUI.Accept(ActiveQuest13, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Hurry~up~and~set~off~right~away!", ActiveQuest13.FinishNpcId.Map, ActiveQuest13.FinishNpcId.X, ActiveQuest13.FinishNpcId.Y, ActiveQuest13.FinishNpcId.ID);
                        break;

                    }
                case 17:
                    {
                        if (client.Player.Level < ActiveQuest12.Lv_min)
                        {
                            data.AddText("Sorry, but you`ll need to reach at least Level " + ActiveQuest24 + " to accept the quest.");
                            data.AddOption("I~see.");
                            data.AddAvatar(72);
                            data.FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest12.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("You`ve already completed the quest `Frantic Monkeys`, haven`t you?");
                            data.AddOption("Oh,~yeah.", 255).AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest12.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Ape City used to be at peace. But the monkeys outside the city strangely went frantic and began to attack villagers. Officer")
                                           .AddText("~Bao (553,584) needs your help to find out why.");
                            data.AddOption("Done!~Claim~my~reward!", 19)
                                .AddOption("None~of~my~business!", 255)
                               .AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest11.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted)
                             || client.Player.QuestGUI.CheckQuest(ActiveQuest11.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("I`m not giving you anything, you know, unless you complete the quest `Franti Monkeys`!");
                            data.AddOption("I~see.", 255).AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        data.AddText("Ape City used to be at peace. But the monkeys outside the city strangely went frantic and began to attack villagers. Officer")
                   .AddText("~Bao (553,584) needs your help to find out why.");
                        data.AddOption("You~can~count~on~me.", 18)
                            .AddOption("None~of~my~business!", 255)
                           .AddAvatar(72).FinalizeDialog();

                        break;
                    }
                case 19:
                    {

                        if (client.Inventory.HaveSpace(1) == false)
                        {
                            data.AddText("Please make 1 more space in your inventory");
                            data.AddOption("Let me check.", 255).AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest12.MissionId))
                        {
                            client.Inventory.Add(stream, 728243);
                            client.CreateBoxDialog("You`ve~completed~the~quest~`Frantic~Monkeys`~and~received~a~Level~55~Elite~Weapon~Pack!");
                        }

                        break;
                    }
                case 18:
                    {

                        client.Player.QuestGUI.Accept(ActiveQuest11, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Hurry~up~and~set~off~right~away!", ActiveQuest11.FinishNpcId.Map, ActiveQuest11.FinishNpcId.X, ActiveQuest11.FinishNpcId.Y, ActiveQuest11.FinishNpcId.ID);

                        break;
                    }
                case 13:
                    {
                        if (client.Player.Level < ActiveQuest10.Lv_min)
                        {
                            data.AddText("Sorry, but you`ll need to reach at least Level " + ActiveQuest24 + " to accept the quest.");
                            data.AddOption("I~see.");
                            data.AddAvatar(72);
                            data.FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest10.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("You`ve already completed the `Antique Ring` quest, haven`t you?");
                            data.AddOption("Oh,~yeah.", 255).AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest10.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("A Minstrel (184,282) came to Phoenix Castle looking for the Mystic Ring. He heard that Antique Dealer Shen (779,477) has an Antique Ring")
                .AddText("~that can be converted into the Mystic Ring, when combined with a Meteor. He needs you to visit Dealer Shen and learn more.");
                            data.AddOption("Done!~Claim~my~reward!", 15)
                                .AddOption("None~of~my~business!", 255)
                               .AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest9.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted)
                              || client.Player.QuestGUI.CheckQuest(ActiveQuest9.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("I`m not giving you anything, you know, unless you complete the quest: `Mystic Ring`!");
                            data.AddOption("I~see.", 255).AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        data.AddText("A Minstrel (184,282) came to Phoenix Castle looking for the Mystic Ring. He heard that Antique Dealer Shen (779,477) has an Antique Ring")
                   .AddText("~that can be converted into the Mystic Ring, when combined with a Meteor. He needs you to visit Dealer Shen and learn more.");
                        data.AddOption("You~can~count~on~me.", 14)
                            .AddOption("None~of~my~business!", 255)
                           .AddAvatar(72).FinalizeDialog();

                        break;
                    }
                case 15:
                    {

                        if (client.Inventory.HaveSpace(1) == false)
                        {
                            data.AddText("Please make 1 more space in your inventory");
                            data.AddOption("Let me check.", 255).AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest10.MissionId))
                        {
                            client.Inventory.Add(stream, 728240);
                            client.CreateBoxDialog("You`ve~completed~the~quest~`Mystic~Ring`~and~received~a~Level~52~Unique~Headgear~Pack!");
                        }
                        break;
                    }
                case 14:
                    {

                        client.Player.QuestGUI.Accept(ActiveQuest9, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Hurry~up~and~set~off,~right~away!", ActiveQuest9.FinishNpcId.Map, ActiveQuest9.FinishNpcId.X, ActiveQuest9.FinishNpcId.Y, ActiveQuest9.FinishNpcId.ID);


                        break;
                    }
                case 10:
                    {
                        if (client.Player.Level < ActiveQuest8.Lv_min)
                        {
                            data.AddText("Sorry, but you`ll need to reach at least Level " + ActiveQuest24 + " to accept the quest.");
                            data.AddOption("I~see.");
                            data.AddAvatar(72);
                            data.FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest8.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("You`ve already completed the quest `Azure Pill`!");
                            data.AddOption("Oh,~yeah.", 255).AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest8.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Apprentice Luo (TwinCity 447,331) is waiting for his father, Artisan Luo. He has been out collecting feathers near the river (442,431) for")
                                .AddText("~days, and his son is growing more and more worried that he hasn`t returned. He needs your help to find his father.");
                            data.AddOption("Done!~Claim~my~reward!", 12)
                                .AddOption("None~of~my~business!", 255)
                               .AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest7.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted)
                           || client.Player.QuestGUI.CheckQuest(ActiveQuest7.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("I`m not giving you anything, unless you complete the quest: `Artisan`s Feather`!");
                            data.AddOption("I~see.", 255).AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        data.AddText("Apprentice Luo (TwinCity 447,331) is waiting for his father, Artisan Luo. He has been out collecting feathers near the river (442,431) for")
                      .AddText("~days, and his son is growing more and more worried that he hasn`t returned. He needs your help to find his father.");
                        data.AddOption("You~can~count~on~me!", 11)
                            .AddOption("None~of~my~business!", 255)
                           .AddAvatar(72).FinalizeDialog();

                        break;
                    }
                case 12:
                    {
                        if (client.Inventory.HaveSpace(1) == false)
                        {
                            data.AddText("Please make 1 more space in your inventory");
                            data.AddOption("Let me check.", 255).AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest8.MissionId))
                        {
                            client.Inventory.Add(stream, 728239);
                            client.CreateBoxDialog("You`ve~completed~the~`Artisan`s~Feather`~quest~and~received~a~Level~50~Unique~Weapon~Pack!");
                        }
                        break;
                    }
                case 11:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest7, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Hurry~and~find~Artisan~Luo!", ActiveQuest7.FinishNpcId.Map, ActiveQuest7.FinishNpcId.X, ActiveQuest7.FinishNpcId.Y, ActiveQuest7.FinishNpcId.ID);

                        break;
                    }
                case 7:
                    {
                        if (client.Player.Level < ActiveQuest6.Lv_min)
                        {
                            data.AddText("Sorry, but you`ll need to reach at least Level " + ActiveQuest24 + " to accept the quest.");
                            data.AddOption("I~see.");
                            data.AddAvatar(72);
                            data.FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {

                            data.AddText("You`ve already completed the quest `Azure Pill`!");
                            data.AddOption("Oh,~yeah.", 255).AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Scholar Wu (Phoenix Castle,214 231) has been suffering from a weird asthma for years. He heard Pharmacist Mu Mu (182,241) could")
                     .AddText("~cure his disease if some rare ingredients are at hand. He now needs you to give him a hand and collect the ingredients.");
                            data.AddOption("Done!~Claim~my~reward!", 9)
                                .AddOption("None~of~my~business!", 255)
                               .AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted)
                            || client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("I`m not giving you anything, you know, unless you complete the quest `Azure Pill`!");
                            data.AddOption("Got~it.", 255).AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        data.AddText("Scholar Wu (Phoenix Castle,214 231) has been suffering from a weird asthma for years. He heard Pharmacist Mu Mu (182,241) could")
                      .AddText("~cure his disease if some rare ingredients are at hand. He now needs you to give him a hand and collect the ingredients.");
                        data.AddOption("I~won`t~let~you~down.", 8)
                            .AddOption("None~of~my~business!", 255)
                           .AddAvatar(72).FinalizeDialog();

                        break;
                    }
                case 9:
                    {
                        if (client.Inventory.HaveSpace(1) == false)
                        {
                            data.AddText("Please make 1 more space in your inventory");
                            data.AddOption("Let me check.", 255).AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest6.MissionId))
                        {
                            client.Inventory.Add(stream, 728238);
                            client.CreateBoxDialog("You`ve~completed~the~quest~`Azure~Pill`~and~received~a~Level~43~Unique~Ring~Pack!");
                        }
                        break;
                    }
                case 8:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest5, 0);
                        client.Player.QuestGUI.SendAutoPatcher("You`re~going~to~help~Scholar~Wu~collect~the~ingredients.", ActiveQuest5.FinishNpcId.Map, ActiveQuest5.FinishNpcId.X, ActiveQuest5.FinishNpcId.Y, ActiveQuest5.FinishNpcId.ID);

                        break;
                    }
                case 4:
                    {
                        if (client.Player.Level < ActiveQuest4.Lv_min)
                        {
                            data.AddText("Sorry, but you`ll need to reach at least Level " + ActiveQuest24 + " to accept the quest.");
                            data.AddOption("I~see.");
                            data.AddAvatar(72);
                            data.FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("Hey! You`ve already completed the quest: `Spun Gold Armor`!");
                            data.AddOption("Oh,~yeah.", 255).AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        data.AddText("Thief Wong (347,228) has stolen some jewelry from the notorious landlords. He wants to give these treasures to the poor in Maple")
                          .AddText("~the Lustful and his gangsters have something to do with it. You will need to disguise yourself and set a trap to capture him.");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddOption("Done!~Claim~my~reward.", 6)
                           .AddOption("Later.", 255)
                          .AddAvatar(72).FinalizeDialog();
                        }
                        else
                        {
                            data.AddOption("You~can~count~on~me!", 5)
                            .AddOption("None~of~my~business!", 255)
                           .AddAvatar(72).FinalizeDialog();
                        }
                        break;
                    }
                case 6:
                    {
                        if (client.Inventory.HaveSpace(1) == false)
                        {
                            data.AddText("Please make 1 more space in your inventory");
                            data.AddOption("Let me check.", 255).AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                        {
                            client.Inventory.Remove(729974, 1, stream);
                            client.Inventory.Add(stream, 728237);
                            client.CreateBoxDialog("You`ve~completed~the~quest~`Spun~Gold~Armor`~and~received~a~Level~32~Unique~Armor~Pack!");
                        }
                        break;
                    }
                case 5:
                    {
                        if (client.Player.Level < ActiveQuest3.Lv_min)
                        {
                            data.AddText("Sorry, but you`ll need to reach at least Level " + ActiveQuest24 + " to accept the quest.");
                            data.AddOption("I~see.");
                            data.AddAvatar(72);
                            data.FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                            client.Player.QuestGUI.SendAutoPatcher("You~have~accepted~the~quest:~`Spun~Gold~Armor`.", ActiveQuest3.FinishNpcId.Map, ActiveQuest3.FinishNpcId.X, ActiveQuest3.FinishNpcId.Y, ActiveQuest3.FinishNpcId.ID);

                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            data.AddText("I won`t give you anything, you know, until you complete the quest: `Spun Gold Armor`!");
                            data.AddOption("Got~it.", 255)
                               .AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {

                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Player.Level < ActiveQuest2.Lv_min)
                        {
                            data.AddText("Sorry, but you`ll need to reach at least Level " + ActiveQuest24 + " to accept the quest.");
                            data.AddOption("I~see.");
                            data.AddAvatar(72);
                            data.FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("You`ve~already~completed~the~quest:~`The~Connector`!");
                            data.AddOption("Yep.", 255)
                               .AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Thief Wong (347,228) has stolen some jewelry from the notorious landlords. He wants to give these treasures to the poor in Maple")
                       .AddText("~Forest, but Thief Chen, his connector, is being cut off by Bandits. I need you to go and help them. It`s very urgent!");
                            data.AddOption("Done!~Claim~my~reward.", 3)
                                .AddOption("I`ll~be~back~soon.", 255)
                               .AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted) && !client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("I won`t give you anything, you know, because you haven`t finished the quest `The Connector`, yet!");
                            data.AddOption("Got~it.", 255)
                               .AddAvatar(72).FinalizeDialog();

                            break;
                        }
                        data.AddText("Thief Wong (347,228) has stolen some jewelry from the notorious landlords. He wants to give these treasures to the poor in Maple")
                         .AddText("~Forest, but Thief Chen, his connector, is being cut off by Bandits. I need you to go and help them. It`s very urgent!");
                        data.AddOption("You~can~count~on~me!", 2)
                            .AddOption("None~of~my~business!", 255)
                           .AddAvatar(72).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        client.Player.QuestGUI.SendAutoPatcher("You`ve~accepted~the~quest:~`The~Connector`!", ActiveQuest.FinishNpcId.Map, ActiveQuest.FinishNpcId.X, ActiveQuest.FinishNpcId.Y, ActiveQuest.FinishNpcId.ID);

                        break;
                    }
                case 3:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory");
                            data.AddOption("Let me check.", 255).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.Inventory.Add(stream, 120046);
                            client.CreateBoxDialog("You`ve~completed~the~quest~`The~Connector`~and~received~a~Refined~Necklace~Pack!");
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.GreenSnake)]
        public static void GreenSnake(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("What beautiful scenery! I feel so lucky to meet you here, so my problem of starvation can be solved. Come here, baby!")
.AddOption("Be~off,~or~I`ll~kill~you!", 1)
.AddOption("I`m~gone,~bye!", 255)
.AddAvatar(110).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        data.AddText("Wait, I`m only joking! If you spare my life, I`ll lead you to a marvellous place with treasures everywhere! You can take what you want if you are able to break through the Snake Array.")
.AddOption("What~is~snake~array?", 2)
.AddAvatar(110).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        data.AddText("Don`t kill me, and I`ll explain. It`s a kind of battle array formed by 17 islands. Our boss watches the last one. Beat the boss down, and the treasure will be yours!")
.AddOption("Show~me~the~way.", 3)
.AddAvatar(110).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        data.AddText("Um, I don`t mean to question your ability. However, you may pay for your greed with your life. I`ve seen that a lot, before.")
.AddOption("I~fear~nothing.", 4)
.AddOption("I~changed~my~mind.", 255)
.AddAvatar(110).FinalizeDialog();
                        break;
                    }
                case 4:
                    {
                        client.Teleport(444, 355, 1063);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Mulan)]
        public static void Mulan(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.Harriet, client.Player.Class, 1644);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Mulan, client.Player.Class, 1645);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Mulan, client.Player.Class, 1646);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.GeneralArmand, client.Player.Class, 1648);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Mulan, client.Player.Class, 1649);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("Do you believe I can also do what any man can do? I`ll join the army and to be a general, someday. Then I`ll realize my father`s wish of serving the country. Yeah, that`s")
                            .AddText("~also my dream!");

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Are~you~Mulan?", 1);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("How~are~things~going,~now?", 10);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Tell~me~all~you~know.", 20);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("General~Armand~sent~me~here.", 30);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Is~anything~wrong?", 40);

                        data.AddOption("You~did~have~a~great~mind!", 255);
                        data.AddAvatar(1).FinalizeDialog();
                        break;
                    }
                case 40:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Did you see my father? No? Come on, I should keep my mind on combat. Please go to the Fishing Village and tell Harriet `I`m fine`, okay? Just that.")
.AddOption("I`m~on~my~way.", 255)
.AddAvatar(1).FinalizeDialog();

                            break;
                        }
                        data.AddText("No, I`m fine. I`m glad to hear that, and I really want to join the army, but I know I`m not strong enough. So, I decided to stay here and keep practicing.")
                            .AddText("~The only thing I worry about is my father. It`s just too early to return home. Could you do me a favor and go tell my father about my situation?")
                            .AddOption("No~problem.", 41)
                            .AddOption("I~have~more~important~things.", 255)
                            .AddAvatar(1).FinalizeDialog();

                        break;
                    }
                case 41:
                    {
                        client.CreateBoxDialog("You~need~to~go~tell~Harriet~about~Mulan`s~situation~and~comfort~him.");
                        client.Player.QuestGUI.Accept(ActiveQuest5, 0);
                        break;
                    }
                case 30:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
       .AddOption("Let me check.", 255).AddAvatar(1).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                        {
                            client.Inventory.Add(stream, 150197, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~received~20~minutes~of~EXP,~2,000~Silver~and~a~Diamond~Ring(B)!");
                            client.IncreaseExperience(stream, 3719000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);

                            data.AddText("Really? General Armand asked me to return to the army? That`s wonderful! Wait... Um... I think I need more time to consider it.")
.AddOption("Alright.", 40)
.AddAvatar(1).FinalizeDialog();
                        }

                        break;
                    }

                case 20:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Why are you still here? You haven`t informed General Armand of the Banditti`s plan, have you? It`s an emergency! Please be quick!")
.AddOption("I`m~on~my~way.", 255)
.AddAvatar(1).FinalizeDialog();

                            break;
                        }
                        data.AddText("Hush! When I was looking for the Royal Sword, I found the Banditti plotted to ally with the Bandits L98 and attack the army from the back. If their plan succeeds, you")
                                        .AddText("~know what it means to the whole island. It will be a disaster! Could you go inform General Armand? Hurry up!")
        .AddOption("I`ll~do~it,~right~now.", 21)
        .AddOption("Why~not~tell~him~by~yourself?", 255)
        .AddAvatar(1).FinalizeDialog();
                        break;
                    }
                case 21:
                    {
                        client.CreateBoxDialog("You~need~to~tell~General~Armand~about~the~Banditti`s~plan~within~2~minutes.~Hurry!");
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(711475, 1))
                            {
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                                {
                                    client.Inventory.Remove(711475, 1, stream);
                                    client.CreateBoxDialog("You~received~40~minutes~of~EXP~and~4,000~Silver!");
                                    client.IncreaseExperience(stream, 3719000);
                                    client.Player.Money += 3000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);

                                    data.AddText("Yeah, that`s my Royal Sword! Without your help, I don`t even know how to face my father. I`ll be more cautious with those cunning Banditti. However, I feel I`m not")
                                        .AddText("~their real target.")
        .AddOption("You`d~better~return~home,~now.", 20)
        .AddAvatar(1).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Did you find the Royal Sword? No? My father will be angry with me, and he won`t forgive me. He treats that sword as his life. What can I do now?")
.AddOption("I`ll~go~look~for~it,~again.", 255)
.AddAvatar(1).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("Um... Not very well. General Armand found out I was a girl soon after I arrived the camp. Although he didn`t reveal my true identity, he forced me to leave...")
.AddOption("Then~you~should~return~home.", 11)
.AddAvatar(1).FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        data.AddText("I`ve thought of that, but I can`t return now, since the Royal Sword was taken by the Banditti. If they weren`t hiding in the dark, I wouldn`t be caught so easily.")
                            .AddText("~Anyway, I should take back the sword. You know, that was given by the Emperor to commemorate my father`s military exploits. It`s very important for my family.")

.AddOption("Don`t~worry.~I`ll~go~find~it.", 12)
.AddOption("That`s~terrible.", 255)
.AddAvatar(1).FinalizeDialog();
                        break;
                    }
                case 12:
                    {
                        client.CreateBoxDialog("You~need~to~kill~the~Banditti~to~retrieve~the~Royal~Sword.");
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
                case 1:
                    {

                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
       .AddOption("Let me check.", 255).AddAvatar(1).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.AddItemWitchStack(723340, 0, 1, stream);
                            client.CreateBoxDialog("You~received~30~minutes~of~EXP,~3,000~Silver~and~a~Diligence~Book!");
                            client.IncreaseExperience(stream, 3719000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);

                            data.AddText("How do you know my name? Did my father send you here? Alright. You don`t need to try and persuade me, since I won`t return home before realizing my father`s dream.")
.AddOption("You`re~the~dream~of~Harriet.", 10)
.AddAvatar(1).FinalizeDialog();
                        }

                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.Harriet)]
        public static void Harriet(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.Harriet, client.Player.Class, 1643);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Harriet, client.Player.Class, 1644);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Mulan, client.Player.Class, 1649);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Harriet, client.Player.Class, 1652);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("Alas, you can`t understand how sad I was when I was forced to leave the army, due to injuries. You know, the battlefield was where my dream started.")
                            .AddText("~But now, I can only play with my hoe on the farm. Son? I don`t have a son, but a daughter. Haha, you must be kidding! How could a girl join the army? It`s illegal.");

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Where~is~Mulan?", 1);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Mulan?", 10);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("I~found~Mulan.", 20);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Flower~Wine.", 30);
                        data.AddOption("Take~it~easy.", 255);
                        data.AddAvatar(10).FinalizeDialog();
                        break;
                    }
                case 30:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(711477, 1))
                            {
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                                {

                                    client.Inventory.Remove(711477, 1, stream);
                                    uint[] Items = new uint[]
                                {
                                    (uint)(700000 + (uint)Role.Flags.Gem.RefinedDragonGem)
                                    ,(uint)(700000 + (uint)Role.Flags.Gem.RefinedFuryGem)
                                    ,(uint)(700000 + (uint)Role.Flags.Gem.RefinedGloryGem)
                                    ,(uint)(700000 + (uint)Role.Flags.Gem.RefinedKylinGem)
                                    ,(uint)(700000 + (uint)Role.Flags.Gem.RefinedMoonGem)
                                    ,(uint)(700000 + (uint)Role.Flags.Gem.RefinedPhoenixGem)
                                    ,(uint)(700000 + (uint)Role.Flags.Gem.RefinedRainbowGem)
                                    ,(uint)(700000 + (uint)Role.Flags.Gem.RefinedThunderGem)
                                    ,(uint)(700000 + (uint)Role.Flags.Gem.RefinedTortoiseGem)
                                    ,(uint)(700000 + (uint)Role.Flags.Gem.RefinedVioletGem)
                                };
                                    uint ItemID = Items[(uint)Program.GetRandom.Next(0, Items.Length)];
                                    client.Inventory.Add(stream, ItemID, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                    client.CreateBoxDialog("You~received~40~minutes~of~EXP,~4,000~Silver~and~a~Refined~Gem!");
                                    client.IncreaseExperience(stream, 3719000);
                                    client.Player.Money += 2000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                    data.AddText("Is that Flower Wine in your hands? It really smells nice! Owing to your help, I can have a taste of the Flower Wine, again. Why not drink with me?")
        .AddOption("No,~thanks.", 255)
        .AddAvatar(10).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("You haven`t found the Flower Wine? What a pity! You know I haven`t had a good night since I smelt that bouquet. Could you understand?")
                          .AddOption("I`ll~go~check,~again.", 255)
                          .AddAvatar(10).FinalizeDialog();
                            }

                            break;
                        }
                        data.AddText("Hey! Do you smell something nice? It must be the Flower Wine! I bet this good bouquet is from the Banditti in the west. Eh... When did I drink Flower Wine last?")
                                  .AddText("~Perhaps, 2 or 3 years ago... That`s really an unforgettable taste. If you are able to bring me some Flower Wine, I`d be very grateful.")
                            .AddOption("No~problem!~Haha...", 31)
                            .AddAvatar(10).FinalizeDialog();
                        break;
                    }
                case 31:
                    {
                        client.CreateBoxDialog("You~need~to~kill~the~Banditti~to~collect~the~Flower~Wine.");
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        break;
                    }
                case 20:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                        {

                            client.Inventory.Add(stream, 160197, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~received~20~minutes~of~EXP,~2,000~Silver~and~a~pair~of~Unique~Kylin~Boots(B)!");
                            client.IncreaseExperience(stream, 3719000);
                            client.Player.Money += 2000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);

                            data.AddText("Really? Where is she now? Why didn`t you bring her home? Wait, wait... You mentioned that General Armand appreciated her effort and wanted to recruit her in the army?")
                                .AddText("~Is that true? Oh, my dear daughter! In that case, I don`t need to force her to return home. I just hope Mulan will be safe and happy.")
.AddOption("I~hope~so,~too.", 255)
.AddAvatar(10).FinalizeDialog();
                        }
                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("You can`t find Mulan? Alas! What should I do? She is my only child... If she was caught by the bandits on the Island, I wouldn`t dare to continue living alone.")
                                .AddText("~Please, go look for her, again.")
     .AddOption("Okay.~I~will.", 255)
     .AddAvatar(10).FinalizeDialog();
                            break;
                        }
                        data.AddText("Yeah, that`s my daughter. Wait, that`s Mulan who bought me the wine... and she mentioned my dream, last night. Could this silly girl be thinking of joining the army for")
                                       .AddText("~me? Oh, no! If the general finds out, she will be put to death! I can`t move that fast, so I wonder whether you can go find her? Please, bring")
                                       .AddText("~her home! I won`t mention my military dreams, anymore.")
   .AddOption("I`ll~go~look~for~her.", 11)
   .AddOption("I~have~more~important~things.", 255)
   .AddAvatar(10).FinalizeDialog();

                        break;
                    }
                case 11:
                    {
                        client.CreateBoxDialog("You~need~to~look~for~Mulan~and~advise~her~to~return~home.");
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);

                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(1002030, 1))
                            {
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                                {
                                    client.Inventory.Remove(1002030, 1, stream);
                                    client.Inventory.AddItemWitchStack(1002010, 0, 5, stream);
                                    client.CreateBoxDialog("You~received~30~minutes~of~EXP,~3,000~Silver~and~5~Ginsengs!");
                                    client.IncreaseExperience(stream, 3719000);
                                    client.Player.Money += 3000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);

                                    data.AddText("Yeah, this is what I need. Don`t worry, I feel better now. Without you, I should have died at home. By the way, did you see Mulan?")
                                        .AddText("~How can she leave me at home, alone!")
    .AddOption("Anyway,~you~are~fine~now.", 10)
    .AddAvatar(10).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Where is the Refreshing Pill? You know where the Storekeeper is, right? Go buy a Refreshing Pill from her. I`m in urgent need of one to cure my headache.")
      .AddOption("I`m~on~my~way.", 255)
      .AddAvatar(10).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("Yeah, where is my daughter? Mulan? Mulan? Gods, this headache is killing me. I must have drank too much, last night. Could you do me a favor and buy me a Refreshing Pill?")
                         .AddText("~I`m sure you can get one from the Storekeeper. Be quick!")
    .AddOption("Okay.~I`ll~be~back~soon!", 2)
    .AddOption("Sorry,but~I~don`t~carry~money.", 255)
    .AddAvatar(10).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        client.CreateBoxDialog("You~need~to~buy~a~Refreshing~Pill~from~the~Storekeeper~for~Harriet.");
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.TempestSecretLetter)]
        public static void TempestSecretLetter(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {

            if (!client.Inventory.Contain(3006393, 1))
            {
                //Sun~Diamond,~Moon~Diamond,~Star~Diamond~and~Cloud~Diamond
                client.CreateBoxDialog("Sorry, you don`t have a TempestSecretLetter.");
                return;
            }



            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("Taskmaster Chang (JobCenter 51,49) has news about the legendary talisman, Tempest Wings.")
                             .AddText("~If you`re interested, pay a visit to him.")
                          .AddOption("Visit~Taskmaster~Chang.", 1)
                          .FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        client.SendSysMesage("You received 30 minutes of EXP!", MsgMessage.ChatMode.System);
                        client.GainExpBall(300, false);
                        client.Player.QuestGUI.SendAutoPatcher(1004, 51, 49, (uint)NpcID.TaskmasterChang);
                        client.Inventory.Remove(3006393, 1, stream);
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.BiVillageHead)]
        public static void BiVillageHead(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.BiVillageHead, client.Player.Class, 1633);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.BiVillageHead, client.Player.Class, 1634);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.BiVillageHead, client.Player.Class, 1641);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.BiVillageHead, client.Player.Class, 1650);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)NpcID.GeneralArmand, client.Player.Class, 1639);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("Here, our way is simple and people are hardworking. But since the Bandits L97 came, peace is no longer with us. Monsters from other islands continuously")
                            .AddText("threaten to destroy our village. As the head of this village, I should take full responsibility to protect the people, here. However, all of the strong villagers")
                            .AddText("~have been drafted into the army. How could I lead the weak that were left to fight against the cruel bandits?");



                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Hey!~You~have~me,~now!", 1);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("~Food~Delivery~!", 10);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Hunting~Bandits~L98.", 20);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Hidden~Banditti.", 30);


                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Return~Favors.", 40);

                        data.AddOption("It`s~terrible...", 255);
                        data.AddAvatar(56).FinalizeDialog();
                        break;
                    }
                case 40:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest5.MissionId))
                        {
                            client.Inventory.Remove(711471, 1, stream);
                            client.CreateBoxDialog("You~received~30~minutes~of~EXP~and~3,000~Silver!");
                            client.IncreaseExperience(stream, 5719000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            data.AddText("Really? Those bandits are still enjoying beer and women? Good. I`ll make this disorderly mob collapse at the first blow!")
                                .AddText("~Thanks for telling me!")
.AddOption("It`s~my~pleasure!", 255)
.AddAvatar(56).FinalizeDialog();
                        }
                        break;
                    }
                case 30:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest4.MissionId, 30))
                            {
                                if (!client.Inventory.HaveSpace(1))
                                {
                                    data.AddText("Please make 1 more space in your inventory.")
               .AddOption("Let me check.", 255).AddAvatar(35).FinalizeDialog();
                                    break;
                                }
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                                {
                                    client.Inventory.AddItemWitchStack(1002010, 0, 5, stream);
                                    client.CreateBoxDialog("You~received~40~minutes~of~EXP,~4,000~Silver~and~5~Ginsengs!");
                                    client.IncreaseExperience(stream, 5719000);
                                    client.Player.Money += 4000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                    data.AddText("Finally, we are rid of those Banditti! My hero, please wait! We have prepared a feast to thank you. Would you mind staying here and celebrating with us?")
        .AddOption("Thanks,~but~maybe~next~time.", 255)
        .AddAvatar(56).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("It seems you haven`t killed 30 Banditti, have you? Make haste, please! I hope you can restore peace to our village.")
                           .AddOption("I`m~on~my~way.", 255)
                           .AddAvatar(56).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("Oh, no! Someone told me 30 Banditti from the west and the northwest gathered outside the Fishing Village, again. It`s really annoying. Could you please go kill them?")
                            .AddOption("Don`t~worry.~It`s~on~me.", 31)
                            .AddAvatar(56).FinalizeDialog();
                        break;
                    }
                case 31:
                    {
                        client.CreateBoxDialog("You~need~to~kill~30~Banditti.");
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        break;
                    }
                case 20:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest3.MissionId, 30))
                            {
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                                {

                                    client.CreateBoxDialog("You~received~40~minutes~of~EXP~and~4,000~Silver!");
                                    client.IncreaseExperience(stream, 5719000);
                                    client.Player.Money += 4000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                    data.AddText("You`ve killed 30 Bandits L98? Great! It`s the SECOND time you saved our village! I can never thank you enough.")
        .AddOption("It`s~my~pleasure.", 255)
        .AddAvatar(56).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("It couldn`t be true. I`m sure those Bandits L98 are still watching our village, nearby. Please go check again, okay?")
                  .AddOption("Alright.", 255)
                  .AddAvatar(56).FinalizeDialog();
                            }


                            break;
                        }
                        data.AddText("It`s so good to see you! Those Bandits L97 haven`t give up their evil designs, and summoned lots of Bandits L98 from the desert. I can`t wait for them to rush")
                            .AddText("~our village. The best way to defend is to attack! One told me a group of Bandits L98 are lingering around. Could you go kill 30 Bandits L98 for us?")
                 .AddOption("Don`t~worry.~I~won`t~sit~back.", 21)
                 .AddAvatar(56).FinalizeDialog();

                        break;
                    }
                case 21:
                    {
                        client.CreateBoxDialog("You~need~to~kill~30~Bandits~L98.");
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("What? You didn`t find Alvis? It`s really worrying. According to his route, Alvis should be on the Central Island. Could you go there and check again?")
                    .AddOption("Alright.", 255)
                    .AddAvatar(56).FinalizeDialog();
                            break;
                        }
                        data.AddText("Um... It has been more than 15 days since Alvis went to deliver the food supply to General Armand on the Central Island, and I received no reply back. It shouldn`t be more")
                            .AddText("~than 10 days, unless Alvis had some kind of accident. Could you do me a favor and go have a look?")
                        .AddOption("Yeah,~I`m~on~it.", 11)
                        .AddOption("I~have~more~important~things.", 255)
                        .AddAvatar(56).FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        client.CreateBoxDialog("You~need~to~go~to~the~Central~Island~and~find~Alvis~around~(324,192).");
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 50))
                            {
                                if (!client.Inventory.HaveSpace(1))
                                {
                                    data.AddText("Please make 1 more space in your inventory.")
               .AddOption("Let me check.", 255).AddAvatar(35).FinalizeDialog();
                                    break;
                                }
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                                {

                                    client.CreateBoxDialog("You~received~40~minutes~of~EXP,~4,000~Silver~and~an~EXP~Ball~Scrap!");
                                    client.Inventory.AddItemWitchStack(720172, 0, 1, stream);
                                    client.IncreaseExperience(stream, 3719000);
                                    client.Player.Money += 3000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                    data.AddText("Great job! I really don`t know how to thank you. You saved the whole village!")
        .AddOption("It`s~my~pleasure.", 255)
        .AddAvatar(56).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Have you killed 50 Bandits L97? It seems the answer is no... Look, if you just kill a few of them, you will find that you`re only provoking them.")
                                    .AddText("~Then, these bullies will take more revenge on us. I hope you can keep your promise to protect us from start to finish. You know, the bandits are on the")
                                    .AddText("~Central Island.")
                                    .AddOption("Okay.~I`m~on~my~way.", 255)
                                    .AddAvatar(56).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("You? I believe you are an able body, but there are many bandits, and all our young men have been drafted into the army. Are you sure you can deal with those brutes alone?")
                          .AddOption("Right.~You~can~count~on~me!", 2)
                          .AddOption("I~guess~I~was~too~impulsive...", 255)
                          .AddAvatar(56).FinalizeDialog();
                        break;
                    }
                case 2:
                    {

                        data.AddText("It`s very kind of you! So, can you go kill 50 Bandits L97 on the Central Island, now? I suppose that is the best way to scare the other bandits away.")
                         .AddOption("Great!~I`m~going...", 3)
                         .AddAvatar(56).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        client.CreateBoxDialog("You~need~to~go~kill~50~Bandits~L97~on~the~Central~Island.");
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.AdjutantLi)]
        public static void AdjutantLi(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.OldZhang, client.Player.Class, 1640);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.AdjutantLi, client.Player.Class, 6131);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("Hey! You seem like an able body. Why not join the army? I`ll recommend you to the general!");



                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("I~came~to~deliver~gifts.", 1);

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Deadly~Trap.", 10);

                        data.AddOption("You~must~be~kidding.~Bye!", 255);
                        data.AddAvatar(10).FinalizeDialog();

                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(720995, 1) && client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 1))
                            {
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                                {
                                    client.Inventory.Remove(720995, 1, stream);
                                    client.CreateBoxDialog("You~received~20~minutes~of~EXP~and~2,000~Silver!");
                                    client.IncreaseExperience(stream, 3719000);
                                    client.Player.Money += 2000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                    data.AddText("How are things going, now? Really? Those stupid Bandits L98 ate up all the Salted Fish? Aha, now we just need to wait and clear their bodies away from our land!")
                                        .AddText("~Did I say thank you? You`re incredible useful!")
        .AddOption("It`s~my~pleasure.", 255)
        .AddAvatar(10).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Are you ready to carry out the `Deadly Plan`? Go poison the Bandits L98!")
.AddOption("I`m~on~my~way.", 255)
.AddAvatar(10).FinalizeDialog();
                            }

                            break;
                        }
                        data.AddText("Buddy, I got a great idea to eliminate the Bandits L98! As you know, people here love the Salted Fish very much, including the Bandits L98. If they eat poisonous Salted Fish, things will be")
                                .AddText("~easy for us. You agree with me, right? Then, I`ll count you in the plan. Look, this is a bottle of Poison Liquid. I want you to take a pack of Salted Fish from Old Zhang,")
                                .AddText("~then use the Poison Liquid on the Salted Fish. When the liquid diffuses into the Salted Fish completely, you can entice the Bandits L98 to eat the Poison Fish. They`ll never see it coming!")
                                .AddText("~So?")
.AddOption("Got~it,~sir!", 11)
.AddAvatar(10).FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
.AddOption("Let me check.", 255)
.AddAvatar(10).FinalizeDialog();
                            break;
                        }
                        client.Inventory.Add(stream, 720994);
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Remove(711472, 1, stream);
                            client.Inventory.Remove(711473, 1, stream);
                            client.CreateBoxDialog("You~received~30~minutes~of~EXP,~3,000~Silver~and~a~Defense~Pot~(20m)!");
                            client.Inventory.AddItemWitchStack(723017, 0, 1, stream);
                            client.IncreaseExperience(stream, 3719000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            data.AddText("Gifts? Wow, the Salted Fish smells so good! It`s very kind of the people from the Fishing Village! We are just doing our jobs.")
                                .AddText("~And what`s that? A Fishing Net? Yeah, we can use this net to make Salted Fish by ourselves! Old Zhang is so considerate.")
.AddOption("I`m~glad~you~like~them.", 255)
.AddAvatar(10).FinalizeDialog();
                        }
                        break;
                    }

            }
        }
        public static void BandittiFlowers(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.OldZhang, client.Player.Class, 1653);
            if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
            {
                client.Player.AddPick(stream, "CollectingRainbowFlower", 2);

            }
        }
        [NpcAttribute(NpcID.OldZhang)]
        public static void OldZhang(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.OldZhang, client.Player.Class, 1640);//1631);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.OldZhang, client.Player.Class, 1653);

            switch (Option)
            {
                case 0:
                    {

                        data.AddText("Greetings! Have you ever tasted this Salted Fish? You should never miss this special food, when you come to our Fishing Village. Suppose you are eating a dried fish")
                            .AddText("~with the right salty taste, what would you think? You can even feel the warm sunshine and refreshing sea wind while eating! That`s amazing, right?");


                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Can~I~have~a~taste?", 1);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Rainbow~Flowers.", 10);

                        data.AddOption("Yes,~indeed.", 255);
                        data.AddAvatar(56).FinalizeDialog();
                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(711478, 10))
                            {
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                                {
                                    client.Inventory.Remove(711478, 10, stream);
                                    client.CreateBoxDialog("You~received~40~minutes~of~EXP~and~4,000~Silver!");
                                    client.IncreaseExperience(stream, 3719000);
                                    client.Player.Money += 4000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                    data.AddText("Yeah, these flowers are exactly what I am looking for. Actually, the Rainbow Flower is my secret! By chance, I found the bait made from the Rainbow Flowers and rice would")
                                        .AddText("~attract more fish. Now, I`ve told you all I know. Promise you won`t tell anyone, okay?")
        .AddOption("I~swear~I~won`t.", 255)
        .AddAvatar(111).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Just as its name indicates, the Rainbow Flower shows bright colors in the sun. So, you can easily recognize them. Remember to bring me 10 Rainbow Flowers!")
                       .AddOption("No~problem.", 255)
                       .AddAvatar(56).FinalizeDialog();
                            }

                            break;
                        }
                        data.AddText("Speaking of fishing skill, no one in the village is better than me. Haha, alright. I`ll tell you my secret, if you are able to bring me 10 Rainbow Flowers from the")
                         .AddText("~West Island and the Northwest Island. So, what do you say?")
                            .AddOption("Okay.~I`ll~be~back~soon!", 11)
                            .AddAvatar(56).FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        client.CreateBoxDialog("You~need~to~collect~10~Rainbow~Flowers~from~the~West~Island~and~the~Northwest~Island.");
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("The gift itself may be small, but the goodwill is deep. Remember to express my sincere gratitude to Adjutant Li on the Central Island, too.")
                           .AddOption("They~will~understand.", 255)
                           .AddAvatar(56).FinalizeDialog();
                            break;
                        }
                        data.AddText("Of course! Here you are. How is the taste? I knew you would like it! By the way, did you notice the soldiers on the Central Island? They came to eliminate the")
                              .AddText("~bandits. I do appreciate their effort. Could you send this bag of Salted Fish to Adjutant Li of the army?")
                            .AddOption("No~problem.~Anything~else?", 2)
                            .AddOption("I~have~more~important~things..", 255)
                            .AddAvatar(56).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        data.AddText("Yeah, and this Fishing Net. They can go fishing in their free time. Hope they like the Salted Fish!")
                             .AddOption("You`re~very~kind.", 3)
                             .AddAvatar(56).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        client.CreateBoxDialog("You~need~to~send~the~Fishing~Net~and~Salted~Fish~to~Adjutant~Li.");
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.FishingNet)]
        public static void FishingNet(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {

            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.OldZhang, client.Player.Class, 1640);
            if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
            {
                client.Player.AddPick(stream, "FishingNet", 3);
            }

        }
        [NpcAttribute(NpcID.SaltedFish)]
        public static void SaltedFish(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {

            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.OldZhang, client.Player.Class, 1640);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.AdjutantLi, client.Player.Class, 6131);
            if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
            {
                client.Player.AddPick(stream, "SaltedFish", 3);
            }
            if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
            {
                client.Player.AddPick(stream, "SaltedFish", 3);
            }
        }
        [NpcAttribute(NpcID.SoldiersMother)]
        public static void SoldiersMother(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.SoldierZhang, client.Player.Class, 1631);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.SoldiersMother, client.Player.Class, 1632);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.SoldiersMother, client.Player.Class, 1651);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("My son has been away from home for almost 2 years. I`m really worried about him. I hope")
                            .AddText("~he can come back to me, soon.");

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Soldier`s~Letter.", 1);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Retrieve~Bacon.", 10);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Retrieve~Yarn~Ball.", 20);

                        data.AddOption("He`ll~be~back.", 255);
                        data.AddAvatar(111).FinalizeDialog();
                        break;
                    }
                case 20:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(711476, 1))
                            {
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                                {
                                    client.Inventory.Remove(711476, 1, stream);
                                    client.CreateBoxDialog("You~received~40~minutes~of~EXP~and~4,000~Silver!");
                                    client.IncreaseExperience(stream, 3719000);
                                    client.Player.Money += 4000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                    data.AddText("That`s the Yarn Ball! I believe my son will be more handsome if he wears the new clothes.")
                                        .AddText("~I hope he`ll come back, soon.")
        .AddOption("He`ll~be~back,~soon.", 255)
        .AddAvatar(111).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Hurry up! My son is still wearing the old clothes he wore on the day he left home! That just won`t do!")
 .AddOption("Ok.", 255)
 .AddAvatar(111).FinalizeDialog();
                            }

                            break;
                        }
                        data.AddText("Brave hero, please help me! I want to make new clothes for my son, but the Yarn Ball was stole by a Banditti.")
                            .AddText("~Could you help me retrieve it?")
  .AddOption("Ok.", 21)
  .AddOption("Sorry~but~I`m~busy.", 255)
  .AddAvatar(111).FinalizeDialog();
                        break;
                    }
                case 21:
                    {
                        client.CreateBoxDialog("Kill~the~Banditti~and~retrieve~the~Yarn~Ball.");
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(711467, 5))
                            {
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                                {
                                    client.Inventory.Remove(711467, 5, stream);
                                    client.CreateBoxDialog("Congratulations!~You~received~40~minutes~of~Exp,~4,000~silver~and~1~Diligence~Book!");
                                    client.Inventory.AddItemWitchStack(723340, 0, 1, stream);
                                    client.IncreaseExperience(stream, 3719000);
                                    client.Player.Money += 4000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                    data.AddText("Thank you for retrieving the bacon for me. If my son was home, the monsters wouldn`t have stolen my things so easily.")
        .AddOption("Take~care.", 255)
        .AddAvatar(111).FinalizeDialog();
                                }
                            }

                            else
                            {

                            }

                            break;
                        }
                        data.AddText("A few days ago, several Bandits stole my bacon, and I`m running out of food! Could you")
                            .AddText("~please help me retrieve some of my lost bacon?")
.AddOption("Ok.", 11)
.AddOption("Sorry,~but~I`m~busy.", 255)
.AddAvatar(111).FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        client.CreateBoxDialog("Help~Soldier`s~Mother~retrieve~5~pieces~of~Bacon~from~the~BanditL97.");
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Remove(711466, 1, stream);
                            client.CreateBoxDialog("Congratulations!~You~received~30~minutes~of~Exp,~3,000~silver~and~1~Small~Joy~Stone!");
                            client.Inventory.AddItemWitchStack(720173, 0, 1, stream);
                            client.IncreaseExperience(stream, 3719000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            data.AddText("What? A letter from my son? I feel much better now, since he says everything is fine. Thank you!")
.AddOption("You`re~welcome.", 255)
.AddAvatar(111).FinalizeDialog();
                        }

                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.SoldierZhang)]
        public static void SoldierZhang(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.SoldierZhang, client.Player.Class, 1623);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.SoldierZhang, client.Player.Class, 1630);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.SoldierZhang, client.Player.Class, 1631);

            switch (Option)
            {
                case 0:
                    {

                        data.AddText("The HawKings are so terrible...");

                        if (!client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            data.AddOption("Can~I~help~you?", 1);
                        if (!client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            data.AddOption("Revenge", 10);
                        if (!client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            data.AddOption("Soldier`s~Letter.", 30);
                        if (client.Player.QuestGUI.CheckQuest(10, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("An~accessory", 40);

                        data.AddOption("Be~careful.", 255);
                        data.AddAvatar(35).FinalizeDialog();
                        break;
                    }
                case 40:
                    {
                        if (client.Player.QuestGUI.CheckQuest(10, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            client.Player.QuestGUI.Accept(new Database.QuestInfo.DBQuest() { MissionId = 10, Intentions = 1 }, 0);
                        if (client.Player.QuestGUI.FinishQuest(10))
                        {
                            client.CreateBoxDialog("Congratulations!~You~received~20~minutes~of~Exp,~2,000~silver~and~1~Diligence~Book!");
                            client.Inventory.AddItemWitchStack(723340, 0, 1, stream);
                            client.IncreaseExperience(stream, 3719000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            data.AddText("What? You got it from a soldier`s corpse? No! It must be my brother. I have a same one like this. Thank you, anyway.")
.AddOption("Take~care.", 255)
.AddAvatar(35).FinalizeDialog();
                        }
                        break;
                    }
                case 30:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Please bring this letter to my mother. My home is on north Fishpond Island.")
      .AddOption("Ok.", 255).AddAvatar(35).FinalizeDialog();
                            break;
                        }
                        data.AddText("I`ve been here for 2 years, and never went back home. My old mother lives alone, on north Fishpond Island.")
       .AddOption("Do~you~miss~her?", 31).AddAvatar(35).FinalizeDialog();
                        break;
                    }
                case 31:
                    {
                        data.AddText("Of course. But the only thing I can do is to pray that she is healthy. Could you please give this letter")
                            .AddText("~to her? I want my mother to know everything is good, here.")
   .AddOption("Ok.", 32)
   .AddOption("Sorry,~but~I`m~busy.", 255).AddAvatar(35).FinalizeDialog();
                        break;
                    }
                case 32:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
       .AddOption("Let me check.", 255).AddAvatar(35).FinalizeDialog();
                            break;
                        }
                        client.Inventory.Add(stream, 711466);
                        client.CreateBoxDialog("Send~the~soldier`s~letter~to~his~mother.");
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 30, 20))
                            {
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                                {
                                    client.CreateBoxDialog("Congratulations!~You~received~30~minutes~of~Exp,~3,000~silver~and~5~Ginseng!");
                                    client.Inventory.AddItemWitchStack(1002010, 0, 5, stream);
                                    client.IncreaseExperience(stream, 3719000);
                                    client.Player.Money += 3000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                    data.AddText("You killed the monsters, but my friends still won`t come back... Thanks for your help, anyway.")
        .AddOption("Good~luck.", 255)
        .AddAvatar(35).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Kill the Hawks! That`s the only way to avenge my dead friends.")
                                             .AddOption("Ok.", 255).AddAvatar(35).FinalizeDialog();
                            }

                            break;
                        }
                        data.AddText("I`m dreaming of my dead friends, everyday. Just painful... How I wish I could avenge them! But I`m just too")
                            .AddText("~weak to kill the Hawks, myself. Could you please kill 30 HawKings and 20 HawkL93 for me?")
             .AddOption("Ok.", 11)
             .AddOption("Sorry,~but~I`m~busy.", 255).AddAvatar(35).FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        client.CreateBoxDialog("Kill~30~HawKings~and~20~HawkL93.");
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 5))
                            {
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                                {
                                    client.CreateBoxDialog("You~received~30~minutes~of~EXP~and~3,000~Silver!");
                                    client.IncreaseExperience(stream, 3719000);
                                    client.Player.Money += 3000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                    data.AddText("You did it! Thank you very much! Rest in peace, my friends...")
        .AddOption("You`re~welcome.", 255)
        .AddAvatar(35).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Hurry up! I hope that they will rest in peace!")
                .AddOption("Ok.", 255).AddAvatar(35).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("This war was so awful. Though we won, many soldiers died during the war. Could you please kill some HawkL93")
                  .AddText("~and collect their heads? I want you to cremate the heads and dead soldiers` bodies as a memorial.")
                  .AddOption("Okay.", 2)
                  .AddOption("Sorry~but~I`m~busy.", 255).AddAvatar(35).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        client.CreateBoxDialog("Collect~5~heads~of~the~HawkL93~and~cremate~them~with~dead~soldiers`~bodies.");
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        break;
                    }

            }
        }
        public static void SoldierBird(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.SoldierZhang, client.Player.Class, 1623);

            if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
            {
                switch (Option)
                {
                    case 0:
                        {

                            data.AddText("Are you sure you want to burn the Soldier`s Corpse and the Hawk Head?");

                            if (!client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                                data.AddOption("Yes.", 1);

                            data.AddOption("No.", 255);
                            data.AddAvatar(35).FinalizeDialog();
                            break;
                        }
                    case 1:
                        {
                            client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 1);
                            Game.MsgServer.MsgStringPacket packet = new Game.MsgServer.MsgStringPacket();
                            packet.ID = MsgStringPacket.StringID.Effect;
                            packet.UID = client.OnRemoveNpc.UID;
                            packet.Strings = new string[1] { "M_Fire1" };
                            client.Player.View.SendView(stream.StringPacketCreate(packet), true);


                            client.OnRemoveNpc.Respawn = Extensions.Time32.Now.AddSeconds(10);
                            client.Map.RemoveNpc(client.OnRemoveNpc, stream);
                            client.Map.soldierRemains.TryAdd(client.OnRemoveNpc.UID, client.OnRemoveNpc);

                            break;
                        }
                }
            }
        }
        [NpcAttribute(NpcID.MysteryTaoist)]
        public static void MysteryTaoist(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TruthTaoist, client.Player.Class, 1619);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.MysteryTaoist, client.Player.Class, 1622);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.MysteryTaoist, client.Player.Class, 1624);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.MysteryTaoist, client.Player.Class, 1625);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)NpcID.MysteryTaoist, client.Player.Class, 1626);
            var ActiveQuest6 = Database.QuestInfo.GetFinishQuest((uint)NpcID.MysteryTaoist, client.Player.Class, 1627);
            var ActiveQuest7 = Database.QuestInfo.GetFinishQuest((uint)NpcID.MysteryTaoist, client.Player.Class, 1628);
            var ActiveQuest8 = Database.QuestInfo.GetFinishQuest((uint)NpcID.MysteryTaoist, client.Player.Class, 1629);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("So my brother sent you here? The HawKings are really a great trouble to us. I will kill as many as possible.");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("I`ll~stop~them", 1);

                        if (!client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            data.AddOption("Claws~and~Fangs.", 10);

                        if (!client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            data.AddOption("Hawk`s~Treasure.", 20);
                        else if (!client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            data.AddOption("Hawk`s~Treasure~2.", 30);

                        if (!client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            data.AddOption("Elemental~Circle.", 40);
                        else if (!client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            data.AddOption("Elemental~Circle~2.", 50);
                        else if (!client.Player.QuestGUI.CheckQuest(ActiveQuest7.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            data.AddOption("Elemental~Circle~3.", 60);
                        else if (!client.Player.QuestGUI.CheckQuest(ActiveQuest8.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            data.AddOption("Elemental~Circle~4.", 70);

                        data.AddOption("Good~luck.", 255);
                        data.AddAvatar(35).FinalizeDialog();
                        break;
                    }
                case 70:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest8.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest8.MissionId, 1))
                            {
                                if (!client.Inventory.HaveSpace(1))
                                {

                                    data.AddText("Please make 1 more space in your inventory.")
                                          .AddOption("Let me check.", 255).AddAvatar(35).FinalizeDialog();
                                    break;
                                }
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest8.MissionId))
                                {
                                    client.Inventory.Add(stream, 120187, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                    client.CreateBoxDialog("Congratulations!~You~received~30~minutes~of~Exp,~3,000~silver~and~a~Level~97~Unique~necklace~(B)!");
                                    client.IncreaseExperience(stream, 3719000);
                                    client.Player.Money += 3000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                    data.AddText("Without their leader, the Hawks will be easily destroyed. Thanks for your help!")
        .AddOption("You`re~welcome.", 255)
        .AddAvatar(35).FinalizeDialog();
                                }
                            }
                            else
                            {
                                if (client.Player.View.ContainMobInScreen("HawkLeader") == false)
                                    Database.Server.AddMapMonster(stream, client.Map, 4431179, client.Player.X, client.Player.Y, 8, 8, 1, 0, true, MsgFloorItem.MsgItemPacket.EffectMonsters.Night);

                                data.AddText("Sorry, but I`m busy activating the elemental circle.")
      .AddOption("Good~luck!", 255)
      .AddAvatar(35).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("Once the elemental circle is activated, the leader of the Hawks will appear. He will disappear after 1 minute,")
                     .AddText("~so you`ll need to hurry! Are you ready?")
                     .AddOption("Yes.", 71)
                     .AddOption("Sorry~but~I`m~busy.", 255).AddAvatar(35).FinalizeDialog();
                        break;
                    }
                case 71:
                    {
                        if (client.Player.View.ContainMobInScreen("HawkLeader") == false)
                            Database.Server.AddMapMonster(stream, client.Map, 4431179, client.Player.X, client.Player.Y, 8, 8, 1, 0, true, MsgFloorItem.MsgItemPacket.EffectMonsters.Night);

                        client.CreateBoxDialog("Kill~the~Leader~of~the~Hawks~within~1~minute,~after~the~elemental~circle~is~activated.~Are~you~ready?");
                        client.Player.QuestGUI.Accept(ActiveQuest8, 100);
                        break;
                    }
                case 60:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest7.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest7.MissionId, 10))
                            {
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest7.MissionId))
                                {
                                    client.Inventory.Remove(711465, 1, stream);
                                    client.Inventory.AddItemWitchStack(1002000, 0, 5, stream);
                                    client.CreateBoxDialog("Congratulations!~You~received~30~minutes~of~Exp,~3,000~silver~and~5~Panacea!");
                                    client.IncreaseExperience(stream, 3719000);

                                    client.Player.Money += 3000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                    data.AddText("Thanks for your help! The smell will lure the HawkL93 into the elemental circle, and then we can kill them all.")
        .AddOption("You`re~welcome.", 255)
        .AddAvatar(35).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("You haven`t collected 10 scents of the HawkL93. Hurry up!")
                                   .AddOption("I`m~on~my~way.", 255).AddAvatar(35).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("The elemental circle is finally complete! Now, I need you to collect 10 scents of the HawkL93.")
                        .AddText("~We can place the scent inside of the circle, to lure them into it. Here is a scent bag. You can use it to")
                        .AddText("~store the scent.")
                        .AddOption("Easy.", 61)
                        .AddOption("Sorry~but~I`m~busy.", 255).AddAvatar(35).FinalizeDialog();
                        break;
                    }
                case 61:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {

                            data.AddText("Please make 1 more space in your inventory.")
                                  .AddOption("Let me check.", 255).AddAvatar(35).FinalizeDialog();
                            break;
                        }
                        client.Inventory.Add(stream, 711465);
                        client.Player.QuestGUI.Accept(ActiveQuest7, 0);
                        client.CreateBoxDialog("Go~and~collect~10~scents~of~the~HawkL93.");
                        break;
                    }
                case 50:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest6.MissionId, 1))
                            {
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest6.MissionId))
                                {

                                    client.CreateBoxDialog("Congratulations!~You~received~30~minutes~of~Exp~and~3,000~silver!");
                                    client.IncreaseExperience(stream, 3719000);

                                    client.Player.Money += 3000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                    data.AddText("Great! Now I can focus on the elemental circle. Once complete, the HawKings will all be killed!")
        .AddOption("I`m~looking~forward~to~it.", 255)
        .AddAvatar(35).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Hurry up! We can`t give the HawKings the chance to disturb the summoning of the elemental circle.")
                          .AddOption("I~see.", 255).AddAvatar(35).FinalizeDialog();
                            }


                            break;
                        }
                        data.AddText("I`m ready to summon the elemental circle. Would you please go to the southern bridge and ask")
                           .AddText("~the Truth Taoist to prevent the HawKings from disturbing me? He may also need your help.")
                           .AddOption("Alright.", 51)
                           .AddOption("Sorry~but~I`m~busy.", 255).AddAvatar(35).FinalizeDialog();
                        break;
                    }
                case 51:
                    {
                        client.CreateBoxDialog("Go~and~talk~with~the~Truth~Taoist.");
                        client.Player.QuestGUI.Accept(ActiveQuest6, 0);
                        break;
                    }
                case 40:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(711461, 1) && client.Inventory.Contain(711462, 1)
                                && client.Inventory.Contain(711463, 1) && client.Inventory.Contain(711464, 1))
                            {
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest5.MissionId))
                                {
                                    client.Inventory.Remove(711461, 1, stream);
                                    client.Inventory.Remove(711462, 1, stream);
                                    client.Inventory.Remove(711463, 1, stream);
                                    client.Inventory.Remove(711464, 1, stream);
                                    client.Inventory.AddItemWitchStack(1060024, 0, 1, stream);

                                    client.CreateBoxDialog("Congratulations!~You~received~40~minutes~of~Exp,~4,000~silver~and~1~Bird~Island~Gate!");
                                    client.IncreaseExperience(stream, 3719000);

                                    client.Player.Money += 4000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                    data.AddText("Now I`ve got all 5 items! I hope the elemental circle will have a great effect. Thanks for your help!")
        .AddOption("You`re~welcome.", 255)
        .AddAvatar(35).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("You haven`t collect all the items I need. Hurry up!")
                          .AddOption("Ok.", 255).AddAvatar(35).FinalizeDialog();
                            }

                            break;
                        }
                        data.AddText("After a long time of studying, I`ve come up with an elemental circle that can lure out the leader of the")
                            .AddText("~HawKings. If we kill the leader, things will become easier! Could you lend me a hand?")
                            .AddOption("Of~course.", 41)
                            .AddOption("Sorry~but~I`m~busy.", 255).AddAvatar(35).FinalizeDialog();
                        break;
                    }
                case 41:
                    {
                        data.AddText("To complete the elemental circle, we need 5 items, each standing for an element. I`ve got the earth item. Could you please")
                           .AddText("~collect the Birdman`s golden beak, Ximen Qing`s wood sword, Cook Yuan`s water bag and Wealthy Wan`s gunpowder?")
                           .AddOption("Ok.", 42)
                           .AddOption("Sorry~but~I`m~busy.", 255).AddAvatar(35).FinalizeDialog();
                        break;
                    }
                case 42:
                    {
                        client.CreateBoxDialog("Collect~the~items~which~stand~for~the~gold,~water,~wood~and~fire~elements.");
                        client.Player.QuestGUI.Accept(ActiveQuest5, 0);
                        break;
                    }
                case 30:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(711460, 1))
                            {
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                                {
                                    client.Inventory.Remove(711460, 1, stream);
                                    client.Inventory.Add(stream, 152187);
                                    client.CreateBoxDialog("Congratulations!~You~received~30~minutes~of~Exp,~3,000~silver~and~a~Unique~Blue~Bracelet~(B)!");
                                    client.IncreaseExperience(stream, 3719000);

                                    client.Player.Money += 3000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                    data.AddText("These treasures were actually taken away from the people here. Now, we should return the treasures")
                                        .AddText("~to their owners. Thanks for your help!")
        .AddOption("You`re~welcome.", 255)
        .AddAvatar(35).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Hurry up! We must take away all the treasures before the Hawks notice it.")
                                .AddOption("Ok.", 255).AddAvatar(35).FinalizeDialog();
                            }

                            break;
                        }
                        data.AddText("Finally, we`ve got the location of the HawkL93`s treasure! It`s buried under the tree (445, 681).")
                                    .AddText("~Could you please go and dig it up? I`ll distribute what we make to the poor of the village.")
                                 .AddOption("Ok.", 31)
                                 .AddOption("Sorry,~but~I`m~busy.", 255).AddAvatar(35).FinalizeDialog();
                        break;
                    }
                case 31:
                    {
                        client.CreateBoxDialog("Find~the~tree~(445,~681)~and~dig~up~the~treasure.");
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);

                        break;
                    }
                case 20:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {

                            if (client.Inventory.Contain(711459, 1))
                            {
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                                {
                                    client.Inventory.Remove(711459, 1, stream);
                                    client.Inventory.AddItemWitchStack(1002010, 0, 5, stream);
                                    client.CreateBoxDialog("Congratulations!~You~received~30~minutes~of~Exp,~3,000~silver~and~5~Ginseng!");
                                    client.IncreaseExperience(stream, 3719000);
                                    client.Player.Money += 3000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                    data.AddText("Thanks for helping me reveal the truth, brave hero! Now, I just need some time to find out where the treasures are hidden.")
        .AddOption("You`re~welcome.", 255)
        .AddAvatar(35).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("This map may help us find some treasures, or even secrets of the HawkL93! Please go and")
                                    .AddText("~collect some blood of the hawks to reveal the secret of the map!")
                                 .AddOption("Okay.", 255).AddAvatar(35).FinalizeDialog();

                            }

                            break;
                        }
                        data.AddText("A few days ago, I accidently stumbled upon the HawkL93`s treasure map, but it is cursed that only the blood of the HawkL93")
   .AddText("~can reveal the true path. Could you help me collect some of their blood?")
                            .AddOption("I`ll~try~my~best.", 21)
                            .AddOption("Leave.", 255)
     .AddAvatar(35).FinalizeDialog();
                        break;
                    }
                case 21:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {

                            data.AddText("Please make 1 more space in your inventory.")
                                  .AddOption("Let me check.", 255).AddAvatar(35).FinalizeDialog();
                            break;
                        }
                        client.Inventory.Add(stream, 711458);
                        client.CreateBoxDialog("Collect~some~Hawk~Blood~to~reveal~the~secret~of~the~treasure~map.");
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {

                            if (client.Inventory.Contain(711456, 1) && client.Inventory.Contain(711457, 1))
                            {
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                                {
                                    client.Inventory.Remove(711456, 1, stream);
                                    client.Inventory.Remove(711457, 1, stream);
                                    client.Inventory.AddItemWitchStack(720173, 0, 1, stream);
                                    client.CreateBoxDialog("Congratulations!~You~received~30~minutes~of~Exp,~3,000~silver~and~1~Small~Joy~Stone!");
                                    client.IncreaseExperience(stream, 3719000);
                                    client.Player.Money += 3000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                    data.AddText("I will find out the weakness of the HawkL93 with all these things you collected for me. Thanks a lot!")
        .AddOption("You`re~welcome!", 255)
        .AddAvatar(35).FinalizeDialog();
                                }
                            }
                            else
                            {

                                data.AddText("If we have the claws and fangs of the HawkL93, we`ll know them better, and it will be much")
                                    .AddText("~easier to destroy them. Hurry up!")
    .AddOption("I~will.", 255)
    .AddAvatar(35).FinalizeDialog();

                            }
                            break;
                        }
                        data.AddText("The HawkL93 is strong and powerful. It`s very difficult to defeat them in a group. Could you please collect some of their claws and fangs?")
                            .AddText("~I want to know what makes them so undefeatable.")
                            .AddOption("Ok.", 11)
                            .AddOption("Sorry,~but~I`m~busy.", 255)
                            .AddAvatar(35).FinalizeDialog();

                        break;
                    }
                case 11:
                    {

                        client.CreateBoxDialog("Collect~the~claws~and~fangs~of~the~HawkL93.");
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Remove(720992, 5, stream);
                            client.CreateBoxDialog("Both~bridges~have~been~blocked~and~the~Haw~Kings~won`t~escape!~You`ve~received~EXP~worth~1/2~EXP~Ball~and~3,000~Silver!");
                            client.IncreaseExperience(stream, 3719000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            data.AddText("So you`re here to warn me? Thanks! Since the bridges have been blocked, the Haw Kings will not be able to escape!")
.AddOption("You`re~welcome.", 255)
.AddAvatar(35).FinalizeDialog();
                        }
                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.SoldierGuan)]
        public static void SoldierGuan(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.CookYuan, client.Player.Class, 1613);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.SoldierGuan, client.Player.Class, 1614);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("It`s boring to stay here all the time... How I miss the wine from the city!");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1) == false)
                                data.AddOption("Deliver~food.", 1);
                        }
                        if (!client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            data.AddOption("Soldier`s~Story", 10);


                        data.AddOption("I`m~just~passing~by.", 255);
                        data.AddAvatar(237).FinalizeDialog();
                        break;
                    }
                case 10:
                    {
                        data.AddText("Please talk to me! I`ve been here alone for such a long time. Do you want to hear my story?")
                          .AddOption("Tell~me.", 11)
                          .AddOption("Sorry,~but~I`m~busy.", 255)
                          .AddAvatar(237).FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        data.AddText("Haha. Actually, I was a general, once. The reason I`m here now is because I loved drinking so much that")
                            .AddText("~I always got drunk, even on duty. My superior sent me here as a punishment.")
                         .AddOption("Don`t~drink~too~much.", 12)
                         .AddAvatar(237).FinalizeDialog();

                        break;
                    }
                case 12:
                    {
                        if (!client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.SendSysMesage("Congratulations! You received 10 minutes of Exp and 1,000 Silver!", MsgMessage.ChatMode.System);
                            client.IncreaseExperience(stream, 3719000);
                            client.Player.Money += 1000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }
                        break;
                    }
                case 1:
                    {
                        client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 1);
                        data.AddText("Great! I was really starving. Thanks a lot!")
                            .AddOption("You`re~welcome.", 255)
                            .AddAvatar(237).FinalizeDialog();
                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.SoldierXu)]
        public static void SoldierXu(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.CookYuan, client.Player.Class, 1613);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.SoldierXu, client.Player.Class, 1615);//1614);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("I`ve been away from home for such a long time... I miss my family so much...");


                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 0, 1) == false)
                                data.AddOption("Deliver~food.", 1);
                        }
                        if (!client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            data.AddOption("Worried~Soldier", 10);


                        data.AddOption("Homesick~soldier.", 255);
                        data.AddAvatar(30).FinalizeDialog();
                        break;
                    }
                case 10:
                    {
                        data.AddText("These questions are driving me crazy! Could you please help me?")
                           .AddOption("Ok.", 11)
                           .AddOption("Sorry,~but~I`m~busy.", 255)
                           .AddAvatar(30).FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        if (!client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        data.AddText("What country is most popular on Thanksgiving?")
                         .AddOption("China.", 19)
                         .AddOption("Turkey.", 12)
                         .AddOption("Japan.", 19)
                         .AddOption("France.", 19)
                         .AddOption("No~idea.", 255)
                         .AddAvatar(30).FinalizeDialog();

                        break;
                    }
                case 12:
                    {
                        data.AddText("What tree is always very sad?")
                      .AddOption("Weeping~Willow.", 13)
                      .AddOption("Pine.", 19)
                      .AddOption("Christmas~tree.", 19)
                      .AddOption("Cypress.", 19)
                      .AddOption("No~idea.", 255)
                      .AddAvatar(30).FinalizeDialog();
                        break;
                    }
                case 13:
                    {
                        data.AddText("What letter is also a body of water?")
                    .AddOption("W.", 19)
                    .AddOption("A.", 19)
                    .AddOption("E.", 19)
                    .AddOption("C.", 14)
                    .AddOption("No~idea.", 255)
                    .AddAvatar(30).FinalizeDialog();
                        break;
                    }
                case 14:
                    {
                        data.AddText("Why is a river rich?")
                  .AddOption("It~has~water.", 19)
                  .AddOption("It~has~banks.", 15)
                  .AddOption("It~has~fish.", 19)
                  .AddOption("It~has~money.", 19)
                  .AddOption("No~idea.", 255)
                  .AddAvatar(30).FinalizeDialog();
                        break;
                    }
                case 15:
                    {
                        data.AddText("What`s too much for two and just right for one?")
                .AddOption("Friend.", 19)
                .AddOption("Time.", 19)
                .AddOption("Secret.", 16)
                .AddOption("Room.", 19)
                .AddOption("No~idea.", 255)
                .AddAvatar(30).FinalizeDialog();
                        break;
                    }
                case 19:
                    {
                        data.AddText("Sorry, but you`ll need to go study up a little more.")
                              .AddOption("Ok.", 255)
                              .AddAvatar(47).FinalizeDialog();
                        break;
                    }

                case 16:
                    {

                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.CreateBoxDialog("Congratulations!~You~received~10~minutes~of~Exp~and~1,000~silver!");
                            client.IncreaseExperience(stream, 3719000);
                            client.Player.Money += 1000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }
                        data.AddText("Correct! You`re really smart!")
                          .AddOption("Haha.", 255)
                          .AddAvatar(30).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 0, 1);
                        data.AddText("Great! I was really starving. Thanks a lot!")
                            .AddOption("You`re~welcome.", 255)
                            .AddAvatar(30).FinalizeDialog();
                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.SoldierZheng)]
        public static void SoldierZheng(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.CookYuan, client.Player.Class, 1613);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.SoldierZheng, client.Player.Class, 1616);

            switch (Option)
            {
                case 0:
                    {

                        data.AddText("I`ve been training hard to become a soldier who can protect the island.");


                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 0, 0, 1) == false)
                                data.AddOption("Deliver~food.", 1);
                        }
                        if (!client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            data.AddOption("Soldier`s~Challenge", 10);


                        data.AddOption("Good~luck.", 255);
                        data.AddAvatar(55).FinalizeDialog();
                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 10))
                            {
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                                {
                                    client.Inventory.AddItemWitchStack(1002000, 0, 5, stream);
                                    client.CreateBoxDialog("Congratulations!~You~received~10~minutes~of~Exp,~1,000~silver~and~5~Panacea!");
                                    client.IncreaseExperience(stream, 3719000);
                                    client.Player.Money += 1000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                }
                                data.AddText("You`re really a brave hero. I lose.")
                                  .AddOption("Haha.", 255)
                                  .AddAvatar(55).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Kill 10 HawKings in 3 minutes. Hurry up!")
 .AddOption("Ok.", 255)
 .AddAvatar(55).FinalizeDialog();
                            }

                            break;
                        }
                        data.AddText("I heard that you`re a brave hero... Let`s play a game! If you can kill 10 HawKings within 3 minutes, you`ll win!")
    .AddOption("It`s~easy.", 11)
    .AddOption("Sorry,~but~I`m~busy.", 255)
    .AddAvatar(55).FinalizeDialog();

                        break;
                    }
                case 11:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 180);
                        client.CreateBoxDialog("Please~kill~10~HawKings~within~3~minutes.~Are~you~ready?");

                        break;
                    }
                case 1:
                    {
                        client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 0, 0, 1);
                        data.AddText("Great! I was really starving. Thanks a lot!")
                            .AddOption("You`re~welcome.", 255)
                            .AddAvatar(55).FinalizeDialog();
                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.SoldierFei)]
        public static void SoldierFei(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.CookYuan, client.Player.Class, 1613);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.SoldierFei, client.Player.Class, 1617);

            switch (Option)
            {
                case 0:
                    {

                        data.AddText("Before I joined the army, I married my childhood sweetheart. Sigh, I really miss my beautiful wife...");


                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 0, 0, 0, 1) == false)
                                data.AddOption("Deliver~food.", 1);
                        }

                        if (!client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            data.AddOption("Soldier`s~Request", 10);

                        data.AddOption("Sigh...", 255);
                        data.AddAvatar(56).FinalizeDialog();
                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {

                                data.AddText("Please make 1 more space in your inventory.")
                                      .AddOption("Let me check.", 255).AddAvatar(35).FinalizeDialog();
                                break;
                            }
                            if (!client.Inventory.Contain(720991, 1))
                                client.Inventory.Add(stream, 720991);
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 1))
                            {
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                                {
                                    client.CreateBoxDialog("Congratulations!~You~received~10~minutes~of~Exp~and~1,000~silver!");
                                    client.IncreaseExperience(stream, 3719000);
                                    client.Player.Money += 1000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                }
                                data.AddText("Thanks for your help! I will never let anyone damage my wife`s portrait.")
                                  .AddOption("You`re~welcome.", 255)
                                  .AddAvatar(55).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Please help me bury the portrait under the tree, next to me.")
                        .AddOption("Ok.", 255)
                        .AddAvatar(56).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("I was sent here not long after I got married, so I miss my beautiful wife very much. I have a portrait of her,")
                            .AddText("~but I`m afraid it will be lost in battle. Could you please bury it under the tree, next to us?")
                           .AddOption("Ok.", 11)
                           .AddOption("Sorry,~but~I`m~busy.", 255)
                           .AddAvatar(56).FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {

                            data.AddText("Please make 1 more space in your inventory.")
                                  .AddOption("Let me check.", 255).AddAvatar(35).FinalizeDialog();
                            break;
                        }
                        if (!client.Inventory.Contain(720991, 1))
                            client.Inventory.Add(stream, 720991);
                        client.CreateBoxDialog("Bury~the~portrait~under~the~tree~next~to~Soldier~Fei.");
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
                case 1:
                    {

                        client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 0, 0, 0, 1);
                        data.AddText("Great! I was really starving. Thanks a lot!")
                            .AddOption("You`re~welcome.", 255)
                            .AddAvatar(56).FinalizeDialog();
                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.CookYuan)]
        public static void CookYuan(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.CookYuan, client.Player.Class, 1613);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.MysteryTaoist, client.Player.Class, 1626);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("Hello, hero! I`m the cook for the army on Bird Island, and I`m really busy. I`d be")
                            .AddText("~really happy if you could help me solve a problem I`m having.");

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted)
                            && !client.Inventory.Contain(711462, 1))
                            data.AddOption("Elemental~Circle.", 10);

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("At~your~service.", 1);




                        data.AddOption("I`m~just~passing~by.", 255);
                        data.AddAvatar(35).FinalizeDialog();
                        break;
                    }
                case 10:
                    {
                        data.AddText("So you want my water bag to complete the elemental circle? I`m happy I can help! Here you are.")
                            .AddOption("Thanks.", 11)
                            .AddAvatar(35).FinalizeDialog();

                        break;
                    }
                case 11:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                                  .AddOption("Let me check.", 255).AddAvatar(35).FinalizeDialog();
                            break;
                        }
                        client.CreateBoxDialog("You~received~the~Water~Bag~from~the~Cook~(water~element)!");
                        client.Inventory.Add(stream, 711462);

                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1, 1, 1, 1))
                            {
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                                {
                                    client.CreateBoxDialog("You~received~30~minutes~of~EXP~and~3,000~Silver!");
                                    client.IncreaseExperience(stream, 3719000);
                                    client.Player.Money += 3000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                    data.AddText("Thanks for your help! I can have a little break, now.")
.AddOption("You`re~welcome.", 255)
.AddAvatar(35).FinalizeDialog();
                                }

                            }
                            else
                            {
                                data.AddText("Hurry up! Our soldiers are hungry!")
           .AddOption("Ok.", 255)
           .AddAvatar(35).FinalizeDialog();
                            }


                            break;
                        }
                        data.AddText("Great! Actually, my assistant has become ill, so I need someone to help me deliver food to the 4 soldiers on the island.")
              .AddOption("I`ll~help~you.", 2)
              .AddOption("Sorry,~but~I`m~busy.", 255)
              .AddAvatar(35).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        client.CreateBoxDialog("Deliver~food~to~the~soldiers~in~the~4~corners~of~the~island.");
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        break;
                    }


            }
        }
        [NpcAttribute(NpcID.SouthwestIsland)]
        public static void SouthwestIsland(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TruthTaoist, client.Player.Class, 6130);
            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1) == false)
            {
                client.SendSysMesage("This stone is safe. Go and check the other stoned.", MsgMessage.ChatMode.System);
                client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 1);
            }
        }
        [NpcAttribute(NpcID.WestIsland)]
        public static void WestIsland(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TruthTaoist, client.Player.Class, 6130);
            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 0, 1) == false)
            {
                client.SendSysMesage("This stone is safe. Go and check the other stoned.", MsgMessage.ChatMode.System);
                client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 0, 1);
            }
        }
        [NpcAttribute(NpcID.NorthwestIsland)]
        public static void NorthwestIsland(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TruthTaoist, client.Player.Class, 6130);
            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 0, 0, 1) == false)
            {
                client.SendSysMesage("This stone is safe. Go and check the other stoned.", MsgMessage.ChatMode.System);
                client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 0, 0, 1);
            }
        }
        [NpcAttribute(NpcID.NorthIsland)]
        public static void NorthIsland(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TruthTaoist, client.Player.Class, 6130);
            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 0, 0, 0, 1) == false)
            {
                client.SendSysMesage("This stone is safe. Go and check the other stoned.", MsgMessage.ChatMode.System);
                client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 0, 0, 0, 1);
            }
        }
        [NpcAttribute(NpcID.NortheastIsland)]
        public static void NortheastIsland(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TruthTaoist, client.Player.Class, 6130);
            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 0, 0, 0, 0, 1) == false)
            {
                client.SendSysMesage("This stone is safe. Go and check the other stoned.", MsgMessage.ChatMode.System);
                client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 0, 0, 0, 0, 1);
            }
        }
        [NpcAttribute(NpcID.CentralIsland)]
        public static void CentralIsland(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TruthTaoist, client.Player.Class, 6130);
            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 0, 0, 0, 0, 0, 1) == false)
            {
                client.SendSysMesage("This stone is safe. Go and check the other stoned.", MsgMessage.ChatMode.System);
                client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 0, 0, 0, 0, 0, 1);
            }
        }
        [NpcAttribute(NpcID.TruthTaoist)]
        public static void TruthTaoist(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TruthTaoist, client.Player.Class, 1612);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.TruthTaoist, client.Player.Class, 1618);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.TruthTaoist, client.Player.Class, 1619);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.TruthTaoist, client.Player.Class, 6130);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)NpcID.MysteryTaoist, client.Player.Class, 1627);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("I was appointed to stay here and prevent the HawKings from escaping. I`d be really happy if you could lend me a hand.");

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted)
                            && client.Player.QuestGUI.CheckObjectives(ActiveQuest5.MissionId, 1) == false)
                            data.AddOption("Elemental~Circle~(2).", 40);

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("What~can~I~do?", 1);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Blockade", 10);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Blockade~2", 20);

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Patrol~the~Islands.", 30);




                        data.AddOption("Sorry,~but~I`m~busy.", 255);
                        data.AddAvatar(35).FinalizeDialog();
                        break;
                    }
                case 40:
                    {
                        data.AddText("Don`t worry, I know how to stop the HawKings, here. I hope the elemental circle will soon be summoned!")
                            .AddOption("We`ll~win!", 41)
                            .AddAvatar(35).FinalizeDialog();
                        break;
                    }
                case 41:
                    {
                        client.CreateBoxDialog("Now~you~can~report~back~to~the~Mystery~Taoist.");
                        client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest5.MissionId, 1);

                        break;
                    }
                case 30:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest4.MissionId, 1, 1, 1, 1, 1, 1))
                            {
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                                {
                                    client.CreateBoxDialog("You~received~20~minutes~of~EXP~and~2,000~Silver!");
                                    client.IncreaseExperience(stream, 3719000);
                                    client.Player.Money += 3000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                    data.AddText("You`ve checked all the stones, and I think you`re becoming more familiar with the islands.")
.AddOption("Definitely.", 255)
.AddAvatar(35).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Please go to each of the islands and check on those stones!")
                .AddOption("Ok.", 255)
                .AddAvatar(35).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("To prevent the monsters from landing, I placed 6 Guarding Stones on the islands.")
                            .AddText("~Could you please go to each island and see if these stones are safe?")
                 .AddOption("At~your~service.", 31)
                 .AddOption("Sorry,~but~I`m~busy.", 255)
                 .AddAvatar(35).FinalizeDialog();
                        break;
                    }
                case 31:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        break;
                    }
                case 20:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (!client.Inventory.Contain(720992, 1))
                                client.Inventory.Add(stream, 720992);

                            data.AddText("Go to the two portals and use the pill to stop the HawKings. Hurry up!")
                   .AddOption("Ok.", 255)
                   .AddAvatar(35).FinalizeDialog();



                            break;
                        }
                        data.AddText("I`ve made the special pill! Now, I need you to burn it on the southern and northern bridges.")
                            .AddText("~And then, the bridges will be blocked and the Haw Kings won`t be able to escape!")
                            .AddText("~After that, you`re going to inform the Mystery Taoist near the northern bridge and ask him to be on alert.")
                          .AddOption("Alright.", 21)
                          .AddOption("Sorry,~but~I`m~busy.", 255)
                          .AddAvatar(35).FinalizeDialog();
                        break;
                    }
                case 21:
                    {
                        if (!client.Inventory.Contain(720992, 1))
                            client.Inventory.Add(stream, 720992);
                        client.CreateBoxDialog("Go~burn~the~pill~on~the~southern~and~northern~bridges!");
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(711454, 5))
                            {
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                                {
                                    client.Inventory.Remove(711454, 5, stream);
                                    client.Inventory.AddItemWitchStack(720172, 0, 1, stream);
                                    client.CreateBoxDialog("~You~received~30~minutes~of~Exp,~3,000~silver~and~1~EXP~Ball~Scrap!");
                                    client.IncreaseExperience(stream, 3719000);
                                    client.Player.Money += 3000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                    data.AddText("Such wonderful feathers! Now I can start to make the special pill. Thanks for your help!")
.AddOption("You`re~welcome.", 255)
.AddAvatar(35).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Go collect 5 feathers from the Haw Kings before they run out of the island! Hurry up!")
                        .AddOption("Got~it.", 255)
                        .AddAvatar(35).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("We`ve built some wooden bridges for heroes like you, as easy accesses to the islands. However, Those Haw Kings")
                           .AddText("~also use the bridges and get out to make troubles! I need you to stop them!")
                         .AddOption("At~your~service.", 11)
                         .AddOption("Sorry,~but~I`m~busy.", 255)
                         .AddAvatar(35).FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        data.AddText("I need you to kill Haw Kings and collect 5 of their feathers. I`ll use them to make a special pill.")
                        .AddText("~And then, you`re going to burn the pill on both bridges, to prevent them from escaping.")
                      .AddOption("I~see.", 12)
                      .AddAvatar(35).FinalizeDialog();
                        break;
                    }
                case 12:
                    {
                        client.CreateBoxDialog("Collect~5~feathers~from~the~HawKings.");
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
                case 1:
                    {

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {

                                data.AddText("Please make 1 more space in your inventory.")
                                      .AddOption("Let me check.", 255).AddAvatar(35).FinalizeDialog();
                                break;
                            }
                            if (!client.Inventory.Contain(720990, 1))
                                client.Inventory.Add(stream, 720990);

                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1, 1, 1, 1))
                            {
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                                {
                                    client.Inventory.Remove(720990, 5, stream);
                                    client.Inventory.AddItemWitchStack(1002000, 0, 5, stream);
                                    client.CreateBoxDialog("Congratulations!~You~received~30~minutes~of~Exp,~3,000~silver~and~5~Panacea!");
                                    client.IncreaseExperience(stream, 3719000);
                                    client.Player.Money += 3000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                    data.AddText("Well done! The HawKings can never leave the magic circle, though will be destroyed sooner or later!")
.AddOption("Good~luck.", 255)
.AddAvatar(35).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Please use the Sealing Tokens at the 4 corners of Bird Island to reinforce the magic circle.")
                               .AddOption("Ok.", 255)
                               .AddAvatar(35).FinalizeDialog();

                            }
                            break;

                        }
                        data.AddText("I`ve been using a magic circle to seal the HawKings all this time, but the monsters have destroyed many of the")
                            .AddText("~Sealing Tokens. I hope you can use these new tokens to reinforce the magic circle. They must be placed in the 4 corners of Bird Island.")
                          .AddOption("Got~it..", 2)
                          .AddOption("Sorry,~but~I`m~busy.", 255)
                          .AddAvatar(35).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {

                            data.AddText("Please make 1 more space in your inventory.")
                                  .AddOption("Let me check.", 255).AddAvatar(35).FinalizeDialog();
                            break;
                        }
                        client.Inventory.Add(stream, 720990);
                        client.CreateBoxDialog("Place~the~Sealing~Tokens~at~the~4~corners~of~Bird~Island~to~reinforce~the~magic~circle.");
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.Lily)]
        public static void Lily(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.XimenQing, client.Player.Class, 1594);
            if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
            {
                if (!client.Inventory.HaveSpace(1))
                {
                    Dialog data = new Dialog(client, stream);
                    data.AddText("Please make 1 more space in your inventory.")
                          .AddOption("Let me check.", 255).FinalizeDialog();
                    return;
                }
                if (client.Inventory.Contain(711440, 1))
                {
                    client.SendSysMesage("You've already got a Lily!", MsgMessage.ChatMode.System);
                    return;
                }
                else
                {
                    client.Player.AddPick(stream, "Lily", 3);
                }
            }
        }

        [NpcAttribute(NpcID.WillowLeaf)]
        public static void WillowLeaf(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.XimenQing, client.Player.Class, 1594);
            if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
            {
                if (!client.Inventory.HaveSpace(1))
                {
                    Dialog data = new Dialog(client, stream);
                    data.AddText("Please make 1 more space in your inventory.")
                          .AddOption("Let me check.", 255).FinalizeDialog();
                    return;
                }
                if (client.Inventory.Contain(711443, 1))
                {
                    client.SendSysMesage("You've already got a Willow Leaf!", MsgMessage.ChatMode.System);
                    return;
                }
                else
                {
                    client.Player.AddPick(stream, "Willow Leaf", 3);
                }
            }
        }

        [NpcAttribute(NpcID.Jasmine)]
        public static void Jasmine(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.XimenQing, client.Player.Class, 1594);
            if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
            {
                if (!client.Inventory.HaveSpace(1))
                {
                    Dialog data = new Dialog(client, stream);
                    data.AddText("Please make 1 more space in your inventory.")
                          .AddOption("Let me check.", 255).FinalizeDialog();
                    return;
                }
                if (client.Inventory.Contain(711442, 1))
                {
                    client.SendSysMesage("You've already got a Jasmine!", MsgMessage.ChatMode.System);
                    return;
                }
                else
                {
                    client.Player.AddPick(stream, "Jasmine", 3);
                }
            }
        }

        [NpcAttribute(NpcID.WhiteChrysanthemum)]
        public static void WhiteChrysanthemum(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.XimenQing, client.Player.Class, 1594);
            if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
            {
                if (!client.Inventory.HaveSpace(1))
                {
                    Dialog data = new Dialog(client, stream);
                    data.AddText("Please make 1 more space in your inventory.")
                          .AddOption("Let me check.", 255).FinalizeDialog();
                    return;
                }
                if (client.Inventory.Contain(711441, 1))
                {
                    client.SendSysMesage("You've already got a White Chrysanthemum!", MsgMessage.ChatMode.System);
                    return;
                }
                else
                {
                    client.Player.AddPick(stream, "WhiteChrysanthemum", 3);
                }
            }
        }
        [NpcAttribute(NpcID.XimenQing)]
        public static void XimenQing(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.StrangeBox, client.Player.Class, 1600);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.XimenQing, client.Player.Class, 1601);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.StrangeBox, client.Player.Class, 1602);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.XimenQing, client.Player.Class, 1603);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)NpcID.XimenQing, client.Player.Class, 1594);
            var ActiveQuest6 = Database.QuestInfo.GetFinishQuest((uint)NpcID.XimenQing, client.Player.Class, 1599);
            var ActiveQuest7 = Database.QuestInfo.GetFinishQuest((uint)NpcID.MysteryTaoist, client.Player.Class, 1626);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("I like flowers. They have their own language. For example, red roses are given as a symbol of love, beauty and passion...")
                            .AddText("~Hmm, are you coming for a quest or what?");

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest7.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted)
                            && !client.Inventory.Contain(711461, 1))
                            data.AddOption("Elemental~Circle.", 60);

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Strange~Box~1.", 1);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                                data.AddOption("Strange~Box~2.", 10);
                            else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                                data.AddOption("Strange~Box~3.", 20);

                            else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            {
                                if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                                    data.AddOption("Strange~Box~4.", 30);
                            }
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Flower~Arrangement.", 40);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Bird~Beaks.", 50);

                        data.AddOption("Nothing.", 255);
                        data.AddAvatar(74).FinalizeDialog();
                        break;
                    }
                case 60:
                    {
                        data.AddText("My wood sword can help defeat the HawKings? Great! Here you are. I hope you`ll succeed, soon!")
                                    .AddOption("Thanks.", 61)
                                    .AddAvatar(74).FinalizeDialog();
                        break;
                    }
                case 61:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                                  .AddOption("Let me check.", 255)
                                  .AddAvatar(74).FinalizeDialog();
                            break;
                        }
                        client.CreateBoxDialog("You~received~the~Wood~Sword~from~the~Playboy~(wood~element)!");
                        client.Inventory.Add(stream, 711461);
                        break;
                    }
                case 50:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(711445, 5))
                            {
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest6.MissionId))
                                {
                                    client.Inventory.Remove(711445, 5, stream);
                                    client.Inventory.AddItemWitchStack(720173, 0, 1, stream);
                                    client.CreateBoxDialog("You`ve~received~some~EXP,~3,000~Silver~and~1~Small~Joy~Stone!");
                                    client.IncreaseExperience(stream, 3719000);
                                    client.Player.Money += 3000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                    data.AddText("Well done! You deserve the reward!")
.AddOption("Thank~you!", 255)
.AddAvatar(74).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("I need you to kill L88 Birdmen and bring me 5 of their Bird Beaks.")
  .AddOption("Deal", 255)
  .AddAvatar(74).FinalizeDialog();
                            }

                            break;
                        }
                        data.AddText("Damn it! The L88 Birdmen ruined my garden! Please, I need you to kill them and bring back 5 of their Bird Beaks.~I`ll pay you!")
                                .AddOption("Deal!", 51)
                                .AddOption("Not~interested.", 255)
                                .AddAvatar(74).FinalizeDialog();
                        break;
                    }
                case 51:
                    {
                        client.CreateBoxDialog("Please~kill~L88~Birdmen~to~collect~5~Bird~Beaks.");
                        client.Player.QuestGUI.Accept(ActiveQuest6, 0);
                        break;
                    }
                case 40:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {

                            if (client.Inventory.Contain(711440, 1) && client.Inventory.Contain(711443, 1)
                                && client.Inventory.Contain(711441, 1) && client.Inventory.Contain(711442, 1))
                            {
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest5.MissionId))
                                {
                                    client.Inventory.Remove(711440, 1, stream);
                                    client.Inventory.Remove(711443, 1, stream);
                                    client.Inventory.Remove(711442, 1, stream);
                                    client.Inventory.Remove(711441, 1, stream);
                                    client.Inventory.AddItemWitchStack(1002000, 0, 5, stream);

                                    client.CreateBoxDialog("You`ve~received~some~EXP,~3,000~Silver~and~5~Panaceas!");
                                    client.IncreaseExperience(stream, 3719000);
                                    client.Player.Money += 3000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);

                                }
                                data.AddText("Great! I didn`t expect you would come back so sonn! Thank you!")
                                  .AddOption("You`re~welcome.", 255)
                                  .AddAvatar(74).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("I need you to collect a Lily, White Chrysanthemum, Jasmine and a Willow Leaf for me.")
                                    .AddOption("I`m~on~my~way.", 255)
                                    .AddAvatar(74).FinalizeDialog();

                            }

                            break;
                        }

                        data.AddText("Yep, I`m studying flower arranging, these days. Can you help me collect a Lily, White Chrysanthemum, Jasmine and a Willow Leaf?")
                             .AddOption("Okay.", 41)
                             .AddOption("Leave.", 255)
                             .AddAvatar(74).FinalizeDialog();

                        break;
                    }
                case 41:
                    {
                        client.CreateBoxDialog("Now~go~collect~a~Lily~for~Ximen~Qing!");
                        client.Player.QuestGUI.Accept(ActiveQuest5, 0);
                        break;
                    }
                case 30:
                    {
                        if (client.Inventory.Contain(711448, 1))
                        {
                            data.AddText("This is a Phoenix Jade. Please put it inside the Strange Box. I want to give it to the fairy, as a gift.")
                                .AddOption("I`m~on~my~way.", 255)
                                .AddAvatar(74).FinalizeDialog();
                            break;
                        }
                        data.AddText("You can`t imagine how excited I am! This is a Phoenix Jade. Put it inside the Strange Box, okay?")
                            .AddText("~I want to give it to the fairy, as a gift.")
                                                        .AddOption("Okay.", 31)
                                                        .AddOption("Later.", 255)
                                                        .AddAvatar(74).FinalizeDialog();

                        break;
                    }
                case 31:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                                  .AddOption("Let me check.", 255)
                                  .AddAvatar(74).FinalizeDialog();
                            break;
                        }
                        client.Inventory.Add(stream, 711448);
                        client.CreateBoxDialog("Please~put~the~Phoenix~Jade~in~the~Strange~Box!");
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        break;
                    }
                case 20:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                        {
                            client.Inventory.Remove(711447, 1, stream);
                            client.CreateBoxDialog("You`ve~received~some~EXP~and~3,000~Silver!");
                            client.IncreaseExperience(stream, 3719000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);

                        }
                        data.AddText("That is amazing! This letter is written by a fairy! She wants to thank me for taking care of the flowers in the island.")
                                                      .AddOption("Oh,~I~see.", 255)
                                                      .AddAvatar(74).FinalizeDialog();

                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("In my opinion, maybe we can use a L88 Birdman`s Shap Claw to open this strange box.")
                                                 .AddOption("I`m~on~the~way.", 255)
                                                 .AddAvatar(74).FinalizeDialog();
                            break;
                        }

                        data.AddText("You mean the red box? I`m curious, too. Maybe you can open it yourself.")
                                                   .AddOption("How?", 11)
                                                   .AddAvatar(74).FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        data.AddText("I don`t know what`s inside, either. It just somehow appeared here, the other day.")
                       .AddText("~I did try to open the box but failed. In my opinion, maybe we can use L88 Birdman`s Shap Claw to open this strange box.")
                                                .AddOption("Sounds~reasonable.", 12)
                                                .AddOption("I~don`t~think~so.", 255)
                                                .AddAvatar(74).FinalizeDialog();
                        break;
                    }
                case 12:
                    {
                        client.CreateBoxDialog("Please~kill~L88~Birdman~to~get~their~Sharp~Claw.");
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {


                            client.CreateBoxDialog("You`ve~received~some~EXP~and~2,000~Silver!");
                            client.IncreaseExperience(stream, 3719000);
                            client.Player.Money += 2000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);

                        }
                        data.AddText("You mean the red box? I`m curious, too. Maybe you can open it yourself.")
                                                      .AddOption("How?", 11)
                                                      .AddAvatar(74).FinalizeDialog();

                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.StrangeBox)]
        public static void StrangeBox(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.StrangeBox, client.Player.Class, 1600);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.XimenQing, client.Player.Class, 1601);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.StrangeBox, client.Player.Class, 1602);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.XimenQing, client.Player.Class, 1603);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("This is a strange box.");

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Interesting.", 1);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Strange~Box~2.", 10);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Strange~Box~3.", 20);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Strange~Box~4.", 30);
                        data.AddOption("Leave.", 255);
                        data.FinalizeDialog();
                        break;
                    }
                case 30:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                        {
                            client.Inventory.Remove(711448, 1, stream);
                            client.CreateBoxDialog("You~saw~a~mysterious~halo~and~found~yourself~energized!");
                            client.IncreaseExperience(stream, 3719000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }
                        break;
                    }
                case 20:
                    {
                        data.AddText("Are you sure you want to use the claw to open this strange box?")
                                                  .AddOption("Yes.", 21)
                                                  .AddOption("No.", 255)
                                                  .AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 21:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                                  .AddOption("Let me check.", 255)
                                  .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        client.CreateBoxDialog("You~opened~the~box~and~found~a~letter~inside.~Deliver~it~to~Ximen~Qing!");
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        client.Inventory.Add(stream, 711447);
                        break;
                    }
                case 10:
                    {
                        if (client.Inventory.Contain(711446, 1))
                        {
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                            {

                                client.Inventory.Remove(711446, 1, stream);
                                client.CreateBoxDialog("You`ve~received~some~EXP~and~3,000~Silver!");
                                client.IncreaseExperience(stream, 3719000);
                                client.Player.Money += 3000;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);

                            }
                            data.AddText("Are you sure you want to use the claw to open this strange box?")
                                                   .AddOption("Yes.", 21)
                                                   .AddOption("No.", 255)
                                                   .AddAvatar(67).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("As Ximen Qing said, you`d better go get a L88 Birdman`s Sharp Claw to open the box.")

                                                     .AddOption("Alright.cre", 255)
                                                     .AddAvatar(67).FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        data.AddText("You seem curious about the box. Would you like to open it?")
                                                      .AddOption("Yeah,~yeah.", 2)
                                                      .AddOption("No~need.", 255)
                                                      .AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        data.AddText("The box is locked and you can`t open it. Why not ask Ximen Qing? Maybe he knows something.")
                                                      .AddOption("Okay.", 255)
                                                      .AddAvatar(67).FinalizeDialog();
                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.CityGeneral)]
        public static void CityGeneral(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.CityGeneral, client.Player.Class, 1597);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("Do not make trouble, here. If you find anything abnormal or need my help with a quest, come talk to me.");

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Birdman~Feathers.", 1);


                        data.AddOption("I~see.", 255);
                        data.AddAvatar(30).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1))
                            {
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                                {

                                    client.Inventory.AddItemWitchStack(1002000, 0, 5, stream);
                                    client.CreateBoxDialog("You`ve~received~some~EXP,~3,000~Silver~and~5~Panaceas!");
                                    client.IncreaseExperience(stream, 3719000);
                                    client.Player.Money += 2000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);

                                }
                                data.AddText("Thank you for what you`ve done!")
                                                          .AddOption("Never~mind.", 255)//10
                                                          .AddAvatar(67).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("We don`t have enough soldiers to guard the West Gate, and the Birdmen just keep robbing the travelers outside the gate.")
                          .AddText("~I need you to teach them a lesson! Go collect their feathers and burn them at the West Gate!")
                          .AddText("~That will keep them from being so bold.")
                                 .AddOption("You~can~count~on~me.", 255)
                                 .AddAvatar(30).FinalizeDialog();
                            }

                            break;
                        }
                        data.AddText("We don`t have enough soldiers to guard the West Gate, and the Birdmen just keep robbing the travelers outside the gate.")
                            .AddText("~I need you to teach them a lesson! Go collect their feathers and burn them at the West Gate!")
                            .AddText("~That will keep them from being so bold.")
                                   .AddOption("You~can~count~on~me.", 2)
                                   .AddOption("None~of~my~business.", 255)
                                   .AddAvatar(30).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        client.CreateBoxDialog("Go~collect~some~Birdman~Feathers~and~burn~them~at~the~West~Gate.");
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.WindTaoist)]
        public static void WindTaoist(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.WindTaoist, client.Player.Class, 1595);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.WindTaoist, client.Player.Class, 1596);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("Bird Island is really a wonderful place. I believe that some hero will appear here, soon.");
                        data.AddText("~Will you be that hero?");

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Of~course.", 1);
                        //   else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        //     data.AddOption("What`s~next?", 10);

                        data.AddOption("I`m~just~passing~by.", 255);
                        data.AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (!client.Inventory.Contain(720985, 1))
                                client.Inventory.Add(stream, 720985);
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 5))
                            {

                            }
                            else
                            {
                                data.AddText("Use the Transformation Amulet to transform and kill 5 Birdmen. Good luck!")
           .AddOption("Ok.", 255)
           .AddAvatar(67).FinalizeDialog();
                            }

                            break;
                        }
                        data.AddText("The amulet is finished! Haha. Find 5 Birdmen, and use the amulet to transform them into the Pheasants.")
                            .AddText("~Then you can kill them easily. Remember, the amulet can used once per minute. What`s more, you`ll")
                            .AddText("~have the chance to transform yourself into a Pheasant for 10 seconds. Good luck!")
                                            .AddOption("Ok.", 11)
                                            .AddOption("Sorry,~but~I`m~busy.", 255)
                                            .AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                                  .AddOption("Let me check.", 255)
                                  .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        if (!client.Inventory.Contain(720985, 1))
                            client.Inventory.Add(stream, 720985);
                        client.CreateBoxDialog("Use~the~Transformation~Amulet~to~kill~5~Birdmen.");
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {

                            if (client.Inventory.Contain(1001020, 1)
                                && client.Inventory.Contain(1002000, 1)
                                && client.Inventory.Contain(711444, 1))
                            {
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                                {
                                    client.Inventory.Remove(711444, 1, stream);
                                    client.Inventory.Remove(1002000, 1, stream);
                                    client.Inventory.Remove(1001020, 1, stream);

                                    client.CreateBoxDialog("Congratulations!~You~received~3,270,000~Exp~and~2,000~silver!");
                                    client.IncreaseExperience(stream, 3719000);
                                    client.Player.Money += 2000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);

                                }
                                data.AddText("Great! With all these materials, I can make the amulet! Thank you, brave hero!")
                                                          .AddOption("Good~luck.", 255)//10
                                                          .AddAvatar(67).FinalizeDialog();

                            }
                            else
                            {
                                data.AddText("Hurry up! We should teach a lesson to the Birdmen as soon as possible!")
                                           .AddOption("On~my~way!", 255)
                                           .AddAvatar(67).FinalizeDialog();
                            }

                            break;
                        }
                        data.AddText("Have you heard about the evil Birdmen? They`re gathering outside of the city and often attack travelers.")
                            .AddText("~I know a kind of amulet that can transform them into the weaker Pheasants. Could you please buy a Pearl Ointment")
                            .AddText("~and Panacea from the Pharmacist, and a piece of Rice Paper from the Storekeeper?")
                                                 .AddOption("Ok.", 2)
                                                 .AddOption("Sorry,~but~I`m~busy.", 255)
                                                 .AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        client.CreateBoxDialog("Help~the~Wind~Taoist~collect~the~materials~he~needs.");
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.WealthyWan)]
        public static void WealthyWan(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.WealthyWansWife, client.Player.Class, 1604);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.WealthyWan, client.Player.Class, 1605);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.WealthyWan, client.Player.Class, 1606);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.WealthyWan, client.Player.Class, 1607);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)NpcID.MysteryTaoist, client.Player.Class, 1626);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("It has been my dream to be an aviator since I was a little boy! I believe that one day, I can fly high in the blue sky!");
                        data.AddText("~Higher than anyone else has ever gone! YEAH!!!");

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted)
                            && !client.Inventory.Contain(711463, 1))
                            data.AddOption("Elemental~Circle.", 40);


                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Just~be~safe.", 1);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("The~Aviator~1.", 10);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("The~Aviator~2.", 20);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("The~Aviator~3.", 30);

                        data.AddOption("I`m~just~passing~by.", 255);
                        data.AddAvatar(35).FinalizeDialog();
                        break;
                    }
                case 40:
                    {
                        data.AddText("You need some gunpowder? I`ve prepared a lot for my aircraft. Here you are! I hope we can eradicate")
                            .AddText("~the HawKings as soon as possible!")
                                  .AddOption("Thanks.", 41)
                                  .AddAvatar(35).FinalizeDialog();
                        break;
                    }
                case 41:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                                  .AddOption("Let me check.", 255)
                                  .AddAvatar(35).FinalizeDialog();
                            break;
                        }
                        client.CreateBoxDialog("You~received~some~Powder~from~Wealthy~Wan~(fire~element)!");
                        client.Inventory.Add(stream, 711463);
                        break;
                    }
                case 30:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest4.MissionId, 1))
                            {

                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                                {
                                    client.CreateBoxDialog("Congratulations!~You~received~30~minutes~of~Exp,~3,000~silver~and~a~Level~90~Unique~weapon!");
                                    client.IncreaseExperience(stream, 4719000);
                                    client.Player.Money += 3000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                    if (Database.AtributesStatus.IsTrojan(client.Player.Class))
                                        client.Inventory.Add(stream, 410177, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);//leafBlade
                                    else if (Database.AtributesStatus.IsWarrior(client.Player.Class))
                                        client.Inventory.Add(stream, 480177, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);//club
                                    else if (Database.AtributesStatus.IsArcher(client.Player.Class))
                                        client.Inventory.Add(stream, 500167, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);//BambooBow
                                    else if (Database.AtributesStatus.IsNinja(client.Player.Class))
                                        client.Inventory.Add(stream, 601177, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);//iron katana
                                    else if (Database.AtributesStatus.IsMonk(client.Player.Class))
                                        client.Inventory.Add(stream, 610177, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);//BambooPrayerBeads
                                    else if (Database.AtributesStatus.IsPirate(client.Player.Class))
                                        client.Inventory.Add(stream, 611177, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);//recruitRapier
                                    else if (Database.AtributesStatus.IsTaoist(client.Player.Class))
                                        client.Inventory.Add(stream, 421177, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);//SpellBacksword 
                                }
                                data.AddText("It has been my dream to be an aviator since I was a little boy! I believe that one day, I can fly high in the blue sky!")
                                    .AddText("~Higher than anyone else has ever gone! YEAH!!!")
                                                          .AddOption("I`m~just~passing~by.", 255)
                                                          .AddAvatar(35).FinalizeDialog();
                            }
                            else
                            {

                                data.AddText("We`ll start to fly, now. Are you ready?")
                                             .AddOption("Yes.", 33)
                                             .AddOption("I`ll~think~about~it.", 255)
                                             .AddAvatar(35).FinalizeDialog();
                            }

                            break;
                        }

                        data.AddText("Armorer Yu is so kind! Now we can go out and test my craft. Thanks for your help, and I hope you can complete the first flight.")
                                                .AddOption("I`m~looking~forward~to~it.", 31)
                                                .AddOption("Not~interested.", 255)
                                                .AddAvatar(35).FinalizeDialog();
                        break;
                    }
                case 33:
                    {
                        client.Teleport(764, 550, 1015);
                        client.CreateBoxDialog("The~kite~broke~right~after~rising~into~the~air.~You~fell~from~the~sky~and~were~hurt!");
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "M_Fire1");
                        client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest4.MissionId, 1);
                        break;
                    }
                case 31:
                    {
                        data.AddText("I knew you wouldn`t be afraid of it. Take a break first, and I`ll complete the preparation work.")
                                                .AddOption("Ok.", 32)
                                                .AddAvatar(35).FinalizeDialog();
                        break;
                    }
                case 32:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        break;
                    }
                case 20:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(711450, 1))
                            {
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                                {
                                    client.CreateBoxDialog("Congratulations!~You~received~30~minutes~of~Exp~and~3,000~silver!");
                                    client.IncreaseExperience(stream, 4719000);
                                    client.Player.Money += 3000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);

                                }
                                data.AddText("Armorer Yu is so kind! Now we can go out and test my craft. Thanks for your help, and I hope you can complete the first flight.")
                                                          .AddOption("I`m~looking~forward~to~it.", 30)
                                                          .AddOption("Not~interested.", 255)
                                                          .AddAvatar(35).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Please bring back some powder from Armorer Yu.")
                                                          .AddOption("Ok.", 255)
                                                          .AddAvatar(35).FinalizeDialog();

                            }

                            break;
                        }
                        data.AddText("The last material I need is some gunpowder. Could you please find Armorer Yu and get some for me?")
                                                       .AddOption("Ok.", 21)
                                                       .AddOption("Sorry,~but~I`m~busy.", 255)
                                                       .AddAvatar(35).FinalizeDialog();
                        break;
                    }
                case 21:
                    {
                        client.CreateBoxDialog("Speak~with~Armorer~Yu~and~get~some~Gunpowder.");
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        break;
                    }
                case 10:
                    {

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(711449, 5))
                            {

                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                                {
                                    client.Inventory.Remove(711449, 5, stream);
                                    client.CreateBoxDialog("You~received~30~minutes~of~EXP~and~3,000~Silver!");
                                    client.IncreaseExperience(stream, 4719000);
                                    client.Player.Money += 3000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);

                                }
                                data.AddText("Thanks for your help! When everything is done, please come back and join me in a trip to the sky! Haha!")
                                                          .AddOption("Good~luck!", 20)
                                                          .AddAvatar(35).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Could you please kill the BirdmanL88 and collect 5 feathers?")
                                        .AddOption("Ok.", 255)
                                        .AddAvatar(35).FinalizeDialog();

                            }

                            break;
                        }

                        data.AddText("Haha, I think I`ll realize my dream, very soon. Let me tell you, I want to make a huge kite and use a large rocket to launch it.")
                            .AddText("~The first thing I need to do is finish the kite. Could you please collect 5 feathers from the BirdmenL88 that are outside?")
                                        .AddOption("Ok.", 11)
                                        .AddOption("I`ll~think~about.", 255)
                                        .AddAvatar(35).FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        client.CreateBoxDialog("Kill~the~BirdmanL88~to~collect~5~feathers.");
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;

                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 20))
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                data.AddText("Please make 1 more space in your inventory.")
                                      .AddOption("Let me check.", 255)
                                      .AddAvatar(35).FinalizeDialog();
                                break;
                            }
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                            {
                                client.Inventory.AddItemWitchStack(Database.ItemType.DoubleExp, 0, 1, stream);
                                client.CreateBoxDialog("Congratulations!~You~received~30~minutes~of~Exp,~3,000~silver~and~an~Exp~Potion!");
                                client.IncreaseExperience(stream, 4719000);
                                client.Player.Money += 3000;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);

                            }
                            data.AddText("My wife is always being too careful... And I thought my mother was overprotective! Anyway, thanks for your help!")
                                                      .AddOption("You`re~welcome.", 255)
                                                      .AddAvatar(35).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Didn`t I ask you to go outside of the city and kill 20 Birdmen L88?")
                                                               .AddOption("I~see.", 255)
                                                               .AddAvatar(35).FinalizeDialog();
                        }
                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.WealthyWansWife)]
        public static void WealthyWansWife(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.WealthyWansWife, client.Player.Class, 1604);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("Sigh, my husband wanted to become an aviator for a long time. Maybe having a dream is good for a man... Well, at least I want to make sure he is safe.");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("I~can~help.", 1);


                        data.AddOption("You`re~a~good~wife.", 255);
                        data.AddAvatar(110).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Didn`t I ask you to go outside of the city and kill 20 Birdmen L88?")
                                    .AddOption("I~see.", 255)
                                    .AddAvatar(110).FinalizeDialog();
                            break;
                        }
                        data.AddText("Thanks! He is always working on his machine outside, but there are so many BirdmenL88 outside of the city. I`m really")
                            .AddText("~worried about him. Could you please go and kill 20 BirdmenL88? Show them no mercy!")
                                     .AddOption("Alright.", 2)
                                     .AddOption("Sorry,~but~I`m~busy.", 255)
                                     .AddAvatar(110).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        client.CreateBoxDialog("Go~outside~of~the~city~and~kill~20~BirdmenL88.");
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.LittleBen)]
        public static void LittleBen(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.ArmorerYu, client.Player.Class, 6129);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("Nobody likes me, even my father only cares about his boring job. Maybe I should just disappear...");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Your~dad`s~worried~about~you!", 1);


                        data.AddOption("You~naughty~boy!", 255);
                        data.AddAvatar(68).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        data.AddText("Really? So, my father sent you here? He may remember me at times, so what? Nothing will change, and he will still fix his sights on his work again, tomorrow.")
                            .AddText("~Look, how about we play some Rock-Paper-Scissors? If you win, I`ll go home. If not... Haha, I`ll push you off the roof! The rules are easy. `Rock` beats `Scissors`,")
                            .AddText("~`Scissors` beats `Paper`, and `Paper` beats `Rock`. You got it?")
                                      .AddOption("Yeah,~let`s~start!", 2)
                                      .AddOption("I~need~more~time~to~remember.", 255)
                                      .AddAvatar(68).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        data.AddText("Rock-Paper-Scissors...Shoot!")
                                      .AddOption("Rock!", 3)
                                      .AddOption("Scissors!", 4)
                                      .AddOption("Paper!", 3)
                                      .AddAvatar(68).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        data.AddText("Wh...A tie? I want to win! Let`s play again. Rock-Paper-Scissors...Shoot!")
                                      .AddOption("Rock!", 3)
                                      .AddOption("Scissors!", 4)
                                      .AddOption("Paper!", 3)
                                      .AddAvatar(68).FinalizeDialog();
                        break;
                    }
                case 4:
                    {

                        data.AddText("Alright, it looks like I lose. Whew, I guess I`ll go home, then. See you around!")
                                         .AddOption("You`re~a~good~boy.", 5)
                                         .AddAvatar(68).FinalizeDialog();
                        break;
                    }
                case 5:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.CreateBoxDialog("You~received~20~minutes~of~EXP~and~2,000~Silver!");
                            client.IncreaseExperience(stream, 4719000);
                            client.Player.Money += 2000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);

                        }
                        ActionQuery action;

                        action = new ActionQuery()
                        {
                            ObjId = (uint)NpcID.LittleBen,
                            Type = ActionType.RemoveEntity
                        };
                        client.Send(stream.ActionCreate(&action));
                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.ArmorerYu)]
        public static void ArmorerYu(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {

            Dialog data = new Dialog(client, stream);

            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.ArmorerYu, client.Player.Class, 1592);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ArmorerYu, client.Player.Class, 6129);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.WealthyWan, client.Player.Class, 1606);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("My father used to be a famous armorer, and I want to work as well as him. The most important thing")
                            .AddText("~is to forge an ultimate weapon.");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted)
                            && !client.Inventory.Contain(711450, 1))
                            data.AddOption("The~Aviator~2.", 30);

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Can~I~help~you?", 10);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Lonely~Ben.", 20);

                        data.AddOption("You`ll~make~it.", 255);
                        data.AddAvatar(47).FinalizeDialog();
                        break;
                    }
                case 30:
                    {
                        /*sa..
alchemist..
black
circus
china !
*/
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                                  .AddOption("Let me check.", 255)
                                  .AddAvatar(47).FinalizeDialog();
                            break;
                        }
                        data.AddText("Wealthy Wan is still insisting on his foolish dream... Well, if you want to get some gunpowder from me, you`ll need")
                            .AddText("~need to answer 5 questions correctly!")
                                       .AddOption("Go~ahead.", 31)
                                       .AddOption("Sorry,~but~I`m~busy.", 255)
                                       .AddAvatar(47).FinalizeDialog();
                        break;
                    }
                case 31:
                    {
                        data.AddText("1. Gunpowder is actually a mixture of sulfur, charcoal and what?")
                                .AddOption("Saltpeter.", 32)
                               .AddOption("Saltpeter.", 39)
                                .AddOption("Saltpeter.", 39)
                                .AddOption("Saltpeter.", 39)
                                .AddAvatar(47).FinalizeDialog();
                        break;
                    }
                case 32:
                    {
                        data.AddText("2. The powder was first made by who?")
                              .AddOption("Doctor.", 39)
                             .AddOption("Alchemist.", 33)
                              .AddOption("Craftsman.", 39)
                              .AddOption("Hunter.", 39)
                              .AddAvatar(47).FinalizeDialog();
                        break;
                    }
                case 33:
                    {
                        data.AddText("3. In the early days, gunpowder was called?")
                            .AddOption("Yellow~powder.", 39)
                           .AddOption("Green~powder.", 39)
                            .AddOption("Black~powder.", 34)
                            .AddOption("Red~powder.", 39)
                            .AddAvatar(47).FinalizeDialog();
                        break;
                    }
                case 34:
                    {
                        data.AddText("4. At first, gunpowder was widely used in which area?")
                           .AddOption("War.", 39)
                          .AddOption("Circus.", 35)
                           .AddOption("Medicine.", 39)
                           .AddOption("Cultivation.", 39)
                           .AddAvatar(47).FinalizeDialog();
                        break;
                    }
                case 35:
                    {
                        data.AddText("5. Gunpowder was first made in which country?")
                             .AddOption("America.", 39)
                            .AddOption("Britain.", 39)
                             .AddOption("India.", 39)
                             .AddOption("China.", 36)
                             .AddAvatar(47).FinalizeDialog();
                        break;
                    }
                case 39:
                    {
                        data.AddText("Sorry, but you`ll need to go study up a little more.")
                               .AddOption("Ok.", 255)
                               .AddAvatar(47).FinalizeDialog();
                        break;
                    }
                case 36:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                                  .AddOption("Let me check.", 255)
                                  .AddAvatar(47).FinalizeDialog();
                            break;
                        }
                        client.CreateBoxDialog("You~can~report~back~to~Wealthy~Wan,~now.");
                        client.Inventory.Add(stream, 711450);
                        data.AddText("It seems these questions are easy for you. Great! Open your inventory, and I`ll give you some gunpowder!")
                                 .AddOption("Thanks.", 255)
                                 .AddAvatar(47).FinalizeDialog();
                        break;
                    }
                case 20:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Alas... It`s all my fault. I should have paid more attention to Little Ben. If anything happpens to him, let me know. I`m so worried about him.")
                                        .AddOption("He~will~be~fine.", 255)
                                        .AddAvatar(47).FinalizeDialog();
                            break;
                        }
                        data.AddText("Hey! Did you see my son, Ben? I was so absorbed in my work that I didn`t notice when he walked away. I hope he isn`t on someone`s roof, again. If you see Little Ben")
                            .AddText("~somewhere, please bring him home.")
                                       .AddOption("Okay.~I~will.", 21)
                                       .AddOption("Maybe~he~has~returned~home.", 255)
                                       .AddAvatar(47).FinalizeDialog();
                        break;
                    }
                case 21:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.Player.QuestGUI.SendAutoPatcher(1015, ActiveQuest2.FinishNpcId.X, ActiveQuest2.FinishNpcId.Y, ActiveQuest2.FinishNpcId.ID);
                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(711438, 5))
                            {
                                if (!client.Inventory.HaveSpace(1))
                                {
                                    data.AddText("Please make 1 more space in your inventory.")
                                          .AddOption("Let me check.", 255)
                                          .AddAvatar(47).FinalizeDialog();
                                    break;
                                }
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                                {
                                    client.Inventory.Remove(711438, 5, stream);
                                    client.Inventory.AddItemWitchStack(720172, 0, 1, stream);
                                    client.CreateBoxDialog("Congratulations!~You~received~4,850,000~Exp,~3,000~silver~and~an~EXP~Ball~Scrap!");
                                    client.IncreaseExperience(stream, 4719000);
                                    client.Player.Money += 3000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);

                                }
                                data.AddText("Just as I expected, these arms are really solid. I`ll forge them into a powerful weapon! Thanks!")
                                        .AddOption("You`re~welcome.", 255)
                                        .AddAvatar(30).FinalizeDialog();

                            }
                            else
                            {
                                data.AddText("Go and kill some Birdmen to collect 5 arms for me. Of course, you`ll be handsomely rewarded!")
                                            .AddOption("Alright.", 255)
                                            .AddAvatar(47).FinalizeDialog();

                            }
                            break;
                        }
                        data.AddText("Actually, I know how to make the weapon. The Birdman Arm is the key material. Could you please kill")
                            .AddText("~them and collect 5 arms for me?")
                                             .AddOption("Ok.", 11)
                                             .AddOption("Sorry,~but~I`m~busy.", 255)
                                             .AddAvatar(47).FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        client.CreateBoxDialog("Kill~the~Birdmen~and~collect~their~arms.");
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.ViceGeneral)]
        public static void ViceGeneral(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {

            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.IslandGeneral, client.Player.Class, 1620);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ViceGeneral, client.Player.Class, 1621);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("I`m guarding the island. Was there a quest can I help you with?");

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Time~to~Unite.", 1);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Hunting~L93~Hawks.", 10);

                        data.AddOption("Nope.", 255);
                        data.AddAvatar(66).FinalizeDialog();
                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 30))
                            {
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                                {
                                    client.CreateBoxDialog("You`ve~received~EXP~worth~1/2~EXP~Ball~and~3,000~Silver!");
                                    client.IncreaseExperience(stream, 2719000);
                                    client.Player.Money += 3000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                    data.AddText("It`s a good start. Thank you very much!")
                           .AddOption("Not~at~all.", 255)
                           .AddAvatar(66).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Have you killed 30 L93 Hawks?")
                            .AddOption("Not~yet!", 255)
                            .AddAvatar(66).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("The first plan is to kill 30 L93 Hawks. I hope you can help me with that.")
                            .AddOption("No~problem.", 11)
                            .AddOption("It`s~dangerous.", 255)
                            .AddAvatar(66).FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        client.CreateBoxDialog("Go~kill~30~L93~Hawks!");
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Remove(711455, 1, stream);
                            client.Inventory.AddItemWitchStack(1002000, 0, 5, stream);
                            client.CreateBoxDialog("You`ve~received~EXP~worth~1/3~EXP~Ball,~2,000~Silver~and~5~Panaceas!");
                            client.IncreaseExperience(stream, 2719000);
                            client.Player.Money += 2000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);

                        }
                        data.AddText("The general asked you to deliver a letter? Great! Let me read it...")
                              .AddOption("Good~luck~for~you.", 255)
                              .AddAvatar(66).FinalizeDialog();
                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.IslandGeneral)]
        public static void IslandGeneral(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {

            Dialog data = new Dialog(client, stream);

            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.BIViceCaptain, client.Player.Class, 1608);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.IslandGeneral, client.Player.Class, 1611);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.IslandGeneral, client.Player.Class, 1620);

            switch (Option)
            {
                case 0:
                    {

                        data.AddText("I`m guarding the island. If you find anything special, please report to me.");

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Military~Order.", 1);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Hunting~HawKings.", 10);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Time~to~Unite.", 20);

                        data.AddOption("Bye.", 255);
                        data.AddAvatar(30).FinalizeDialog();
                        break;
                    }
                case 20:
                    {
                        if (client.Inventory.Contain(711455, 1))
                        {
                            data.AddText("It`s really urgent. Please inform the Vice General as soon as possible!")
                                .AddOption("Copy~that.", 255)
                                .AddAvatar(30).FinalizeDialog();
                            break;
                        }

                        data.AddText("I`ve sent the Vice General to guard the northeastern island. Now, it`s the time to unite to eliminate the Hawk Bosses.")
                            .AddText("~He`ll know the detailed plans when he reads this letter.")
                                      .AddOption("You~can~count~on~me.", 21)
                                      .AddOption("Sorry,~I`m~busy.", 255)
                                      .AddAvatar(30).FinalizeDialog();

                        break;
                    }
                case 21:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                                  .AddOption("Let me check.", 255)
                                  .AddAvatar(30).FinalizeDialog();
                            break;
                        }
                        if (!client.Inventory.Contain(711455, 1))
                            client.Inventory.Add(stream, 711455);
                        client.CreateBoxDialog("Please~give~this~letter~to~the~Vice~General.");
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 50))
                            {
                                if (!client.Inventory.HaveSpace(1))
                                {
                                    data.AddText("Please make 1 more space in your inventory.")
                                          .AddOption("Let me check.", 255)
                                          .AddAvatar(30).FinalizeDialog();
                                    break;
                                }
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                                {
                                    client.Inventory.AddItemWitchStack(1060024, 0, 1, stream);
                                    client.CreateBoxDialog("You`ve~received~EXP~worth~2/3~EXP~Ball,~4,000~Silver~and~1~Bird~Island~Gate!");
                                    client.IncreaseExperience(stream, 2719000);
                                    client.Player.Money += 4000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);

                                }
                                data.AddText("Thank you for your help! I bet they won`t be that bold from now on!")
                                        .AddOption("I~hope~so.", 255)
                                        .AddAvatar(30).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("I need your help. Go kill 50 HawKings! I will see the ground run red with their blood!")
                                .AddOption("Got~it.", 255)
                                .AddAvatar(30).FinalizeDialog();
                                break;
                            }

                            break;
                        }
                        data.AddText("We`re going to slay the HawKings and need your help.")
                            .AddText("~Please go kill 50 of them!")
                                .AddOption("I`m~in.", 11)
                                .AddOption("No,~I~won`t.", 255)
                                .AddAvatar(30).FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        client.CreateBoxDialog("Go~kill~50~HawKings!");
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);

                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Remove(711451, 1, stream);
                            client.Inventory.AddItemWitchStack(1002000, 0, 5, stream);
                            client.CreateBoxDialog("You`ve~received~EXP~worth~1/3~EXP~Ball,~2,000~Silver~and~5~Panaceas!");
                            client.IncreaseExperience(stream, 2719000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);

                        }
                        data.AddText("Okay, I got it. Thanks for your information.")
                                .AddOption("You`re~welcome.", 255)
                                .AddAvatar(30).FinalizeDialog();
                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.BIViceCaptain)]
        public static void BIViceCaptain(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.BIViceCaptain, client.Player.Class, 1591);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.BIViceCaptain, client.Player.Class, 1598);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.BIViceCaptain, client.Player.Class, 1608);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("Welcome to the Bird Island. Are you coming for a quest?");

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Kill~the~Birdman.", 1);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Hunting~L88~Birdmen.", 10);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Military~Order.", 20);

                        data.AddOption("Nothing.", 255);
                        data.AddAvatar(47).FinalizeDialog();
                        break;
                    }
                case 20:
                    {
                        if (client.Inventory.Contain(711451, 1))
                        {
                            data.AddText("I just received the report that the HawKings were gathering and planning to attack the city.")
                        .AddText("~Please deliver this General Token to the island General and ask him to be on alert.")
                                     .AddOption("Okay.", 255)
                                     .AddAvatar(47).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("I just received the report that the HawKings were gathering and planning to attack the city.")
                          .AddText("~Please deliver this General Token to the island General and ask him to be on alert.")
                                       .AddOption("I`m~on~my~way.", 21)
                                       .AddOption("Why~me?!", 255)
                                       .AddAvatar(47).FinalizeDialog();
                        }
                        break;
                    }
                case 21:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                                  .AddOption("Let me check.", 255)
                                  .AddAvatar(47).FinalizeDialog();
                            break;
                        }
                        if (client.Inventory.Contain(711451, 1) == false)
                            client.Inventory.Add(stream, 711451);
                        client.CreateBoxDialog("Hurry~to~take~this~General~Token~to~the~Island~General.");
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);

                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                data.AddText("Please make 1 more space in your inventory.")
                                      .AddOption("Let me check.", 255)
                                      .AddAvatar(47).FinalizeDialog();
                                break;
                            }
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 30))
                            {
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                                {
                                    client.Inventory.AddItemWitchStack(1060024, 0, 1, stream);
                                    client.CreateBoxDialog("You`ve~received~EXP~worth~1/2~EXP~Ball,~3,000~Silver~and~1~Bird~Island~Gate!");
                                    client.IncreaseExperience(stream, 2719000);
                                    client.Player.Money += 3000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);

                                }
                                data.AddText("Thank you very much! We`ve removed the nearby dangers!")
                                        .AddOption("My~pleasure.", 255)
                                        .AddAvatar(47).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Many villagers were killed by the L88 Birdmen! We have to do something. Please go kill 30 of them. We must protect the island!")
                                        .AddOption("I~won`t~disappoint~you.", 255)
                                        .AddAvatar(47).FinalizeDialog();
                            }

                            break;
                        }
                        data.AddText("Things have become worse... Many villagers were killed by the L88 Birdmen!")
                         .AddText("~We must stop them! Please go kill 30 of them. We must protect the island!")
                                      .AddOption("I~won`t~disappoint~you.", 11)
                                      .AddAvatar(47).FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        client.CreateBoxDialog("Please~kill~30~L88~Birdmen.");
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 50))
                            {
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                                {
                                    client.CreateBoxDialog("You`ve~received~some~EXP~and~3,000~Silver!");
                                    client.IncreaseExperience(stream, 2719000);
                                    client.Player.Money += 3000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);

                                }
                                data.AddText("That`s very kind of you! Thank you very much!")
                                        .AddOption("No~problem.", 255)
                                        .AddAvatar(47).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("The Birdmen keep trying to attack the city to grab the treasures we have stored. Please go kill 50 Birdmen!")
                                        .AddOption("I`m~setting~off.", 255)
                                        .AddAvatar(47).FinalizeDialog();
                            }


                            break;
                        }
                        data.AddText("You must have noticed that many Birdmen are gathering outside the city. I need you to kill 50 of them, to protect the city!")
                                        .AddOption("I~won`t~let~you~down.", 2)
                                        .AddOption("Why~me?!", 255)
                                        .AddAvatar(47).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        client.CreateBoxDialog("Go~kill~50~Birdmen!");
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.XuFan)]
        public static void XuFan(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.BICastellan, client.Player.Class, 1590);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.XuFan, client.Player.Class, 1593);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hey! What can I do for you? Are you coming to repair items or maybe for a job?");

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Inform~the~Artisan.", 1);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Retrieve~Tool~Bag.", 10);


                        data.AddOption("Nothing.", 255);
                        data.AddAvatar(53).FinalizeDialog();
                        break;
                    }

                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(711439, 1))
                            {
                                if (!client.Inventory.HaveSpace(1))
                                {
                                    data.AddText("Please make 1 more space in your inventory.")
                                        .AddOption("Let me check.", 255)
                                        .AddAvatar(53).FinalizeDialog();
                                    break;
                                }
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                                {
                                    client.Inventory.Add(stream, 720173);
                                    client.Inventory.Remove(711439, 1, stream);
                                    client.CreateBoxDialog("You`ve~received~EXP~worth~1/2~EXP~Ball,~3,000~Silver~and~a~Small~Joy~Stone!");
                                    client.IncreaseExperience(stream, 2719000);
                                    client.Player.Money += 3000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                    data.AddText("Yes, that`s it! Thank you very much!")
                                      .AddOption("Never~mind.", 13)
                                      .AddAvatar(53).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("My tool bag was stolen by a Birdman, the other day. Can you please retrieve it for me?")
                          .AddOption("No~problem.", 255)
                          .AddAvatar(53).FinalizeDialog();

                            }

                            break;
                        }
                        data.AddText("My tool bag was stolen by a Birdman, the other day. Can you please retrieve it for me?")
                           .AddOption("My~pleasure!", 11)
                           .AddAvatar(53).FinalizeDialog();
                        break;
                    }
                case 13:
                    {
                        data.AddText("Hey! What can I do for you? Are you coming to repair items or maybe for a job?")
                             .AddOption("Nothing.", 255)
                             .AddAvatar(53).FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Add(stream, 720173);
                            client.CreateBoxDialog("You`ve~received~EXP~worth~1/2~EXP~Ball,~3,000~Silver~and~1~Defense~Pot~(20m)!");
                            client.IncreaseExperience(stream, 2719000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            data.AddText("Really?! Thank you for what you`ve done for the city!")
                              .AddOption("My~pleasure!", 255)
                              .AddAvatar(53).FinalizeDialog();
                        }
                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.Xi_er)]
        public static void Xi_er(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.BICastellan, client.Player.Class, 1609);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Xi_er, client.Player.Class, 1610);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I was begging my father for a long time before he agreed to let me play outside. I had such a good time these days!");

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("~Everyone should be so free!", 1);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Old~Book.", 10);


                        data.AddOption("Nice.", 255);
                        data.AddAvatar(135).FinalizeDialog();
                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(711452, 1))
                            {
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                                {
                                    client.Inventory.Remove(711452, 1, stream);
                                    client.Inventory.Add(stream, 720172);
                                    client.CreateBoxDialog("You`ve~received~EXP~worth~2/3~EXP~Ball,~4,000~Silver~and~1~EXP~Ball~Scrap!");
                                    client.IncreaseExperience(stream, 2719000);
                                    client.Player.Money += 4000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                    data.AddText("Great! That`s the Old Book! Thank you very much!")
                                        .AddText("~I`ll bring the book home soon!")
                                      .AddOption("Okay.", 255)
                                      .AddAvatar(135).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Thank you! The book has been shred into separate parts. Please kill the HawKings and try your best to retrieve all of them!")
                                  .AddOption("I~will.", 255)
                                  .AddAvatar(135).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("I`m wondering if you can do me a favor. I took an old book with me when I left home, unfortunately, it was shred into parts and taken by the HawKings!")
                           .AddText("~Please, you have to help me. It`s my father`s favorite book...")
                            .AddOption("I`ll~try~my~best.", 11)
                            .AddOption("That`s~your~fault.", 255)
                               .AddAvatar(135).FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.CreateBoxDialog("Kill~HawKings~to~retrieve~the~Old~Book.");
                        break;
                    }
                case 1:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                                .AddOption("Let me check.", 255)
                                .AddAvatar(135).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Add(stream, 723340);
                            client.CreateBoxDialog("You`ve~received~EXP~worth~1/3~EXP~Ball,~2,000~Silver~and~5~Study~Points!");
                            client.IncreaseExperience(stream, 2719000);
                            client.Player.Money += 2000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            data.AddText("Yes, I`m Castellan`s daughter, Xi`er. My father is worried about me? I guess it`s my fault... I stayed gone a long time.")
                              .AddOption("Thank~god~you`re~fine.", 255)
                              .AddAvatar(135).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.BICastellan)]
        public static void BICastellan(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.DCViceCaptain, client.Player.Class, 1660);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.BICastellan, client.Player.Class, 1661);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.BICastellan, client.Player.Class, 1590);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.BICastellan, client.Player.Class, 1609);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I`m the castellan of Bird Island. Are you coming for any jobs we have available?");

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Head~to~Bird~Island.", 1);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Patrol~the~City.", 10);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == true
                            && client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Inform~the~Artisan.", 20);
                        else if (client.Player.Level > 90)
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                                data.AddOption("Look~for~Daughter.", 30);

                        data.AddOption("Hail~to~you!", 255);
                        data.AddAvatar(18).FinalizeDialog();
                        break;
                    }
                case 30:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {

                            data.AddText("I`m worried about my daughter, Xi`er. She went out 3 days ago, but hasn`t come back, yet!")
                           .AddText("~Can you please search the island for her?")
                                   .AddOption("I~will.", 255)
                                   .AddAvatar(18).FinalizeDialog();
                            break;
                        }
                        data.AddText("I`m worried about my daughter, Xi`er. She went out 3 days ago, but hasn`t come back, yet!")
                            .AddText("~Can you please search the island for her?")
                                    .AddOption("Sure.", 31)
                                    .AddOption("I`m~busy.", 255)
                                    .AddAvatar(18).FinalizeDialog();
                        break;
                    }
                case 31:
                    {
                        client.CreateBoxDialog("Please~serch~the~Island~for~Xi`er.");
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        break;
                    }
                case 20:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Please ask Xu Fan to repair the bridge without any delays!")
                                     .AddOption("Got~it!", 255)
                                     .AddAvatar(18).FinalizeDialog();

                            break;
                        }
                        data.AddText("The bridge is badly damaged? That`s a big problem! We must do something, before any disasters happen.")
                            .AddText("~Can you inform the artisan, Xu Fan, about this? Please ask him to repair the bridge as soon as possible.")
                                      .AddOption("Sure!", 21)
                                      .AddOption("Later.", 255)
                                      .AddAvatar(18).FinalizeDialog();
                        break;
                    }
                case 21:
                    {
                        client.CreateBoxDialog("Please~head~to~visit~the~artisan,~Xu~Fan!");
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 1, 1, 1))
                            {
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                                {
                                    client.CreateBoxDialog("You~received~20~minutes~of~EXP~and~2,000~Silver!");
                                    client.IncreaseExperience(stream, 2719000);
                                    client.Player.Money += 2000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                    data.AddText("Really?! Thank you for what you`ve done for the city!")
                                      .AddOption("My~pleasure!", 20)
                                      .AddAvatar(18).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Please patrol the city to check if there`s any potential danger!")
                                  .AddOption("I`m~leaving.", 255)
                                  .AddAvatar(18).FinalizeDialog();

                            }
                            break;
                        }
                        data.AddText("We are always shorthanded. I`m wondering if you can patrol the city for me, to find out if there`s any potential danger.")
                               .AddOption("Glad~to~help.", 11)
                               .AddOption("None~of~my~business.", 255)
                               .AddAvatar(18).FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        client.CreateBoxDialog("Please~go~patrol~the~east~of~the~island.");
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
                case 1:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                                .AddOption("Let me check.", 255)
                                .AddAvatar(18).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Remove(711437, 1, stream);
                            client.Inventory.AddItemWitchStack(1002000, 0, 5, stream);
                            client.CreateBoxDialog("You`ve~received~EXP~worth~1/3~EXP~Ball,~2,000~Silver~and~5~Panaceas!");
                            client.IncreaseExperience(stream, 2719000);
                            client.Player.Money += 2000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            data.AddText("Desert City Vice Captain asked you to deliver this Official Letter? He must be very busy. Thanks for your help!")
                              .AddOption("Welcome.", 255)
                              .AddAvatar(18).FinalizeDialog();
                        }
                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.Lotus)]
        public static void Lotus(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.Lotus, client.Player.Class, 1456);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaoistYu, client.Player.Class, 1459);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("This place used to be a thick forest. Years ago, there came a group of monsters that destroyed the forest and turned it into a barren desert.");

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("The~Withered~Trees~1.", 1);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("The~Withered~Trees~4.", 10);

                        data.AddOption("Leave.", 255);
                        data.AddAvatar(159).FinalizeDialog();
                        break;
                    }
                case 10:
                    {
                        data.AddText("Really? The Withered Trees are alive, now? Thank you a lot!")
                           .AddOption("My~pleasure.", 11).AddAvatar(159)
             .FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        if (!client.Inventory.HaveSpace(3))
                        {
                            data.AddText("Please make 3 more spaces in your inventory.")
                                .AddOption("Let me check.", 255)
                                .AddAvatar(159).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            if (Database.AtributesStatus.IsTrojan(client.Player.Class))
                                client.Inventory.Add(stream, 118069, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true, Role.Flags.ItemEffect.None, true, "~and~an~EXP~Ball!");
                            else if (Database.AtributesStatus.IsWarrior(client.Player.Class))
                                client.Inventory.Add(stream, 111069, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true, Role.Flags.ItemEffect.None, true, "~and~an~EXP~Ball!");
                            else if (Database.AtributesStatus.IsArcher(client.Player.Class))
                                client.Inventory.Add(stream, 113029, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true, Role.Flags.ItemEffect.None, true, "~and~an~EXP~Ball!");
                            else if (Database.AtributesStatus.IsNinja(client.Player.Class))
                                client.Inventory.Add(stream, 112069, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true, Role.Flags.ItemEffect.None, true, "~and~an~EXP~Ball!");
                            else if (Database.AtributesStatus.IsMonk(client.Player.Class))
                                client.Inventory.Add(stream, 143069, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true, Role.Flags.ItemEffect.None, true, "~and~an~EXP~Ball!");
                            else if (Database.AtributesStatus.IsPirate(client.Player.Class))
                                client.Inventory.Add(stream, 144069, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true, Role.Flags.ItemEffect.None, true, "~and~an~EXP~Ball!");
                            else if (Database.AtributesStatus.IsTaoist(client.Player.Class))
                                client.Inventory.Add(stream, 114069, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true, Role.Flags.ItemEffect.None, true, "~and~an~EXP~Ball!");
                            client.CreateBoxDialog("You`ve~received~some~EXP,~3,000~Silver~and~a~Super~Hat!");
                            client.IncreaseExperience(stream, 2719000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Taoist Yu is said to be wise man. Perhaps he has a way to save the dying trees.")
                            .AddOption("Fine.", 255).AddAvatar(159)
              .FinalizeDialog();

                            break;
                        }

                        data.AddText("The sand is about to swallow the whole area. People left here one after the other... Before I leave, I wish I could save the Withered Trees which that I planted last year.")
        .AddText("~Taoist Yu is said to be wise man. Perhaps he has a way to save the dying trees?")
                            .AddOption("I~won`t~let~you~down.", 2)
                .AddOption("Leave.", 255).AddAvatar(159)
                .FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        client.CreateBoxDialog("Head~to~ask~Taoist~Yu~for~solution.");
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.DCViceCaptain)]
        public static void DCViceCaptain(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.CaptorCooke, client.Player.Class, 1450);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DCViceCaptain, client.Player.Class, 1451);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DCViceCaptain, client.Player.Class, 1460);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DCViceCaptain, client.Player.Class, 1465);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)NpcID.SculptorHe, client.Player.Class, 1496);
            var ActiveQuest6 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ElderJiang, client.Player.Class, 1511);
            var ActiveQuest7 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DCViceCaptain, client.Player.Class, 1660);
            switch (Option)
            {

                case 0:
                    {

                        data.AddText("I have been guarding here for years. I miss my wife and kids...");

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Inscription~1.", 40);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Elder~Jiang~4.", 50);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Head~to~Desert~City.", 1);

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Kill~the~Sand~Monsters.", 10);

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Kill~the~L68~Sand~Monsters.", 20);


                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Speedy~Rescue.", 30);
                        if (client.Player.Level >= 87)
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest7.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                                data.AddOption("Head~to~Bird~Island.", 60);

                        data.AddOption("See~you~then!", 255);
                        data.AddAvatar(53).FinalizeDialog();

                        break;
                    }
                case 60:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest7.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Please deliver this Official Letter to the Bird Island Castellan!")
                                   .AddOption("I`m~on~my~way.", 255)
                                   .AddAvatar(53).FinalizeDialog();
                            break;
                        }
                        data.AddText("Hello, there! I need you to do me a favor. You see, I`m really busy these days...")
                            .AddText("~Can you head to the Bird Island and deliver this letter to the Castellan?")
                          .AddOption("You~can~count~on~me.", 61)
                        .AddOption("I`m~busy,~too!", 255)
                          .AddAvatar(53).FinalizeDialog();
                        break;
                    }
                case 61:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                                    .AddOption("Let me check.", 255)
                                    .AddAvatar(53).FinalizeDialog();

                            break;
                        }



                        client.CreateBoxDialog("Please~visit~the~Castellan~in~the~Bird~Island.");

                        client.Inventory.Add(stream, 711437);
                        client.Player.QuestGUI.Accept(ActiveQuest7, 0);
                        break;
                    }
                case 50:
                    {
                        data.AddText("What? A straight hook and above the water? That`s interesting. I`ll report that to the Captain and I`m sure he will visit the strange old man.")
                           .AddOption("Bye.", 51)
                           .AddAvatar(53).FinalizeDialog();

                        break;
                    }
                case 51:
                    {
                        if (!client.Inventory.HaveSpace(3))
                        {

                            data.AddText("Please make 3 more spaces in your inventory.")
                                    .AddOption("Let me check.", 255)
                                    .AddAvatar(53).FinalizeDialog();

                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest6.MissionId))
                        {
                            client.Inventory.Add(stream, Database.ItemType.Meteor, 2);
                            uint[] Items = new uint[]
                                {
                                    (uint)(700000 + (uint)Role.Flags.Gem.RefinedDragonGem)
                                    ,(uint)(700000 + (uint)Role.Flags.Gem.RefinedFuryGem)
                                    ,(uint)(700000 + (uint)Role.Flags.Gem.RefinedGloryGem)
                                    ,(uint)(700000 + (uint)Role.Flags.Gem.RefinedKylinGem)
                                    ,(uint)(700000 + (uint)Role.Flags.Gem.RefinedMoonGem)
                                    ,(uint)(700000 + (uint)Role.Flags.Gem.RefinedPhoenixGem)
                                    ,(uint)(700000 + (uint)Role.Flags.Gem.RefinedRainbowGem)
                                    ,(uint)(700000 + (uint)Role.Flags.Gem.RefinedThunderGem)
                                    ,(uint)(700000 + (uint)Role.Flags.Gem.RefinedTortoiseGem)
                                    ,(uint)(700000 + (uint)Role.Flags.Gem.RefinedVioletGem)
                                };
                            uint ItemID = Items[(uint)Program.GetRandom.Next(0, Items.Length)];

                            client.Inventory.Add(stream, ItemID);
                            client.CreateBoxDialog("You~received~2~Meteors!~Find~the~Magic~Artisan~in~the~market~(259,248)~to~level~up~your~equipment!");
                            client.SendSysMesage("You`ve~received~some~EXP,~2,000~Silver,~a~random~Gem~and~2~Meteors!", MsgMessage.ChatMode.System);
                            client.IncreaseExperience(stream, 2719000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        break;
                    }
                case 40:
                    {
                        data.AddText("Inscription? Hurry to deliver it to Sculptor He!")
                           .AddOption("I`m~on~my~way.", 41)
                           .AddAvatar(53).FinalizeDialog();

                        break;
                    }
                case 41:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                                    .AddOption("Let me check.", 255)
                                    .AddAvatar(53).FinalizeDialog();

                            break;
                        }
                        if (!client.Inventory.Contain(711408, 1))
                        {
                            client.Inventory.Add(stream, 711408);

                            client.CreateBoxDialog("Hurry~to~deliver~the~Inscription~to~Sculptor~He.");

                        }
                        break;
                    }

                case 30:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("You came at the right time! A refugee camp in Desert was surrounded by a group of Hill Monsters.")
                      .AddText("~Go kill 20 of them, and report back to General ZhuGe!")
                       .AddOption("Okay.", 255)
                       .AddAvatar(53).FinalizeDialog();
                            break;
                        }
                        data.AddText("Gulp! Those villagers in the east of Desert haven`t recovered from the sandstorm, and another threat from the Hill Monsters came.")
                       .AddText("~Go kill 20 of the Hill Monsters, and report back to General ZhuGe!")
                            .AddOption("I~won`t~let~you~down.", 31)
                        .AddOption("I`m~busy.", 255)
                        .AddAvatar(53).FinalizeDialog();

                        break;
                    }
                case 31:
                    {
                        client.CreateBoxDialog("Hurry~to~kill~20~Hill~Monsters!");
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);

                        break;
                    }
                case 20:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest3.MissionId, 30))
                            {
                                data.AddText("Good job! Here`s your reward!")
                      .AddOption("Thanks.", 22)
                      .AddAvatar(53).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Have you killed the Sand Monsters, yet? Go patrol outside the city gates. You`ll find plenty of them roaming around.")
                         .AddOption("Roger.", 255)
                         .AddAvatar(53).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("Misfortune never comes alone. This time, I need you to kill 30 Level 68 Sand Monsters!")
                          .AddOption("Got~it.", 21)
                          .AddOption("Not~interested.", 255)
                          .AddAvatar(53).FinalizeDialog();

                        break;
                    }
                case 21:
                    {
                        client.CreateBoxDialog("Hurry~to~kill~30~Level~68~Sand~Monsters!");
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);

                        break;
                    }
                case 22:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                        {
                            client.CreateBoxDialog("You`ve~received~some~EXP~and~3,000~Silver!");
                            client.IncreaseExperience(stream, 2719000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 50))
                            {
                                data.AddText("Thanks for what you`ve done!")
                      .AddOption("My~pleasure.", 12)
                      .AddAvatar(53).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("The cruel Sand Monsters often attack the travellers who pass through here. I need you to kill 50 of them!")
                         .AddOption("I`ll~set~out~right~away.", 255)
                         .AddAvatar(53).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("The cruel Sand Monsters often attack the travellers. I need you to kill 50 of them!")
                          .AddOption("I~will.", 11)
                          .AddOption("Why~me?", 255)
                          .AddAvatar(53).FinalizeDialog();

                        break;
                    }
                case 12:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.CreateBoxDialog("You~received~2,519,000~EXP~and~3,000~Silver!");
                            client.IncreaseExperience(stream, 2519000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        break;
                    }
                case 11:
                    {
                        client.CreateBoxDialog("Hurry~to~kill~50~Sand~Monsters!");
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);

                        break;
                    }
                case 1:
                    {
                        data.AddText("Captor Cooke sent you here? Thanks for delivering the letter.")
                            .AddOption("You`re~welcome.", 2)
                            .AddAvatar(53).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
         .AddOption("Let me check.", 255)
         .AddAvatar(53).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.AddItemWitchStack(1002000, 0, 5, stream);
                            client.CreateBoxDialog("You`ve~received~some~EXP,~1,500~Silver~and~5~Panaceas!");
                            client.IncreaseExperience(stream, 1739000);
                            client.Player.Money += 1500;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }
                        break;
                    }
            }

        }

        [NpcAttribute(NpcID.WitheredTree1)]
        public static void WitheredTree1(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("This is a withered tree.")
                           .AddOption("Use~Healing~Water.", 1).AddOption("Leave.", 255)
             .FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaoistYu, client.Player.Class, 1459);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1))
                            {
                                client.CreateBoxDialog("You`ve~watered~this~tree~already.");
                            }
                            else
                            {
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "relive1");
                                client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 1);
                                if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1, 1, 1))
                                    client.CreateBoxDialog("You`ve~watered~all~the~Withered~Trees.~Go~report~to~Lotus.");
                                else
                                    client.CreateBoxDialog("You`ve~watered~the~tree~with~the~Healing~Water.~Instantly,~it~becomes~green~and~full~of~life!");
                            }
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.WitheredTree2)]
        public static void WitheredTree2(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("This is a withered tree.")
                           .AddOption("Use~Healing~Water.", 1).AddOption("Leave.", 255)
             .FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaoistYu, client.Player.Class, 1459);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 0, 1))
                            {
                                client.CreateBoxDialog("You`ve~watered~this~tree~already.");
                            }
                            else
                            {
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "relive1");
                                client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 0, 1);
                                if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1, 1, 1))
                                    client.CreateBoxDialog("You`ve~watered~all~the~Withered~Trees.~Go~report~to~Lotus.");
                                else
                                    client.CreateBoxDialog("You`ve~watered~the~tree~with~the~Healing~Water.~Instantly,~it~becomes~green~and~full~of~life!");
                            }
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.WitheredTree3)]
        public static void WitheredTree3(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("This is a withered tree.")
                           .AddOption("Use~Healing~Water.", 1).AddOption("Leave.", 255)
             .FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaoistYu, client.Player.Class, 1459);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 0, 0, 1))
                            {
                                client.CreateBoxDialog("You`ve~watered~this~tree~already.");
                            }
                            else
                            {
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "relive1");
                                client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 0, 0, 1);
                                if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1, 1, 1))
                                    client.CreateBoxDialog("You`ve~watered~all~the~Withered~Trees.~Go~report~to~Lotus.");
                                else
                                    client.CreateBoxDialog("You`ve~watered~the~tree~with~the~Healing~Water.~Instantly,~it~becomes~green~and~full~of~life!");
                            }
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.TaoistYu)]
        public static void TaoistYu(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaoistYu, client.Player.Class, 1461);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DCViceGenera, client.Player.Class, 1454);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaoistYu, client.Player.Class, 1455);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Lotus, client.Player.Class, 1456);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaoistYu, client.Player.Class, 1457);
            var ActiveQuest6 = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaoistYu, client.Player.Class, 1458);
            var ActiveQuest7 = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaoistYu, client.Player.Class, 1459);
            switch (Option)
            {
                case 0:
                    {


                        data.AddText("The desert seems to be dead, without anything moving around. But I think treasures are always hidden under a barren land. That`s why I`m here! I`m looking for a talisman!");

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("The~Withered~Trees~1.", 30);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                            && client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("The~Withered~Trees~2.", 40);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                          && client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("The~Withered~Trees~3.", 50);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                && client.Player.QuestGUI.CheckQuest(ActiveQuest7.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("The~Withered~Trees~4.", 60);

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Collecting~Sand~Essence.", 1);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Hidden~Danger~3.", 10);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            if (!client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                                data.AddOption("Hidden~Danger~4.", 20);
                        }
                        data.AddOption("Leave.", 255);
                        data.AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 60:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest7.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("OK. The Healing Water is done! You`ll need to water the 5 Withered Trees. After that, go tell Lotus about it.")
                         .AddOption("I~will.", 255)
                         .AddAvatar(67).FinalizeDialog();

                            break;
                        }
                        data.AddText("Here`s an Emerald Bottle. You`re going to head to the Moon Spring and collect some water.")
                          .AddOption("You~can~count~on~me.", 61)
                          .AddOption("Is~it~dangerous?", 255)
                          .AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 61:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                                .AddOption("Let me check.", 255)
                                .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        client.Inventory.Add(stream, 711340);
                        client.CreateBoxDialog("You`ve~received~the~Healing~Water!");
                        client.Player.QuestGUI.Accept(ActiveQuest7, 0);
                        break;
                    }
                case 50:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(711341, 1))
                            {
                                data.AddText("I`ll use the Moon Spring and Sand Blocker to make the Healing Water. Please wait a moment.")
                          .AddOption("Take~your~time.", 53)
                          .AddAvatar(67).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("To save the withered trees, we also need to collect the Sand Blocker. It`s carried by the Sand Monsters. Would you like to do me the favor?")
                                 .AddOption("Sure.", 255)
                                 .AddAvatar(67).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("To save the withered trees, we also need to collect the Sand Blocker. It`s carried by the Sand Monsters. Would you like to do me this favor?")
                               .AddOption("Sure.", 52)
                               .AddOption("I`ll~think~about~it.", 255)
                               .AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 53:
                    {
                        if (!client.Inventory.HaveSpace(3))
                        {
                            data.AddText("Please make 3 more spaces in your inventory.")
                                .AddOption("Let me check.", 255)
                                .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest6.MissionId))
                        {

                            client.Inventory.Add(stream, Database.ItemType.Meteor, 3);
                            client.Inventory.AddItemWitchStack(1002000, 0, 5, stream);
                            client.SendSysMesage("You've~received~some~EXP~3,000~Silver,~5~Panaceas,~and~2~Meteors!", MsgMessage.ChatMode.System);
                            client.CreateBoxDialog("You~received~2~Meteors!~Find~the~Magic~Artisan~in~the~market~(259,248)~to~level~up~your~equipment!");
                            client.IncreaseExperience(stream, 2719000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }
                        break;
                    }
                case 40:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest5.MissionId, 1))
                            {
                                data.AddText("Good job! I didn`t expect you would come back so soon.")
                              .AddOption("It`s~a~piece~of~cake.", 42)
                              .AddAvatar(67).FinalizeDialog();
                            }
                            else
                            {

                                data.AddText("Here`s an Emerald Bottle. You`re going to head to the Moon Spring and collect some water.")
                       .AddText("~Beware of the Sand Monsters, as they`re drawn to the magic of the bottle and may try to steal it!")
                               .AddOption("OK.~I~will.", 255)
                               .AddAvatar(67).FinalizeDialog();
                            }

                            break;
                        }
                        data.AddText("Here`s an Emerald Bottle. You`re going to need to head to the Moon Spring and collect some water.")
                            .AddText("~Beware of the Sand Monsters, as they`re drawn to the magic of the bottle and may try to steal it!")
                                    .AddOption("OK.~I~will.", 41)
                                    .AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 41:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                                .AddOption("Let me check.", 255)
                                .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        client.Inventory.Add(stream, 720938);
                        client.CreateBoxDialog("You`ve~received~an~Emerald~Bottle.");
                        client.Player.QuestGUI.Accept(ActiveQuest5, 0);
                        break;
                    }
                case 30:
                    {
                        data.AddText("Save the withered trees? Let me see...")
                                   .AddOption("Take~your~time.", 31)
                                   .AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 42:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest5.MissionId))
                        {
                            client.CreateBoxDialog("You`ve~received~some~EXP~and~3,000~Silver!");
                            client.IncreaseExperience(stream, 2719000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }
                        data.AddText("To save the withered trees, we also need to collect the Sand Blocker. It`s carried by the Sand Monsters. Would you like to do me this favor?")
                                  .AddOption("Sure.", 52)
                                  .AddOption("I`ll~think~about~it.", 255)
                                  .AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 52:
                    {
                        client.CreateBoxDialog("Go~fetch~a~Sand~Blocker~from~the~Sand~Monsters.");
                        client.Player.QuestGUI.Accept(ActiveQuest6, 0);
                        break;
                    }
                case 31:
                    {
                        if (!client.Inventory.HaveSpace(2))
                        {
                            data.AddText("Please make 2 more spaces in your inventory.")
                                .AddOption("Let me check.", 255)
                                .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                        {
                            client.Inventory.AddItemWitchStack(720173, 0, 2, stream);
                            client.CreateBoxDialog("You`ve~received~some~EXP,~1,000~Silver~and~2~SmallJoyStone!");
                            client.IncreaseExperience(stream, 2719000);
                            client.Player.Money += 1000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }
                        data.AddText("Here`s an Emerald Bottle. You`re going to need to head to the Moon Spring and collect some water.")
                          .AddText("~Beware of the Sand Monsters, as they`re drawn to the magic of the bottle and may try to steal it!")
                                  .AddOption("OK.~I~will.", 41)
                                  .AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 20:
                    {
                        data.AddText("Here`s a Jade Flask. You`re going to collect some water from the source in the city and spread the water over the city gates.")
                            .AddText("~After that, the Sand Monsters will be unable to go through the gates or enter the city. Don`t forget to inform the DC Vice General of the news.")

                           .AddOption("I`ll~do~right~away.", 22)
                            .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 22:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                                .AddOption("Let me check.", 255)
                                .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        if (!client.Inventory.Contain(720939, 1))
                            client.Inventory.Add(stream, 720939);
                        client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest3.MissionId, 1);
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        client.CreateBoxDialog("You`ve~received~a~Jade~Flask.~Hurry~to~collect~some~water!");

                        break;
                    }
                case 10:
                    {
                        data.AddText("You were sent by the DC Vice General? Anything I can help you with?")
                              .AddOption("Check~this~Sandbag.", 11)
                              .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 11:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.CreateBoxDialog("You`ve~received~some~EXP~and~1,000~Silver!");
                            client.IncreaseExperience(stream, 2719000);
                            client.Player.Money += 1000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(711343, 10))
                            {
                                data.AddText("You really impressed me! Thank you very much!")
                                  .AddOption("You`re~welcome.", 3)
                                  .AddAvatar(67).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Have you ever heard of the Sand Essence? It`s the perfect material to forge a talisman. As far as I know, some Level 68 Sand Monsters are carrying the Sand Essence.")
                                    .AddText("~Can you go collect 10 for me?")
                                    .AddOption("Sure.", 255)
                                    .AddAvatar(67).FinalizeDialog();
                            }

                            break;
                        }
                        data.AddText("Have you ever heard of the Sand Essence? It`s a perfect material to forge a talisman. As far as I know, some Level 68 Sand Monsters are carrying the Sand Essence.")
                      .AddText("~Can you go collect 10 for me?")
                           .AddOption("Glad~to~help.", 2)
                       .AddOption("None~of~my~business.", 255)
                       .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        client.CreateBoxDialog("Hurry~to~go~collect~10~Sand~Essences!");
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);

                        break;

                    }
                case 3:
                    {
                        if (!client.Inventory.HaveSpace(2))
                        {
                            data.AddText("Please make 2 more spaces in your inventory.")
                                .AddOption("Let me check.", 255)
                                .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Remove(711343, 10, stream);
                            client.CreateBoxDialog("You~received~a~+1~Stone~(B)!~Find~the~Socketsmith~in~the~market~(178,204)~to~compose~your~equipment!");
                            client.SendSysMesage("You've~received~some~EXP,~3,000~Silver,~an~EXP~Ball~Scrap~and~a~+1~Stone~(B)!", MsgMessage.ChatMode.System);

                            client.Inventory.Add(stream, 720172);
                            client.Inventory.Add(stream, 730001, 1, 1, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.IncreaseExperience(stream, 2719000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.SpringSoldierZhao)]
        public static void SpringSoldierZhao(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.SpringSoldierZhao, client.Player.Class, 1504);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.SpringSoldierZhao, client.Player.Class, 1505);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.GeneralZhuGe, client.Player.Class, 1506);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.SpringSoldierZhao, client.Player.Class, 1507);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Let`s wait and see. The backup will arrive, soon. We are going to remove all the monsters!");

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Poisonous~Water~1.", 1);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Poisonous~Water~2.", 10);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Poisonous~Water~3.", 20);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Poisonous~Water~4.", 30);
                        data.AddOption("Bye.", 255);
                        data.AddAvatar(92).FinalizeDialog();
                        break;
                    }
                case 30:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest4.MissionId, 1))
                            {
                                data.AddText("Well done! Please accept these rewards.")
             .AddOption("Thanks.", 32).AddAvatar(92)
             .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Why are you still here? I need you to put the Antidote into the source of the Moon Spring, right away!")
                .AddOption("I`m~on~my~way.", 255).AddAvatar(92)
                .FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("I need you to put the Antidote into the source of the Moon Spring, right away! Beware of the Level 83 Blade Ghosts, on the way.")
                    .AddOption("I~will.", 31)
                  .AddOption("I`m~busy.", 255).AddAvatar(92)
                  .FinalizeDialog();
                        break;
                    }
                case 32:
                    {
                        if (!client.Inventory.HaveSpace(2))
                        {
                            data.AddText("Please make 2 more spaces in your inventory.")
                           .AddOption("Let me check.", 255).AddAvatar(92)
                           .FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                        {
                            client.Inventory.Add(stream, 730002, 1, 2);
                            client.Inventory.AddItemWitchStack(Database.ItemType.DoubleExp, 0, 0, stream);
                            client.IncreaseExperience(stream, 2952000);
                            client.Player.Money += 2000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You've~received~some~EXP~3,000~Silver,~and~EXP~Postion~and~a~+2~Stone~(B)!", MsgMessage.ChatMode.System);
                            client.CreateBoxDialog("You~received~a~+2~Stone~(B)!~Find~the~Socketsmith~in~the~market~(178,204)~to~compose~your~equipment!");
                        }
                        break;
                    }
                case 31:
                    {
                        if (client.Inventory.Contain(720968, 1) == false)
                            client.Inventory.Add(stream, 720968);

                        client.CreateBoxDialog("You`ve~received~an~Antidote.~Hurry~to~put~it~into~the~Moon~Spring.");
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        break;
                    }
                case 20:
                    {
                        if (client.Inventory.Contain(720968, 1))
                        {
                            data.AddText("Thanks for the antidote! Here`s your reward!")
                          .AddOption("Okay.", 21).AddAvatar(92)
                          .FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Come back when you will have Antidote.")
                        .AddOption("Okay.", 255).AddAvatar(92)
                        .FinalizeDialog();
                        }
                        break;
                    }
                case 21:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                        {

                            client.IncreaseExperience(stream, 2952000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You`ve~received~some~EXP~and~3,000~Silver!");
                        }
                        data.AddText("I need you to put the Antidote into the source of the Moon Spring, right away! Beware of the Level 83 Blade Ghosts, on the way.")
                            .AddOption("I~will.", 31)
                          .AddOption("I`m~busy.", 255).AddAvatar(92)
                          .FinalizeDialog();
                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Does General ZhuGe have a solution?")
                          .AddOption("I`m~on~my~way.", 255).AddAvatar(92)
                          .FinalizeDialog();
                            break;
                        }
                        data.AddText("The Moon Spring was poisoned! I need you to pay a visit to General ZhuGe and ask him how to solve this problem!")
                            .AddOption("I`ll~be~back~soon.", 11)
                            .AddOption("Later.", 255).AddAvatar(92)
                            .FinalizeDialog();

                        break;
                    }
                case 11:
                    {
                        client.CreateBoxDialog("Hurry~to~head~to~see~General~ZhuGe.");
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1))
                        {
                            data.AddText("So the Moon Spring is poisoned! Thank you very much for your help.")
                                .AddOption("My~pleasure.", 3).AddAvatar(92)
                                .FinalizeDialog();

                            break;//finish
                        }
                        if (client.Inventory.Contain(720967, 1))
                        {
                            data.AddText("Did you take the Moon Spring I gave to you?")
                .AddOption("Nope.", 255).AddAvatar(92)
                .FinalizeDialog();
                            break;
                        }
                        data.AddText("Recently, many villagers were poisoned by drinking the water from the Moon Spring. Could you test if the water is toxic?")
                .AddOption("Yes,~I`d~love~to.", 2)
                .AddOption("Of~course~not.", 255).AddAvatar(92)
                .FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            //  client.Inventory.Add(stream, 120159, 1,0,0,0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket,true);
                            client.IncreaseExperience(stream, 2952000);
                            client.Player.Money += 2000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You`ve~received~EXP~worth~1/3~EXP~Ball~and~2,000~Silver!");
                        }
                        break;
                    }
                case 2:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                           .AddOption("Let me check.", 255).AddAvatar(92)
                           .FinalizeDialog();
                            break;
                        }
                        client.Inventory.Add(stream, 720967);
                        client.CreateBoxDialog("You`ve~received~the~Moon~Spring.~Hurry~to~test~if~it~is~poisonous.");
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.TaoistSpring)]
        public static void TaoistSpring(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaoistSpring, client.Player.Class, 1501);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaoistSpring, client.Player.Class, 1502);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaoistSpring, client.Player.Class, 1503);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("People believe the Moon Spring is blessed by the god of water. We should be grateful for every drop of water he provides!");

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Worship~the~Water~God~1.", 1);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Worship~the~Water~God~2.", 10);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Worship~the~Water~God~3.", 20);
                        data.AddOption("Leave.", 255);
                        data.AddAvatar(43).FinalizeDialog();
                        break;



                    }
                case 20:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest3.MissionId, 1))
                        {
                            data.AddText("Thank you very much. The god will bless the Moon Spring and the whole village!")
            .AddOption("Great!", 22).AddAvatar(43)
            .FinalizeDialog();
                            break;
                        }
                        if (client.Inventory.Contain(720966, 1))
                        {
                            data.AddText("What`s up? You`re going to find the grids where 1 and 6 are located, and then sacrifice the offering to god.")
                  .AddOption("I~see.", 255).AddAvatar(43)
                  .FinalizeDialog();
                            break;
                        }

                        data.AddText("Do you still remember where the number 1 and 6 are? Take Blade Ghost`s Ear and worship the god of water there.")
              .AddOption("Okay.", 21)
              .AddOption("Later.", 255).AddAvatar(43)
              .FinalizeDialog();
                        break;
                    }
                case 22:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                           .AddOption("Let me check.", 255).AddAvatar(43)
                           .FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                        {
                            client.Inventory.Add(stream, 120159, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.IncreaseExperience(stream, 2952000);
                            client.Player.Money += 2000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You`ve~received~EXP~worth~1/3~EXP~Ball,~2,000~Silver,~a~Super~Necklace!");
                        }
                        break;
                    }
                case 21:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                           .AddOption("Let me check.", 255).AddAvatar(43)
                           .FinalizeDialog();
                            break;
                        }
                        client.Inventory.Add(stream, 720966);
                        client.CreateBoxDialog("You`ve~received~an~offering.~Hurry~go~to~the~worship~ceremony.");
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {

                            if (client.Inventory.Contain(711410, 1) && client.Inventory.Contain(711411, 1)
                                && client.Inventory.Contain(711412, 1) && client.Inventory.Contain(711413, 1))
                            {
                                data.AddText("Let me see. Sand Pill, Hill Monster`s Heart, Rock Monster`s Tail and Blade Ghost`s Ear. Yup! They`re what I`m looking for.")
               .AddOption("Good.", 4).AddAvatar(43)
               .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("I need Sand Pill, Hill Monster`s Heart, Rock Monster`s Tail and Blade Ghost`s Ear. Have you collected all of them?")
               .AddOption("Not~yet.", 255).AddAvatar(43)
               .FinalizeDialog();
                            }

                            break;
                        }

                        data.AddText("We`re going to hold a worship ceremony. I need you to collect some offerings for me.")
                  .AddOption("Go~ahead.", 2)
                  .AddOption("Sorry,~I~have~to~leave.", 255).AddAvatar(43)
                  .FinalizeDialog();
                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Water: 1 (north) and 6 (northwest). Fire: 7 (west) and 2 (southwest). Gold: 9 (south) and 4 (southeast). Wood: 3 (east) and 8 (northeast). Earth: 5 (center).")
          .AddOption("I`m~ready.", 13).AddAvatar(43)
          .FinalizeDialog();
                            break;
                        }
                        data.AddText("There`re 9 squares marked on the platform. You must learn the rules before you can make a sacrifice.")
           .AddOption("What`re~the~rules?", 11)
           .AddOption("Later.", 255).AddAvatar(43)
           .FinalizeDialog();
                        break;
                    }
                case 13:
                    {
                        data.AddText("Where is number 5?")
                          .AddOption("A.~In~the~center.", 14)
                          .AddOption("B.~In~the~southeast.", 255).AddAvatar(43)
                          .FinalizeDialog();
                        break;
                    }
                case 14:
                    {
                        data.AddText("Bingo! You gave the correct answer! Good job!")
                            .AddOption("Great.", 15).AddAvatar(43)
                            .FinalizeDialog();
                        break;
                    }
                case 15:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                           .AddOption("Let me check.", 255).AddAvatar(43)
                           .FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.Inventory.AddItemWitchStack(1002000, 0, 5, stream);
                            client.IncreaseExperience(stream, 2952000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You`ve~received~some~EXP,~3,000~Silver~and~5~Panaceas!");
                        }
                        break;
                    }
                case 11:
                    {
                        data.AddText("Listen. 2, 9 and 4 (from left to right) are in the first line. 3, 5 and 7 are in the middle line. 8, 1 and 6 are in the bottom line.")
                            .AddOption("I~got~it.", 12).AddAvatar(43)
                            .FinalizeDialog();
                        break;
                    }
                case 12:
                    {
                        client.CreateBoxDialog("Talk~to~Taoist~Spring~to~answer~his~questions.");
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
                case 4:
                    {

                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Remove(711410, 1, stream);
                            client.Inventory.Remove(711411, 1, stream);
                            client.Inventory.Remove(711412, 1, stream);
                            client.Inventory.Remove(711413, 1, stream);
                            client.IncreaseExperience(stream, 2952000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You`ve~received~some~EXP~and~3,000~Silver!");
                        }
                        data.AddText("There`re 9 squares marked on the platform. You must learn the rules before you can make a sacrifice.")
              .AddOption("What`re~the~rules?", 11)
              .AddOption("Later.", 255).AddAvatar(43)
              .FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        data.AddText("Go kill the monsters and gather a Sand Pill, Hill Monster`s Heart, Rock Monster`s Tail and Blade Ghost`s Ear.")
                 .AddOption("I~see.", 3).AddAvatar(43)
                 .FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        client.CreateBoxDialog("Hurry~to~help~Taoist~Spring~to~collect~the~offerings.");
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.ElderJiang)]
        public static void ElderJiang(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.ElderJiang, client.Player.Class, 1508);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ElderJiang, client.Player.Class, 1509);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.SpringGeneralXu, client.Player.Class, 1510);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ElderJiang, client.Player.Class, 1511);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Stop asking me about the Straight Hook. You will get it, someday.");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Elder~Jiang~3.", 20);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Elder~Jiang~1.", 1);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Elder~Jiang~2.", 10);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Elder~Jiang~4.", 30);
                        data.AddOption("I`ll~leave~you~alone.", 255);
                        data.AddAvatar(63).FinalizeDialog();
                        break;



                    }
                case 30:
                    {
                        data.AddText("I`m waiting for someone who is in a higher position.")
                   .AddOption("Roger.", 31)
                   .AddOption("Bye.", 255).AddAvatar(63)
                   .FinalizeDialog();
                        break;
                    }
                case 20:
                    {
                        data.AddText("Spring General Xu? I`m waiting for someone who is in a higher position.")
                  .AddOption("Oh.", 21).AddAvatar(63)
                  .FinalizeDialog();
                        break;
                    }
                case 21:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                        {

                            client.IncreaseExperience(stream, 2952000);
                            client.Player.Money += 1000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You`ve~received~EXP~worth~1/6~EXP~Ball~and~1,000~Silver!");
                        }
                        data.AddText("I`m waiting for someone who is in a higher position.")
                        .AddOption("Roger.", 31)
                        .AddOption("Bye.", 255).AddAvatar(63)
                        .FinalizeDialog();
                        break;
                    }
                case 31:
                    {
                        client.CreateBoxDialog("You~should~report~it~to~the~DC~Vice~Captain.");
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Why a straight hook? Well, I`m not interested in the fish. I`m waiting for the nobles.")
                     .AddOption("Visit~Spring~General~Xu.", 255).AddAvatar(63)
                     .FinalizeDialog();
                            break;
                        }
                        data.AddText("You want to know why a straight hook? Well, I`m not interested in the fish. I`m waiting for the nobles.")
                       .AddOption("Aha.", 11)
                       .AddOption("See~ya.", 255).AddAvatar(63)
                       .FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        client.CreateBoxDialog("Hurry~to~report~it~to~Spring~General~Xu.");
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(711414, 1))
                            {
                                data.AddText("Great! That`s the Straight Hook! Why a straight hook? Haha, you`ll know that soon enough!")
                     .AddOption("Can`t~wait.", 3).AddAvatar(63)
                     .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Have you got a Straight Hook? Go kill the Blade Ghosts to grab one!")
                         .AddOption("Got~it.", 255).AddAvatar(63)
                         .FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("Look at the pool. It`s full of fish! Can you go get a Straight Hook from the Blade Ghost?")
                            .AddOption("Yes,~I~can.", 2)
                            .AddOption("Sorry,~I`m~busy.", 255).AddAvatar(63)
                            .FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Remove(711414, 1, stream);
                            client.IncreaseExperience(stream, 2952000);
                            client.Player.Money += 2000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You`ve~received~EXP~worth~1/3~EXP~Ball~and~2,000~Silver!");
                        }
                        data.AddText("You want to know why a straight hook? Well, I`m not interested in the fish. I`m waiting for the nobles.")
                        .AddOption("Aha.", 11)
                        .AddOption("See~ya.", 255).AddAvatar(63)
                        .FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        client.CreateBoxDialog("Hurry~to~kill~the~Blade~Ghosts~to~get~a~Straight~Hook.");
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.ConvoyViceLeader)]
        public static void ConvoyViceLeader(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.ConvoyViceLeader, client.Player.Class, 1485);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ConvoyViceLeader, client.Player.Class, 1486);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ConvoyViceLeader, client.Player.Class, 1487);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ConvoyViceLeader, client.Player.Class, 1488);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ConvoyViceLeader, client.Player.Class, 1489);
            var ActiveQuest6 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ConvoyViceLeader, client.Player.Class, 1490);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Leave me alone. I`m busy.");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Prove~Myself.", 1);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("The~Cactus~1.", 10);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("The~Cactus~2.", 20);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("The~Cactus~3.", 30);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("The~Cactus~4.", 40);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("The~Cactus~5.", 50);

                        data.AddOption("Alright.", 255);
                        data.AddAvatar(95).FinalizeDialog();
                        break;

                    }
                case 50:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("We have planted cactus on the way to the Moon Spring. It`ll prevent the monsters from getting close. Please inform Vice General Dong of the good news.")
.AddOption("Alright.", 255).AddAvatar(95)
.FinalizeDialog();
                            break;
                        }
                        data.AddText("We have planted cactus on the way to the Moon Spring. It`ll prevent the monsters from getting close. Please inform Vice General Dong of the good news.")
.AddOption("OK.", 51)
.AddOption("Later.", 255).AddAvatar(95)
.FinalizeDialog();
                        break;
                    }
                case 51:
                    {
                        client.CreateBoxDialog("Hurry~to~head~to~see~Vice~General~Dong.");
                        client.Player.QuestGUI.Accept(ActiveQuest6, 0);

                        break;
                    }
                case 40:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest5.MissionId, 1, 1, 1))
                        {
                            data.AddText("You`d been a great help! Here`s your reward!")
.AddOption("Thanks.", 42)
.AddOption("I`m~busy.", 255).AddAvatar(95)
.FinalizeDialog();
                            break;
                        }
                        data.AddText("I hope you can head to the Moon Spring and plant 3 cactus seeds there.")
.AddOption("You~can~count~on~me.", 41)
.AddOption("I`m~busy.", 255).AddAvatar(95)
.FinalizeDialog();
                        break;
                    }
                case 42:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {

                            data.AddText("Please make 1 more space in your inventory.")
            .AddOption("Let me check.", 255).AddAvatar(95)
            .FinalizeDialog();
                            return;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest5.MissionId))
                        {
                            client.Inventory.AddItemWitchStack(1002000, 0, 5, stream);
                            client.IncreaseExperience(stream, 2952000);
                            client.Player.Money += 2000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You`ve~received~some~EXP,~3,000~Silver~and~5~Panaceas!");
                        }
                        data.AddText("We have planted cactus on the way to the Moon Spring. It`ll prevent the monsters from getting close. Please inform Vice General Dong of the good news.")
.AddOption("OK.", 51)
.AddOption("Later.", 255).AddAvatar(95)
.FinalizeDialog();
                        break;
                    }
                case 41:
                    {
                        if (!client.Inventory.Contain(720965, 1))
                            client.Inventory.Add(stream, 720965);
                        client.CreateBoxDialog("You`ve~received~some~cactus~seeds.~Hurry~to~go~plant~them.");
                        client.Player.QuestGUI.Accept(ActiveQuest5, 0);
                        break;
                    }
                case 30:
                    {

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(720965, 1))
                            {
                                data.AddText("Good job! So we must hurry to plant them.")
 .AddOption("I~agree.", 32).AddAvatar(95)
 .FinalizeDialog();

                            }
                            else
                            {
                                data.AddText("I have an idea. If we plant this cactus outside the village, the monsters won`t dare get close! I hear Wan Ying has the cactus seeds. Would you like to borrow some?")
  .AddOption("Sure.", 255).AddAvatar(95)
  .FinalizeDialog();
                            }

                            break;
                        }
                        data.AddText("I have an idea. If we plant this cactus outside the village, the monsters won`t dare get close! I hear Wan Ying has the cactus seeds.")
   .AddOption("I`ll~go~borrow~some.", 31)
   .AddOption("None~of~my~business.", 255).AddAvatar(95)
   .FinalizeDialog();
                        break;
                    }
                case 32:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                        {


                            client.IncreaseExperience(stream, 2952000);
                            client.Player.Money += 2000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You`ve~received~some~EXP~and~2,000~Silver!");
                        }
                        data.AddText("I hope you can head to the Moon Spring and plant 3 cactus seeds there.")
.AddOption("You~can~count~on~me.", 41)
.AddOption("I`m~busy.", 255).AddAvatar(95)
.FinalizeDialog();

                        break;
                    }
                case 31:
                    {
                        client.CreateBoxDialog("Hurry~to~ask~Wan~Ying~for~some~cactus~seeds.");
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        break;
                    }
                case 20:
                    {
                        if (client.Inventory.Contain(720963, 1))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest3.MissionId, 1))
                            {
                                data.AddText("They are afraid of cactus? Great! Now, the real question is why....")
        .AddOption("Yup.", 22).AddAvatar(95)
        .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Go test if the Level 78 Rock Monsters are afraid of the cactus.")
            .AddOption("Okay!", 255).AddAvatar(95)
            .FinalizeDialog();
                                client.CreateBoxDialog("Use~the~Cactus~on~the~Level~78~Rock~Monsters.");
                            }
                            break;
                        }
                        data.AddText("I need you to do me a favor. Wave the cactus in front of the Level 78 Rock Monsters and watch their reaction.")
                         .AddOption("Interesting.", 21)
                        .AddOption("I`m~busy.", 255)
                        .AddAvatar(95)
                        .FinalizeDialog();
                        break;
                    }
                case 22:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                        {
                            client.Inventory.Remove(711403, 1, stream);
                            client.IncreaseExperience(stream, 2952000);
                            client.Player.Money += 2000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You`ve~received~some~EXP~and~2,000~Silver!");
                        }
                        data.AddText("I have an idea. If we plant this cactus outside the village, the monsters won`t dare get close! I hear Wan Ying has the cactus seeds.")
      .AddOption("I`ll~go~borrow~some.", 31)
      .AddOption("None~of~my~business.", 255).AddAvatar(95)
      .FinalizeDialog();
                        break;
                    }
                case 21:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {

                            data.AddText("Please make 1 more space in your inventory.")
            .AddOption("Let me check.", 255).AddAvatar(95)
            .FinalizeDialog();
                            return;
                        }
                        client.CreateBoxDialog("You`ve~received~a~cactus.~Go~test~if~the~Level~78~Rock~Monsters~are~afraid~of~it.");
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        client.Inventory.Add(stream, 720963);
                        break;
                    }

                case 10:
                    {
                        if (client.Inventory.Contain(720961, 1))
                        {
                            if (client.Inventory.Contain(711403, 1))
                            {
                                data.AddText("Well done! I`ll work out the secret!")
           .AddOption("Good~luck.", 14).AddAvatar(95)
           .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("The Level 78 Rock Monsters never get close to the cactus. That`s interesting. Would you like to fetch me a cactus?")
            .AddOption("Sure.", 255).AddAvatar(95)
            .FinalizeDialog();
                            }

                            break;
                        }
                        data.AddText("Listen, I noticed an interesting thing. The Level 78 Rock Monsters never get close to the cactus. Would you like to fetch me one of those cactus?")
                        .AddText("~I`d like to give it a good once over and see if we can use this to our advantage...")
                            .AddOption("Of~course.", 11)
                           .AddOption("Nope.", 255)
                           .AddAvatar(95)
                           .FinalizeDialog();
                        break;
                    }

                case 14:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.Inventory.Remove(720961, 1, stream);
                            client.Inventory.Remove(711403, 1, stream);
                            client.IncreaseExperience(stream, 2952000);
                            client.Player.Money += 2000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You~received~2,952,000~EXP~and~2,000~Silver!");
                        }

                        data.AddText("I need you to do me a favor. Wave the cactus in front of the Level 78 Rock Monsters and watch their reaction.")
                        .AddOption("Interesting.", 21)
                       .AddOption("I`m~busy.", 255)
                       .AddAvatar(95)
                       .FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        data.AddText("Here`s a Sickle. You need to wait 10 seconds each time you use it, or else it could break.")
                            .AddOption("Roger.", 12)
                           .AddAvatar(95)
                           .FinalizeDialog();
                        break;
                    }

                case 12:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {

                            data.AddText("Please make 1 more space in your inventory.")
            .AddOption("Let me check.", 255).AddAvatar(95)
            .FinalizeDialog();
                            return;
                        }
                        client.Inventory.Add(stream, 720961);
                        client.CreateBoxDialog("You`ve~received~a~Sickle.~Go~fetch~a~Cactus!");
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(711402, 1))
                            {
                                data.AddText("Good job! You`re welcome to join us and help protect the village!")
                    .AddOption("Great.", 4)
                    .AddAvatar(95)
                    .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Are you scared? Go get a Monster Tail, then.")
                      .AddOption("I`m~on~my~way.", 255)
                      .AddAvatar(95)
                      .FinalizeDialog();
                            }

                            break;
                        }
                        data.AddText("You want to join us? Well, you`ll have to prove yourself, first.")
                            .AddOption("How?", 2)
                            .AddOption("Forget~it.", 255)
                            .AddAvatar(95)
                            .FinalizeDialog();

                        break;
                    }
                case 4:
                    {

                        if (!client.Inventory.HaveSpace(3))
                        {

                            data.AddText("Please make 3 more spaces in your inventory.")
            .AddOption("Let me check.", 255).AddAvatar(95)
            .FinalizeDialog();
                            return;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Remove(711402, 1, stream);
                            client.IncreaseExperience(stream, 711348);
                            client.Inventory.Add(stream, Database.ItemType.Meteor, 2);
                            client.Inventory.Add(stream, 720173);

                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You`ve~received~some~EXP~3,000~Silver,~a~Small~Joy~Stone~and~2~Meteors!", MsgMessage.ChatMode.System);
                            client.CreateBoxDialog("You~received~2~Meteors!~Find~the~Magic~Artisan~in~the~market~(259,248)~to~level~up~your~equipment!");
                        }
                        break;
                    }
                case 2:
                    {
                        data.AddText("Tell you what. Why don`t you go fetch a Monster Tail from the Level 78 Rock Monsters, then.")
                        .AddOption("I`ll~come~back~soon.", 3)
                        .AddAvatar(95)
                        .FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        client.CreateBoxDialog("Go~fetch~a~Monster~Tail~from~the~Level~78~Rock~Monsters!");
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.SpringViceGeneralOu)]
        public static void SpringViceGeneralOu(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.SpringViceGeneralOu, client.Player.Class, 1494);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.SpringViceGeneralOu, client.Player.Class, 1500);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.SpringViceGeneralOu, client.Player.Class, 6128);


            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I enjoy studying about smithing and forging powerful weapons for our soldiers!");

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Sharp~Blade.", 1);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("The~Avenger.", 10);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Deliver~the~Water~(Daily).", 20);

                        data.AddOption("Bye.", 255);
                        data.AddAvatar(107).FinalizeDialog();
                        break;

                    }

                case 20:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            client.Player.QuestGUI.SendAutoPatcher(1000, 490, 326, (ushort)NpcID.SoldierMu);
                            data.AddText("Hurry to deliver the water to the villagers!")
                      .AddOption("I`ll~go~right~away.", 255)
                      .AddAvatar(107).FinalizeDialog();
                            break;
                        }
                        data.AddText("These days, villagers are too scared because of the Blade Ghosts. I need some volunteers to disguise as Blade Ghosts and go fetch water for the villagers.")
                        .AddOption("Count~me~in.", 21)
                        .AddOption("Not~interested.", 255)
                        .AddAvatar(107).FinalizeDialog();
                        break;
                    }
                case 21:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {

                            data.AddText("Please make 1 more space in your inventory.")
            .AddOption("Let me check.", 255).AddAvatar(107)
            .FinalizeDialog();
                            return;
                        }
                        client.Player.TransformInfo = new Role.ClientTransform(client.Player);
                        client.Player.TransformInfo.CreateTransform(stream, (uint)client.Player.HitPoints, 240, 150, 1360);
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        client.CreateBoxDialog("You`ve~got~the~water.~Hurry~to~deliver~it~to~Soldier~Mu.");
                        client.Inventory.Add(stream, 711417);
                        client.Player.QuestGUI.SendAutoPatcher(1000, 490, 326, (ushort)NpcID.SoldierMu);
                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(711407, 5))
                            {
                                data.AddText("Thank you! You deserve the reward.")
            .AddOption("My~pleasure.", 13)
            .AddAvatar(107).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("I need you to kill the Level 83 Blade Ghosts and cut off their ears. Bring me back 5 ears, and I`ll have more work for you.")
                 .AddOption("Okay.", 255)
                 .AddAvatar(107).FinalizeDialog();
                            }


                            break;
                        }
                        data.AddText("I was injured by the Level 83 Blade Ghosts! I need you to give them a lesson!")
                         .AddOption("Go~ahead.", 11)
                         .AddOption("Sorry~to~hear~that.", 255)
                         .AddAvatar(107).FinalizeDialog();
                        break;
                    }
                case 13:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {

                            data.AddText("Please make 1 more space in your inventory.")
            .AddOption("Let me check.", 255).AddAvatar(107)
            .FinalizeDialog();
                            return;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.Inventory.Remove(711407, 5, stream);
                            client.IncreaseExperience(stream, 711348);
                            client.Inventory.AddItemWitchStack(720172, 0, 3, stream);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You`ve~received~EXP~worth~1/2~EXP~Ball,~3,000~Silver~and~3~EXPBallScrap!.");
                        }
                        break;
                    }
                case 11:
                    {
                        data.AddText("I need you kill them and cut their ears. What about bringing me 5 ears?")
                        .AddOption("No~problem.", 12)
                        .AddAvatar(107).FinalizeDialog();

                        break;
                    }
                case 12:
                    {
                        client.CreateBoxDialog("Hurry~to~collect~5~ears~from~the~Level~89~Blade~Ghosts.");
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }

                case 1:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(711406, 5))
                            {
                                data.AddText("That`s perfect. Thank you! Please, take your reward!")
            .AddOption("Thanks.", 4)
            .AddAvatar(107).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("I need you to gather 5 Sharp Blades from the Blade Ghosts.")
                 .AddOption("I~won`t~disappoint~you.", 255)
                 .AddAvatar(95).FinalizeDialog();
                            }


                            break;
                        }
                        data.AddText("I`m quite interested in the Blade Ghost`s weapon, the Sharp Blade.")
                         .AddOption("I`ll~go~get~some~for~you.", 2)
                         .AddOption("Leave.", 255)
                         .AddAvatar(107).FinalizeDialog();
                        break;
                    }
                case 4:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {

                            data.AddText("Please make 1 more space in your inventory.")
            .AddOption("Let me check.", 255).AddAvatar(107)
            .FinalizeDialog();
                            return;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Remove(711406, 5, stream);
                            client.IncreaseExperience(stream, 711348);
                            client.Inventory.Add(stream, Database.ItemType.Meteor);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You`ve~received~some~EXP,~3,000~Silver~and~a~Meteor!");


                        }
                        break;
                    }
                case 2:
                    {
                        data.AddText("The Blade Ghosts out there are carrying the Sharp Blades. I need 5, if you think you can get them.")
                        .AddOption("I`ll~be~back~soon.", 3)
                        .AddAvatar(63).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        client.CreateBoxDialog("Go~kill~the~Blade~Ghosts~to~collect~5~Sharp~Blades.");
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        break;
                    }
            }

        }
        [NpcAttribute(NpcID.SculptorHe)]
        public static void SculptorHe(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.SculptorHe, client.Player.Class, 1496);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.SculptorHe, client.Player.Class, 1497);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.SculptorHe, client.Player.Class, 1498);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hey, I`m Sculptor He. Here, I have many of my different sculptures and busts. Any interest in purchasing, perhaps?");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Inscription~1.", 1);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Inscription~2.", 10);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Inscription~3.", 20);
                        data.AddOption("Good.", 255);
                        data.AddAvatar(63).FinalizeDialog();
                        break;

                    }
                case 20:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest3.MissionId, 3))
                            {
                                data.AddText("I really appreciate your help. Here`s your reward!")
                         .AddOption("Thanks.", 22)
                         .AddAvatar(63).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("The noise I make when I hit the stone has enraged the Blade Ghosts. I hope you can protect me while I`m working, and hold back all the Angry Blade Ghosts.")
                                    .AddOption("Glad~to~help.", 21)
                                    .AddOption("I`ll~think~about~it.", 255)
                                    .AddAvatar(63).FinalizeDialog();
                            }
                            break;
                        }

                        data.AddText("The noise I make when I hit the stone has enraged the Blade Ghosts. I hope you can protect me while I`m working, and hold back all the Angry Blade Ghosts.")
                           .AddOption("Glad~to~help.", 21)
                           .AddOption("I`ll~think~about~it.", 255)
                           .AddAvatar(63).FinalizeDialog();
                        break;
                    }
                case 22:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {

                            data.AddText("Please make 1 more space in your inventory.")
            .AddOption("Let me check.", 255).AddAvatar(63)
            .FinalizeDialog();
                            return;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                        {
                            client.IncreaseExperience(stream, 711348);
                            client.Inventory.Add(stream, 150159, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);

                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You`ve~received~EXP~worth~1/2~EXP~Ball,~3,000~Silver~and~a~Super~Ring!");


                        }
                        break;
                    }
                case 21:
                    {
                        bool accept = true;
                        foreach (var mob in client.Player.View.Roles(Role.MapObjectType.Monster))
                        {
                            if ((mob as Game.MsgMonster.MonsterRole).Family.ID == 55434417)
                            {
                                accept = false;
                                break;
                            }
                        }
                        if (accept)
                        {
                            Database.Server.AddMapMonster(stream, client.Map, 55434417, client.Player.X, client.Player.Y, 7, 7, 1, 0, true, MsgFloorItem.MsgItemPacket.EffectMonsters.Night);
                            Database.Server.AddMapMonster(stream, client.Map, 55434417, client.Player.X, client.Player.Y, 7, 7, 1, 0, true, MsgFloorItem.MsgItemPacket.EffectMonsters.Night);
                            Database.Server.AddMapMonster(stream, client.Map, 55434417, client.Player.X, client.Player.Y, 7, 7, 1, 0, true, MsgFloorItem.MsgItemPacket.EffectMonsters.Night);

                            client.CreateBoxDialog("The~noise~brought~3~Angry~Blade~Ghosts.~Kill~them,~all!");
                            client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        }
                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(711409, 1))
                            {
                                data.AddText("Great! I`m working on the inscription, right now.")
                         .AddOption("Take~your~time.", 12)
                         .AddAvatar(63).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("What are you waiting for? I need you to get a Sharp Axe from the Blade Ghosts!")
                           .AddOption("OK.", 255)
                           .AddAvatar(63).FinalizeDialog();
                            }
                            break;
                        }

                        data.AddText("Oh, my! The chisel is broken! Listen, you must help me. I need you to get a Sharp Axe from the Blade Ghosts!")
                           .AddOption("I~won`t~disappoint~you.", 11)
                           .AddOption("I`ll~think~about~it.", 255)
                           .AddAvatar(63).FinalizeDialog();
                        break;
                    }
                case 12:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.IncreaseExperience(stream, 711348);
                            client.Inventory.Remove(711409, 1, stream);

                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You`ve~received~EXP~worth~1/2~EXP~Ball~and~3,000~Silver!");


                        }
                        break;
                    }
                case 11:
                    {
                        client.CreateBoxDialog("Hurry~to~kill~the~Blade~Ghosts~to~gain~a~Sharp~Axe.");
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(711408, 1))
                            {
                                data.AddText("Yup, that`s the Inscription. Thank you very much.")
                         .AddOption("You`re~welcome.", 3)
                         .AddAvatar(63).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("What happened? I need you to go fetch the Inscription from the DC Vice Captain.")
                           .AddOption("I`ll~go~right~away.", 255)
                           .AddAvatar(63).FinalizeDialog();
                            }
                            break;
                        }

                        data.AddText("I need you to do me a favor. Please go visit the DC Vice Captain and fetch the Inscription. I`ll make some changes.")
                           .AddOption("You~can~count~on~me.", 2)
                           .AddOption("Sorry,~I`m~busy.", 255)
                           .AddAvatar(63).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        client.CreateBoxDialog("Head~to~see~the~DC~Vice~Captain~to~fetch~the~Inscription.");
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        break;
                    }
                case 3:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {

                            data.AddText("Please make 1 more space in your inventory.")
            .AddOption("Let me check.", 255).AddAvatar(63)
            .FinalizeDialog();
                            return;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.IncreaseExperience(stream, 711348);
                            client.Inventory.Remove(711408, 1, stream);
                            client.Inventory.AddSteed(stream, 300000, 1, 1, true, 255, 0, 150);
                            client.Player.Money += 2000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You`ve~received~EXP~worth~1/3~EXP~Ball,~2,000~Silver~and~a~+1~Steed(B)!");


                        }
                        break;
                    }

            }

        }
        [NpcAttribute(NpcID.SpringGeneralXu)]
        public static void SpringGeneralXu(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.ConvoyLeaderGu, client.Player.Class, 1492);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.SpringGeneralXu, client.Player.Class, 1493);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.SpringGeneralXu, client.Player.Class, 1499);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ElderJiang, client.Player.Class, 1509);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)NpcID.SpringGeneralXu, client.Player.Class, 1510);


            switch (Option)
            {
                case 0:
                    {
                        data.AddText("My job is to guard the Moon Spring.");

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Elder~Jiang~2.", 30);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                            && client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Elder~Jiang~3.", 40);

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Visit~Spring~General.", 1);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Protect~the~Moon~Spring.", 10);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Kill~the~Blade~Ghosts~(L83).", 20);

                        data.AddOption("Good.", 255);
                        data.AddAvatar(107).FinalizeDialog();
                        break;
                    }
                case 40:
                    {
                        data.AddText("I really want to pay a visit to the elder. Please go ask if he is free to talk.")
                       .AddOption("I`d~love~to..", 41)
                       .AddOption("Why~not~go~there~yourself?", 255)
                       .AddAvatar(107).FinalizeDialog();
                        break;
                    }
                case 41:
                    {
                        client.CreateBoxDialog("Hurry~to~visit~Elder~Jiang.");
                        client.Player.QuestGUI.Accept(ActiveQuest5, 0);
                        break;
                    }
                case 30:
                    {
                        data.AddText("What? Catch fish on a straight hook and above the water? That`s interesting.")
                      .AddOption("Yeah..", 31)
                      .AddAvatar(107).FinalizeDialog();
                        break;
                    }
                case 31:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {

                            data.AddText("Please make 1 more space in your inventory.")
            .AddOption("Let me check.", 255).AddAvatar(107)
            .FinalizeDialog();
                            return;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                        {
                            client.IncreaseExperience(stream, 2711348);
                            client.Inventory.AddItemWitchStack(1002000, 0, 5, stream);
                            client.Player.Money += 1000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You`ve~received~EXP~worth~1/6~EXP~Ball,~1,000~Silver~and~5~Panaceas!");
                        }
                        data.AddText("I really want to pay a visit to the elder. Please go ask if he is free to talk.")
                        .AddOption("I`d~love~to..", 41)
                        .AddOption("Why~not~go~there~yourself?", 255)
                        .AddAvatar(107).FinalizeDialog();
                        break;
                    }
                case 20:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest3.MissionId, 30))
                            {
                                data.AddText("Thanks for what you`ve done for us.")
                              .AddOption("You`re~welcome.", 22)
                              .AddAvatar(107).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Have you killed 30 Level 83 Blade Ghosts, already?")
                                .AddOption("Not~yet.", 255)
                                .AddAvatar(107).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("Have you ever seen the Level 83 Blade Ghosts? They`re smaller than Blade Ghosts, but much crueler. Well, I need you to go kill 30 of them!")
                                  .AddOption("I~won`t~let~you~down.", 21)
                                  .AddOption("Bye.", 255)
                                  .AddAvatar(107).FinalizeDialog();
                        break;
                    }
                case 22:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {

                            data.AddText("Please make 1 more space in your inventory.")
            .AddOption("Let me check.", 255).AddAvatar(104)
            .FinalizeDialog();
                            return;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                        {
                            client.IncreaseExperience(stream, 711348);

                            client.Inventory.Add(stream, 730002, 1, 1);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You~received~a~+2~Stone~(B)!~Find~the~Socketsmith~in~the~market~(178,204)~to~compose~your~equipment!");
                            client.SendSysMesage("You`ve~received~EXP~worth~1/2~EXP~Ball,~3,000~Silver,~and~a~+2~Stone~(B)!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                case 21:
                    {
                        client.CreateBoxDialog("Hurry~to~kill~30~Level~83~Blade~Ghosts.");
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 50))
                            {
                                data.AddText("Keep up the good job. Here`s your reward!")
                                   .AddOption("Thanks.", 12)
                                   .AddAvatar(107).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("What are you waiting for? Go kill 50 Blade Ghosts!")
                                    .AddOption("I`m~on~my~way.", 255)
                                    .AddAvatar(107).FinalizeDialog();
                            }


                            break;
                        }
                        data.AddText("I don`t know why, but more and more Blade Ghosts are gathering outside the village. I need you to kill 50 of them!")
                                   .AddOption("You~can~count~on~me.", 11)
                                   .AddOption("Just~passing~by.", 255)
                                   .AddAvatar(107).FinalizeDialog();
                        break;
                    }
                case 12:
                    {
                        if (!client.Inventory.HaveSpace(3))
                        {

                            data.AddText("Please make 3 more spaces in your inventory.")
            .AddOption("Let me check.", 255).AddAvatar(104)
            .FinalizeDialog();
                            return;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.IncreaseExperience(stream, 711348);
                            client.Inventory.AddItemWitchStack(1002000, 0, 5, stream);
                            client.Inventory.Add(stream, Database.ItemType.Meteor);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You~received~2~Meteors!~Find~the~Magic~Artisan~in~the~market~(259,248)~to~level~up~your~equipment!");
                            client.SendSysMesage("You`ve~received~EXP~worth~1/2~EXP~Ball,~3,000~Silver,~5~Panaceas~and~2~Meteors!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                case 11:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.CreateBoxDialog("Hurry~to~kill~50~Blade~Ghosts.");
                        break;
                    }
                case 1:
                    {
                        data.AddText("It`s a good idea! I`ll ask the villagers to plant some cactus!")
                                     .AddOption("That~would~be~great!", 2)
                                     .AddAvatar(107).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.IncreaseExperience(stream, 711348);
                            client.Inventory.Add(stream, 720172);
                            client.Player.Money += 2000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You`ve~received~EXP~worth~1/3~EXP~Ball,~2,000~Silver~and~an~EXP~Ball~Scrap!");


                        }
                        break;
                    }
            }

        }
        [NpcAttribute(NpcID.ConvoyLeaderGu)]
        public static void ConvoyLeaderGu(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.SoldierMu, client.Player.Class, 1483);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ConvoyLeaderGu, client.Player.Class, 1484);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ConvoyLeaderGu, client.Player.Class, 1491);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ConvoyLeaderGu, client.Player.Class, 1492);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Nice to meet you. I`m new here.");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Visit~the~Convoy~Leader.", 1);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Leader`s~Trouble.", 10);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("The~Thunder~Stone.", 20);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Visit~Spring~General.", 30);

                        data.AddOption("Nice~to~meet~you,~too.", 255);
                        data.AddAvatar(104).FinalizeDialog();
                        break;
                    }
                case 30:
                    {
                        data.AddText("Spring General Xu is guarding the Moon Spring. He needs your help.")
                                      .AddOption("I`ll~go~visit~him.", 31)
                                      .AddAvatar(104).FinalizeDialog();
                        break;
                    }
                case 31:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        break;
                    }
                case 20:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(711405, 1))
                            {
                                client.Player.QuestGUI.SendAutoPatcher(1000, 482, 339, (ushort)NpcID.IronsmithLi);
                            }
                            else
                            {
                                data.AddText("Do you know anything about the Thunder Stone? I saw the Level 78 Rock Monsters carrying them. Please go grab one and deliver it to Ironsmith Li.")
                                          .AddOption("I`ll~do~right~away.", 255)
                                          .AddAvatar(104).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("Do you know anything about the Thunder Stone? I saw the Level 78 Rock Monsters carrying them. Please go grab one and deliver it to Ironsmith Li.")
                                       .AddOption("You~can~count~on~me.", 21)
                                       .AddOption("I`m~afraid~I~can`t~help.", 255)
                                       .AddAvatar(104).FinalizeDialog();
                        break;
                    }
                case 21:
                    {
                        client.CreateBoxDialog("Hurry~to~kill~the~Level~78~Rock~Monsters~to~grab~a~Thunder~Stone.");
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 30))
                            {
                                data.AddText("Thanks for your help! Please accept this reward!")
                                          .AddOption("Okay.", 12)
                                          .AddAvatar(104).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("The Level 78 Rock Monsters keep making troubles. They either attack villagers or steal the water. I need you to kill 30 of them!")
                                            .AddOption("I`m~on~my~way.", 255)
                                            .AddAvatar(104).FinalizeDialog();
                            }


                            break;
                        }
                        data.AddText("The Level 78 Rock Monsters keep making trouble. They either attack villagers or steal any water they can find. I need you to kill 30 of them!")
                           .AddOption("You~can~count~on~me.", 11)
                           .AddAvatar(104).FinalizeDialog();
                        break;
                    }
                case 12:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.IncreaseExperience(stream, 711348);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You`ve~received~some~EXP~and~3,000~Silver!");


                        }
                        break;
                    }
                case 11:
                    {
                        client.CreateBoxDialog("Go~kill~30~Level~78~Rock~Monsters!");
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
                case 1:
                    {
                        data.AddText("Thanks. I`ll turn to you if I need your help.")
                            .AddOption("Yup.", 2)
                            .AddAvatar(104).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {

                            data.AddText("Please make 1 more spaces in your inventory.")
            .AddOption("Let me check.", 255).AddAvatar(104)
            .FinalizeDialog();
                            return;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.AddItemWitchStack(720011, 0, 5, stream);
                            client.IncreaseExperience(stream, 711348);
                            client.Player.Money += 2000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You`ve~received~some~EXP,~2,000~Silver~and~5~Panaceas!");


                        }
                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.SoldierMu)]
        public static void SoldierMu(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.SoldierMu, client.Player.Class, 1480);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.SoldierMu, client.Player.Class, 1483);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.SpringViceGeneralOu, client.Player.Class, 6128);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I`ll give my life to guard this village. It`s my sworn duty!");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Deliver~the~Water~(Daily).", 20);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Rebuild~the~Village.", 1);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Visit~the~Convoy~Leader.", 10);

                        data.AddOption("Bye.", 255);
                        data.AddAvatar(101).FinalizeDialog();
                        break;
                    }
                case 20:
                    {
                        data.AddText("You brought the spring! Thank you!")
.AddOption("My~pleasure.", 21)
.AddAvatar(101).FinalizeDialog();
                        break;
                    }
                case 21:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                        {
                            client.Inventory.Remove(711417, 1, stream);
                            client.IncreaseExperience(stream, 711348);
                            client.Player.Money += 2000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You`ve~received~EXP~worth~1/3~EXP~Ball~and~2,000~Silver!");
                            client.Player.QuestGUI.SendAutoPatcher(1000, 339, 244, (ushort)NpcID.ConvoyViceLeader);

                        }
                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {

                            data.AddText("A team of soldiers were sent to protect the way to Moon Spring. Go visit Convoy Leader Gu and see if he needs any help.")
.AddOption("I`m~on~my~way.", 255)
.AddAvatar(101).FinalizeDialog();
                            break;
                        }
                        data.AddText("A team of soldiers were sent to protect the way to Moon Spring. Go visit Convoy Leader Gu and see if he needs any help.")
.AddOption("No~problem.", 11)
.AddOption("Later.", 255)
.AddAvatar(101).FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        client.CreateBoxDialog("Hurry~to~visit~Convoy~Leader~Gu.");
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);

                        break;
                    }
                case 1:
                    {

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {

                            if (client.Inventory.Contain(711349, 5))
                            {
                                data.AddText("Ah, so many Colorful Stones! Thank you! You`d been a great help!")
.AddOption("Welcome~to~Conquer~Online.", 3)
.AddAvatar(101).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("I`m gathering some Colorful Stones to rebuild the village. Please kill the Rock Monsters to collect 5 Colorful Stones for me.")
.AddOption("I`m~on~my~way.", 2)
.AddAvatar(101).FinalizeDialog();
                            }
                            break;
                        }


                        data.AddText("The Rock Monsters are carrying these Colorful Stones. Can you collect 5 for me?")
.AddOption("Sure!", 2)
.AddAvatar(101).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        client.CreateBoxDialog("Go~kill~the~Rock~Monsters~to~collect~5~Colorful~Stones!");
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        break;
                    }
                case 3:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {

                            data.AddText("Please make 1 more spaces in your inventory.")
            .AddOption("Let me check.", 255).AddAvatar(101)
            .FinalizeDialog();
                            return;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Remove(711349, 5, stream);
                            client.Inventory.Add(stream, Database.ItemType.DoubleExp, 1, 1);
                            client.IncreaseExperience(stream, 711348);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You`ve~received~some~EXP,~3,000~Silver~and~a~ExpPotion!");


                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.HanCheng)]
        public static void HanCheng(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.DCWanYing, client.Player.Class, 1475);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.HanCheng, client.Player.Class, 1476);


            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Be on alert while passing through the desert.");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Water~Delivery.", 1);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Water~Delivery.", 10);


                        data.AddOption("Thanks.", 255);
                        data.AddAvatar(60).FinalizeDialog();
                        break;
                    }

                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 40, 10))
                            {
                                data.AddText("Good job! Here`s your reward!")
.AddOption("Thanks.", 12)
.AddAvatar(60).FinalizeDialog();

                            }
                            else
                            {
                                data.AddText("Those Hill Monsters are really annoying. They often tear up trees in the desert.")
                                    .AddText("~Go kill 40 Hill Monsters and 10 Hill Monsters L73!")
.AddOption("I`m~on~my~way.", 255)
.AddAvatar(60).FinalizeDialog();
                            }


                            break;
                        }
                        data.AddText("I notice that the Hill Monsters often tear up these trees. We must stop them!")
                            .AddText(" ~I need you to kill 40 Hill Monsters and 10 Hill Monsters L73!")
.AddOption("I`ll~give~them~a~lesson.", 11)
.AddOption("Let~me~think~about~it.", 255)
.AddAvatar(60).FinalizeDialog();
                        break;
                    }
                case 12:
                    {
                        if (!client.Inventory.HaveSpace(2))
                        {

                            data.AddText("Please make 2 more spaces in your inventory.")
            .AddOption("Let me check.", 255).AddAvatar(159)
            .FinalizeDialog();
                            return;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.Inventory.Add(stream, 730001, 1, 1);
                            client.IncreaseExperience(stream, 711348);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You~received~a~+1~Stone~(B)!~Find~the~Socketsmith~in~the~market~(178,204)~to~compose~your~equipment!");
                            uint[] Items = new uint[]
                                {
                                    (uint)(700000 + (uint)Role.Flags.Gem.RefinedDragonGem)
                                    ,(uint)(700000 + (uint)Role.Flags.Gem.RefinedFuryGem)
                                    ,(uint)(700000 + (uint)Role.Flags.Gem.RefinedGloryGem)
                                    ,(uint)(700000 + (uint)Role.Flags.Gem.RefinedKylinGem)
                                    ,(uint)(700000 + (uint)Role.Flags.Gem.RefinedMoonGem)
                                    ,(uint)(700000 + (uint)Role.Flags.Gem.RefinedPhoenixGem)
                                    ,(uint)(700000 + (uint)Role.Flags.Gem.RefinedRainbowGem)
                                    ,(uint)(700000 + (uint)Role.Flags.Gem.RefinedThunderGem)
                                    ,(uint)(700000 + (uint)Role.Flags.Gem.RefinedTortoiseGem)
                                    ,(uint)(700000 + (uint)Role.Flags.Gem.RefinedVioletGem)
                                };
                            uint ItemID = Items[(uint)Program.GetRandom.Next(0, Items.Length)];
                            client.Inventory.Add(stream, ItemID, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);

                        }
                        break;
                    }
                case 11:
                    {
                        client.CreateBoxDialog("Hurry~to~kill~the~Hill~Monsters~and~Level~73~Hill~Monsters.");
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
                case 1:
                    {
                        data.AddText("I really appreciate your help.")
.AddOption("You`re~welcome.", 2)
.AddAvatar(60).FinalizeDialog();
                        break;
                    }
                case 2:
                    {

                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Remove(711416, 1, stream);
                            client.IncreaseExperience(stream, 711348);
                            client.Inventory.Add(stream, 723340);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You`ve~received~some~EXP,~3,000~Silver~and~a~Diligence~Book!");

                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.DCWanYing)]
        public static void DCWanYing(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.DCWanYing, client.Player.Class, 1469);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DCWanYing, client.Player.Class, 1470);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DCWanYing, client.Player.Class, 1473);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DCWanYing, client.Player.Class, 1475);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)NpcID.HanCheng, client.Player.Class, 1476);
            var ActiveQuest6 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ConvoyViceLeader, client.Player.Class, 1488);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("My husband, Han Cheng, and I have lived here since we were born.")
                            .AddText("~The village was kind of beautiful, but all has been destroyed by the sands");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("The~Cactus~3.", 50);

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("The~Green~Seeds~1.", 1);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("The~Green~Seeds~1.", 10);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Hill~Monster`s~Armor.", 20);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Water~Delivery.", 30);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            data.AddOption("The~Desert~Herb.", 40);


                        data.AddOption("I~agree.", 255);
                        data.AddAvatar(159).FinalizeDialog();
                        break;
                    }
                case 50:
                    {
                        if (client.Inventory.Contain(720965, 1))
                        {
                            data.AddText("You have already got the cactus seeds, haven`t you?")
.AddOption("Oh,~yup.", 255)
.AddAvatar(159).FinalizeDialog();
                            break;
                        }
                        data.AddText("You want to buy cactus seeds? Yes, I have some, but each bag costs 500 Silver.")
.AddOption("I`ll~buy.", 51)
.AddOption("Forget~it.", 255)
.AddAvatar(159).FinalizeDialog();
                        break;
                    }
                case 51:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {

                            data.AddText("Please make 1 more space in your inventory.")
            .AddOption("Let me check.", 255).AddAvatar(159)
            .FinalizeDialog();
                            return;
                        }
                        client.Inventory.Add(stream, 720965);
                        break;
                    }
                case 40:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(711401, 1))
                            {
                                data.AddText("Thank you! You saved my husband!")
.AddOption("My~pleasure.", 43)
.AddAvatar(60).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Please take the Desert Shovel and dig for a Desert Herb in the desert. Notice that you`ll need to wait 1 minute every time before you use the Desert Shovel.")
.AddOption("Roger.", 255)
.AddAvatar(60).FinalizeDialog();
                            }

                            break;
                        }
                        data.AddText("My husband was wounded the other day. The doctor said only the Desert Herb could cure him. Please, I need your help to pick some.")
.AddOption("Where~to~find~it?", 41)
.AddOption("Let~me~think~about~it.", 255)
.AddAvatar(60).FinalizeDialog();
                        break;
                    }
                case 43:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest5.MissionId))
                        {
                            client.Inventory.Add(stream, 730001, 1);
                            client.Inventory.Remove(720962, 1, stream);
                            client.Inventory.Remove(711401, 1, stream);
                            client.IncreaseExperience(stream, 2919000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You~received~a~+1~Stone~(B)!~Find~the~Socketsmith~in~the~market~(178,204)~to~compose~your~equipment!");

                        }
                        break;
                    }
                case 41:
                    {
                        data.AddText("I`ll give you a Desert Shovel. Please go to the desert and dig for a Desert Herb.")
.AddOption("I`ll~be~back~soon.", 42)
.AddAvatar(60).FinalizeDialog();
                        break;
                    }
                case 42:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
            .AddOption("Let me check.", 255).AddAvatar(159)
            .FinalizeDialog();
                            return;
                        }
                        client.Inventory.Add(stream, 720962);
                        client.CreateBoxDialog("You`ve~received~a~Desert~Shovel.~Hurry~to~dig~for~a~Desert~Herb.");
                        client.Player.QuestGUI.Accept(ActiveQuest5, 0);
                        break;
                    }
                case 30:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(711348, 1))
                            {
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                                {
                                    client.Inventory.Remove(711348, 1, stream);
                                    client.IncreaseExperience(stream, 2919000);
                                    client.Player.Money += 3000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                    client.CreateBoxDialog("You`ve~received~some~EXP~and~3,000~Silver!");

                                }
                            }
                            else
                            {
                                data.AddText("My husband, Han Cheng, must be patrolling the desert now.")
                               .AddText("~Could you fetch some water from the pool and take it to my husband?")
    .AddOption("I`m~on~my~way.", 255)
    .AddAvatar(159).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("My husband, Han Cheng, should be out patrolling the desert right now, but he forgot to take his water.")
                            .AddText("~Can you fetch some water from the pool and take it to my husband?")
.AddOption("No~problem.", 31)
.AddOption("I`m~busy.", 255)
.AddAvatar(159).FinalizeDialog();

                        break;
                    }
                case 31:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {

                            data.AddText("Please make 1 more space in your inventory.")
            .AddOption("Let me check.", 255).AddAvatar(159)
            .FinalizeDialog();
                            return;
                        }
                        client.Inventory.Add(stream, 720974);
                        client.CreateBoxDialog("You`ve~received~a~bucket.~Hurry~to~fetch~some~water.");
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        break;
                    }

                case 20:
                    {
                        if (client.Inventory.Contain(711416, 1))
                        {
                            data.AddText("Is this really the Hill Monster`s Armor? Thank you! I`ll give it to my husband, right away!")
                                .AddOption("Nice.", 22)
                                .AddAvatar(159).FinalizeDialog();

                            break;
                        }
                        data.AddText("People say Level 73 Hill Monster`s armor can protect against wind and sand better than anything. I wish my husband had one!")
.AddOption("Let~me~help.", 21)
.AddOption("None~of~my~business.", 255)
.AddAvatar(159).FinalizeDialog();

                        break;
                    }
                case 22:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                        {
                            client.Inventory.Remove(711416, 1, stream);
                            client.IncreaseExperience(stream, 2919000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You`ve~received~some~EXP~and~3,000~Silver!");

                        }
                        break;
                    }
                case 21:
                    {
                        client.CreateBoxDialog("Go~get~an~armor~from~the~Level~73~Hill~Monsters.");
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 1, 1, 1))
                            {
                                data.AddText("Amazing! You`d been a great help!")
.AddOption("Never~mind.", 12)
.AddAvatar(159).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Now, let`s plant the tree seeds near the water sources. Looks like these places are all inside Hill Monsters territory, though. Would you like to go plant the seeds there?")
.AddOption("I`d~love~to.", 255)
.AddAvatar(159).FinalizeDialog();
                            }

                            break;
                        }
                        data.AddText("Now, let`s plant the tree seeds near the water sources. Looks like these places are all inside Hill Monsters territory, though. Would you like to go plant the seeds there?")
.AddOption("Sure.", 11)
.AddOption("Not~interested.", 255)
.AddAvatar(159).FinalizeDialog();
                        break;
                    }
                case 12:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {

                            data.AddText("Please make 1 more space in your inventory.")
            .AddOption("Let me check.", 255).AddAvatar(159)
            .FinalizeDialog();
                            return;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.Inventory.Remove(720972, 1, stream);
                            client.Inventory.Add(stream, Database.ItemType.DoubleExp);
                            client.IncreaseExperience(stream, 2919000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You`ve~received~some~EXP~3,000~Silver~and~an~EXP~Potion!");

                        }
                        break;
                    }
                case 11:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {

                            data.AddText("Please make 1 more space in your inventory.")
            .AddOption("Let me check.", 255).AddAvatar(159)
            .FinalizeDialog();
                            return;
                        }
                        client.Inventory.Add(stream, 720972);
                        client.CreateBoxDialog("Go~plant~the~tree~seeds~near~the~water~sources.");
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1, 1, 1))
                            {
                                data.AddText("Wow, the Tree Seeds you brought are wonderful! Thanks for your help!")
.AddOption("You`re~welcome.", 3)
.AddAvatar(159).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Few plants can live in the desert, but there are several green trees near the portal leading to the Wind Plain. Can you go there and bring me 3 Tree Seeds?")
.AddOption("Sure.", 255)
.AddAvatar(159).FinalizeDialog();
                            }

                            break;
                        }
                        data.AddText("Things wouldn`t have been so terrible if there were more green plants and flowers.")
                            .AddText("~Could you go to the portal leading to Wind Plain, and bring me 3 Tree Seeds?")
.AddOption("Sure.", 2)
.AddOption("I`m~afraid~not.", 255)
.AddAvatar(159).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Remove(720971, 3, stream);
                            client.IncreaseExperience(stream, 2919000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You`ve~received~some~EXP~and~3,000~Silver!");
                            goto case 10;
                        }
                        break;
                    }
                case 2:
                    {
                        client.CreateBoxDialog("Hurry~to~head~to~the~Green~Trees~and~fetch~3~Tree~Seeds.");
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.st1TreeSeed)]
        public static void st1TreeSeed(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.DCWanYing, client.Player.Class, 1469);
            if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
            {
                //client.Player.QuestGUI.IncreaseQuestObjectives(
                if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1))
                {
                    data.AddText("You`ve already collected a seed from this tree.")
.AddOption("Alright.", 255)
.FinalizeDialog();
                }
                else
                {
                    if (!client.Inventory.HaveSpace(1))
                    {

                        data.AddText("Please make 1 more space in your inventory.")
        .AddOption("Let me check.", 255)
        .FinalizeDialog();
                        return;
                    }

                    client.Player.AddPick(stream, "Collect", 4);
                }
            }
        }
        [NpcAttribute(NpcID.nd2TreeSeed)]
        public static void nd2TreeSeed(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.DCWanYing, client.Player.Class, 1469);
            if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
            {
                if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 0, 1))
                {
                    data.AddText("You`ve already collected a seed from this tree.")
.AddOption("Alright.", 255)
.FinalizeDialog();
                }
                else
                {
                    if (!client.Inventory.HaveSpace(1))
                    {

                        data.AddText("Please make 1 more space in your inventory.")
        .AddOption("Let me check.", 255)
        .FinalizeDialog();
                        return;
                    }
                    client.Player.AddPick(stream, "Collect", 4);
                }
            }
        }
        [NpcAttribute(NpcID.rd3TreeSeed)]
        public static void rd3TreeSeed(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.DCWanYing, client.Player.Class, 1469);

            if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
            {
                if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 0, 0, 1))
                {
                    data.AddText("You`ve already collected a seed from this tree.")
.AddOption("Alright.", 255)
.FinalizeDialog();
                }
                else
                {
                    if (!client.Inventory.HaveSpace(1))
                    {

                        data.AddText("Please make 1 more space in your inventory.")
        .AddOption("Let me check.", 255)
        .FinalizeDialog();
                        return;
                    }
                    client.Player.AddPick(stream, "Collect", 4);
                }
            }
        }
        [NpcAttribute(NpcID.GeneralZhuGe)]
        public static void GeneralZhuGe(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest7 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DCViceCaptain, client.Player.Class, 1465);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.GeneralZhuGe, client.Player.Class, 1466);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.GeneralZhuGe, client.Player.Class, 1471);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.GeneralZhuGe, client.Player.Class, 1479);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.GeneralZhuGe, client.Player.Class, 1477);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)NpcID.SpringSoldierZhao, client.Player.Class, 1505);
            var ActiveQuest6 = Database.QuestInfo.GetFinishQuest((uint)NpcID.GeneralZhuGe, client.Player.Class, 1506);

            switch (Option)
            {
                case 0:
                    {


                        data.AddText("It was a nice village in Desert, but turned into a refuge overnight after the sandstorm. Well, at least the villagers haven`t lost their hearts.");

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest7.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Speedy~Rescue.", 60);

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Poisonous~Water~2.", 40);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                           && client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Poisonous~Water~3.", 50);

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Hill~Monster`s~Threat.", 1);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Kill~the~Hill~Monsters~(L73).", 10);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Retrieve~the~Water~Source.", 20);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            if (client.Inventory.Contain(720975, 1))
                                data.AddOption("Thank you for the letter.", 30);

                        data.AddOption("They`ll~get~better.", 255);
                        data.AddAvatar(54).FinalizeDialog();


                        break;
                    }
                case 50:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("You`ve got the Antidote? Hurry to deliver it to Spring Soldier Zhao.")
                      .AddOption("Okay.", 255)
                      .AddAvatar(54).FinalizeDialog();
                            break;
                        }
                        data.AddText("All clues are indicating the Level Blade Ghosts! I need you to kill them to get the Antidote and take it to Spring Soldier Zhao.")
                        .AddOption("No~problem.", 51)
                        .AddOption("None~of~my~business.", 255)
                        .AddAvatar(54).FinalizeDialog();
                        break;
                    }
                case 51:
                    {
                        client.CreateBoxDialog("Hurry~to~kill~the~Level~83~Blade~Ghosts!");
                        client.Player.QuestGUI.Accept(ActiveQuest6, 0);
                        break;
                    }
                case 40:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest5.MissionId))
                        {
                            client.IncreaseExperience(stream, 2919000);
                            client.Player.Money += 2000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You`ve~received~some~EXP~and~2,000~Silver!");
                        }
                        data.AddText("All clues are indicating the Level Blade Ghosts! I need you to kill them to get the Antidote and take it to Spring Soldier Zhao.")
                            .AddOption("No~problem.", 51)
                            .AddOption("None~of~my~business.", 255)
                            .AddAvatar(54).FinalizeDialog();
                        break;
                    }
                case 41:
                    {

                        data.AddText("Villagers are poisoned by the spring! I`ll figure that out!")
                        .AddOption("Great.", 41)
                        .AddAvatar(54).FinalizeDialog();
                        break;
                    }
                case 30:
                    {

                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                        {
                            client.Inventory.Remove(720975, 1, stream);
                            client.Inventory.Add(stream, 1060021);
                            client.IncreaseExperience(stream, 2919000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You`ve~received~some~EXP,~3,000~Silver~and~a~Desert~City~Gate!");
                        }
                        break;
                    }
                case 20:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest3.MissionId, 50))
                            {
                                data.AddText("Thank you! The villagers will be able to go out and fetch water, again.")
.AddOption("Great.", 22)
.AddAvatar(54).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("What are you waiting for? Go kill 50 Rock Monsters!")
.AddOption("I`m~on~my~way.", 255)
.AddAvatar(54).FinalizeDialog();

                            }

                            break;
                        }
                        data.AddText("Oh-oh! The Rock Monsters on the west of the camp blocked the way to the Moon Spring! That`s the most important water source in the desert.")
                        .AddText("~I need you to kill 50 of them!")
.AddOption("You~can~count~on~me.", 21)
.AddOption("Bye.", 255)
.AddAvatar(54).FinalizeDialog();

                        break;
                    }
                case 22:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                        {
                            client.IncreaseExperience(stream, 2919000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You`ve~received~some~EXP~and~3,000~Silver!");
                        }

                        break;
                    }
                case 21:
                    {
                        client.CreateBoxDialog("Hurry~to~kill~50~Rock~Monsters!");
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);


                        break;

                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 30))
                            {
                                data.AddText("Great! That may be enough to keep them from being so bold.")

.AddOption("I~hope~so.", 12)
.AddAvatar(54).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("A horde of Hill Monsters L73 are going to attack the camp.")
                          .AddText("~To weaken their power, I need you to kill 30 of them!")
.AddOption("I`m~on~my~way.", 255)
 .AddAvatar(54).FinalizeDialog();
                            }


                            break;
                        }
                        data.AddText("It`s reported that some Hill Monsters L73 are going to attack the camp, tonight!")
                            .AddText("~A good offense is the best defense! Go kill 30 Hill Monsters L73, right away!")
  .AddOption("I~won`t~disappoint~you.", 11)
  .AddOption("Why~me?", 255)
   .AddAvatar(54).FinalizeDialog();
                        break;
                    }
                case 12:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                        .AddOption("Let me check.", 255)
                         .AddAvatar(59).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.Inventory.Add(stream, 720172);
                            client.IncreaseExperience(stream, 2919000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You`ve~received~some~EXP,~3,000~Silver~and~an~EXP~Ball~Scrap!");
                        }
                        break;
                    }
                case 11:
                    {
                        client.CreateBoxDialog("Hurry~to~kill~30~Level~73~Hill~Monsters!");
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 50))
                            {
                                data.AddText("Well done! Please take these gifts, as your rewards.")
.AddOption("Thanks.", 3)
.AddAvatar(54).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("We should do something to save the camp. Go kill 50 of the Hill Monsters, and cut down their power!")
.AddOption("I~won`t~disappoint~you.", 255)
 .AddAvatar(54).FinalizeDialog();
                            }

                            break;
                        }
                        data.AddText("More and more Hill Monsters are gathering outside the camp! It`s really dangerous.")
                            .AddText("~I need you to kill 50 of them!")
  .AddOption("I~won`t~disappoint~you.", 2)
  .AddOption("Why~not~do~that~yourself?", 255)
   .AddAvatar(54).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                        .AddOption("Let me check.", 255)
                         .AddAvatar(59).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {

                            client.Inventory.Add(stream, 723340);
                            client.IncreaseExperience(stream, 2919000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You`ve~received~some~EXP,~3,000~Silver~and~a~Diligence~Book!");
                        }

                        break;
                    }
                case 2:
                    {

                        client.CreateBoxDialog("Hurry~to~kill~50~Hill~Monsters.");
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        break;
                    }
                case 60:
                    {

                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest7.MissionId, 20))
                            {
                                data.AddText("Really? You`ve cleared the way? Good job!")
                       .AddOption("Never~mind.", 62)
                       .AddAvatar(54).FinalizeDialog();

                            }
                            else
                            {
                                data.AddText("You came at the right time! A refugee camp in Desert was surrounded by a group of Hill Monsters.")
                         .AddText("~Go kill 20 of them, and report back to General ZhuGe!")
                          .AddOption("Okay.", 255)
                          .AddAvatar(54).FinalizeDialog();
                            }
                        }

                        break;
                    }
                case 62:
                    {

                        if (!client.Inventory.HaveSpace(3))
                        {
                            data.AddText("Please make 3 mores space in your inventory.")
         .AddOption("Let me check.", 255)
         .AddAvatar(53).FinalizeDialog();
                            break;
                        }

                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest7.MissionId))
                        {
                            client.Inventory.AddItemWitchStack(1002000, 0, 5, stream);
                            client.Inventory.Add(stream, Database.ItemType.Meteor, 2);
                            client.CreateBoxDialog("You~received~2~Meteors!~Find~the~Magic~Artisan~in~the~market~(259,248)~to~level~up~your~equipment!");
                            client.IncreaseExperience(stream, 1739000);
                            client.SendSysMesage("You've~received~some~EXP,~2,000~Silver,~5~Panaceas~and~2~Meteors!", MsgMessage.ChatMode.System);
                            client.Player.Money += 1500;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }
                    }
                    break;
            }

        }

        [NpcAttribute(NpcID.IronsmithLi)]
        public static void IronsmithLi(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.IronsmithLi, client.Player.Class, 1467);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.IronsmithLi, client.Player.Class, 1472);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.IronsmithLi, client.Player.Class, 1481);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ConvoyLeaderGu, client.Player.Class, 1491);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hey, I`m an ironsmith. What can I do for you? You need any smithing done, by chance?");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Stolen~Grindstone.", 30);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Ironsmith`s~Request.", 1);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("The~New~Weapon.", 10);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Stolen~Grindstone.", 20);

                        data.AddOption("Thanks.", 255);
                        data.AddAvatar(53).FinalizeDialog();
                        break;
                    }
                case 30:
                    {
                        if (client.Inventory.Contain(711405, 1))
                        {
                            data.AddText("So is it a Thunder Stone? I`ll reveal the secret.")
                                     .AddOption("Good~luck.", 31)
                                     .AddAvatar(53).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Do you know anything about the Thunder Stone? I saw the Level 78 Rock Monsters carrying them. Please go grab one and deliver it to Ironsmith Li.")
                                      .AddOption("I`ll~do~right~away.", 255)
                                      .AddAvatar(53).FinalizeDialog();
                        }
                        break;
                    }
                case 31:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                        {
                            client.Inventory.Remove(711405, 1, stream);
                            client.Inventory.Add(stream, 1060021);
                            client.IncreaseExperience(stream, 2919000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You`ve~received~EXP~worth~1/2~EXP~Ball,~3,000~Silver~and~a~Desert~City~Gate!");
                        }
                        break;
                    }
                case 20:
                    {

                        if (client.Inventory.Contain(711399, 1))
                        {
                            data.AddText("Yes! That`s my grindstone! Thank you!")
.AddOption("No~problem.", 22)
.AddAvatar(53).FinalizeDialog();

                            break;
                        }


                        data.AddText("My grindstone was stolen by the Rock Monsters! It`s useless for them but to me, it`s important. Please, go retrieve it!")
      .AddOption("You~can~count~on~me.", 21)
      .AddOption("I`ll~think~about~it.", 255)
       .AddAvatar(53).FinalizeDialog();
                        break;
                    }
                case 22:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                        .AddOption("Let me check.", 255)
                         .AddAvatar(59).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                        {
                            client.Inventory.Remove(711399, 1, stream);
                            client.Inventory.Add(stream, 720172);
                            client.IncreaseExperience(stream, 2919000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You`ve~received~EXP~worth~1/2~EXP~Ball,~3,000~Silver~and~an~EXP~Ball~Scrap!");
                        }
                        break;
                    }
                case 21:
                    {
                        client.CreateBoxDialog("Hurry~to~kill~the~Rock~Monsters~to~retrieve~the~grindstone.");
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 20))
                            {
                                data.AddText("Great! I`ll go report to the General. Here`s your reward, by the way.")

    .AddOption("Thank~you.", 12)
     .AddAvatar(53).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("This is my Newly Made Hammer. I need you to test it.")
                          .AddText("~Just bring it with you and kill 20 Hill Monsters L73!")
         .AddOption("I`m~leaving.", 255)
          .AddAvatar(53).FinalizeDialog();
                            }

                            break;
                        }
                        data.AddText("Haha, this is my Newly Made Hammer. I need you to test it out.")
                          .AddText("~Just bring it with you and kill 20 Hill Monsters L73!")
         .AddOption("I`ll~try!", 11)
         .AddOption("I`m~going~anywhere.", 255)
          .AddAvatar(53).FinalizeDialog();
                        break;
                    }
                case 12:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                        .AddOption("Let me check.", 255)
                         .AddAvatar(59).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {

                            client.Inventory.Add(stream, 730001, 1, 1, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.IncreaseExperience(stream, 2919000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);

                            client.CreateBoxDialog("You`ve~received~some~EXP,~3,000~Silver~and~a~+1~Stone~(B)!");
                        }
                        break;
                    }
                case 11:
                    {
                        client.CreateBoxDialog("You`ve~received~a~Newly~Made~Hammer.~Go~kill~20~Level~73~Hill~Monsters.");
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {

                            if (client.Inventory.Contain(711344, 5, 0))
                            {
                                data.AddText("See? These hammers are great! Thank you very much!")
           .AddOption("My~pleasure.", 3)
            .AddAvatar(53).FinalizeDialog();

                            }
                            else
                            {
                                data.AddText("With the help of Hill Monster`s hammers, I`ll make better weapons.")
           .AddOption("I`ll~go~get~5~for~you.", 255)
            .AddAvatar(53).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("To be frank, I`m quite interested in the Hill Monster`s hammer. Could you collect some for me?")
            .AddOption("OK.~I`ll~go~get~5~for~you.", 2)
            .AddOption("Sorry,~I~can`t~help.", 255)
             .AddAvatar(53).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        if (!client.Inventory.HaveSpace(3))
                        {
                            data.AddText("Please make 3 more spaces in your inventory.")
                        .AddOption("Let me check.", 255)
                         .AddAvatar(59).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Remove(711344, 5, stream);
                            client.Inventory.Add(stream, Database.ItemType.Meteor, 2);
                            client.Inventory.Add(stream, 720173);
                            client.CreateBoxDialog("You`ve~received~some~EXP,~3,000~Silvers,~a~Small~Joy~Stone~and~2~Meteors!");
                            client.IncreaseExperience(stream, 2919000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You~received~2~Meteors!~Find~the~Magic~Artisan~in~the~market~(259,248)~to~level~up~your~equipment!");
                        }
                        break;
                    }
                case 2:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        client.CreateBoxDialog("Hurry~to~kill~the~Hill~Monsters~to~collect~5~Hammers!");
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.ViceGeneralDong)]
        public static void ViceGeneralDong(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.ViceGeneralDong, client.Player.Class, 1468);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ViceGeneralDong, client.Player.Class, 1474);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ViceGeneralDong, client.Player.Class, 1478);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ConvoyViceLeader, client.Player.Class, 1490);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I`m the Vice General, you can call me Dong. Watching the refugee camp is my duty.");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("The~Cactus~5.", 30);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Go~Deep~into~the~Lair.", 1);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("The~Supply~Line.", 10);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("The~Sand-proof~Wall.", 20);


                        data.AddOption("Thanks.", 255);
                        data.AddAvatar(59).FinalizeDialog();
                        break;
                    }
                case 30:
                    {

                        data.AddText("Good idea! I`ll ask the villagers to plant more of the cactus. Thanks for your advice!")
               .AddOption("You`re~welcome.", 31)
                .AddAvatar(59).FinalizeDialog();
                        break;
                    }
                case 31:
                    {
                        if (!client.Inventory.HaveSpace(2))
                        {
                            data.AddText("Please make 2 more spaces in your inventory.")
                        .AddOption("Let me check.", 255)
                         .AddAvatar(59).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                        {
                            client.Player.QuestGUI.SendAutoPatcher(1000, 308, 456, (ushort)NpcID.ElderJiang);

                            client.Inventory.Add(stream, 160157, 1);
                            client.Inventory.Add(stream, 730001, 1, 1);
                            client.IncreaseExperience(stream, 2919000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You~received~a~+1~Stone~(B)!~Find~the~Socketsmith~in~the~market~(178,204)~to~compose~your~equipment!");
                            client.SendSysMesage("You`ve~received~some~EXP,~2,000~Silver,~Tiger~Boots~and~a~+1~Stone~(B)!", MsgMessage.ChatMode.System);
                        }
                        break;
                    }
                case 20:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest3.MissionId, 1, 1, 1, 1))
                            {
                                data.AddText("I`m the Vice General, you can call me Dong. Watching the refugee camp is my duty.")
               .AddOption("The~Slabstones.", 25)
               .AddOption("Nice~to~see~you.", 255)
                .AddAvatar(59).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("The Rock Monsters are known for carrying fine Slabstones. You can collect some, and use them to build a wall around the pool in 4 directions.")
                .AddOption("I`ll~come~back~soon.", 255)
                 .AddAvatar(59).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("The sand is swallowing the water pool. We need to collect some slabstones to build a sand-proof wall around the pool.")
                       .AddOption("Ready~to~help.", 21)
                       .AddOption("I`ll~think~about~it.", 255)
                        .AddAvatar(59).FinalizeDialog();
                        break;
                    }
                case 25:
                    {
                        data.AddText("You`ve built the wall! You`ve been such a big help!")
               .AddOption("My~pleasure.", 26)
                .AddAvatar(59).FinalizeDialog();

                        break;
                    }
                case 26:
                    {
                        if (!client.Inventory.HaveSpace(3))
                        {
                            data.AddText("Please make 3 more spaces in your inventory.")
                        .AddOption("Let me check.", 255)
                         .AddAvatar(59).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                        {

                            client.Inventory.Add(stream, Database.ItemType.Meteor, 2);
                            client.Inventory.AddItemWitchStack(1002000, 0, 5, stream);
                            client.SendSysMesage("You`ve~received~by~the~Vice~General~Dong~with~EXP~worth~1/2~EXP~Ball,~3,000~Silver,~and~5~Panaceas,~for~building~the~sand~prof~wall!", MsgMessage.ChatMode.System);
                            client.IncreaseExperience(stream, 2919000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.CreateBoxDialog("You~received~2~Meteors!~Find~the~Magic~Artisan~in~the~market~(259,248)~to~level~up~your~equipment!");
                        }
                        break;
                    }
                case 21:
                    {
                        data.AddText("You`re going to turn to the Rock Monsters for the Slabstones. After that, go build a wall around the water pool in 4 directions.")
                     .AddOption("I`ll~come~back~soon.", 22)
                      .AddAvatar(59).FinalizeDialog();
                        break;
                    }
                case 22:
                    {
                        if (!client.Inventory.HaveSpace(4))
                        {
                            data.AddText("Please make 4 more spaces in your inventory.")
                        .AddOption("Let me check.", 255)
                         .AddAvatar(59).FinalizeDialog();
                            break;
                        }
                        client.Inventory.AddItemWitchStack(720970, 0, 4, stream);
                        client.CreateBoxDialog("Go~kill~the~Rock~Monsters,~and~gather~some~Slabstones!");
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        break;
                    }
                case 10:
                    {
                        if (client.Inventory.Contain(711415, 5))
                        {
                            data.AddText("Really? You`ve gathered enough Heavy Axes? Thank you!")
                      .AddOption("Welcome.", 12)
                       .AddAvatar(59).FinalizeDialog();
                            break;
                        }
                        data.AddText("Emergency! Our armory is running low on weapons and the supply lines are cut off!")
                            .AddText("~I need you to get 5 Heavy Axes from the Hill Monsters or Hill Monsters L73!")
                         .AddOption("Got~it.", 11)
                         .AddOption("I`ll~think~about~it.", 255)
                          .AddAvatar(59).FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        client.CreateBoxDialog("Kill~the~Hill~Monsters~and~Level~73~Hill~Monsters~to~get~5~Heavy~Axes!");
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
                case 12:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                        .AddOption("Let me check.", 255)
                         .AddAvatar(59).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {

                            client.Inventory.Remove(711415, 5, stream);
                            client.Inventory.AddItemWitchStack(1002000, 0, 5, stream);
                            client.CreateBoxDialog("You`ve~received~some~EXP,~3,000~Silver~and~5~Panaceas!");
                            client.IncreaseExperience(stream, 2919000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1, 1, 1))
                        {
                            data.AddText("You made it? Were they scared? Haha!")
                       .AddOption("Yeah,~yeah.", 3)
                        .AddAvatar(59).FinalizeDialog();
                            break;
                        }
                        data.AddText("We have a plan. We need a brave man, like you, to go deep into the Hill Monster`s lair and set a fire. That should smoke them out!")
                        .AddOption("Count~me~in.", 2)
                        .AddOption("I`ll~think~about~it.", 255)
                         .AddAvatar(59).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        if (!client.Inventory.HaveSpace(2))
                        {
                            data.AddText("Please make 2 more space in your inventory.")
                        .AddOption("Let me check.", 255)
                         .AddAvatar(59).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Remove(720980, 1, stream);
                            client.SendSysMesage("You`ve~received~some~EXP,~2,000~Silvers~and~2~Meteors!", MsgMessage.ChatMode.System);
                            client.Inventory.Add(stream, Database.ItemType.Meteor, 2);
                            client.CreateBoxDialog("You~received~2~Meteors!~Find~the~Magic~Artisan~in~the~market~(259,248)~to~level~up~your~equipment!");
                            client.IncreaseExperience(stream, 2919000);
                            client.Player.Money += 2500;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }
                        break;
                    }
                case 2:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                        .AddOption("Let me check.", 255)
                         .AddAvatar(59).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            break;
                        }
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        client.Inventory.Add(stream, 720980);
                        client.CreateBoxDialog("You`ve~got~a~torch.~Hurry~to~set~a~fire~and~threaten~the~Hill~Monsters!");
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.KeYulun)]
        public static void KeYulun(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.KeYulun, client.Player.Class, 1462);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.KeYulun, client.Player.Class, 1463);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.KeYulun, client.Player.Class, 1464);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("This desert is often called the throat of the Silk Road. Merchants from all over the world came here, as well as evildoers.");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                            && client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            if (!client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                                data.AddOption("Clear~the~Path.", 20);
                        }
                        else
                        {
                            if (!client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                                data.AddOption("Ginseng~Delivery.", 1);
                            if (!client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                                data.AddOption("Save~the~Company.", 10);
                        }
                        data.AddOption("Thanks.", 255);
                        data.AddAvatar(47).FinalizeDialog();

                        break;
                    }
                case 20:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest3.MissionId, 40, 10))
                        {
                            data.AddText("Great! We`re going home! Thanks a million!")
                          .AddOption("Have~a~good~journey.", 22)
                           .AddAvatar(47).FinalizeDialog();
                            break;
                        }
                        data.AddText("My followers and I are planning to go home right away. But the problem is, the path is blocked by the bloody monsters, again!")
                            .AddText("~I`m wondering if you can help us kill 40 Sand Monsters and 10 Level 68 Sand Monsters.")
                            .AddOption("You~can~count~on~me.", 21)
                            .AddOption("Sorry,~I`m~busy.", 255)
                             .AddAvatar(47).FinalizeDialog();
                        break;
                    }
                case 22:
                    {
                        if (!client.Inventory.HaveSpace(2))
                        {
                            data.AddText("Please make 2 more spaces in your inventory.")
                        .AddOption("Let me check.", 255)
                         .AddAvatar(47).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                        {
                            client.SendSysMesage("You`ve~received~some~EXP,~3,000~Silvers,~Unique~Snakeskin~Boots~and~a~+1~Stone~(B)!", MsgMessage.ChatMode.System);
                            client.Inventory.Add(stream, 160137, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.Inventory.Add(stream, 730001, 1, 1, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.CreateBoxDialog("You~received~a~+1~Stone~(B)!~Find~the~Socketsmith~in~the~market~(178,204)~to~compose~your~equipment!");
                            client.IncreaseExperience(stream, 2919000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.Player.QuestGUI.SendAutoPatcher(1000, 486, 346, 8439);
                        }
                        break;
                    }
                case 21:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 1, 7))
                            {
                                data.AddText("Thanks for what you`ve done for us! Please accept these rewards!")
                             .AddOption("My~pleasure.", 12)
                              .AddAvatar(47).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("While going through the desert, we were hit by a sand storm and my follower was kidnapped by the Level 68 Sand Monsters.")
                            .AddText("~Please save the poor guy!")
                                .AddOption("I`ll~try~my~best.", 255)
                                 .AddAvatar(47).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("While going through the desert, we were hit by a sand storm and my follower was kidnapped by the Level 68 Sand Monsters.")
                            .AddText("~Please save the poor guy!")
                                .AddOption("I`ll~try~my~best.", 11)
                                .AddOption("Leave.", 255)
                                 .AddAvatar(47).FinalizeDialog();

                        break;
                    }
                case 12:
                    {
                        if (!client.Inventory.HaveSpace(2))
                        {
                            data.AddText("Please make 2 more spaces in your inventory.")
                        .AddOption("Let me check.", 255)
                         .AddAvatar(47).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.SendSysMesage("You've~received~some~EXP,~3,000~Silver~and~2~Meteors!", MsgMessage.ChatMode.System);
                            client.Inventory.Add(stream, Database.ItemType.Meteor, 2);
                            client.CreateBoxDialog("You~received~2~Meteors!~Find~the~Magic~Artisan~in~the~market~(259,248)~to~level~up~your~equipment!");
                            client.IncreaseExperience(stream, 2919000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        break;
                    }
                case 11:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(1060021, 1))
                        {
                            data.AddText("Tell me how to thank you enough! You saved my life!")
                              .AddOption("My~pleasure.", 3)
                               .AddAvatar(47).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Thank God you came! I ran into a sand storm on my way here, and was badly injured. Can you bring me a Ginseng, please?")
                                 .AddOption("I`ll~be~back~soon.", 2)
                                 .AddOption("Leave.", 255)
                                  .AddAvatar(47).FinalizeDialog();
                        }

                        break;
                    }
                case 2:
                    {
                        client.CreateBoxDialog("Hurry~to~fetch~a~Ginseng!");
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);

                        break;
                    }
                case 3:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Remove(1060021, 1, stream);
                            client.Inventory.Add(stream, 1060021, 1);
                            client.CreateBoxDialog("You`ve~received~some~EXP,~2,000~Silver~and~a~Desert~City~Gate!");
                            client.IncreaseExperience(stream, 1719000);
                            client.Player.Money += 2000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.SkillEraser)]
        public static void SkillEraser(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);


            switch (Option)
            {
                case 0:
                    {
                        data.AddText("You have to give up something in roder to get something. I can help you to forget the skills you don't need anymore.")
                       .AddOption("Forget skills in this life.", 1)
                       .AddOption("I'll think about it.", 255)
                       .AddAvatar(100)
                       .FinalizeDialog();
                        break;
                    }
                #region I want to ask about something else
                case 99:
                    {
                        data.AddText("You have to give up something in roder to get something. I can help you to forget the skills you don't need anymore.")
                       .AddOption("Forget skills in this life.", 1)
                       .AddOption("I'll think about it.", 255)
                        .AddAvatar(100)
                      .FinalizeDialog();
                        break;
                    }
                #endregion

                case 1:
                    {


                        data.AddText("If you don't need some skills anymore, i can help you forget them. So what kind of skill would you like to forget?")
                       .AddOption("Summon skills.", 2)
                       .AddOption("General weapon skills.", 3)  //done
                       .AddOption("Transform skills.", 4)  //done
                       .AddOption("Class-based skills.", 5) //done
                       .AddOption("I want to ask about something else.", 99)
                        .AddAvatar(100)
                       .FinalizeDialog();
                        break;
                    }

                #region Class-based skills.
                case 5: //       
                    {
                        data.AddText("After you forget the skilsl you don't need, you can conecentrate on the study of new skills.Which skill would you like to forget")
                       .AddOption("Spirit Healing.", 6)
                       .AddOption("Serenity.", 7)
                       .AddOption("Flying Moon.", 8)
                       .AddOption("Next.", 9) //ok
                       .AddOption("Cruel Shade.", 10)
                       .AddOption("Compassion.", 11)
                       .AddOption("Thunder.", 12)
                       .AddOption("I want to ask something else..", 1)
                         .AddAvatar(100)
                     .FinalizeDialog();
                        break;

                    }



                #region SpiritHealing
                case 6:
                    {

                        {
                            var SpellID = 1190;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill SpiritHealing. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }

                #endregion

                #region Serenity
                case 7:
                    {

                        {
                            var SpellID = 10400;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill Serenity. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }
                #endregion



                #region FlyingMoon
                case 8:
                    {

                        {
                            var SpellID = 1320;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill FlyingMoon. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }
                #endregion


                #region CruelShade
                case 10:
                    {

                        {
                            var SpellID = 3050;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill CruelShade. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }
                #endregion


                #region Compassion
                case 11:
                    {

                        {
                            var SpellID = 10430;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill Compassion. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }
                #endregion

                #region Thunder
                case 12:
                    {

                        {
                            var SpellID = 1000;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill Thunder. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }
                #endregion



                #region Invisibility
                case 13:
                    {

                        {
                            var SpellID = 1075;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill Invisibility. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }
                #endregion


                #region Fire
                case 14:
                    {

                        {
                            var SpellID = 1001;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill Fire. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }
                #endregion


                #region Kraken'sRevenge
                case 15:
                    {

                        {
                            var SpellID = 11100;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill Kraken'sRevenge. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }
                #endregion

                #region Pervade
                case 16:
                    {

                        {
                            var SpellID = 3306;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill Pervade. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }
                #endregion



                #region FireCircle
                case 17:
                    {

                        {
                            var SpellID = 1120;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill FireCircle. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }
                #endregion


                #endregion

                #region Transform skills.
                case 4: //       
                    {
                        data.AddText("After you forget the skilsl you don't need, you can conecentrate on the study of new skills.Which skill would you like to forget")
                       .AddOption("Night Devil.", 18)
                       .AddOption("Water Elf.", 19)
                       .AddOption("Golem.", 20)
                       .AddOption("Divine Hare.", 22)
                       .AddOption("I want to ask something else..", 1)
                      .AddAvatar(100)
                    .FinalizeDialog();
                        break;

                    }


                #region DivineHare
                case 22:
                    {

                        {
                            var SpellID = 10522;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill DivineHare. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }
                #endregion


                #region Golem
                case 20:
                    {

                        {
                            var SpellID = 1270;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill Golem. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }
                #endregion


                #region WaterElf
                case 19:
                    {

                        {
                            var SpellID = 1280;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill WaterElf. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }
                #endregion

                #region NightDevil
                case 18:
                    {

                        {
                            var SpellID = 1360;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill NightDevil. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }
                #endregion

                #endregion

                #region General weapon skills.
                case 3: //       
                    {
                        data.AddText("After you forget the skilsl you don't need, you can conecentrate on the study of new skills.Which skill would you like to forget");
                        data.AddOption("FastBlade.", 23);
                        data.AddOption("Phoenix.", 24);
                        data.AddOption("Wide Strike.", 25);
                        data.AddOption("Next.", 26); //done
                        data.AddOption("Scent Sword.", 27);
                        data.AddOption("Speed Gun.", 28);
                        data.AddOption("Penetration.", 29);
                        data.AddOption("I want to ask something else..", 1)
                        .AddAvatar(100)
                        .FinalizeDialog();
                        break;

                    }


                case 26: //       
                    {
                        data.AddText("After you forget the skilsl you don't need, you can conecentrate on the study of new skills.Which skill would you like to forget")
                       .AddOption("Boreas.", 30)
                       .AddOption("Snow.", 31) //aici am ramas
                       .AddOption("Boom.", 32)
                       .AddOption("Next.", 33) //done
                       .AddOption("Stranded Monster.", 34)
                       .AddOption("Halt.", 35)
                       .AddOption("Previous.", 3)
                       .AddOption("I want to ask something else..", 1)
                        .AddAvatar(100)
                     .FinalizeDialog();
                        break;

                    }
                case 33: //       
                    {
                        data.AddText("After you forget the skills you don't need, you can conecentrate on the study of new skills.Which skill would you like to forget")
                       .AddOption("Seizer.", 36)
                       .AddOption("Rage.", 37)
                       .AddOption("Roamer.", 38)
                       .AddOption("Next.", 39) //done
                       .AddOption("EarthQuake.", 40)
                       .AddOption("Celestial.", 41)
                       .AddOption("Previous.", 26) //done
                       .AddOption("I want to ask something else..", 1)
                       .AddAvatar(100)
                     .FinalizeDialog();
                        break;

                    }


                case 39: //       
                    {
                        data.AddText("After you forget the skilsl you don't need, you can conecentrate on the study of new skills.Which skill would you like to forget")
                       .AddOption("Dragon Tail.", 42)
                       .AddOption("Viper Fang.", 69)
                       .AddOption("Previous.", 33) //done
                       .AddOption("I want to ask something else..", 1)
                          .AddAvatar(100)
                     .FinalizeDialog();
                        break;

                    }
                #region DragonTail
                case 42:
                    {

                        {
                            var SpellID = 11000;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill DragonTail. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }
                #endregion

                #region ViperFang
                case 69:
                    {

                        {
                            var SpellID = 11005;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill ViperFang. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }
                #endregion


                #region Seizer
                case 36:
                    {

                        {
                            var SpellID = 7109;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill Seizer. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }
                #endregion

                #region Rage
                case 37:
                    {

                        {
                            var SpellID = 7020;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill Rage. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }
                #endregion


                #region Roamer
                case 38:
                    {

                        {
                            var SpellID = 7040;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill Roamer. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }
                #endregion



                #region EartQuake
                case 40:
                    {

                        {
                            var SpellID = 7010;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill EartQuake. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }
                #endregion

                #region Celestial
                case 41:
                    {

                        {
                            var SpellID = 7030;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill Celestial. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }
                #endregion

                #region Boreas
                case 30:
                    {

                        {
                            var SpellID = 5050;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill Boreas. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }
                #endregion

                #region Snow
                case 31:
                    {

                        {
                            var SpellID = 5010;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill Snow. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }
                #endregion


                #region Boom
                case 32:
                    {

                        {
                            var SpellID = 5040;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill Boom. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }
                #endregion

                #region StrandedMonster
                case 34:
                    {

                        {
                            var SpellID = 5020;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill StrandedMonster. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }
                #endregion

                #region Halt
                case 35:
                    {

                        {
                            var SpellID = 1300;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill Halt. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }
                #endregion


                #region FastBlade
                case 23:
                    {

                        {
                            var SpellID = 1045;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill FastBlade. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }
                #endregion


                #region Phoenix
                case 24:
                    {

                        {
                            var SpellID = 1420;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill Phoenix. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }
                #endregion

                #region WideStrike
                case 25:
                    {

                        {
                            var SpellID = 1250;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill WideStrike. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }
                #endregion

                #region ScentSword
                case 27:
                    {

                        {
                            var SpellID = 1046;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill ScentSword. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }
                #endregion

                #region SpeedGun
                case 28:
                    {

                        {
                            var SpellID = 1260;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill SpeedGun. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }
                #endregion

                #region Penetration
                case 29:
                    {

                        {
                            var SpellID = 1290;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill Penetration. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }
                #endregion
                #endregion

                #region Summon Skills

                #region Summon skills.
                case 2: //       
                    {
                        data.AddText("After you forget the skilsl you don't need, you can conecentrate on the study of new skills.Which skill would you like to forget")
                       .AddOption("Bloody Bat.", 49)
                       .AddOption("Fire Evil.", 44)
                       .AddOption("Summon Bat Boss.", 45)
                       .AddOption("Summon Guard.", 46)
                       .AddOption("Skeleton.", 47)
                       .AddOption("Summon Bat.", 43)
                       .AddOption("I want to ask something else..", 1)
                         .AddAvatar(100)
                        .FinalizeDialog();
                        break;

                    }
                #endregion
                #region Summon Bat.
                case 43:
                    {

                        {
                            var SpellID = 4010;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill Summon Bat. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }
                #endregion

                #region Skeleton.
                case 47:
                    {

                        {
                            var SpellID = 4070;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill Skeleton. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }
                #endregion

                #region Guard.
                case 46:
                    {

                        {
                            var SpellID = 4000;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill Guard. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }
                #endregion

                #region Bat.
                case 45:
                    {

                        {
                            var SpellID = 4000;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill Guard. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }
                #endregion

                #region FireEvil.
                case 44:
                    {

                        {
                            var SpellID = 4060;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill FireEvil. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }
                #endregion

                #region BloodyBat.
                case 49:
                    {

                        {
                            var SpellID = 8262;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {

                                client.MySpells.Remove((ushort)SpellID, stream);
                                data.AddText("All done, the skill is now removed.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6)
                              .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you haven't learned the skill BloodyBat. How can you forget it?")
                                 .AddOption("Okay.", 1)
                                 .AddAvatar(6)
                              .FinalizeDialog();
                            }
                        }


                        break;
                    }
                #endregion


                #endregion








                case 100:
                    {



                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.FrozenGrottoGeneral)]
        public static void FrozenGrottoGeneral(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.Level < 28)
                        {
                            data.AddText("You can get the monster hunter quest from the TC Captain now! It`s a great place for you to level up. Here is a steed to");
                            data.AddText("~take you there!");
                            data.AddOption("Okay,~thanks.", 1);
                            data.AddOption("I~have~no~interest.");
                            data.AddAvatar(57);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Level < 48)
                            {
                                data.AddText("You are able to take the quest from the PC Captain now! You can level up more quickly there. Here is a steed to take you there!");
                                data.AddOption("Okay,~thanks.", 2);
                                data.AddOption("I~have~no~interest.");
                                data.AddAvatar(57);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                if (client.Player.Level < 68)
                                {
                                    data.AddText("You`d better take the quests from the AC Captain. It`s the right place for you to level up. Here is a steed to take you");
                                    data.AddText("~there!");
                                    data.AddOption("Okay,~thanks.", 3);
                                    data.AddOption("I~have~no~interest.");
                                    data.AddAvatar(57);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    if (client.Player.Level < 88)
                                    {
                                        data.AddText("You are powerful enough to take the quests from the DC Captain now! Here is a steed to take you there!");
                                        data.AddOption("Okay,~thanks.", 4);
                                        data.AddOption("I~have~no~interest.");
                                        data.AddAvatar(57);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (client.Player.Level < 103)
                                        {
                                            data.AddText("You are powerful now, and you are able to take the quests from the BI Captain! He is in need of your help! Here is a steed to");
                                            data.AddText("~take you there!");
                                            data.AddOption("Okay,~thanks.", 5);
                                            data.AddOption("I~have~no~interest.");
                                            data.AddAvatar(57);
                                            data.FinalizeDialog();
                                        }
                                        else
                                        {
                                            if (client.Player.Level < 120)
                                            {
                                                data.AddText("You are strong enough to kill the monsters in Mystic Castle. Why not take a quest from MC Captain to level up quickly? Here");
                                                data.AddText("~is a steed to take you there.");
                                                data.AddOption("Okay,~thanks.", 6);
                                                data.AddOption("I~have~no~interest.");
                                                data.AddAvatar(57);
                                                data.FinalizeDialog();
                                            }
                                            else
                                            {
                                                data.AddText("Cloud Saint in Market (291,224) is looking for the heroes to help him exterminate the monsters. If you can finish the quest,");
                                                data.AddText("~you will receive 5 EXP Balls as rewards!");
                                                data.AddOption("I~see.");
                                                data.AddAvatar(57);
                                                data.FinalizeDialog();
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        break;
                    }
                case 6:
                    {
                        client.Teleport(085, 321, 1000);
                        break;
                    }
                case 5:
                    {
                        client.Teleport(792, 571, 1015);
                        break;
                    }
                case 4:
                    {
                        client.Teleport(483, 634, 1000);
                        break;
                    }
                case 3:
                    {
                        client.Teleport(571, 621, 1020);
                        break;
                    }
                case 2:
                    {
                        client.Teleport(233, 260, 1011);
                        break;
                    }
                case 1:
                    {
                        client.Teleport(311, 346, 1002);
                        break;
                    }

            }
        }

        [NpcAttribute(NpcID.KitMerchant)]
        public static void KitMerchant(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        {
                            data.AddText("Well,hello there! I'm here selling special kits for all the different classes.See anything you like? We've got Elite kits, cheap and sturdy, or Super kits for the more afluent adventurer.Which kind of kit were you interested in? The Super or Elite kits?")
                        .AddOption("Super~kits.", 1)
                        .AddOption("Elite~kits.", 2)
                        .AddOption("Let~me~think.", 255)
                        .AddAvatar(63).FinalizeDialog();
                        }


                        break;
                    }
                case 105:
                    {

                        {
                            data.AddText("Well,hello there! I'm here selling special kits for all the different classes.See anything you like? We've got Elite kits, cheap and sturdy, or Super kits for the more afluent adventurer.Which kind of kit were you interested in? The Super or Elite kits?")
                        .AddOption("Super~kits.", 1)
                        .AddOption("Elite~kits.", 2)
                        .AddOption("Let~me~think.", 255)
                        .AddAvatar(63).FinalizeDialog();
                        }


                        break;
                    }
                #region Elite Kits
                case 2:
                    {
                        data.AddText("There are some options.");
                        if (client.Player.Class >= 60 && client.Player.Class <= 65)
                            data.AddOption("Elite~Monk~Outfit.", 60); //done
                        else if (client.Player.Class >= 50 && client.Player.Class <= 55)
                            data.AddOption("Elite~Ninja~Outfit.", 61); //done
                        else if (client.Player.Class >= 10 && client.Player.Class <= 15)
                            data.AddOption("Elite~Trojan~Outfit.", 62); //done
                        else if (client.Player.Class >= 20 && client.Player.Class <= 25)
                            data.AddOption("Elite~Warrior~Outfit.", 63); //done
                        else if (client.Player.Class >= 40 && client.Player.Class <= 45)
                            data.AddOption("Elite~Archer~Outfit.", 64); //done
                        else if (client.Player.Class >= 70 && client.Player.Class <= 75)
                            data.AddOption("Elite~Pirate~Outfit.", 65); //done
                        else if (client.Player.Class >= 80 && client.Player.Class <= 85)
                            data.AddOption("Elite~Long~Lee~Outfit.", 66); //DONE
                        else if (client.Player.Class >= 100 && client.Player.Class <= 145)
                            data.AddOption("Elite~Water-Fire~Outfit.", 67);
                        if (client.Player.Class >= 100 && client.Player.Class <= 145)
                            data.AddOption("Common~Elite~outfit~B.", 49);
                        else
                            data.AddOption("Common~Elite~outfit~A.", 68);

                        data.AddOption("Anything~else?", 105)
                        .AddAvatar(6).FinalizeDialog();
                        break;
                    }
                #endregion
                #region Water
                case 67:
                    {
                        data.AddText("This pack contains an~Elite~L70~Great~Backsword,~an~Elite~L70~Crane~Vestment,~an~Elite~L67~Shark~Cap~and~3~+1~Stones.")
                     .AddOption("Yes.", 40)
                     .AddOption("Let~me~think.", 1)
                     .AddAvatar(63).FinalizeDialog();
                        break;
                    }

                case 40:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Player.ConquerPoints >= 699)
                            {
                                client.Player.ConquerPoints -= 699;

                                client.Inventory.AddItemWitchStack(720710, 0, 1, stream);
                                client.SendSysMesage("You received 1 EliteTaoistKit.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);



                            }
                            else
                            {
                                data.AddText("This pack costs 699 CPs.Since you don't have enough CPs, i can't give it to you!")
                  .AddOption("Alright.", 255)
                 .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {

                            data.AddText("Please make 1 space in your inventory.")
                         .AddOption("Let~me~think.", 255)
                        .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }


                #endregion
                #region Long-lee
                case 66:
                    {
                        data.AddText("This pack contains 2 (Elite)HeartNunchaku , 1 (Elite) Level 70 Combat Suit,1 (Elite) level 70 WindHood and~1~+1~Stones! Are you sure you want to pay 699 CPs to pruchase it?.")
                     .AddOption("Yes.", 41)
                     .AddOption("Let~me~think.", 1)
                     .AddAvatar(63).FinalizeDialog();
                        break;
                    }

                case 41:
                    {
                        if (client.Inventory.HaveSpace(5))
                        {
                            if (client.Player.ConquerPoints >= 699)
                            {
                                client.Player.ConquerPoints -= 699;

                                client.Inventory.Add(stream, 617138, 0, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false); //HeatNunchaku
                                client.Inventory.Add(stream, 617138, 0, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false); //HeatNunchaku
                                client.Inventory.Add(stream, 138068, 0, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false); //CombatSuit
                                client.Inventory.Add(stream, 148068, 0, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false); //WindHood
                                client.Inventory.AddItemWitchStack(723712, 0, 1, stream);
                                client.SendSysMesage("You received  2 (Elite)HeartNunchaku , 1 (Elite) Level 70 Combat Suit,1 (Elite) level 70 WindHood and~1~+1~Stones.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);



                            }
                            else
                            {
                                data.AddText("This pack costs 699 CPs.Since you don't have enough CPs, i can't give it to you!")
                  .AddOption("Alright.", 255)
                 .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {

                            data.AddText("Please make 5 space in your inventory.")
                         .AddOption("Let~me~think.", 255)
                        .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }


                #endregion
                #region Pirate
                case 65:
                    {
                        data.AddText("This pack contains 1 (Elite)MisteryRapier ,1 (Elite)GlowerPistol, 1 (Elite) Level 70 Tide Coat,1 (Elite) level 70 VikingHood and~1~+1~Stones! Are you sure you want to pay 699 CPs to pruchase it?.")
                     .AddOption("Yes.", 42)
                     .AddOption("Let~me~think.", 1)
                     .AddAvatar(63).FinalizeDialog();
                        break;
                    }

                case 42:
                    {
                        if (client.Inventory.HaveSpace(5))
                        {
                            if (client.Player.ConquerPoints >= 699)
                            {
                                client.Player.ConquerPoints -= 699;

                                client.Inventory.Add(stream, 611138, 0, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false); //MisteryRapier
                                client.Inventory.Add(stream, 612138, 0, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false); //GlowPistol
                                client.Inventory.Add(stream, 139068, 0, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false); //TideCoat
                                client.Inventory.Add(stream, 145068, 0, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false); //VikingHood
                                client.Inventory.AddItemWitchStack(723712, 0, 1, stream);
                                client.SendSysMesage("You received 1 (Elite)MisteryRapier ,1 (Elite)GlowerPistol, 1 (Elite) Level 70 Tide Coat,1 (Elite) level 70 VikingHood and~1~+1~Stones.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);



                            }
                            else
                            {
                                data.AddText("This pack costs 699 CPs.Since you don't have enough CPs, i can't give it to you!")
                  .AddOption("Alright.", 255)
                 .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {

                            data.AddText("Please make 5 space in your inventory.")
                         .AddOption("Let~me~think.", 255)
                        .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }


                #endregion
                #region Archer
                case 64:
                    {
                        data.AddText("This pack contains an~Elite~L70~Goose~Bow,~an~Elite~L67~Ape~Coat,~an~Elite~L72~Ape~Hat~and~3~+1~Stones! Are you sure you want to pay 699 CPs to pruchase it?.")
                     .AddOption("Yes.", 43)
                     .AddOption("Let~me~think.", 1)
                     .AddAvatar(63).FinalizeDialog();
                        break;
                    }

                case 43:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Player.ConquerPoints >= 699)
                            {
                                client.Player.ConquerPoints -= 699;

                                client.Inventory.AddItemWitchStack(720708, 0, 1, stream);
                                client.SendSysMesage("You received 1 EliteArcherKit.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);



                            }
                            else
                            {
                                data.AddText("This pack costs 699 CPs.Since you don't have enough CPs, i can't give it to you!")
                  .AddOption("Alright.", 255)
                 .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {

                            data.AddText("Please make 1 space in your inventory.")
                         .AddOption("Let~me~think.", 255)
                        .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }


                #endregion
                #region Warrior
                case 63:
                    {
                        data.AddText("This pack contains ~L70~Iron~Wand,~an~Elite~L70~Light~Armor,~an~Elite~L67~Heart~of~Ocean~and~3~+1~Stones! Are you sure you want to pay 699 CPs to pruchase it?.")
                     .AddOption("Yes.", 44)
                     .AddOption("Let~me~think.", 1)
                     .AddAvatar(63).FinalizeDialog();
                        break;
                    }

                case 44:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Player.ConquerPoints >= 699)
                            {
                                client.Player.ConquerPoints -= 699;

                                client.Inventory.AddItemWitchStack(720706, 0, 1, stream);
                                client.SendSysMesage("You received 1 EliteWarriorKit.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);



                            }
                            else
                            {
                                data.AddText("This pack costs 699 CPs.Since you don't have enough CPs, i can't give it to you!")
                  .AddOption("Alright.", 255)
                 .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {

                            data.AddText("Please make 1 space in your inventory.")
                         .AddOption("Let~me~think.", 255)
                        .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }


                #endregion
                #region Trojan
                case 62:
                    {
                        data.AddText("This pack contains an~Elite~L70~Shark~Sword,~an~Elite~L70~Rage~Armor,~an~Elite~L67~War~Coronet~and~3~+1~Stones! Are you sure you want to pay 699 CPs to pruchase it?.")
                     .AddOption("Yes.", 45)
                     .AddOption("Let~me~think.", 1)
                     .AddAvatar(63).FinalizeDialog();
                        break;
                    }

                case 45:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Player.ConquerPoints >= 699)
                            {
                                client.Player.ConquerPoints -= 699;

                                client.Inventory.AddItemWitchStack(720707, 0, 1, stream);
                                client.SendSysMesage("You received 1 EliteTrojanKit.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);



                            }
                            else
                            {
                                data.AddText("This pack costs 699 CPs.Since you don't have enough CPs, i can't give it to you!")
                  .AddOption("Alright.", 255)
                 .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {

                            data.AddText("Please make 1 space in your inventory.")
                         .AddOption("Let~me~think.", 255)
                        .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }


                #endregion
                #region Ninja
                case 61:
                    {
                        data.AddText("This pack contains an~Elite~L70~Rain~Katana,~an~Elite~L70~TigerVest,~an~Elite~L67~BloodVeil~and~3~+1~Stones! Are you sure you want to pay 699 CPs to pruchase it?.")
                     .AddOption("Yes.", 46)
                     .AddOption("Let~me~think.", 1)
                     .AddAvatar(63).FinalizeDialog();
                        break;
                    }

                case 46:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Player.ConquerPoints >= 699)
                            {
                                client.Player.ConquerPoints -= 699;

                                client.Inventory.AddItemWitchStack(720709, 0, 1, stream);
                                client.SendSysMesage("You received 1 EliteNinjaKit.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);


                            }
                            else
                            {
                                data.AddText("This pack costs 699 CPs.Since you don't have enough CPs, i can't give it to you!")
                  .AddOption("Alright.", 255)
                 .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {

                            data.AddText("Please make 1 space in your inventory.")
                         .AddOption("Let~me~think.", 255)
                        .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }


                #endregion
                #region Monk
                case 60:
                    {
                        data.AddText("This pack contains  2 Elite level 90 Beads of Eternity, Elite Level 87 Tough Frock,Elite Level 82 Martyr's Headband and~1~+1~Stones! Are you sure you want to pay 699 CPs to pruchase it?.")
                     .AddOption("Yes.", 47)
                     .AddOption("Let~me~think.", 1)
                     .AddAvatar(63).FinalizeDialog();
                        break;
                    }

                case 47:
                    {
                        if (client.Inventory.HaveSpace(5))
                        {
                            if (client.Player.ConquerPoints >= 699)
                            {
                                client.Player.ConquerPoints -= 699;

                                client.Inventory.Add(stream, 610178, 0, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false); //BeadsofEternity
                                client.Inventory.Add(stream, 610178, 0, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false); //BeadsofEternity
                                client.Inventory.Add(stream, 136078, 0, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false); //ToughFrock
                                client.Inventory.Add(stream, 143078, 0, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false); //Martyr`sHeadband
                                client.Inventory.AddItemWitchStack(723712, 0, 1, stream);
                                client.SendSysMesage("You received 2 (Elite)Beads of Eternity, 1 (Elite) Level 87 Tough Frock,1 (Elite) level 82 Martyr`sHeadband and~1~+1~Stones.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);



                            }
                            else
                            {
                                data.AddText("This pack costs 699 CPs.Since you don't have enough CPs, i can't give it to you!")
                  .AddOption("Alright.", 255)
                 .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {

                            data.AddText("Please make 5 space in your inventory.")
                         .AddOption("Let~me~think.", 255)
                        .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region UniversalKit
                case 68: //sexi
                    {

                        data.AddText("There are some options.");
                        if (client.Player.Class >= 100 && client.Player.Class <= 145)
                            data.AddText("The Elite Universal! Kit A contains an~Elite~L65~Bone~Bracelet,~an~Elite~L67~Ambergris~Bag,~an~Elite~L70~Snakeskin~Boots~and~3~+1~Stones.It costs 749 CPs, and is an incredible bargain! Would you like to buy one?");

                        else if (client.Player.Class >= 100 && client.Player.Class <= 145)
                            data.AddOption("Yeah!", 49);
                        else
                            data.AddText("The Elite Universal! Kit A contains an~Elite~L67~Platina~Necklace,~an~Elite~L70~Pearl~Ring,~an~Elite~L70~Snakeskin~Boots~and~3~+1~Stones.It costs 749 CPs, and is an incredible bargain! Would you like to buy one?");
                        data.AddOption("Yeah!", 50);
                        data.AddOption("Let~me~think.", 1)
                                   .AddAvatar(6).FinalizeDialog();
                        break;
                    }
                case 49: //wateri
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Player.ConquerPoints >= 749)
                            {
                                client.Player.ConquerPoints -= 749;

                                client.Inventory.AddItemWitchStack(720712, 0, 1, stream);
                                client.SendSysMesage("You received 1 EliteUniversalKitB.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);



                            }
                            else
                            {
                                data.AddText("This pack costs 749 CPs.Since you don't have enough CPs, i can't give it to you!")
                  .AddOption("Alright.", 255)
                 .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {

                            data.AddText("Please make 1 space in your inventory.")
                         .AddOption("Let~me~think.", 255)
                        .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }

                case 50:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Player.ConquerPoints >= 749)
                            {
                                client.Player.ConquerPoints -= 749;

                                client.Inventory.AddItemWitchStack(720711, 0, 1, stream);
                                client.SendSysMesage("You received 1 EliteUniversalKitA.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);



                            }
                            else
                            {
                                data.AddText("This pack costs 749 CPs.Since you don't have enough CPs, i can't give it to you!")
                  .AddOption("Alright.", 255)
                 .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {

                            data.AddText("Please make 1 space in your inventory.")
                         .AddOption("Let~me~think.", 255)
                        .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                ////
                #region Super Kits
                case 1:
                    {
                        data.AddText("There are some options.");
                        if (client.Player.Class >= 60 && client.Player.Class <= 65)
                            data.AddOption("Super~Monk~Outfit.", 10); //done
                        else if (client.Player.Class >= 50 && client.Player.Class <= 55)
                            data.AddOption("Super~Ninja~Outfit.", 11); //done
                        else if (client.Player.Class >= 10 && client.Player.Class <= 15)
                            data.AddOption("Super~Trojan~Outfit.", 12); //done
                        else if (client.Player.Class >= 20 && client.Player.Class <= 25)
                            data.AddOption("Super~Warrior~Outfit.", 13); //done
                        else if (client.Player.Class >= 40 && client.Player.Class <= 45)
                            data.AddOption("Super~Archer~Outfit.", 14); //done
                        else if (client.Player.Class >= 70 && client.Player.Class <= 75)
                            data.AddOption("Super~Pirate~Outfit.", 15); //done
                        else if (client.Player.Class >= 80 && client.Player.Class <= 85)
                            data.AddOption("Super~Long~Lee~Outfit.", 16); //DONE
                        else if (client.Player.Class >= 100 && client.Player.Class <= 145)
                            data.AddOption("Super~Water-Fire~Outfit.", 17);
                        if (client.Player.Class >= 100 && client.Player.Class <= 145)
                            data.AddOption("Common~Super~outfit~B.", 86);
                        else
                            data.AddOption("Common~Super~outfit~A.", 30);
                        data.AddOption("Anything~else?", 105)
                             .AddAvatar(6).FinalizeDialog();
                        break;
                    }
                #endregion
                #region Water
                case 17:
                    {
                        data.AddText("This pack contains a~Super~L90~War~Backsword,~a~Super~L87~Full~Frock,~a~Super~L82~Dragon~Cap! Are you sure you want to pay 699 CPs to pruchase it?.")
                     .AddOption("Yes.", 21)
                     .AddOption("Let~me~think.", 1)
                     .AddAvatar(63).FinalizeDialog();
                        break;
                    }

                case 21:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Player.ConquerPoints >= 699)
                            {
                                client.Player.ConquerPoints -= 699;

                                client.Inventory.AddItemWitchStack(720703, 0, 1, stream);
                                client.SendSysMesage("You received 1 SuperTaoistKit.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);


                            }
                            else
                            {
                                data.AddText("This pack costs 699 CPs.Since you don't have enough CPs, i can't give it to you!")
                  .AddOption("Alright.", 255)
                 .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {

                            data.AddText("Please make 1 space in your inventory.")
                         .AddOption("Let~me~think.", 255)
                        .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }


                #endregion
                #region Long-lee
                case 16:
                    {
                        data.AddText("This pack contains 2 (Super)HeartNunchaku , 1 (Super) Level 70 Combat Suit,1 (Super) level 70 WindHood and~3~+2~Stones ! Are you sure you want to pay 699 CPs to pruchase it?.")
                     .AddOption("Yes.", 9)
                     .AddOption("Let~me~think.", 1)
                     .AddAvatar(63).FinalizeDialog();
                        break;
                    }

                case 9:
                    {
                        if (client.Inventory.HaveSpace(4))
                        {
                            if (client.Player.ConquerPoints >= 699)
                            {
                                client.Player.ConquerPoints -= 699;

                                client.Inventory.Add(stream, 617139, 0, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false); //HeatNunchaku
                                client.Inventory.Add(stream, 617139, 0, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false); //HeatNunchaku
                                client.Inventory.Add(stream, 138069, 0, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false); //CombatSuit
                                client.Inventory.Add(stream, 148069, 0, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false); //WindHood
                                client.Inventory.AddItemWitchStack(3005654, 0, 2, stream);
                                client.SendSysMesage("You received  2 (Super)HeartNunchaku , 1 (Super) Level 70 Combat Suit,1 (Super) level 70 WindHood and~3~+2~Stones .", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);



                            }
                            else
                            {
                                data.AddText("This pack costs 699 CPs.Since you don't have enough CPs, i can't give it to you!")
                  .AddOption("Alright.", 255)
                 .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {

                            data.AddText("Please make 4 space in your inventory.")
                         .AddOption("Let~me~think.", 255)
                        .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }


                #endregion
                #region Pirate
                case 15:
                    {
                        data.AddText("This pack contains 1 (Super)MisteryRapier ,1 (Super)GlowerPistol, 1 (Super) Level 70 Tide Coat,1 (Super) level 70 VikingHood and~3~+2~Stones ! Are you sure you want to pay 699 CPs to pruchase it?.")
                     .AddOption("Yes.", 8)
                     .AddOption("Let~me~think.", 1)
                     .AddAvatar(63).FinalizeDialog();
                        break;
                    }

                case 8:
                    {
                        if (client.Inventory.HaveSpace(5))
                        {
                            if (client.Player.ConquerPoints >= 699)
                            {
                                client.Player.ConquerPoints -= 699;

                                client.Inventory.Add(stream, 611139, 0, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false); //MisteryRapier
                                client.Inventory.Add(stream, 612139, 0, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false); //GlowPistol
                                client.Inventory.Add(stream, 139069, 0, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false); //TideCoat
                                client.Inventory.Add(stream, 145069, 0, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false); //VikingHood
                                client.Inventory.AddItemWitchStack(3005654, 0, 2, stream);
                                client.SendSysMesage("You received 1 (Super)MisteryRapier ,1 (Super)GlowerPistol, 1 (Super) Level 70 Tide Coat,1 (Super) level 70 VikingHood and~3~+2~Stones.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);



                            }
                            else
                            {
                                data.AddText("This pack costs 699 CPs.Since you don't have enough CPs, i can't give it to you!")
                  .AddOption("Alright.", 255)
                 .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {

                            data.AddText("Please make 5 space in your inventory.")
                         .AddOption("Let~me~think.", 255)
                        .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }


                #endregion
                #region Archer
                case 14:
                    {
                        data.AddText("This pack contains a~Super~L90~Star~Bow,~a~Super~L87~Shark~Coat,~a~Super~L82~Marten~Hat! Are you sure you want to pay 699 CPs to pruchase it?.")
                     .AddOption("Yes.", 7)
                     .AddOption("Let~me~think.", 1)
                     .AddAvatar(63).FinalizeDialog();
                        break;
                    }

                case 7:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Player.ConquerPoints >= 699)
                            {
                                client.Player.ConquerPoints -= 699;
                                client.Inventory.AddItemWitchStack(720701, 0, 1, stream);
                                client.SendSysMesage("You received 1 SuperArcherKit.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);



                            }
                            else
                            {
                                data.AddText("This pack costs 699 CPs.Since you don't have enough CPs, i can't give it to you!")
                  .AddOption("Alright.", 255)
                 .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {

                            data.AddText("Please make 1 space in your inventory.")
                         .AddOption("Let~me~think.", 255)
                        .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }


                #endregion
                #region Warrior
                case 13:
                    {
                        data.AddText("This pack contains a~Super~L90~Exorcising~Wand,~a~Super~L87~Lion~Armor,~a~Super~L82~Dragon~Helmet! Are you sure you want to pay 699 CPs to pruchase it?.")
                     .AddOption("Yes.", 6)
                     .AddOption("Let~me~think.", 1)
                     .AddAvatar(63).FinalizeDialog();
                        break;
                    }

                case 6:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Player.ConquerPoints >= 699)
                            {
                                client.Player.ConquerPoints -= 699;

                                client.Inventory.AddItemWitchStack(720699, 0, 1, stream);
                                client.SendSysMesage("You received 1 SuperWarriorKit.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);



                            }
                            else
                            {
                                data.AddText("This pack costs 699 CPs.Since you don't have enough CPs, i can't give it to you!")
                  .AddOption("Alright.", 255)
                 .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {

                            data.AddText("Please make 1 space in your inventory.")
                         .AddOption("Let~me~think.", 255)
                        .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }


                #endregion
                #region Trojan
                case 12:
                    {
                        data.AddText("This pack contains a~Super~L90~Exorcising~Wand,~a~Super~L87~Lion~Armor,~a~Super~L82~Dragon~Helmet! Are you sure you want to pay 699 CPs to pruchase it?.")
                     .AddOption("Yes.", 5)
                     .AddOption("Let~me~think.", 1)
                     .AddAvatar(63).FinalizeDialog();
                        break;
                    }

                case 5:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Player.ConquerPoints >= 699)
                            {
                                client.Player.ConquerPoints -= 699;
                                client.Inventory.AddItemWitchStack(720700, 0, 1, stream);
                                client.SendSysMesage("You received 1 SuperTrojanKit.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);


                            }
                            else
                            {
                                data.AddText("This pack costs 699 CPs.Since you don't have enough CPs, i can't give it to you!")
                  .AddOption("Alright.", 255)
                 .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {

                            data.AddText("Please make 1 space in your inventory.")
                         .AddOption("Let~me~think.", 255)
                        .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }


                #endregion
                #region Ninja
                case 11:
                    {
                        data.AddText("This pack contains a~Super~L90~Ise~Katana,~a~Super~L87~Bear~Vest,~a~Super~L82~Stealth~Veil! Are you sure you want to pay 699 CPs to pruchase it?.")
                     .AddOption("Yes.", 4)
                     .AddOption("Let~me~think.", 1)
                     .AddAvatar(63).FinalizeDialog();
                        break;
                    }

                case 4:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Player.ConquerPoints >= 699)
                            {
                                client.Player.ConquerPoints -= 699;


                                client.Inventory.AddItemWitchStack(720702, 0, 1, stream);
                                client.SendSysMesage("You received 1 SuperNinjaKit.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);



                            }
                            else
                            {
                                data.AddText("This pack costs 699 CPs.Since you don't have enough CPs, i can't give it to you!")
                  .AddOption("Alright.", 255)
                 .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {

                            data.AddText("Please make 1 space in your inventory.")
                         .AddOption("Let~me~think.", 255)
                        .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }


                #endregion
                #region Monk
                case 10:
                    {
                        data.AddText("This pack contains  2 Super level 90 Beads of Eternity, Super Level 87 Tough Frock,Super Level 82 Martyr's Headband and~3~+2~Stones! Are you sure you want to pay 699 CPs to pruchase it?.")
                     .AddOption("Yes.", 3)
                     .AddOption("Let~me~think.", 1)
                     .AddAvatar(63).FinalizeDialog();
                        break;
                    }

                case 3:
                    {
                        if (client.Inventory.HaveSpace(5))
                        {
                            if (client.Player.ConquerPoints >= 699)
                            {
                                client.Player.ConquerPoints -= 699;

                                client.Inventory.Add(stream, 610179, 0, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false); //BeadsofEternity
                                client.Inventory.Add(stream, 610179, 0, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false); //BeadsofEternity
                                client.Inventory.Add(stream, 136079, 0, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false); //ToughFrock
                                client.Inventory.Add(stream, 143079, 0, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false); //Martyr`sHeadband
                                client.Inventory.AddItemWitchStack(3005654, 0, 2, stream);
                                client.SendSysMesage("You received 2 (Super)Beads of Eternity, 1 (Super) Level 87 Tough Frock,1 (Super) level 82 Martyr`sHeadband and~3~+2~Stones.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);



                            }
                            else
                            {
                                data.AddText("This pack costs 699 CPs.Since you don't have enough CPs, i can't give it to you!")
                  .AddOption("Alright.", 255)
                 .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {

                            data.AddText("Please make 5 space in your inventory.")
                         .AddOption("Let~me~think.", 255)
                        .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
                #endregion

                #region Univeral Kit
                case 30:
                    {

                        data.AddText("There are some options.");
                        if (client.Player.Class >= 100 && client.Player.Class <= 145)
                            data.AddText("The Super Universal! Kit A contains a~Super~L85~Jade~Bracelet,~a~Super~L82~Jade~Bag,~a~Super~L90~Leopard~Boots.It costs 749 CPs, and is an incredible bargain! Would you like to buy one?");

                        else if (client.Player.Class >= 100 && client.Player.Class <= 145)
                            data.AddOption("Yeah!", 86);
                        else
                            data.AddText("The Super Universal! Kit A contains a~Super~L90~Crystal~Ring,~a~Super~L82~Basalt~Necklace,~a~Super~L90~Leopard~Boots.It costs 749 CPs, and is an incredible bargain! Would you like to buy one?");
                        data.AddOption("Yeah!", 99);
                        data.AddOption("Let~me~think.", 1)
                                   .AddAvatar(6).FinalizeDialog();
                        break;
                    }
                case 86:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Player.ConquerPoints >= 749)
                            {
                                client.Player.ConquerPoints -= 749;

                                client.Inventory.AddItemWitchStack(720705, 0, 1, stream);
                                client.SendSysMesage("You received 1 SuperUniversalKitB.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);



                            }
                            else
                            {
                                data.AddText("This pack costs 749 CPs.Since you don't have enough CPs, i can't give it to you!")
                  .AddOption("Alright.", 255)
                 .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {

                            data.AddText("Please make 1 space in your inventory.")
                         .AddOption("Let~me~think.", 255)
                        .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }

                case 99: //normal
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Player.ConquerPoints >= 749)
                            {
                                client.Player.ConquerPoints -= 749;
                                client.Inventory.AddItemWitchStack(720704, 0, 1, stream);
                                client.SendSysMesage("You received 1 SuperUniversalKitA.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);


                            }
                            else
                            {
                                data.AddText("This pack costs 749 CPs.Since you don't have enough CPs, i can't give it to you!")
                  .AddOption("Alright.", 255)
                 .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {

                            data.AddText("Please make 1 space in your inventory.")
                         .AddOption("Let~me~think.", 255)
                        .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
                    #endregion
            }
        }
        [NpcAttribute(NpcID.PkReset)]
        public static void PkReset(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("In exchange of 10 CPs per PK Point i will decrease your PK, do you think you are strong enough for this exchange?")
                           .AddOption("Clear 10 pkPoints.", 1)
                            .AddOption("Clear 100 pkPoints.", 2)
                             .AddOption("Clear 500 pkPoints.", 3)
                            .AddOption("Nevermind.", 255)
                              .AddAvatar(264)
                            .FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Player.ConquerPoints >= 100)
                        {
                            if (client.Player.PKPoints >= 10)
                            {
                                client.Player.PKPoints -= 10;
                                client.Player.ConquerPoints -= 100;
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "eidolon");
                                client.CreateBoxDialog("You've removed 10 Pk Points.");
                            }
                            else
                            {
                                data.AddText("You can not use this option for now since your Pk points are less than 10.")
                                    .AddOption("I see.", 255)
                                      .AddAvatar(264)
                                    .FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, but you don`t have enough CPs.")
                                     .AddOption("I see.", 255)
                                       .AddAvatar(264)
                                     .FinalizeDialog();
                        }

                        break;
                    }
                case 2:
                    {
                        if (client.Player.ConquerPoints >= 1000)
                        {
                            if (client.Player.PKPoints >= 100)
                            {
                                client.Player.PKPoints -= 100;
                                client.Player.ConquerPoints -= 1000;
                                client.CreateBoxDialog("You've removed 100 Pk Points.");
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "eidolon");
                            }
                            else
                            {
                                data.AddText("You can not use this option for now since your Pk points are less than 100.")
                                    .AddOption("I see.", 255)
                                      .AddAvatar(264)
                                    .FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, but you don`t have enough CPs.")
                                     .AddOption("I see.", 255)
                                       .AddAvatar(264)
                                     .FinalizeDialog();
                        }

                        break;
                    }
                case 3:
                    {
                        if (client.Player.ConquerPoints >= 5000)
                        {
                            if (client.Player.PKPoints >= 500)
                            {
                                client.Player.PKPoints -= 500;
                                client.Player.ConquerPoints -= 5000;
                                client.CreateBoxDialog("You've removed 500 Pk Points.");
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "eidolon");
                            }
                            else
                            {
                                data.AddText("You can not use this option for now since your Pk points are less than 500.")
                                    .AddOption("I see.", 255)
                                      .AddAvatar(264)
                                    .FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, but you don`t have enough CPs.")
                                     .AddOption("I see.", 255)
                                       .AddAvatar(264)
                                     .FinalizeDialog();
                        }

                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.HideNSeek)]
        public static void HideNSeek(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        byte RandomPVE = (byte)Program.GetRandom.Next(2, 4);
                        Game.MsgNpc.Npc _obj;
                        if (client.Map.SearchNpcInScreen((uint)id, client.Player.X, client.Player.Y, out _obj))
                        {
                            client.Map.RemoveNpc(_obj, stream);
                            data.AddText($"I`m the Hide(n)Seek Envoy. You've found me and got {RandomPVE} PVE points which can be exchanged from the PVE points manager.")
                   .AddOption("Thanks.", 255)
                    .AddAvatar(105)
                    .FinalizeDialog();
                            client.Player.PVEPoints += 5;
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            Role.Core.SendGlobalMessage(stream, $"Player {client.Player.Name} has found the [GM] Hide(n)Seek Envoy in the Market! Congrats!", MsgMessage.ChatMode.TopLeftSystem);
                            Role.Core.SendGlobalMessage(stream, $"Player {client.Player.Name} has found the [GM] Hide(n)Seek Envoy in the Market! Congrats!", MsgMessage.ChatMode.Center);
                            //                Program.//                DiscordAPI.Enqueue($"``{client.Player.Name} has found the [GM] Hide(n)Seek Envoy in the Market and won {RandomPVE} PVE Points!``");
                        }
                        break;
                    }

            }
        }



        [NpcAttribute(NpcID.VipQuest)]
        public static void VipQuest(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I`m the VIP6 hunting maps master. I can send you to hunting maps.")
                   .AddOption("Floor 1.", 1)
                   .AddOption("Floor 2.", 2)
                    .AddOption("I`ll~think~it~over.", 255)
                    .AddAvatar(105)
                    .FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Player.VipLevel == 6)
                            client.Teleport(608, 632, 1700);
                        else
                            client.SendSysMesage("You dont have VIP 6.");
                        break;
                    }
                case 2:
                    {

                        if (client.Player.VipLevel == 6)
                            client.Teleport(9, 333, 1210);
                        else
                            client.SendSysMesage("You dont have VIP 6.");
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Arthur)]
        public static void Arthur(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("This place can be quite dangerous. If you want to leave, just come talk to me.")
                            .AddText("Well.. i can help you to get MysteryFruit. \n")
                            .AddText("There are 4 stages for you to complete the MysteryFruit Quest: \n")
                        .AddText("Stage 1. Change 3 Moss, 3 SoulAroma and 3 DreamGras for an GhostHorn. \n")
                        .AddText("Stage 2. Change 3xGhostHorn for an EvilTooth. \n")
                        .AddText("Stage 3. Change 4xEvilTooth for an ImpureVigor. \n")
                        .AddText("Stage 4. Change 5xImpureVigor for an 1DayVIP token. \n")
                            .AddOption("I have (Moss,SoulAroma,DreamGras)", 1)
                             .AddOption("I have 3xGhostHorn to trade.", 2)
                             .AddOption("I have 4xEvilTooth to trade.", 3)
                             .AddOption("I have 5xImpureVigor to trade", 4)
                             .AddOption("Teleport~to~Twin~City", 5)
                   .AddOption("I`ll~think~it~over.", 255).FinalizeDialog();

                        break;

                    }
                case 4:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                   .AddOption("Let me check.", 255).FinalizeDialog();
                            break;
                        }

                        if (client.Inventory.Contain(722730, 5, 0))
                        {
                            client.Inventory.Remove(722730, 5, stream);
                            client.Inventory.Add(stream, 3001044, 1);

                            client.CreateBoxDialog("You`ve received MysteryFruit.");
                            Program.SendGlobalPackets.Enqueue(new MsgMessage("Congratulation! " + client.Player.Name + " has finished the MysteryFruit Quest.", MsgMessage.MsgColor.red, MsgMessage.ChatMode.System).GetArray(stream));
                        }
                        else
                        {
                            data.AddText("I'm sorry, you need at least 5 ImpureVigor in order for me to help you.")
                           .AddOption("I see.", 255).FinalizeDialog();
                        }
                        break;
                    }
                case 3:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                   .AddOption("Let me check.", 255).FinalizeDialog();
                            break;
                        }
                        if (client.Inventory.Contain(722721, 4, 0))
                        {
                            client.Inventory.Remove(722721, 4, stream);
                            client.Inventory.Add(stream, 722730);
                            data.AddText("You successfully exchange the EvilTooth for an ImpureVigor!")
                       .AddOption("Thank you.", 255).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("I'm sorry, you need at least 5 EvilTooth in order for me to help you.")
                      .AddOption("I see.", 255).FinalizeDialog();
                        }

                        break;
                    }
                case 2:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                   .AddOption("Let me check.", 255).FinalizeDialog();
                            break;
                        }
                        if (client.Inventory.Contain(722722, 3, 0))
                        {
                            client.Inventory.Remove(722722, 3, stream);
                            client.Inventory.Add(stream, 722721);
                            data.AddText("You successfully exchange the GhostHorn for an EvilTooth!")
                       .AddOption("Thank you.", 255).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("I'm sorry, you need at least 5 GhostHorn in order for me to help you.")
                      .AddOption("I see.", 255).FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                   .AddOption("Let me check.", 255).FinalizeDialog();
                            break;
                        }
                        if (client.Inventory.Contain(722723, 3, 0)
                            && client.Inventory.Contain(722724, 3, 0)
                            && client.Inventory.Contain(722725, 3, 0))
                        {
                            client.Inventory.Remove(722723, 3, stream);
                            client.Inventory.Remove(722724, 3, stream);
                            client.Inventory.Remove(722725, 3, stream);
                            client.Inventory.Add(stream, 722722);
                            data.AddText("You successfully exchange the (Moss,SoulAroma and DreamGras) for an GhostHorn!")
                       .AddOption("Thank you.", 255).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("I'm sorry, you need at least 3xMoss, 3xSoulAroma and 3xDreamGras in order for me to help you.")
                      .AddOption("I see.", 255).FinalizeDialog();
                        }

                        break;
                    }
                case 5:
                    {
                        client.Teleport(299, 298, 1002);
                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.Norbert)]
        public static void Norbert(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(721262, 5) && client.Inventory.Contain(721263, 1))
                        {
                            data.AddText("Hi, you have got the meterial i want. Do you come for the Bomb?")
                 .AddOption("Yes", 10)
                 .AddOption("Just passing by.", 255)
                 .AddAvatar(67).FinalizeDialog();

                            break;
                        }
                        data.AddText("Five~pieces~of~Saltpeter~and~one~piece~of~Sulphur~are~required~to~make~the~Bomb.~And~I~charge~a~fee~of~30,000~silvers.")
                   .AddOption("What~is~the~Bomb?", 1)
                   .AddOption("I~see.", 255)
                   .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        data.AddText("It`s used to blow down the guild gate! I participated in a guild war and witnessed lots of people lost their lives when attacking the gate.")
                            .AddText("~Since then, I have been working on inventing powerful bombs which can destroy the guild gate. Finally, I make it!")
                   .AddOption("Can~you~make~one~for~me?", 2)
                   .AddOption("Oh.~I~see.", 255)
                   .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        data.AddText("No problem. But you know such bombs are powerful and dangerous. Whoever uses it to destroy a guild gate will be killed by the bomb, too!")
                  .AddOption("Thanks.~I~need~it~badly.", 3)
                  .AddOption("Then~forget~it.", 255)
                  .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        data.AddText("Good. You`re going to collect 5 Saltpeter and a Sulphur. Besides, you`ll need to pay 30,000 Silver as fees.")
                   .AddOption("Where~do~I~get~the~materials?", 4)
                   .AddOption("I`ll~give~up.", 255)
                   .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 4:
                    {
                        data.AddText("You~can~get~Saltpeter~from~my~friend~OldQuarrier~in~Ape~City~and~get~Sulphur~from~the~Bandits~nearby.")
                   .AddOption("Okay,~I`ll~be~back~soon.", 255)
                   .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 10:
                    {
                        if (client.Inventory.Contain(721262, 5) && client.Inventory.Contain(721263, 1))
                        {
                            client.Inventory.Remove(721262, 5, stream);
                            client.Inventory.Remove(721263, 1, stream);
                            client.Inventory.Add(stream, 721261);
                            data.AddText("You can take the Bomb away. Remember that you`ll be killed once you use it to destroy the guild gate!")
                   .AddOption("I see. Thanks for the remind.", 255)
                   .AddAvatar(67).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.OldQuarrier)]
        public static void OldQuarrier(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Let me guess. It`s Norbert who asked you to come here. Am I right?")
                  .AddOption("Yeah,~I~need~a~Saltpeter.", 1)
                  .AddOption("Nope.", 2)
                  .AddAvatar(91).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.Inventory.Add(stream, 721262);
                            data.AddText("My~pleasure.~Here~you~are.")
             .AddOption("Thank~you.", 255)
             .AddAvatar(91).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Please make 1 more space in your inventory.")
              .AddOption("Let me check.", 255)
              .AddAvatar(91).FinalizeDialog();
                        }

                        break;
                    }
                case 2:
                    {
                        data.AddText("Are~you~coming~for~Saltpeter?~Since~Norbert~invented~Bomb,~I~have~been~kept~busy~with~supplying~Saltpeter~for~him.")
                            .AddOption("What~is~the~Bomb?", 3)
                            .AddOption("Sorry~to~bother~you.", 255)
                            .AddAvatar(91).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        data.AddText("It~is~powerful~and~used~to~bomb~out~City~Gate.~If~you`re~interested~in~it,~you~can~visit~Norbert~ for the details. He lives in~the~small~village~of~the~Maple Forest")
                             .AddOption("I~see.", 255)
                             .AddAvatar(91).FinalizeDialog();

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.DrYinYang)]
        public static void DrYinYang(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("If you want to change your gender for a new life, I can help you. Before making the")
                            .AddText("~magic of gender reassignment works, you need to pay 1075 CPs, and make sure you`ve understood")
                            .AddText("~the rules and procedures about the reassignment.")
                   .AddOption("Please~change~my~gender,~now.", 1)
                   .AddOption("What~else~should~I~know?", 2)
                   .AddOption("Not~interested.", 255)
                   .AddAvatar(218).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        data.AddText("If you want to change your gender for a new life, I can help you. Before making the")
                            .AddText("~magic of gender reassignment works, you need to pay 1075 CPs, and make sure you`ve understood")
                            .AddText("~the rules and procedures about the reassignment.")
                   .AddOption("Please~change~my~gender,~now.", 1)
                   .AddOption("What~else~should~I~know?", 2)
                   .AddOption("Not~interested.", 255)
                   .AddAvatar(218).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Player.Spouse != "None")
                        {
                            data.AddText("You`re married. To change your gender, you need to get a divorce, first.")
                .AddOption("Okay.", 255)
                .AddAvatar(218).FinalizeDialog();
                            break;
                        }
                        if (client.Player.ConquerPoints >= 1075)
                        {
                            if (client.Equipment.FreeEquip(Role.Flags.ConquerItem.Garment) == false
                           || !client.Equipment.FreeEquip(Role.Flags.ConquerItem.AleternanteGarment))
                            {
                                data.AddText("Please remove your garment.")
                   .AddOption("Okay.", 255)
                   .AddAvatar(218).FinalizeDialog();
                                break;
                            }
                            client.Player.ConquerPoints -= 1075;
                            if (Role.Core.IsBoy(client.Player.Body))
                            {
                                ushort typ = (ushort)(client.Player.Body % 10);
                                switch (typ)
                                {
                                    case 3: typ = 1; break;
                                    case 4: typ = 2; break;
                                }
                                client.Player.Body = (ushort)(2000 + typ);
                                client.Player.SendUpdate(stream, client.Player.Mesh, MsgUpdate.DataType.Mesh);
                                client.Player.View.ReSendView(stream);
                            }
                            else
                            {
                                ushort typ = (ushort)(client.Player.Body % 10);
                                switch (typ)
                                {
                                    case 1: typ = 3; break;
                                    case 2: typ = 4; break;
                                }
                                client.Player.Body = (ushort)(1000 + typ);
                                client.Player.SendUpdate(stream, client.Player.Mesh, MsgUpdate.DataType.Mesh);
                                client.Player.View.ReSendView(stream);
                            }
                            if (client.Player.Nobility != null)
                            {
                                client.Player.Nobility.Gender = client.Player.GetGender;
                                client.Player.Nobility.Mesh = client.Player.Mesh;
                            }
                            if (client.Player.MyGuild != null && client.Player.MyGuildMember != null)
                                client.Player.MyGuildMember.Mesh = client.Player.Mesh;
                            if (client.ArenaStatistic != null)
                                client.ArenaStatistic.Mesh = client.Player.Mesh;
                            if (client.TeamArenaStatistic != null)
                                client.TeamArenaStatistic.Mesh = client.Player.Mesh;
                            if (client.Player.OnFairy)
                            {
                                client.Player.FairySpawn.Mode = MsgTransformFairy.Action.Dezactive;
                                client.Player.View.SendView(stream.TransformFairyCreate(MsgTransformFairy.Action.Dezactive, client.Player.FairySpawn.FairyType, client.Player.FairySpawn.UID), true);
                                client.Player.OnFairy = false;
                                client.Player.FairySpawn = default(MsgTransformFairy);
                            }
                            MsgMessage messaj = new MsgMessage(client.Player.Name + " changed the gender.", MsgMessage.MsgColor.red, MsgMessage.ChatMode.System);


                            Program.SendGlobalPackets.Enqueue(messaj.GetArray(stream));
                        }
                        else
                        {
                            data.AddText("Gender reassignment requires 1,075 CPs. Make sure you have enough money with you.")
                 .AddOption("Okay.", 255)
                 .AddAvatar(218).FinalizeDialog();
                        }

                        break;
                    }
                case 2:
                    {
                        data.AddText("To make gender reassignment as simple as possible, I want you to be single, not married. Make sure you`ve")
                            .AddText("~properly handled with your clan and guild affairs. After the reassignment, your name will be removed")
                            .AddText("~from the Charm ranking, and your garment will be put into your inventory. All in all, you need to carefully")
                   .AddOption("I~want~to~change~my~gender.", 3)
                   .AddOption("I`ll~think~about~it.", 255)
                   .AddAvatar(218).FinalizeDialog();

                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.NameRegister)]
        public static void NameRegister(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Good day! If you want to turn a new page in your life, you can pay me 20,000 CPs to get a new name. Your new name will be registered, immediately.")
                   .AddOption("Okay,~here`s~my~CPs!", 1)
                   .AddOption("Reset edit times", 10)
                   .AddOption("I`ll~think~about~it.", 255)
                   .AddAvatar(31).FinalizeDialog();

                        break;
                    }
                case 10:
                    {
                        data.AddText("Do you want to reset your name for 150,000 Conquer Points ?")
                        .AddOption("Yes.", 11).AddOption("No , thanks !", 255)
                        .AddAvatar(31).FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        if (client.Player.ConquerPoints >= 150000)
                        {
                            client.Player.ConquerPoints -= 150000;
                            client.Player.NameEditCount = 0;
                            data.AddText("Your name reset was finished succesfully!")
                       .AddOption("thank you", 255)
                      .AddAvatar(31).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Sorry, but you don`t have enough CPs.")
                       .AddOption("Okay.", 255)
                      .AddAvatar(31).FinalizeDialog();
                        }
                        break;
                    }

                case 1:
                    {
                        if (client.Player.ConquerPoints >= 20000)
                        {
                            ActionQuery action = new ActionQuery()
                            {
                                Type = ActionType.OpenDialog,
                                ObjId = client.Player.UID,
                                dwParam = MsgServer.DialogCommands.ChangeName,
                                wParam1 = client.Player.X,
                                wParam2 = client.Player.Y,

                            };
                            client.Send(stream.ActionCreate(&action));
                            int editable = Math.Max(0, Database.Server.NameChangeCount(client.Player.VipLevel) - client.Player.NameEditCount);
                            client.Send(stream.NameChangeCreate(MsgNameChange.ActionID.DialogInfo, client.Player.NameEditCount, Database.Server.NameChangeCount(client.Player.VipLevel), client.Player.Name));
                        }
                        else
                        {
                            data.AddText("At your service! Oh, no... I`m sorry. You`d better check your bag, again. You don`t have enough CPs to rename yourself. It takes 20,000 CPs, and I`m not allowed to offer any discounts.")
                      .AddOption("Rules~are~rules.~I`ll~wait.", 255)
                      .AddAvatar(31).FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Revenant1)]
        public static void Revenant1(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.AC_Lieutenant, client.Player.Class, 1302);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1) == false)
                            {
                                client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 1);
                                data.AddText("Thank you very much! I can rest in peace now!")
                           .AddOption("Close~your~eyes,~soldier!", 255)
                           .AddAvatar(30).FinalizeDialog();
                                break;
                            }
                        }
                        data.AddText("Charge! I will kill you all!")
                           .AddOption("Oh~MY!", 255)
                           .AddAvatar(30).FinalizeDialog();



                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Revenant2)]
        public static void Revenant2(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.AC_Lieutenant, client.Player.Class, 1302);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 0, 1) == false)
                            {
                                client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 0, 1);
                                data.AddText("Thank you very much! I can rest in peace now!")
                           .AddOption("Close~your~eyes,~soldier!", 255)
                           .AddAvatar(30).FinalizeDialog();
                                break;
                            }
                        }
                        data.AddText("Charge! I will kill you all!")
                           .AddOption("Oh~MY!", 255)
                           .AddAvatar(30).FinalizeDialog();


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Revenant3)]
        public static void Revenant3(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.AC_Lieutenant, client.Player.Class, 1302);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 0, 0, 1) == false)
                            {
                                client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 0, 0, 1);
                                data.AddText("Thank you very much! I can rest in peace now!")
                           .AddOption("Close~your~eyes,~soldier!", 255)
                           .AddAvatar(30).FinalizeDialog();
                                break;
                            }
                        }
                        data.AddText("Charge! I will kill you all!")
                           .AddOption("Oh~MY!", 255)
                           .AddAvatar(30).FinalizeDialog();

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Revenant4)]
        public static void Revenant4(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.AC_Lieutenant, client.Player.Class, 1302);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 0, 0, 0, 1) == false)
                            {
                                client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 0, 0, 0, 1);
                                data.AddText("Thank you very much! I can rest in peace now!")
                           .AddOption("Close~your~eyes,~soldier!", 255)
                           .AddAvatar(30).FinalizeDialog();
                                break;
                            }
                        }
                        data.AddText("Charge! I will kill you all!")
                           .AddOption("Oh~MY!", 255)
                           .AddAvatar(30).FinalizeDialog();


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Revenant5)]
        public static void Revenant5(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.AC_Lieutenant, client.Player.Class, 1302);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 0, 0, 0, 0, 1) == false)
                            {
                                client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 0, 0, 0, 0, 1);
                                data.AddText("Thank you very much! I can rest in peace now!")
                           .AddOption("Close~your~eyes,~soldier!", 255)
                           .AddAvatar(30).FinalizeDialog();
                                break;
                            }
                        }
                        data.AddText("Charge! I will kill you all!")
                           .AddOption("Oh~MY!", 255)
                           .AddAvatar(30).FinalizeDialog();


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.CrystalRiddler)]
        public static void CrystalRiddler(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DisCityMain, client.Player.Class, 1313);

            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 1) == false)
                            {
                                client.Inventory.Remove(711354, 1, stream);
                                client.Inventory.Add(stream, 711355);
                                client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest2.MissionId, 1);
                                client.SendSysMesage("The Divine Calix was filled with the fountain water.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.red);
                            }
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.StoneApe)]
        public static void StoneApe(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.StoneApe, client.Player.Class, 1312);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DisCityMain, client.Player.Class, 1313);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.StoneApe, client.Player.Class, 1314);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            data.AddText("I come from the stone, and so I am the Stone Ape. The other apes regard me as a freak, but I`m not! Please, go and ask the Solar Saint what I am!")
                               .AddText("~I must know what I truly am, or I fear I shall go bananas!");
                            data.AddOption("Okay!", 1);
                            data.AddOption("Sorry,~not~today!", 255);
                            data.AddAvatar(53).FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("I was born from the rocks used to restore cracks in the sky? I can`t believe my ears! And what is this? A Divine Calix? Solar Saint told you that I can")
                              .AddText("~become an immortal after I drink the fountain water in the calix? That`s great news! Thank you very much for your help!");
                            data.AddOption("You~are~welcome!", 2);
                            data.AddOption("See~you~then!", 255);
                            data.AddAvatar(53).FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest3.MissionId, 3))
                            {
                                data.AddText("Thank you! I feel much more powerful now! I will work hard to become a worthy immortal!")
                              .AddOption("You~will!", 10)
                              .AddOption("See~you~then!", 255)
                              .AddAvatar(53).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Where is the Divine Calix? I want to drink the water inside!")
                                 .AddOption("I~will~grab~it~back~for~you!", 255)
                                 .AddAvatar(53).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Go and ask the Solar Saint what I am!")
                           .AddOption("Okay!", 255)
                           .AddAvatar(53).FinalizeDialog();
                        }


                        break;
                    }
                case 1:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        data.AddText("Go and ask the Solar Saint what I am!")
                                 .AddOption("Okay!", 255)
                                 .AddAvatar(53).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.Inventory.Remove(711355, 1, stream);
                            client.SendSysMesage("You received 485,000 points of EXP, 1,000 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 485000, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.Money += 1000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        }

                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                        {
                            client.SendSysMesage("You received 728,000 points of EXP, 1,500 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 728000, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.Money += 1500;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.Inventory.Add(stream, Database.ItemType.DoubleExp);
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.JackDaniel)]
        public static void JackDaniel(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.CarpenterJack, client.Player.Class, 1315);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.JackDaniel, client.Player.Class, 1316);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("No problem! I will do everything I can to help Carpenter Jack fix the wooden bridge! Why not take a short break? Or better yet, I have something else for you to do!")
                          .AddOption("As~you~wish!", 1)
                          .AddOption("Sorry,~not~today!", 255)
                          .AddAvatar(53).FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            goto case 2;
                        }
                        else
                        {
                            data.AddText("Please don`t stand and in the way! The transport column will pass through here!")
                       .AddOption("Sorry!", 255)
                       .AddAvatar(53).FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.SendSysMesage("You received 495,000 points of EXP, 1000 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 495000, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.Money += 1000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        goto case 2;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Go slay 50 Giant Ape and protect the wood transport column.")
                         .AddOption("Okay!", 255)
                         .AddAvatar(53).FinalizeDialog();
                            break;
                        }
                        data.AddText("I can prepare the wood needed by the carpenter, but I`m worried about the Giant Apes. Slay 50 Giant Apes for me in the Love Canyon, in case they attack the wood transports.")
                          .AddOption("No~problem!", 3)
                          .AddOption("Sorry,~not~today!", 255)
                          .AddAvatar(53).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.CliffFlower1)]
        public static void CliffFlower1(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.CarpenterJack, client.Player.Class, 1317);
            switch (Option)
            {
                case 0:
                    {
                        if (!client.Player.ActivePick)
                        {
                            if (client.Player.QuestGUI.IsActiveQuest(ActiveQuest.MissionId))
                            {
                                client.Player.AddPick(stream, "Collect~Cliff~Flower", 5);
                            }
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.CliffFlower2)]
        public static void CliffFlower2(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.CarpenterJack, client.Player.Class, 1317);
            switch (Option)
            {
                case 0:
                    {
                        if (!client.Player.ActivePick)
                        {
                            if (client.Player.QuestGUI.IsActiveQuest(ActiveQuest.MissionId))
                            {
                                client.Player.AddPick(stream, "Collect~Cliff~Flower", 5);
                            }
                        }

                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.KeYulunsFollower)]
        public static void KeYulunsFollower(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.KeYulun, client.Player.Class, 1463);
            switch (Option)
            {
                case 0:
                    {

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1) == false)
                            {
                                data.AddText("The Sand Monsters L68 are too strong for me. Please go kill them and protect me!")
                    .AddOption("I`m~on~my~way.", 255)
                     .AddAvatar(53).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Help, help! It`s so good to see you here. The Sand Monsters L68 blocked my way home. Please, I don`t want to die here. Could you kill them for me?")
                    .AddOption("No~problem!", 1)
                    .AddOption("Monsters?~It`s~terrible.", 255)
                     .AddAvatar(53).FinalizeDialog();
                            }

                            break;
                        }

                        break;
                    }
                case 1:
                    {
                        client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 1);
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.DCViceGenera)]
        public static void DCViceGenera(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.DCViceGenera, client.Player.Class, 1452);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DCViceGenera, client.Player.Class, 1453);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DCViceGenera, client.Player.Class, 1454);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaoistYu, client.Player.Class, 1455);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("There are many dangerous creatures in the desert. Once you step through here, I won`t be able to protect you anymore. Take care.");



                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Hidden~Danger~1.", 1);

                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Hidden~Danger~2.", 4);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Hidden~Danger~3.", 10);

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Hidden~Danger~4.", 20);
                        data.AddOption("Thanks.", 255);
                        data.AddAvatar(51).FinalizeDialog();

                        break;
                    }
                case 20:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(1, 1, 1, 1, 1))
                        {
                            data.AddText("The Sandbag is open! We did it!")
                                .AddOption("Yeah,~yeah!", 21)
                                 .AddAvatar(51).FinalizeDialog();
                            break;
                        }
                        else
                        {
                            data.AddText("You`re going to collect some water from the source in the city and spread the water over the city gates.")
                              .AddText("~After that, the Sand Monsters will be unable to go through the gates or enter the city.")
                                .AddOption("I~see.", 255)
                                 .AddAvatar(51).FinalizeDialog();
                        }
                        break;
                    }
                case 21:
                    {
                        if (!client.Inventory.HaveSpace(2))
                        {
                            data.AddText("Please make 2 more spaces in your inventory.")
                                  .AddOption("Let me check.", 255)
                                   .AddAvatar(51).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                        {
                            client.Inventory.Remove(720939, 1, stream);
                            client.CreateBoxDialog("You~received~a~+1~Stone~(B)!~Find~the~Socketsmith~in~the~market~(178,204)~to~compose~your~equipment!");
                            client.Inventory.Add(stream, 730001, 1, 1);
                            client.Inventory.Add(stream, 720173);
                            client.CreateBoxDialog("ou've~received~some~EXP,~3,000~Silver,~a~Small~Joy~Stone~and~a~+1~Stone~(B)!");
                            client.IncreaseExperience(stream, 2719000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.Player.QuestGUI.SendAutoPatcher(1000, 559, 795, (ushort)NpcID.KeYulun);
                        }

                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1, 1, 1, 1))
                            {

                                data.AddText("A lot of yellow sand? That`s weird. This information is important. Thanks for you help!")
                                    .AddOption("Okay.", 3)
                                    .AddAvatar(51).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Have you killed the Sand Monsters, yet? Go patrol outside the city gates. You`ll find plenty of them roaming around.")
                                    .AddOption("Okay.", 255)
                                    .AddAvatar(51).FinalizeDialog();

                            }

                            break;
                        }
                        data.AddText("Have you killed the Sand Monsters, yet? Go patrol outside the city gates. You`ll find plenty of them roaming around.")

                             .AddOption("I`ll~go~right~away.", 2)
                         .AddOption("Later.", 255)
                         .AddAvatar(51).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        client.CreateBoxDialog("Head~out~and~patrol~around~the~city~gates.");
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);

                        break;
                    }
                case 3:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.CreateBoxDialog("You`ve~received~some~EXP~and~1,500~Silver!");
                            client.IncreaseExperience(stream, 2719000);
                            client.Player.Money += 1500;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        goto case 4;
                    }
                case 4:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(711338, 1))
                            {
                                data.AddText("The Sand Monsters want to use the Sandbags to attack the city? Thanks for the information. Here`s your reward!")
                   .AddOption("Thanks.", 6)
                   .AddAvatar(51).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("The Sand Monsters must have something to do with the weird yellow sand. I need you to turn to the Sand Monsters for some clues.")
                      .AddOption("Alright.", 255)
                      .AddAvatar(51).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("The Sand Monsters must have something to do with the weird yellow sand. I need you to return to the Sand Monsters to look for clues.")
                                   .AddOption("I~won`t~let~you~down.", 5)
                                   .AddOption("Later.", 255)
                                   .AddAvatar(51).FinalizeDialog();

                        break;
                    }
                case 5:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
                case 6:
                    {

                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Remove(711338, 1, stream);
                            uint[] Items = new uint[]
                                {
                                    (uint)(700000 + (uint)Role.Flags.Gem.RefinedDragonGem)
                                    ,(uint)(700000 + (uint)Role.Flags.Gem.RefinedFuryGem)
                                    ,(uint)(700000 + (uint)Role.Flags.Gem.RefinedGloryGem)
                                    ,(uint)(700000 + (uint)Role.Flags.Gem.RefinedKylinGem)
                                    ,(uint)(700000 + (uint)Role.Flags.Gem.RefinedMoonGem)
                                    ,(uint)(700000 + (uint)Role.Flags.Gem.RefinedPhoenixGem)
                                    ,(uint)(700000 + (uint)Role.Flags.Gem.RefinedRainbowGem)
                                    ,(uint)(700000 + (uint)Role.Flags.Gem.RefinedThunderGem)
                                    ,(uint)(700000 + (uint)Role.Flags.Gem.RefinedTortoiseGem)
                                    ,(uint)(700000 + (uint)Role.Flags.Gem.RefinedVioletGem)
                                };
                            uint ItemID = Items[(uint)Program.GetRandom.Next(0, Items.Length)];

                            client.Inventory.Add(stream, ItemID);

                            client.CreateBoxDialog("You~received~some~EXP,~3,000~Silver~and~1~Refined~Gem!");
                            client.IncreaseExperience(stream, 2719000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        goto case 10;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("These Sandbags can`t be opened somehow. I`ve tried many ways, and even the a blade doesn`t work. Can you deliver it to Taoist Yu? Maybe he can figure that out.")

                                .AddOption("I`m~on~my~way.", 255)
                                .AddAvatar(51).FinalizeDialog();
                            break;
                        }
                        data.AddText("These Sandbags can`t be opened, no matter what I do. I`ve tried many ways, and even a blade won`t work. Can you take it to Taoist Yu? Maybe he can figure it out.")
                                   .AddOption("You~can~count~on~me.", 11)
                                   .AddOption("Later.", 255)
                                   .AddAvatar(51).FinalizeDialog();

                        break;
                    }
                case 11:
                    {
                        client.CreateBoxDialog("Hurry~to~deliver~the~Sandbag~to~Taoist~Yu.");
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.SnakemanLeader)]
        public static void SnakemanLeader(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.MoonMaiden, client.Player.Class, 1332);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.SnakemanLeader, client.Player.Class, 1359);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Why you are here? Speak!");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted)
                            && client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1) == false)
                            data.AddOption("Quest:~Snakeman~Leader(2).", 1);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Race~Hatred(1).", 10);

                        data.AddOption("See~you~then!", 255);

                        data.AddAvatar(10).FinalizeDialog();

                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 50))
                            {
                                data.AddText("Good job! Take your reward!")
                          .AddOption("Thanks!", 12)
                          .AddOption("See~you~then!", 255)
                          .AddAvatar(10).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Kill 50 Heresy Snakemen for me! They are my enemies!")
                            .AddOption("Okay!", 255)
                            .AddAvatar(10).FinalizeDialog();
                            }


                            break;
                        }
                        data.AddText("The Heresy Snakemen are enemies to my race! I want you to kill 50 Heresy Snakemen for me!")
                                   .AddOption("Okay!", 11)
                                   .AddOption("Sorry,~not~today!", 255)
                                   .AddAvatar(10).FinalizeDialog();

                        break;
                    }
                case 11:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
                case 1:
                    {
                        data.AddText("Oh? A Catholicon? Give it to me!")
                                .AddOption("Eat~it!", 2)
                                .AddOption("See~you~then!", 255)
                                .AddAvatar(10).FinalizeDialog();

                        break;
                    }
                case 12:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.SendSysMesage("You received 1,205,000 EXP, and 2,000 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 1205000);
                            client.Player.Money += 2000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        break;
                    }
                case 2:
                    {
                        client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 1);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "accession1");
                        client.SendSysMesage("The Snakeman Leader ate the Catlholicon and become very sock! Go report back to Moon Maiden!", MsgMessage.ChatMode.System);

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.CaptorCooke)]
        public static void CaptorCooke(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.CaptorCooke, client.Player.Class, 1344);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.CaptorCooke, client.Player.Class, 1336);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.HarmonyTaoist, client.Player.Class, 1339);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.CaptorCooke, client.Player.Class, 1340);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)NpcID.HarmonyTaoist, client.Player.Class, 1342);
            var ActiveQuest6 = Database.QuestInfo.GetFinishQuest((uint)NpcID.CaptorCooke, client.Player.Class, 1345);
            var ActiveQuest7 = Database.QuestInfo.GetFinishQuest((uint)NpcID.CaptorCooke, client.Player.Class, 1346);
            var ActiveQuest8 = Database.QuestInfo.GetFinishQuest((uint)NpcID.CaptorCooke, client.Player.Class, 1347);
            var ActiveQuest9 = Database.QuestInfo.GetFinishQuest((uint)NpcID.CaptorCooke, client.Player.Class, 1450);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("No criminal can escape from my hands! Here`s a letter for the DC Vice Captain. I need you to head to the Desert and deliver this letter to him.");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Back~Home(1).", 1);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Back~Home(2).", 10);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Quest:~Back~Home(5).", 20);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Pick~a~Fight(1).", 30);

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Quest:~Pick~a~Fight(3).", 40);


                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Strife(1).", 50);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest7.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Strife(2).", 60);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest8.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Strife(3).", 70);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest9.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("You~can~count~on~me.", 90);

                        data.AddOption("See~you~then!", 255);

                        data.AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 90:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest9, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Hurry~to~deliver~this~letter~to~the~DC~Vice~Captain!", ActiveQuest9.FinishNpcId.Map, ActiveQuest9.FinishNpcId.X, ActiveQuest9.FinishNpcId.Y, ActiveQuest9.FinishNpcId.ID);

                        break;
                    }
                case 70:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest8.MissionId, 1, 1))
                        {
                            data.AddText("Thank you for all you have done. Your name will be remembered by us!")
                 .AddOption("You~are~welcome.", 72)
                 .AddOption("See~you~then!", 255)
                 .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        data.AddText("Listen, this maybe a little complicated. Take these two Corpse Bags and these two Smell Bags of the two snake races. Use them in the appointed place to entice the elders of the 2 races from their lair and kill them. After the elders are killed!")
                 .AddText(" ~The 2 races will be furious at each other! And we can just sit down to watch them fight.")
                            .AddOption("No~problem!", 71)
                      .AddOption("Sorry,~not~today", 255)
                      .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 72:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                      .AddOption("Let me check.", 255)
                      .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest8.MissionId))
                        {
                            client.Inventory.Remove(720861, 1, stream);
                            client.Inventory.Remove(720862, 1, stream);
                            if (client.Player.Class > 100)
                                client.Inventory.Add(stream, 121128, 0, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            else
                                client.Inventory.Add(stream, 120128, 0, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);

                            client.SendSysMesage("You received 1,863,000 EXP, an Elite Necklace and 3,000 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 1863000);
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        break;
                    }
                case 71:
                    {

                        if (!client.Inventory.HaveSpace(2))
                        {
                            data.AddText("Please make 2 more spaces in your inventory.")
                      .AddOption("Let me check.", 255)
                      .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        if (!client.Inventory.Contain(720861, 1))
                            client.Inventory.Add(stream, 720861);
                        if (!client.Inventory.Contain(720862, 1))
                            client.Inventory.Add(stream, 720862);
                        client.Player.QuestGUI.Accept(ActiveQuest8, 0);
                        client.SendSysMesage("You can used the Corpse Bag(Heresy Bnake) and the Small Bag(Heresy Snake). You enticed the Heresy Snakeman Eider out from its fair", MsgMessage.ChatMode.System);

                        break;
                    }
                case 60:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest7.MissionId, 40, 40))
                        {
                            data.AddText("My scout reported that the two snake races are at war! Thank you for your help! Now we can deliver the final blow!")
               .AddOption("Tell~me~what!", 62)
               .AddOption("See~you~then!", 255)
               .AddAvatar(7).FinalizeDialog();
                            break;
                        }
                        data.AddText("Now, carry these 2 Smell Bags and slay 40 Snakemen and 40 Heresy Snakemen. The smell of the other race will be left on the dead body of the Snakemen and Heresy Snakemen. Let`s make their hatred greater!")
                        .AddOption("No~problem!", 61)
                        .AddOption("Sorry,~not~today", 255)
                        .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 62:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                      .AddOption("Let me check.", 255)
                      .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest7.MissionId))
                        {
                            client.Inventory.Add(stream, Database.ItemType.Meteor, 0, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.SendSysMesage("You received 1,739,000 EXP, and 2,700 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 1739000);
                            client.Player.Money += 2700;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }


                        break;
                    }
                case 61:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest7, 0);
                        break;
                    }
                case 50:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest6.MissionId, 20, 20))
                            {
                                data.AddText("It is great to have you help me! Now, listen carefully to my plan!")
                     .AddOption("Okay!", 52)
                     .AddAvatar(7).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Slay 20 Snakemen and 20 Heresy Snakemen and use these 2 Smell bags to collect their smell.")
                       .AddOption("See~you~then!", 255)
                       .AddAvatar(7).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("The Snakeman and the Heresy Snakeman are two major snake races in Ape City. I have a secret plan to stir up a fight between them! Take these 2 Smell Bags, and go slay 20 Snakemen and 20 Heresy Snakemen to collect their smell.")
                        .AddOption("No~problem!", 51)
                        .AddOption("Sorry,~not~today", 255)
                        .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 52:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                      .AddOption("Let me check.", 255)
                      .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest6.MissionId))
                        {
                            client.Inventory.AddItemWitchStack(1002000, 0, 5, stream);
                            client.SendSysMesage("You received 1,553,000 EXP, 2,500 Silver, and 5 Panaceas.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 1553000);
                            client.Player.Money += 2500;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        break;
                    }
                case 51:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest6, 0);
                        break;
                    }
                case 40:
                    {
                        data.AddText("Good job! This plan will not succeed without your help! Here are your rewards!")
                           .AddOption("Thank~you~very~much!", 41)
                           .AddOption("See~you~then!", 255)
                           .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 41:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                      .AddOption("Let me check.", 255)
                      .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest5.MissionId))
                        {
                            client.CreateBoxDialog("You~received~a~+1~Stone~(B).~You~can~use~Stones~to~compose~equipment~in~the~Wuxing~Oven~(Market~178,204).");
                            client.Inventory.Add(stream, 730001, 1, 1, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.SendSysMesage("You received 1,835,000 EXP, and 2,000 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 1835000);
                            client.Player.Money += 2000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        break;
                    }
                case 30:
                    {
                        data.AddText("The Snakeman and the Heresy Snakeman are the two major creatures, here. They usually stir up trouble for us, but I have a plan to pick up a fight between them. Go speak with Harmony Taoist to learn more about the plan!")
                           .AddOption("No~problem!", 31)
                           .AddOption("Sorry,~not~today", 255)
                           .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 31:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        client.Player.QuestGUI.SendAutoPatcher(ActiveQuest4.FinishNpcId.Map, ActiveQuest4.FinishNpcId.X, ActiveQuest4.FinishNpcId.Y, ActiveQuest4.FinishNpcId.ID);
                        break;
                    }
                case 20:
                    {
                        data.AddText("Wonderful! With the help of the Cloud Riding, I can bring the criminal back to Ape City and have him punished by law safely! Here are your rewards!")
                          .AddOption("Thank~you!", 21)
                          .AddOption("Sorry,~not~today", 255)
                          .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 21:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                      .AddOption("Let me check.", 255)
                      .AddAvatar(7).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                        {
                            client.Inventory.Add(stream, 160118);
                            client.SendSysMesage("You received 475,000 EXP, a pair of Elite Shoes and 1500 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 475000);
                            client.Player.Money += 1500;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        break;
                    }
                case 10:
                    {
                        data.AddText("I heard that there is a famous Harmony Taoist here. He must know a shortcut to the Ape City. Go ask him for me! You know, I need to stay here watch this criminal.")
                         .AddOption("No~problem!", 11)
                         .AddOption("Sorry,~not~today", 255)
                         .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 11:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.Player.QuestGUI.SendAutoPatcher(ActiveQuest2.FinishNpcId.Map, ActiveQuest2.FinishNpcId.X, ActiveQuest2.FinishNpcId.Y, ActiveQuest2.FinishNpcId.ID);
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1, 1, 1))
                            {
                                data.AddText("It is all cliff around here. I need to return to the Ape City as soon as possible! What can I do?")
                         .AddOption("You~have~my~help!", 3)
                         .AddAvatar(7).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Can you find a shortcut for me? I need to stay here watch this criminal.")
                            .AddOption("Okay!", 255)
                            .AddAvatar(7).FinalizeDialog();
                            }

                            break;
                        }
                        data.AddText("I just captured a wanted criminal! But I am afraid that his friends will come to rescue him. I need to return to Ape City as fast as possible! Can you find a shortcut for me? I need to stay here and watch this ruffian!")
                             .AddOption("No~problem!", 2)
                             .AddOption("Sorry,~not~today", 255)
                             .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.SendSysMesage("You received 890,000 EXP, and 1,500 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 890000);
                            client.Player.Money += 1500;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        break;
                    }
                case 2:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.HeresySnakemanLeader)]
        public static void HeresySnakemanLeader(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.HarmonyTaoist, client.Player.Class, 1342);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.HeresySnakemanLeader, client.Player.Class, 1360);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("You are not a normal person! I can tell it from your face!");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Quest:~Pick~a~Fight(3).", 1);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Race~Hatread(2).", 10);
                        data.AddOption("Really?", 255);

                        data.AddAvatar(10).FinalizeDialog();


                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 60))
                        {
                            data.AddText("Thank you very much for slaying my enemies! Here are your rewards!")
         .AddOption("Thanks!", 12)
      .AddOption("See~you~then!", 255)
           .AddAvatar(10).FinalizeDialog();
                            break;
                        }
                        data.AddText("The Snakemen are my enemy! I will wipe them all out! Slay 60 Snakemen for me!")
               .AddOption("No~problem!", 11)
            .AddOption("Sorry,~I~am~not~interested.", 255)
                 .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 12:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.SendSysMesage("You received 1,205,000 EXP, and 2,000 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 1205000);
                            client.Player.Money += 2000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        break;
                    }
                case 11:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
                case 1:
                    {

                        client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 1);
                        client.Player.QuestGUI.SendAutoPatcher(1020, 211, 445, 8298);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.HarmonyTaoist)]
        public static void HarmonyTaoist(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.HarmonyTaoist, client.Player.Class, 1335);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.HarmonyTaoist, client.Player.Class, 1343);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.CaptorCooke, client.Player.Class, 1336);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.HarmonyTaoist, client.Player.Class, 1337);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)NpcID.HarmonyTaoist, client.Player.Class, 1338);
            var ActiveQuest6 = Database.QuestInfo.GetFinishQuest((uint)NpcID.HarmonyTaoist, client.Player.Class, 1339);
            var ActiveQuest7 = Database.QuestInfo.GetFinishQuest((uint)NpcID.CaptorCooke, client.Player.Class, 1340);
            var ActiveQuest8 = Database.QuestInfo.GetFinishQuest((uint)NpcID.HarmonyTaoist, client.Player.Class, 1341);
            var ActiveQuest9 = Database.QuestInfo.GetFinishQuest((uint)NpcID.HarmonyTaoist, client.Player.Class, 1342);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("You are not a normal person! I can tell it from your face!");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Quest:~Back~Home(2).", 20);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                                data.AddOption("Quest:~Back~Home(3).", 30);
                            else if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                                data.AddOption("Quest:~Back~Home(4).", 40);
                            else if (client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                                data.AddOption("Quest:~Back~Home(5).", 60);
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest7.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Quest:~Pick~a~Fight(1).", 70);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest7.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {

                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest8.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                                data.AddOption("Quest:~Pick~a~Fight(2).", 80);
                            else if (client.Player.QuestGUI.CheckQuest(ActiveQuest9.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                                data.AddOption("Quest:~Pick~a~Fight(3).", 90);
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Eradicate~Snakeman.", 1);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Snakeman~L63.", 10);
                        data.AddOption("Continue Quests.", 50).AddOption("See~you~then!", 255);

                        data.AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 90:
                    {
                        data.AddText("I have cast my magic on the Holy Bead and the Heresy Snake Gall! Use the Holy Bead to transform into a Snakeman and challenge the Heresy Leader. Use the Heresy Snake Gall to transform into a Heresy Snakeman to challenge the Snakeman Leader.")
                                 .AddText("~By doing this, we can arose their hatred against each other and see both sides jump on each other without getting involved in it!")
                     .AddOption("No~problem!", 91)
                  .AddOption("Sorry,~I~am~not~interested.", 255)
                       .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 91:
                    {
                        client.Player.QuestGUI.SendAutoPatcher(1020, 441, 451, 30105);
                        client.Player.QuestGUI.Accept(ActiveQuest9, 0);
                        break;
                    }
                case 80:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest8.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(720857, 1)
                                && client.Inventory.Contain(720858, 1))
                            {
                                data.AddText("Good. I will cast my magic spell on the Holy Bead and the Heresy Snake Gall! Then you can use it to transform into a Snakeman or a Heresy Snakeman to continue our plan.")
                      .AddOption("Great!", 82)
                      .AddOption("See~you~then!", 255)
                           .AddAvatar(67).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Get a Holy Bead from the Snakeman and a Heresy Snake Gall from the Heresy Snakeman. We need them to pick a fight between the two snake races.")
                      .AddOption("Okay!", 255)
                           .AddAvatar(67).FinalizeDialog();
                            }

                            break;
                        }
                        data.AddText("Listen! We have a plan to pick a fight between the two snake races. Get a Holy Bead from the Snakeman and a Heresy Snake Gall from the Heresy Snakeman. These two items are the key to carry out the plan!")
                     .AddOption("No~problem!", 81)
                  .AddOption("Sorry,~I~am~not~interested.", 255)
                       .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 82:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest8.MissionId))
                        {
                            client.SendSysMesage("You received 1,205,000 EXP, and 2,000 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 1205000);
                            client.Player.Money += 2000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        break;
                    }
                case 81:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest8, 0);
                        break;
                    }
                case 70:
                    {
                        data.AddText("I have discussed this with Captor Cooke. This will be a big plan!")
                         .AddOption("Tell~me~what!", 71)
                      .AddOption("Sorry,~I~am~not~interested.", 255)
                           .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 71:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest7.MissionId))
                        {
                            client.SendSysMesage("You received 301,000 EXP, and 500 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 301000);
                            client.Player.Money += 500;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        break;
                    }
                case 60:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Teach Captor Cooke Cloud Riding! We have to help him send the criminals back to Ape City to be punished by the courts!")
                        .AddOption("Okay!", 255)
                             .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        data.AddText("Since you have learned the secret of Cloud Riding, you should go teach Captor Cooke how to ride the clouds. We need to help him send the criminals back to Ape City to be punished by the courts!")
                           .AddOption("No~problem!", 61)
                        .AddOption("See~you~then!", 255)
                             .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 61:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest6, 0);
                        break;
                    }
                case 40:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest5.MissionId, 1))
                            {
                                data.AddText("You are not a normal person! I knew it at the time when I saw you! See, you mastered the Cloud Riding!")
                  .AddOption("Thank~you.", 42)
                  .AddOption("See~you~then!", 255)
                       .AddAvatar(67).FinalizeDialog();

                            }
                            else
                            {
                                data.AddText("Go to the cliff closest to Ape City, and chant `Kuh Limb Mah, Kuh Limb Mah` to use the skill! Don`t forget to put away your weapons, first!")
                      .AddOption("Okay.", 255)
                           .AddAvatar(67).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("According to the Scroll, you need a pure mind to fly over the cliff. Now, put down your weapon. Go to the cliff closest to Ape City, and chant `Kuh Limb Mah, Kuh Limb Mah` to use the skill!")
                          .AddOption("No~problem!", 41)
                       .AddOption("See~you~then!", 255)
                            .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 42:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                             .AddOption("Let me check.", 255)
                             .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest5.MissionId))
                        {
                            client.CreateBoxDialog("You~received~a~Meteor.~You~can~use~Meteors~to~upgrade~equipment~level~at~the~Equipment~Blacksmith~(Market~178,199).");
                            client.Inventory.Add(stream, Database.ItemType.Meteor);
                            client.SendSysMesage("You received 1,187,000 EXP, and 2,000 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 1870000);
                            client.Player.Money += 2000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        break;
                    }
                case 41:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest5, 0);
                        break;
                    }
                case 30:
                    {
                        if (client.Inventory.Contain(720856, 1))
                        {
                            data.AddText("That is it! The Cloud Riding Scroll. It`s written in the Snakemen`s language... Give it to me. I will translate it to you!")
                 .AddOption("Okay!", 32)
                 .AddOption("See~you~then!", 255)
                 .AddAvatar(67).FinalizeDialog();
                            break;
                        }


                        data.AddText("Snakeman has a secret skill of Cloud Riding. As the name suggested, you can raid the cloud flying over the cliffs. Get a Cloud Riding Scroll from the Snakeman and you will know how to fly!")
                       .AddOption("No~problem!", 31)
                       .AddOption("See~you~then!", 255)
                       .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 31:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        break;
                    }
                case 32:
                    {
                        client.Inventory.Remove(720856, 1, stream);
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                        {
                            client.SendSysMesage("You received 1,290,000 EXP, and 1,500 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 1290000);
                            client.Player.Money += 1500;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        break;
                    }
                case 20:
                    {
                        data.AddText("A shortcut to Ape City? There is one. Fly over the cliff, and there you go! But you`ll need the Cloud Riding Skill to help you!")
                         .AddOption("What~is~it?", 22)
                         .AddOption("See~you~then!", 255)
                         .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 22:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                        {
                            client.SendSysMesage("You received 890,000 EXP, and 1,500 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 890000);
                            client.Player.Money += 1500;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        break;
                    }
                case 50:
                    {
                        client.Player.QuestGUI.SendAutoPatcher(1020, 211, 445, 8298);
                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 50))
                            {
                                data.AddText("I can`t believe it! You made it! Here are your rewards!")
                          .AddOption("Thank~you!", 12)
                          .AddOption("See~you~then!", 255)
                          .AddAvatar(67).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Slay 50 Snakemen L63 for me! Be careful! They are very aggressive!")
                              .AddOption("Okay!", 255)
                              .AddAvatar(67).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("The Snakeman L63 is the most aggressive snake race! I want you to slay 50 Snakemen L63 for me!")
                                 .AddOption("No~problem!", 11)
                                 .AddOption("Sorry,~not~today!", 255)
                                 .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 12:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.SendSysMesage("You received 1,223,000 EXP, and 2,000 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 1223000);
                            client.Player.Money += 2000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        break;
                    }
                case 11:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 60))
                            {
                                data.AddText("Thank you very much for slaying the Snakeman for me. Here are your rewards!")
                          .AddOption("Thank~you!", 3)
                          .AddOption("See~you~then!", 255)
                          .AddAvatar(67).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Slay 60 Snakeman to return peace to Ape City!")
                              .AddOption("Okay!", 255)
                              .AddAvatar(67).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("Snakeman is a bane on Ape City! I want you to slay 60 Snakeman and return peace to Ape City!")
                               .AddOption("No~problem!", 2)
                               .AddOption("Sorry,~not~today!", 255)
                               .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.SendSysMesage("You received 1,170,000 EXP, and 2,000 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 1170000);
                            client.Player.Money += 2000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        break;
                    }
                case 2:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.MoonMaiden)]
        public static void MoonMaiden(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.BreezePupil, client.Player.Class, 1331);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.MoonMaiden, client.Player.Class, 1332);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.MoonMaiden, client.Player.Class, 1333);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.MoonMaiden, client.Player.Class, 1334);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Poisonous snakes are dangerous to people!");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Quest:~Snakeman~Leader(1).", 1);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Snakeman~Leader(2).", 10);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Snake~Gall.", 20);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Snake~Fang.", 30);

                        data.AddOption("Continue Quests.", 50).AddOption("See~you~then!", 255);

                        data.AddAvatar(175).FinalizeDialog();

                        break;
                    }
                case 50:
                    {
                        client.Player.QuestGUI.SendAutoPatcher(1020, 265, 429, 8297);
                        break;
                    }
                case 30:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(720855, 5))
                            {
                                data.AddText("Thank you very much for punishing the Snakeman. Here are your rewards!")
                                   .AddOption("Thank~you!", 32)
                                   .AddOption("See~you~then!", 255)
                                   .AddAvatar(175).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Go slay the Snakeman and collect 5 Snake Fangs for me! This is will be a warning!")
                                    .AddOption("Okay!", 255)
                                    .AddAvatar(175).FinalizeDialog();
                            }

                            break;
                        }
                        data.AddText("Many villagers were wounded by the Snakemen. They deserve to be punished! Go slay the Snakemen and collect 5 Snake Fangs for me! This is will be a warning to them!")
                    .AddOption("No~problem!", 31)
                    .AddOption("Sorry,~not~today!", 255)
                    .AddAvatar(175).FinalizeDialog();

                        break;
                    }
                case 32:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                        {
                            client.Inventory.Remove(720855, 5, stream);
                            client.Inventory.AddItemWitchStack(723340, 0, 1, stream);
                            client.SendSysMesage("You received 1,223,000 points of EXP, 2 Diligence Book, and 2,000 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 1223000);
                            client.Player.Money += 2000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        break;
                    }
                case 31:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        break;
                    }
                case 20:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(720854, 10))
                            {
                                data.AddText("Thank you very much for the Snake Gall. Here are your rewards!")
                             .AddOption("You~are~welcome.", 22)
                             .AddOption("See~you~then!", 255)
                             .AddAvatar(175).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("The Snake Gall of the Snakeman is a rare medicine, but a necessary ingredient in making the drug for snakebites. Collect 10 Snake Galls for me from the Snakeman!")
                             .AddOption("Okay!", 255)
                             .AddAvatar(175).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("The Snake Gall of the Snakeman is a rare medicine, but a necessary ingredient in making the drug for snakebites. Collect 10 Snake Galls for me! I can use them to save lives.")
                          .AddOption("No~problem!", 21)
                          .AddOption("Sorry,~not~today!", 255)
                          .AddAvatar(175).FinalizeDialog();

                        break;
                    }
                case 22:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                        {
                            client.Inventory.Remove(720854, 10, stream);
                            client.Inventory.AddItemWitchStack(720172, 0, 2, stream);
                            client.SendSysMesage("You received 1,170,000 points of EXP, 2 EXPBallScrap, and 2,000 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 1170000);
                            client.Player.Money += 2000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        break;
                    }
                case 21:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 1))
                        {
                            data.AddText("Well done! The Snakeman Leader must have learnt a lesson this time!")
                             .AddOption("Thank~you.", 12)
                             .AddOption("See~you~then!", 255)
                             .AddAvatar(175).FinalizeDialog();
                            break;
                        }
                        data.AddText("The Snakeman Leader is an enthusiast in alchemy who likes to eat the bolus produced by the alchemists to strength his power! I have some Catholicon, it some kind of drug for snakebites which is very effective in dealing with the snakes.")
                      .AddText("~Take it to the Snakeman Leader persuade him to eat it! Then the Breeze Pupil will have his revenge!")
                            .AddOption("No~problem!", 11)
                            .AddOption("Sorry,~not~today!", 255)
                            .AddAvatar(175).FinalizeDialog();

                        break;
                    }
                case 12:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                              .AddOption("Let me check.", 255)
                              .AddAvatar(175).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.CreateBoxDialog("You~received~a~Meteor.~You~can~use~Meteors~to~upgrade~equipment~level~at~the~Equipment~Blacksmith~(Market~178,199).");
                            client.Inventory.Add(stream, Database.ItemType.Meteor);
                            client.SendSysMesage("You received 702000 EXP, a Meteor and 1200 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 702000);
                            client.Player.Money += 1200;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        break;
                    }
                case 11:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
                case 1:
                    {
                        data.AddText("You want me to punish the Snakeman Leader? that is easy!")
                                 .AddOption("Tell~me~how?", 2)
                                 .AddOption("Just~kidding!", 255)
                                 .AddAvatar(175).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {

                            client.SendSysMesage("You received 292,000 points of EXP, and 5,000 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 292000);
                            client.Player.Money += 5000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.TempestTaoist)]
        public static void TempestTaoist(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.ArdenteTaoist, client.Player.Class, 1326);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.TempestTaoist, client.Player.Class, 1327);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.TempestTaoist, client.Player.Class, 1328);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I want to know the limits of man. That is the purpose of my practice, and my goal in life.");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Quest:~Medicine~Supply.", 1);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Thunder~Stone.", 10);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Rage~Stone.", 20);

                        data.AddOption("Open another Quest.", 100).AddOption("See~you~then!", 255);

                        data.AddAvatar(35).FinalizeDialog();

                        break;
                    }
                case 100:
                    {

                        client.Player.QuestGUI.SendAutoPatcher(1020, 356, 315, 8295);
                        break;
                    }
                case 20:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(720850, 3))
                            {
                                data.AddText("I will do some research on these Rage Stones. Thank you very much for your help!")
                               .AddOption("You~are~welcome!", 22)
                               .AddOption("See~you~then!", 255)
                               .AddAvatar(35).FinalizeDialog();
                            }
                            else
                            {


                                data.AddText("Collect 3 Rage Stones for me from the Thunder Ape L58.")
                                             .AddOption("Okay!", 255)
                                             .AddAvatar(35).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("The Rage Stones of the Thunder Apes L58 can really boost their strength! I hope you can collect 3 Rage Stones for me.")
                                     .AddOption("No~problem!", 21)
                                     .AddOption("See~you~then!", 255)
                                     .AddAvatar(35).FinalizeDialog();

                        break;
                    }
                case 22:
                    {
                        client.Inventory.Remove(720850, 3, stream);
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                        {

                            client.SendSysMesage("You received 1,134,000 points of EXP, and 2,000 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 1134000);
                            client.Player.Money += 2000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        break;
                    }
                case 21:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {

                            if (client.Inventory.Contain(711353, 3))
                            {
                                data.AddText("Thank you very much for your help! Here are your rewards!")
                                      .AddOption("Thank~you!", 12)
                                      .AddOption("See~you~then!", 255)
                                      .AddAvatar(35).FinalizeDialog();
                            }
                            else
                            {


                                data.AddText("Please collect 3 Thunder Stones for me from the Thunder Apes. I need to do a research on them!")
                                             .AddOption("Okay!", 255)
                                             .AddAvatar(35).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("Thunder Apes usually carry the Thunder Stones. I guess these strange stones give them special power! Will you collect 3 Thunder Stones for me, for further research?")
                                .AddOption("No~problem!", 11)
                                           .AddOption("Sorry,~not~today!", 255)
                                           .AddAvatar(35).FinalizeDialog();

                        break;
                    }
                case 12:
                    {
                        client.Inventory.Remove(711353, 3, stream);
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.Inventory.Add(stream, 720172);
                            client.SendSysMesage("You received 1,250,000 points of EXP, 1 EXP Ball Scrap, and 1,500 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 1250000);
                            client.Player.Money += 1500;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        break;
                    }
                case 11:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
                case 1:
                    {
                        data.AddText("Thank you very much for your medicine! We can use them to enter the lair of the apes and find out the way to deal with them.")
                             .AddOption("You~are~welcome!", 2)
                                        .AddOption("Sorry,~not~today!", 255)
                                        .AddAvatar(35).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Contain(1000030, 1) && client.Inventory.Contain(1001020, 1))
                        {
                            client.Inventory.Remove(1001020, 1, stream);
                            client.Inventory.Remove(1000030, 1, stream);
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                            {
                                client.SendSysMesage("You received 850,000 points of EXP, and 1,500 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                                client.IncreaseExperience(stream, 850000);
                                client.Player.Money += 1500;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            }
                        }

                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.ArdenteTaoist)]
        public static void ArdenteTaoist(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.ArdenteTaoist, client.Player.Class, 1324);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ArdenteTaoist, client.Player.Class, 1325);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ArdenteTaoist, client.Player.Class, 1326);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("The goal of the Taoist practice is to achieve harmony in both the mental and physical planes.");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Thunder~Ape.", 1);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Thunder~Ape~L58.", 10);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Medicine~Supply.", 20);
                        data.AddOption("See~you~then!", 255);

                        data.AddAvatar(35).FinalizeDialog();

                        break;
                    }
                case 20:
                    {
                        data.AddText("My brother, the Tempest Taoist, and I decided to enter the lair of the Giant Apes, but we can`t afford the necessary medicine. Please, buy 2 Amrita and 2 Pearl Ointments for my brother and I. I will give you all I have in return.")
                                 .AddOption("No~problem!", 21)
                                            .AddOption("Sorry,~not~today!", 255)
                                            .AddAvatar(35).FinalizeDialog();

                        break;
                    }
                case 21:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest3.MissionId, 2);
                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 50))
                        {
                            data.AddText("Thank you very much for wiping out the Thunder Apes L58 for me! Here are your rewards!")
                                     .AddOption("Thank~you!", 12)
                                     .AddOption("See~you~then!", 255)
                                     .AddAvatar(35).FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("Slay 50 Thunder Apes L58 for me! Be quick!")
                                     .AddOption("Okay!", 255)
                                     .AddAvatar(35).FinalizeDialog();
                                break;
                            }
                            data.AddText("Why can`t they stop bothering me! Go slay 50 Thunder Apes L58 for me! I need a quiet place for my practice!")
                               .AddOption("No~problem!", 11)
                                          .AddOption("Sorry,~not~today!", 255)
                                          .AddAvatar(35).FinalizeDialog();
                        }

                        break;
                    }
                case 12:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more spaces in your inventory.")
                                .AddOption("Let me check.", 255)
                                .AddAvatar(35).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.CreateBoxDialog("You~received~a~+1~Stone~(B).~You~can~use~Stones~to~compose~equipment~in~the~Wuxing~Oven~(Market~178,204).");
                            client.SendSysMesage("You received 1,134,000 points of EXP, and 2,000 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.Inventory.Add(stream, 730001, 1, 1, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.IncreaseExperience(stream, 1134000);

                            client.Player.Money += 2000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        break;
                    }
                case 11:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 60))
                        {

                            data.AddText("Thank you very much for wiping out the Thunder Apes for me! Here are your rewards!")
                          .AddOption("Thank~you!", 3)
                          .AddOption("See~you~then!", 255)
                          .AddAvatar(35).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("I hope you can slay 60 Thunder Apes for me. Maybe then I can continue with my studies and practice.")
                                 .AddOption("Sorry,~not~today!", 255)
                                 .AddAvatar(35).FinalizeDialog();
                            break;
                        }
                        data.AddText("The Thunder Apes are such a nuisance to me! They keep on interrupting my practice. Take this Soulfire Token and slay 60 Thunder Apes for me!")
                          .AddOption("No~problem!", 2)
                                     .AddOption("Okay!", 255)
                                     .AddAvatar(35).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        if (!client.Inventory.HaveSpace(2))
                        {
                            data.AddText("Please make 2 more spaces in your inventory.")
                                .AddOption("Let me check.", 255)
                                .AddAvatar(35).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.CreateBoxDialog("You~received~a~Meteor.~You~can~use~Meteors~to~upgrade~equipment~level~at~the~Equipment~Blacksmith~(Market~178,199).");
                            client.SendSysMesage("You received 1,079,000 points of EXP, 1 Small Joy Stone, and 2,000 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.Inventory.Add(stream, 720173);
                            client.Inventory.Add(stream, Database.ItemType.Meteor);
                            client.IncreaseExperience(stream, 1079000);
                            client.Player.Money += 2000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        break;
                    }
                case 2:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.BreezePupil)]
        public static void BreezePupil(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.BreezePupil, client.Player.Class, 1329);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.BreezePupil, client.Player.Class, 1330);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.BreezePupil, client.Player.Class, 1331);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I will become a great taoist in the future!");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Blaze~Pill.", 1);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Capture~the~Apes.", 10);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Snakeman~Leader(1).", 20);
                        data.AddOption("See~you~then!", 255);

                        data.AddAvatar(186).FinalizeDialog();

                        break;
                    }
                case 20:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Please find the Moon Maiden for me!")
                                 .AddOption("See~you~then!", 255)
                                 .AddAvatar(186).FinalizeDialog();
                            break;
                        }
                        data.AddText("Everytime I entered the habitation of the Snakemen, I was bullied by the Snakeman Leader. I heard that the Moon Maiden is an expert in dealing with the Snakemen and making drugs for snakebite. Will you find her and ask her to help me?")
                            .AddText("~I~want~my~revenge!")
                            .AddOption("No~problem!", 21)
                                       .AddOption("Sorry,~not~today!", 255)
                                       .AddAvatar(186).FinalizeDialog();

                        break;
                    }
                case 21:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        client.Player.QuestGUI.SendAutoPatcher(1020, 272, 438, 8296);
                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 5, 5))
                            {
                                data.AddText("Thank you very much for your help! Here are your rewards!")
                                      .AddOption("You~are~welcome!", 12)
                                      .AddOption("See~you~then!", 255)
                                      .AddAvatar(186).FinalizeDialog();
                            }
                            else
                            {
                                if (!client.Inventory.Contain(720852, 1))
                                    client.Inventory.Add(stream, 720852);
                                data.AddText("Capture 5 Thunder Apes and 5 Thunder Apes L58 for me.")
                                      .AddOption("Okay!", 255)
                                      .AddAvatar(186).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("My master gave me a Ape Gourd. He told me that I can use it to capture some Apes. Use it to Capture 5 Thunder Apes and 5 Thunder Apes L58 for me.")
                                  .AddOption("No~problem!", 11)
                                        .AddOption("Sorry,~not~today!", 255)
                                        .AddAvatar(186).FinalizeDialog();

                        break;
                    }
                case 12:
                    {
                        client.Inventory.Remove(720852, 1, stream);
                        if (!client.Inventory.HaveSpace(2))
                        {
                            data.AddText("Please make 2 more space in your inventory")
                                    .AddOption("Let me check.", 255)
                                  .AddAvatar(186).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.Inventory.Add(stream, Database.ItemType.Meteor);
                            client.SendSysMesage("You received 1,116,000 points of EXP, 5 Amritas, and 2,000 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 1116000);
                            client.Player.Money += 2000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.Inventory.AddItemWitchStack(1000030, 0, 5, stream);
                            client.CreateBoxDialog("You~received~a~Meteor.~You~can~use~Meteors~to~upgrade~equipment~level~at~the~Equipment~Blacksmith~(Market~178,199).");
                        }

                        break;
                    }
                case 11:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory")
                                    .AddOption("Let me check.", 255)
                                  .AddAvatar(186).FinalizeDialog();
                            break;
                        }
                        if (!client.Inventory.Contain(720852, 1))
                            client.Inventory.Add(stream, 720852);
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);

                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Inventory.Contain(720851, 1))
                            {
                                data.AddText("Thank you very much for retrieving my Blaze Pill! Here are your rewards!")
                                      .AddOption("You~are~welcome!", 3)
                                      .AddOption("See~you~then!", 255)
                                    .AddAvatar(186).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("I need your help. Please bring the Blaze Pill back to me!")
                                         .AddOption("Okay!", 255)
                                       .AddAvatar(186).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("My master gave me a Blaze Pill. But the Thunder Ape grabbed it away. If my master knows that I lost the pill, he will be mad at me. Please find the pill back for me.")
                                  .AddOption("No~problem!", 2)
                                        .AddOption("Sorry,~not~today!", 255)
                                        .AddAvatar(186).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        client.Inventory.Remove(720851, 1, stream);
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {

                            client.SendSysMesage("You received 1,079,000 points of EXP, and 2,000 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 1079000);
                            client.Player.Money += 2000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        break;
                    }
                case 2:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.PoisonMaster)]
        public static void PoisonMaster(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.Apothecary, client.Player.Class, 1348);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.PoisonMaster, client.Player.Class, 1349);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.PoisonMaster, client.Player.Class, 1350);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.PoisonMaster, client.Player.Class, 1351);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)NpcID.PoisonMaster, client.Player.Class, 1352);
            var ActiveQuest6 = Database.QuestInfo.GetFinishQuest((uint)NpcID.PoisonMaster, client.Player.Class, 1353);
            var ActiveQuest7 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Apothecary, client.Player.Class, 1354);
            var ActiveQuest8 = Database.QuestInfo.GetFinishQuest((uint)NpcID.PoisonMaster, client.Player.Class, 1355);
            var ActiveQuest9 = Database.QuestInfo.GetFinishQuest((uint)NpcID.PoisonMaster, client.Player.Class, 1356);
            var ActiveQuest10 = Database.QuestInfo.GetFinishQuest((uint)NpcID.PoisonMaster, client.Player.Class, 1357);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("The purpose of studying poison is to save people`s lives!");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Quest:~Deliver~Medicine.", 1);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Thunder~Ginseng.", 10);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Courage~Test(1).", 20);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Courage~Test(2).", 30);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Courage~Test(3).", 40);


                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Enervation~Pill(1).", 50);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest7.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Enervation~Pill(2).", 60);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest8.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Enervation~Pill(3).", 70);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest9.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Enervation~Pill(4).", 80);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest10.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Enervation~Pill(5).", 90);

                        data.AddOption("Open another Quest.", 100).AddOption("Good!", 255);

                        data.AddAvatar(56).FinalizeDialog();

                        break;
                    }
                case 100:
                    {
                        client.Player.QuestGUI.SendAutoPatcher(1020, 366, 304, 8293);
                        break;
                    }
                case 90:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest10.MissionId, 5))
                        {
                            data.AddText("Thank you very much for your help! The ape problem will be solved! Here are your rewards!")
                      .AddOption("Thank~you!", 92).AddOption("See~you~then!", 255)
                      .AddAvatar(56).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("I have a plan to deal with the Apes. They`re very curious creatures. I am sure they will eat the Enervation Pill when they find it. I will give you a bottle of Enervation Pill. Spread the pills in the required position. After the Apes eat the pills,")
                                .AddText("~I am sure they will become less aggressive.")
                                .AddOption("No~problem!", 91)
                                      .AddOption("Sorry,~not~today!", 255)
                                      .AddAvatar(56).FinalizeDialog();
                        }

                        break;
                    }
                case 92:
                    {
                        client.Inventory.Remove(720846, 1, stream);
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                     .AddOption("Let me check.", 255)
                     .AddAvatar(56).FinalizeDialog();
                            break;
                        }

                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest10.MissionId))
                        {
                            client.Inventory.Add(stream, 150118, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.SendSysMesage("You received 518,000 points of EXP,a level 60 Elite Ring and 900 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 518000);
                            client.Player.Money += 900;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        break;
                    }
                case 91:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                     .AddOption("Let me check.", 255)
                     .AddAvatar(56).FinalizeDialog();
                            break;
                        }
                        if (!client.Inventory.Contain(720846, 1))
                            client.Inventory.Add(stream, 720846);
                        client.Player.AtiveQuestApe = 0;
                        client.Player.QuestGUI.Accept(ActiveQuest10, 0);

                        break;
                    }
                case 80:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest9.MissionId, 1))
                        {
                            data.AddText("Thank you very much for your help! Here are your rewards!")
                      .AddOption("Thank~you!", 82).AddOption("See~you~then!", 255)
                      .AddAvatar(56).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Now, I want to put the Enervation Pill in the really tough battle. There is a Raging Ape in the wild. Feed the Enervation Pill to him and kill it!")
                                       .AddOption("No~problem!", 81)
                                      .AddOption("Sorry,~not~today!", 255)
                                      .AddAvatar(56).FinalizeDialog();
                        }

                        break;
                    }
                case 81:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest9, 0);
                        if (client.Player.View.ContainMobInScreen("RagingApe") == false)
                            Database.Server.AddMapMonster(stream, client.Map, 14336, client.Player.X, client.Player.Y, 8, 8, 1, 0, true, MsgFloorItem.MsgItemPacket.EffectMonsters.Night);
                        else
                        {
                            data.AddText("There is a Raging Ape in the wild. Feed the Enervation Pill to him and kill it!")
                                     .AddOption("Okay!", 255)
                                     .AddAvatar(56).FinalizeDialog();
                        }

                        break;
                    }
                case 82:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest9.MissionId))
                        {
                            client.SendSysMesage("You received 1,152,000 points of EXP, and 2,000 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 1152000);
                            client.Player.Money += 2000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        break;
                    }
                case 70:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest8.MissionId, 1))
                        {
                            data.AddText("Thank you very much for testing the Enervation Pill for me! Here are your rewards!")
                       .AddOption("Thank~you!", 72).AddOption("See~you~then!", 255)
                       .AddAvatar(56).FinalizeDialog();

                            break;
                        }
                        else
                        {
                            if (client.Inventory.Contain(720845, 1))
                            {
                                data.AddText("Go and find a Thunder Ape L58 and feed it the Enervation Pill and kill it!")
                                    .AddOption("Okay!", 255)
                                    .AddAvatar(56).FinalizeDialog();
                                break;
                            }
                            data.AddText("This time, I want to test the Enervation Pill on a real ape. Go find a Thunder Ape L58 and feed it the Enervation Pill and kill it! Don`t forget to tell me its response.")
                                   .AddOption("No~problem!", 71)
                                  .AddOption("Sorry,~not~today!", 255)
                                  .AddAvatar(56).FinalizeDialog();
                        }

                        break;
                    }
                case 72:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest8.MissionId))
                        {
                            client.Inventory.Remove(720845, 1, stream);
                            client.SendSysMesage("You received 864,000 points of EXP, and 1,500 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 864000);
                            client.Player.Money += 1500;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }


                        break;
                    }
                case 71:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                     .AddOption("Let me check.", 255)
                     .AddAvatar(56).FinalizeDialog();
                            break;
                        }
                        if (!client.Inventory.Contain(720845, 1))
                            client.Inventory.Add(stream, 720845);
                        client.Player.QuestGUI.Accept(ActiveQuest8, 0);

                        break;
                    }
                case 60:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest7.MissionId, 1))
                        {
                            data.AddText("Thank you very much for helping me test the poison! Here are your rewards!")
                       .AddOption("Thank~you!", 62).AddOption("See~you~then!", 255)
                       .AddAvatar(56).FinalizeDialog();

                            break;
                        }
                        else
                        {
                            data.AddText("Okay! This is the medicine I made! I call it Enervation Pill. Take Transmute Pill to transform into an Ape and then take the Enervation Pill to see what will happen on you!")

                                   .AddOption("No~problem!", 61)
                                  .AddOption("Sorry,~not~today!", 255)
                                  .AddAvatar(56).FinalizeDialog();
                        }

                        break;
                    }
                case 62:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest7.MissionId))
                        {
                            client.Inventory.Remove(720845, 1, stream);
                            client.SendSysMesage("You received 461,000 points of EXP, and 800 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 461000);
                            client.Player.Money += 800;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }


                        break;
                    }
                case 61:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                     .AddOption("Let me check.", 255)
                     .AddAvatar(56).FinalizeDialog();
                            break;
                        }
                        if (!client.Inventory.Contain(720845, 1))
                            client.Inventory.Add(stream, 720845);
                        client.Player.QuestGUI.Accept(ActiveQuest7, 0);


                        break;
                    }
                case 50:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest6.MissionId, 1))
                        {
                            data.AddText("Yes, that is the Transmute Pill. Let`s go to the next step.")
                       .AddOption("Let`s~begin!", 52).AddOption("See~you~then!", 255)
                       .AddAvatar(56).FinalizeDialog();

                            break;
                        }
                        else
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("Go get the Transmute Pill from my old friend, the Apothecary!")
                         .AddOption("Okay!", 255)
                         .AddAvatar(56).FinalizeDialog();
                                break;
                            }
                            data.AddText("I have a good news to share with you! I made a new medicine! It can weaken the apes, but it does no harm to humans. So I can`t use my body to test its potency. Can you get a Transmute Pill from the Apothecary to transform into an Ape")
                             .AddText("~and then take my medicine to test it?")
                                .AddOption("No~problem!", 51)
                               .AddOption("Sorry,~not~today!", 255)
                               .AddAvatar(56).FinalizeDialog();
                        }

                        break;
                    }
                case 52:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest6.MissionId))
                        {
                            client.SendSysMesage("You received 288,000 points of EXp, and 500 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 288000);
                            client.Player.Money += 500;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        break;
                    }
                case 51:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest6, 0);
                        break;
                    }
                case 40:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest5.MissionId, 1))
                        {
                            data.AddText("I am quite impressed by your courage! Here are your rewards!")
                             .AddOption("Thank~you!", 42)
                             .AddOption("See~you~then!", 255)
                             .AddAvatar(56).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Here is the final test! Jump off the cliff.  If you are a man of dignity, righteousness and courage, you will be lifted up by the clouds! Dare you try this?")
                              .AddOption("No~problem!", 41)
                              .AddOption("Never!", 255)
                              .AddAvatar(56).FinalizeDialog();
                        }

                        break;
                    }
                case 42:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                     .AddOption("Let me check.", 255)
                     .AddAvatar(56).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest5.MissionId))
                        {
                            client.SendSysMesage("You received 1,116,000 points of EXp, 1 Meteor and 2,000 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 1116000);
                            client.Player.Money += 2000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.Inventory.Add(stream, Database.ItemType.Meteor);
                        }

                        break;
                    }
                case 41:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest5, 0);
                        break;
                    }
                case 30:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest4.MissionId, 1))
                            {
                                data.AddText("I am quite impressed by your courage! Here are your rewards!")
                          .AddOption("Thank~you~very~much!", 32)
                          .AddOption("See~you~then!", 255)
                          .AddAvatar(56).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Kill the Thunder Ape King to prove your courage to me!")
                            .AddOption("Okay!", 255)
                            .AddAvatar(56).FinalizeDialog();
                            }
                            break;
                        }

                        data.AddText("You passed one of my Courage Test, but it is only a beginning. Now, kill the Thunder Ape King!")
                              .AddOption("No~problem!", 31)
                              .AddOption("Sorry,~not~today!", 255)
                              .AddAvatar(56).FinalizeDialog();

                        break;
                    }
                case 32:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                        {
                            client.SendSysMesage("You received 558,000 points of EXp, and 1000 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 558000);
                            client.Player.Money += 1000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        break;
                    }
                case 31:
                    {
                        client.SendSysMesage("The Thunder Ape King appeared in front of your kill it!", MsgMessage.ChatMode.System);
                        if (client.Player.View.ContainMobInScreen("ApeTyrant") == false)
                            Database.Server.AddMapMonster(stream, client.Map, 678000, client.Player.X, client.Player.Y, 8, 8, 1, 0, true, MsgFloorItem.MsgItemPacket.EffectMonsters.Night);
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);

                        break;
                    }
                case 20:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest3.MissionId, 1))
                            {
                                if (!client.Inventory.Contain(720870, 1, 0))
                                {
                                    data.AddText("What? You lost the Toxicant? Maybe I should ask someone else to take my courage test!")
                          .AddOption("Thank~you~very~much!", 22)
                          .AddAvatar(56).FinalizeDialog();
                                    break;
                                }
                                data.AddText("I am quite impressed by your courage! Here are your rewards!")
                       .AddOption("Never", 255)
                       .AddAvatar(56).FinalizeDialog();

                            }
                            else
                            {
                                if (!client.Inventory.Contain(720870, 1, 0))
                                {
                                    data.AddText("What? You lost the Toxicant? Maybe I should ask someone else to take my courage test!")
                          .AddOption("Thank~you~very~much!", 22)
                          .AddAvatar(56).FinalizeDialog();
                                }
                                else
                                {
                                    data.AddText("Dare you take this Toxicant?")
                        .AddOption("Never", 255)
                        .AddAvatar(56).FinalizeDialog();
                                }
                            }

                            break;
                        }
                        data.AddText("People told me that you are brave. But I don`t believe it! You need to prove it to me! I made a new Toxicant! Dare you take it to test its power like me?")
                             .AddOption("No~problem!", 21)
                             .AddOption("Never!", 255)
                             .AddAvatar(56).FinalizeDialog();

                        break;
                    }
                case 22:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                        {
                            client.SendSysMesage("You received 279,000 points of EXp, 1 EXP Ball Scrap, and 1,000 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 279000);
                            client.Inventory.Add(stream, 720172);
                            client.Player.Money += 1000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        break;
                    }
                case 21:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                     .AddOption("Let me check.", 255)
                     .AddAvatar(56).FinalizeDialog();
                            break;
                        }
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        client.Inventory.Add(stream, 720870);

                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted)
                       && client.Inventory.Contain(720869, 1, 0))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 10))
                            {
                                data.AddText("Thank you very much for the Thunder Ginseng you collected! Here are your rewards!")
                        .AddOption("You~are~welcome!", 12)
                        .AddOption("See~you~then!", 255)
                        .AddAvatar(56).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Use the Sickle to collect 10 Thunder Ginsengs for me!")
                           .AddOption("Okay!", 255)
                           .AddAvatar(56).FinalizeDialog();
                            }
                            break;
                        }
                        else
                        {
                            data.AddText("I need 10 Thunder Ginsengs to make an antidote to a rare poison. Take this Sickle and collect 10 Thunder Ginsengs for me!")
                            .AddOption("No~problem!", 11)
                            .AddOption("Sorry,~not~today!", 255)
                            .AddAvatar(56).FinalizeDialog();
                        }

                        break;
                    }
                case 12:
                    {
                        if (!client.Inventory.HaveSpace(2))
                        {
                            data.AddText("Please make 2 more spaces in your inventory.")
                     .AddOption("Let me check.", 255)
                     .AddAvatar(56).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.CreateBoxDialog("You~received~a~+1~Stone~(B).~You~can~use~Stones~to~compose~equipment~in~the~Wuxing~Oven~(Market~178,204).");
                            client.SendSysMesage("You received 809,000 points of EXp, 5 Amritas and 1,500 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.Inventory.Remove(720869, 1, stream);
                            client.Inventory.Remove(720868, 10, stream);
                            client.Inventory.Add(stream, 730001, 1, 1);
                            client.IncreaseExperience(stream, 809000);
                            client.Inventory.AddItemWitchStack(1000030, 0, 5, stream);
                            client.Player.Money += 1500;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        break;
                    }
                case 11:
                    {
                        client.Inventory.Add(stream, 720869);
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
                case 1:
                    {

                        data.AddText("Thank you. I can use this Bezoar to purge the remaining poison from my body!")
                        .AddOption("You~are~welcome!", 2)
                        .AddOption("See~you~then!", 255)
                        .AddAvatar(56).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Remove(711362, 1, stream);
                            client.SendSysMesage("You received 247,000 points of EXp, and 800 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 247000, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.Money += 800;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Apothecary)]
        public static void Apothecary(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.Apothecary, client.Player.Class, 1363);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Apothecary, client.Player.Class, 1364);

            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Apothecary, client.Player.Class, 1348);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)NpcID.PoisonMaster, client.Player.Class, 1353);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("I have been doctored in Ape City for decades. Saving people is my job!");

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Quest:~Collect~Medicine.", 50);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Collect~Medicine.", 1);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Weary~Pill.", 10);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Deliver~Medicine.", 30);
                        data.AddOption("Great~doctor!", 255);
                        data.AddAvatar(64).FinalizeDialog();

                        break;
                    }
                case 50:
                    {


                        data.AddText("Poison Master asked you to get a Transmute Pill from me? My friend must have an interesting plan! Ok, this is the Transmute Pill you need!")
                        .AddOption("Thanks.", 51)
                        .AddAvatar(64).FinalizeDialog();

                        break;
                    }
                case 51:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in you inventory.")
                            .AddOption("Let me check.", 255)
                            .AddAvatar(64).FinalizeDialog();
                            break;
                        }
                        if (!client.Inventory.Contain(720871, 1))
                        {
                            client.Inventory.Add(stream, 720871);
                            client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest5.MissionId, 1);
                        }

                        break;
                    }
                case 30:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in you inventory.")
                            .AddOption("Let me check.", 255)
                            .AddAvatar(64).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted)
                            && client.Inventory.Contain(711362, 1, 0))
                        {
                            data.AddText("Please send the Quality Bezoar to my friend Poison Master.")
                         .AddOption("Okay.", 255)
                         .AddAvatar(64).FinalizeDialog();
                            break;
                        }

                        data.AddText("My friend Poison Master dedicated his life to the research of poison. He even use himself to try the poison and find out the way of detoxification. I am worrying about his body! After so many years of trial, many toxin must have remained in his body!")
                           .AddText("~I have a Quality Bezoar. It can help him clear up the remained toxin in his body! Will you send the Quality Bezoar to him?")
                            .AddOption("My~pleasure!", 31)
                             .AddOption("Sorry,~not~today!", 255)
                             .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 31:
                    {
                        client.Inventory.Add(stream, 711362, 1);
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        break;
                    }
                case 10:
                    {
                        if (client.Player.TransformationID == 356)
                        {
                            data.AddText("Thank you very much for testing the Weary Pill! It seems that it is safe to mankind! Here are your rewards!")
                          .AddOption("You~are~welcome!", 12)
                          .AddOption("See~you~then!", 255)
                          .AddAvatar(64).FinalizeDialog();
                            break;
                        }
                        data.AddText("After years of study! I developed a Weary Pill that can deal with the apes in Ape City! But I need someone to test it whether it`s harmful to human beings. Will you try this Weary Pill? Don`t worry, I am a doctor, I can save you if anything bad happens.")
                                 .AddOption("I~can~risk~it!", 11)
                                   .AddOption("Sorry,~not~today!", 255)
                                   .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 12:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                            client.Inventory.AddItemWitchStack(1000030, 0, 4, stream);
                        break;
                    }
                case 11:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in you inventory.")
                            .AddOption("Let me check.", 255)
                            .AddAvatar(64).FinalizeDialog();
                            break;
                        }
                        if (!client.Inventory.Contain(720865, 1, 0))
                        {
                            client.Inventory.Add(stream, 720865);
                            client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        }

                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1, 1, 1))
                            {
                                data.AddText("These are what I have been looking for! Thank you!")
                         .AddOption("You~are~welcome!", 3)
                         .AddOption("See~you~then!", 255)
                         .AddAvatar(64).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("The wounded soldiers are waiting for medicine. Collect 1 Ape Claw, 1 Ape Bone, and 1 Ape Skin for me to make a medicine to treat them!")
                            .AddOption("Okay!", 255)
                            .AddAvatar(64).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Many soldiers were wounded by the monkeys. Collect 1 Ape Claw, 1 Ape Bone, and 1 Ape Skin for me! I can will make a medicine to treat the wounded soldiers.")
                                .AddOption("No~problem!", 2)
                                  .AddOption("Sorry,~not~today!", 255)
                                  .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 3:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Remove(711357, 1, stream);
                            client.Inventory.Remove(711358, 1, stream);
                            client.Inventory.Remove(711359, 1, stream);
                            client.CreateBoxDialog("You~received~a~Meteor.~You~can~use~Meteors~to~upgrade~equipment~level~at~the~Equipment~Blacksmith~(Market~178,199).");
                            client.Inventory.Add(stream, 720172);
                            client.Inventory.Add(stream, Database.ItemType.Meteor);
                        }

                        break;
                    }
                case 2:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.CarpenterJack)]
        public static void CarpenterJack(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.ACCastellan, client.Player.Class, 1308);//The Carpenter
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.CarpenterJack, client.Player.Class, 1315);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.JackDaniel, client.Player.Class, 1316);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.CarpenterJack, client.Player.Class, 1317);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I am the only carpenter in Ape City.");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~The~Carpenter.", 1);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Wood~Shortage(1).", 10);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Quest:~Wood~Shortage(2).", 20);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Cliff~Flower.", 30);
                        data.AddOption("The~city~needs~you!", 255)
                            .AddOption("Continue Quests.", 50);
                        data.AddAvatar(9).FinalizeDialog();

                        break;
                    }
                case 50:
                    {
                        var nextquest = Database.QuestInfo.GetFinishQuest((uint)NpcID.Apothecary, client.Player.Class, 1363);
                        client.Player.QuestGUI.SendAutoPatcher(nextquest.FinishNpcId.Map, nextquest.FinishNpcId.X, nextquest.FinishNpcId.Y, nextquest.FinishNpcId.ID);
                        break;
                    }
                case 30:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest4.MissionId, 20))
                        {
                            data.AddText("Yes! That is the flower I have been looking for! It can help us to consolidate the bridges! Here are your rewards.")
                            .AddOption("Great!", 32)
                              .AddOption("See~you~then!", 255)
                              .AddAvatar(7).FinalizeDialog();
                            break;
                        }
                        data.AddText("My master told me that the juice of the Cliff Flower can be painted on the wood to prevent it from decaying and make it stronger.")
                            .AddText("~I hope you can collect 20 Cliff Flowers for me, so I can use them to fix the bridge outside Ape City.")
                            .AddOption("No~problem!", 31)
                              .AddOption("Sorry,~not~today!", 255)
                              .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 32:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                data.AddText("Please make 1 more space in your inventory.")
                            .AddOption("let me check.", 255)
                            .AddAvatar(9).FinalizeDialog();
                                break;
                            }
                            client.Inventory.Remove(711356, 20, stream);
                            client.SendSysMesage("You received 247,000 points of EXP, 1 Ape City Gage and 1,000 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 247000, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.Money += 1000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.Inventory.Add(stream, 1060022);

                        }

                        break;
                    }
                case 31:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        break;
                    }
                case 20:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest3.MissionId, 50))
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                data.AddText("Please make 1 more space in your inventory.")
                            .AddOption("let me check.", 255)
                            .AddAvatar(9).FinalizeDialog();
                                break;
                            }
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                            {
                                client.SendSysMesage("You received 743,000 points of Exp, 1,500 Silver, 1 Meteor.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                                client.IncreaseExperience(stream, 743000, Role.Flags.ExperienceEffect.angelwing);
                                client.Player.Money += 1500;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                client.Inventory.Add(stream, Database.ItemType.Meteor);
                                data.AddText("The wood is arriving? Good! I will have enough materials to fix the wooden bridge! Thank you very much!")
                           .AddOption("You~are~welcome!", 255)
                           .AddAvatar(9).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Go slay 50 Giant Ape and protect the wood transport column.")
                       .AddOption("Okay!", 255)
                       .AddAvatar(9).FinalizeDialog();
                        }

                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Please go visit Jack Daniel.")
                           .AddOption("I~will~visit~him~right~away!", 11)
                           .AddAvatar(7).FinalizeDialog();
                            break;
                        }
                        data.AddText("The wooden bridge outside Ape City need to be fixed, but I don`t have enough wood. Speak with Jack Daniel to get some wood for me!")
                            .AddOption("No~problem!", 11)
                              .AddOption("Sorry,~not~today!", 255)
                              .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 11:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.Player.QuestGUI.SendAutoPatcher(ActiveQuest2.FinishNpcId.Map, ActiveQuest2.FinishNpcId.X, ActiveQuest2.FinishNpcId.Y, ActiveQuest2.FinishNpcId.ID);
                        break;
                    }
                case 1:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                        .AddOption("let me check.", 255)
                        .AddAvatar(9).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.SendSysMesage("You received 247,000 points of EXP, 500 Silver, and 1 Diligence Book.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 247000, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.Money += 500;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.Inventory.Remove(711351, 1, stream);
                            client.Inventory.Add(stream, 723340);
                            data.AddText("Thank you very much! This bottle of Bamboo Liquid can be a nice, little refreshment for me!")
                       .AddOption("You~are~welcome!", 255)
                       .AddAvatar(9).FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.ACCastellan)]
        public static void ACCastellan(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.ACCastellan, client.Player.Class, 1306);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ACCastellan, client.Player.Class, 1307);//a waring
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ACCastellan, client.Player.Class, 1308);//The Carpenter
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("It`s difficult to manage a city. There are too many things you need to think about!");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Vulture~Feather.", 1);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~A~Warning.", 10);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~The~Carpenter.", 20);
                        data.AddOption("You~need~a~break!", 255);
                        data.AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 20:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                        .AddOption("let me check.", 255)
                        .AddAvatar(7).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (!client.Inventory.Contain(711351, 1))
                                client.Inventory.Add(stream, 711351);
                            data.AddText("Please go visit Carpenter Jack, and bring him the Bamboo Liquid.")
                        .AddOption("I~will~visit~him~right~away!", 255)
                        .AddAvatar(7).FinalizeDialog();
                            break;
                        }
                        data.AddText("Carpenter Jack helped us a lot by fixing the wooden bridge outside the city. I want you to visit him and bring him this bottle of Bamboo Liquid, to express our gratitude.")
                            .AddOption("My~pleasure!", 21)
                              .AddOption("Sorry,~not~today!", 255)
                              .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 21:
                    {
                        client.Inventory.Add(stream, 711351);
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        break;
                    }
                case 10:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                        .AddOption("let me check.", 255)
                        .AddAvatar(7).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 1))
                            {
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                                {
                                    client.SendSysMesage("You received 374,000 points of EXP, 800 Silver, and 1 Apec City Gate.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                                    client.IncreaseExperience(stream, 374000, Role.Flags.ExperienceEffect.angelwing);
                                    client.Player.Money += 800;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                    client.Inventory.Add(stream, 1060022);
                                }
                                data.AddText("You brought peace back to the city! Thank you very much for your help. Here are your rewards!")
                           .AddOption("Thanks.", 255)
                           .AddAvatar(7).FinalizeDialog();
                            }
                            else
                            {
                                if (!client.Inventory.Contain(720844, 1))
                                    client.Inventory.Add(stream, 720844);
                                data.AddText("The Macaques are doing increasing damage to farms. We need to do something to drive them away! Have you ever heard of the story of beating the dog before the lion? I want to do the same thing this time. Here is a bag of Pheasants.")
                            .AddText("~Release the Pheasant and kill it before the Macaques. It will be a warning to the Macaques. Go do it for me!")
                            .AddOption("I~will~do~it~right~away!", 255)
                            .AddAvatar(7).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("The Macaques are doing increasing damage to farms. We need to do something to drive them away! Have you ever heard of the story of beating the dog before the lion? I want to do the same thing this time. Here is a bag of Pheasants.")
                           .AddText("~Release the Pheasant and kill it before the Macaques. It will be a warning to the Macaques. Go do it for me!")
                            .AddOption("My~pleasure!", 11)
                              .AddOption("Sorry,~not~today!", 255)
                              .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 11:
                    {
                        if (!client.Inventory.Contain(720844, 1))
                            client.Inventory.Add(stream, 720844);
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.Player.QuestGUI.SendAutoPatcher(1020, 648, 634, 0);
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1))
                            {

                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                                {
                                    client.SendSysMesage("You received 674,000 points of Exp, 1,500 Silver and 1 Exp Ball Scrap.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                                    client.IncreaseExperience(stream, 674000, Role.Flags.ExperienceEffect.angelwing);
                                    client.Player.Money += 1500;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                    client.Inventory.Add(stream, 720172);
                                }
                                data.AddText("You brought peace to the city! Thank you very much for your help. Here are your rewards!")
                           .AddOption("Thanks.", 255)
                           .AddAvatar(7).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Go get a Vulture Feather and burn it in the city. The other Vultures will never come near Ape City, after that!")
                            .AddOption("I~will~do~it~right~away!", 255)
                            .AddAvatar(7).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("We are quite annoyed by the Vultures outside Ape City, but I have an effective way to drive them far away from the city! If we get a Vulture Feather and burn it in the city, the other Vultures won`t dare come back!")
                           .AddText("~Don`t ask why, I know what I`m doing! Would you like to do this job for me?")
                            .AddOption("My~pleasure!", 2)
                              .AddOption("Sorry,~not~today!", 255)
                              .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.Lydia)]
        public static void Lydia(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.Lydia, client.Player.Class, 1311);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("The price of gold will soar! Believe me!");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Retrieve~Jewelry.", 1);
                        data.AddOption("I~don`t~believe~it!", 255);
                        data.AddAvatar(1).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 20))
                            {
                                data.AddText("These are my Jewelry Boxes. Thank you very much for helping me! Here are some rewards for you!")
                               .AddOption("Thanks.", 3)
                               .AddOption("See~you~then!", 255)
                               .AddAvatar(1).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Please! Please retrieve 20 Jewelry Boxes for me from the Macaques!")
                               .AddOption("I~will~do~it~right~away!", 255)
                               .AddAvatar(1).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("The Macaques broke in the house and ran away with 20 of my Jewelry Boxes! They`re all I have! Will you bring them back for me?")
               .AddText("~I need to sell them to feed my family!")
               .AddOption("Don`t~worry,~I~will~help~you!", 2)
                  .AddOption("Sorry,~not~today!", 255)
                 .AddAvatar(1).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        break;
                    }
                case 3:
                    {
                        if (!client.Inventory.HaveSpace(2))
                        {
                            data.AddText("Please make 2 more space in your inventory.")
                                .AddOption("Let me check.", 255)
                                .AddAvatar(1).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Remove(711352, 20, stream);
                            client.SendSysMesage("You received 701,000 points of EXP, 1,500 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 701000, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.Money += 1500;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.Inventory.AddItemWitchStack(1000030, 0, 5, stream);
                            client.Inventory.Add(stream, 730001, 1, 1);
                            client.CreateBoxDialog("You~received~a~+1~Stone.~You~can~use~Stones~to~compose~equipment~in~the~Wuxing~Oven~(Market~178,204).");
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.AC_Lieutenant)]
        public static void AC_Lieutenant(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.MilitiaCaptain, client.Player.Class, 1300);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.AC_Lieutenant, client.Player.Class, 1301);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.AC_Lieutenant, client.Player.Class, 1302);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.AC_Lieutenant, client.Player.Class, 1303);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)NpcID.AC_Lieutenant, client.Player.Class, 1304);
            var ActiveQuest6 = Database.QuestInfo.GetFinishQuest((uint)NpcID.AC_Lieutenant, client.Player.Class, 1305);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("What would be the proof of a hero? A true hero never falters, even when the enemy is at the gates!");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Quest:~The~Ape~City.", 1);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Clear~the~Way.", 2);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Appease~Dead~Souls.", 5);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Macaques(1).", 10);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Macaques(2).", 15);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Quest:~Macaques(3).", 20);
                        data.AddOption("You~are~a~great~hero!", 255);
                        data.AddAvatar(85).FinalizeDialog();

                        break;
                    }
                case 20:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest6.MissionId, 1))
                            {
                                data.AddText("Good job! Here are your rewards! Thank you very much for your help!")
                               .AddOption("Thanks.", 22)
                               .AddOption("See~you~then!", 255)
                               .AddAvatar(85).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Slay 1 Monkey King to return peace to Ape City.")
                               .AddOption("Okay!", 255)
                               .AddAvatar(85).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("This time, our target is the Monkey King. Slay the Monkey King and bring back its tail. It will help inspire the people in Ape City,")
               .AddText("~and should lift their spirits a bit.")
               .AddOption("My~pleasure.", 21)
                  .AddOption("Sorry,~not~today!", 255)
                 .AddAvatar(85).FinalizeDialog();

                        break;
                    }
                case 22:
                    {
                        if (client.Inventory.HaveSpace(2) == false)
                        {
                            data.AddText("Please make 2 more spaces in your inventory.")
                                .AddOption("Let me check.", 255)
                                .AddAvatar(85).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest6.MissionId))
                        {
                            client.Inventory.Remove(720863, 1, stream);
                            client.SendSysMesage("You received 701,000 points of EXP, 1,500 Silver, 1 emerald and level50 EliteBoots.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 701000, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.Money += 1500;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.Inventory.Add(stream, 1080001);
                            client.Inventory.Add(stream, 160098);
                        }

                        break;
                    }
                case 21:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest6, 0);
                        break;
                    }
                case 15:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest5.MissionId, 30))
                            {
                                data.AddText("You gave the Macaques a heavy blow. I think they will think twice before coming, again. Thank you very much for your help. Here are your rewards!")
                               .AddOption("Thanks.", 17)
                               .AddOption("See~you~then!", 255)
                               .AddAvatar(85).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Slay 30 MacaquesL48 to return peace to Ape City.")
                               .AddOption("Okay!", 255)
                               .AddAvatar(85).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("According to my observations, the Macaques L48 are the upper level forces of the apes. I need you to slay 30 Macaques L48 for me, to weaken them.")
                  .AddOption("My~pleasure.", 16)
                  .AddOption("Sorry,~not~today!", 255)
                 .AddAvatar(85).FinalizeDialog();

                        break;
                    }
                case 16:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest5, 0);
                        break;
                    }
                case 17:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest5.MissionId))
                        {
                            client.SendSysMesage("You received 701,000 points of EXP, 1,500 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 701000, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.Money += 1500;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest4.MissionId, 50))
                            {
                                data.AddText("I am quite impressed by your performance! Here are your rewards!")
                               .AddOption("Thanks.", 12)
                               .AddOption("See~you~then!", 255)
                               .AddAvatar(85).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Slay 50 Macaques to return peace to Ape City.")
                               .AddOption("Okay!", 255)
                               .AddAvatar(85).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("The naughty Macaques has been making trouble in the city for too long! We are tired of the constant noise, and don`t get")
                          .AddText("~me started on the smell! Go slay 50 Macaques for me!")
                  .AddOption("My~pleasure.", 11)
                  .AddOption("Sorry,~not~today!", 255)
                 .AddAvatar(85).FinalizeDialog();

                        break;
                    }
                case 11:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        break;
                    }
                case 12:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                        {
                            client.SendSysMesage("You received 467,000 points of EXP, 1,000 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 467000, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.Money += 1000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        }

                        break;
                    }
                case 5:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest3.MissionId, 1, 1, 1, 1, 1))
                            {
                                data.AddText("Thank you very much for your help! Here are your rewards!")
                               .AddOption("Thanks.", 7)
                               .AddOption("See~you~then!", 255)
                               .AddAvatar(85).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Please go appease the souls of my fallen soldiers on the battlefield.")
                               .AddOption("Okay!", 255)
                               .AddAvatar(85).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("I lost 5 of my best men in a decisive battle. They appeared to me one night, in a vision. Their souls are still wandering")
                            .AddText("~the battlefield, tortured and lost. I hope you can go to find their bodies and appease their souls for me.")
                    .AddOption("My~pleasure.", 6)
                    .AddOption("Sorry,~not~today!", 255)
                   .AddAvatar(85).FinalizeDialog();

                        break;
                    }
                case 6:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        break;
                    }
                case 7:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                        {
                            client.SendSysMesage("You received 674,000 points of EXP, 1,000 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 674000, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.Money += 1000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            break;
                        }

                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.HaveSpace(1) == false)
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                                .AddOption("Let me check.", 255)
                                .AddAvatar(85).FinalizeDialog();
                            break;
                        }
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.SendSysMesage("You received 179,000 points of EXP, 400 Silver, and 5 Amritas.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 179000, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.Money += 400;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.Inventory.AddItemWitchStack(1000030, 0, 5, stream);
                            break;
                        }
                        data.AddText("Nice to see you, hero! It is great that you came to Ape City. We could use the help. You need to keep your eyes open, while you`re here.")
                             .AddText("~This is not a safe place to just wander around.")
                     .AddOption("Okay!", 255)
                    .AddAvatar(85).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 50))
                            {
                                data.AddText("Thank you very much for your help! Here are your rewards!")
                .AddOption("Thank~you!", 4)
                .AddOption("See~you~then!", 255)
               .AddAvatar(85).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("For the safety of the town, you must wipe out 50 Vultures gathered outside of Ape City!")
                  .AddOption("Okay!", 255)
                 .AddAvatar(85).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("Many Vultures appeared at the gates of Ape City. For the safety of the town, I hope you can help us slay 50 Vultures.")
                            .AddOption("No~problem!", 3)
                  .AddOption("Sorry,~not~today!", 255)
                 .AddAvatar(85).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        break;
                    }
                case 4:
                    {
                        if (client.Inventory.HaveSpace(1) == false)
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                                .AddOption("Let me check.", 255)
                                .AddAvatar(85).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.SendSysMesage("You received 674,000 points of EXP, 1,500 Silver, and 1 +1Stone.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                            client.IncreaseExperience(stream, 674000, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.Money += 1500;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.Inventory.Add(stream, 730001, 1, 1);
                            client.CreateBoxDialog("You~received~a~+1~Stone~(B).~You~can~use~Stones~to~compose~equipment~in~the~Wuxing~Oven~(Market~178,204).");
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.GreatMerchant)]
        public static void GreatMerchant(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.GreatMerchant, client.Player.Class, 706);
            switch (Option)
            {
                case 0:
                    {

                        if (!client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("We have various kinds of stores in the market. But if you are interested in some rare items with special effect, I will be the")
                                .AddText("~perfect one to help you with your needs.")
             .AddOption("Well,~impress~me.", 1)
                        .AddOption("Purchase~Item.", 20)
                       .AddAvatar(174).FinalizeDialog();
                        }
                        else
                            goto case 20;

                        break;
                    }
                case 20:
                    {
                        ActionQuery action = new ActionQuery()
                        {
                            ObjId = client.Player.UID,
                            dwParam = (uint)Role.Flags.NpcType.DialogAndGui,
                            Type = ActionType.OpenGuiNpc,
                            Timestamp = 2888,
                            wParam1 = client.Player.X,
                            wParam2 = client.Player.Y,
                            dwParam3 = client.Player.Map
                        };
                        client.Send(stream.ActionCreate(&action));
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(722700, 1) && client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted) || client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1))
                            {
                                data.AddText("How do you like it? I have lots of those items. When you need them, don`t hesitate to let me know!")
                           .AddOption("Brilliant.", 5)
                           .AddAvatar(174).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Just right click this EXP Potion to activate a 10 minute double EXP bonus. Talk to me again when you`re done.")
                             .AddOption("Okay.", 255)
                             .AddAvatar(174).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("You can buy some unusual items in the Shopping Mall. To enter it, talk to the Great Merchant")
                              .AddText("~in the Market, or click the Shopping Mall Button on the lower left of your screen when you are level 70 or have some CPs on you")
           .AddOption("CPs?", 2)
                     .AddAvatar(174).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        data.AddText("I guess you don`t know what that is yet, right?")
                                .AddText("~CP is short for Conquer Points, which are used to purchase special items from the Shopping Mall.")
                            .AddOption("I~see.", 3)
                            .AddAvatar(174).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        data.AddText("Please take this EXP Potion as a present, you will obtain a 10 mins double EXP bonus when using it.")
                              .AddOption("Thank~you!", 4)
                              .AddAvatar(174).FinalizeDialog();

                        break;
                    }
                case 4:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                                  .AddOption("Let me check.", 255)
                                  .AddAvatar(174).FinalizeDialog();
                            break;
                        }
                        client.Inventory.Add(stream, 722700);
                        client.CreateBoxDialog("You`ve~received~an~EXP~Potion.~Right~click~it~to~use~it.");
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);

                        break;
                    }
                case 5:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.GainExpBall(100, true, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "recovery");
                            client.CreateBoxDialog("You`ve~learned~about~CPs~and~the~Shopping~Mall,~and~received~EXP~worth~1/12~of~an~EXP~Ball!");
                        }

                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.PokerCpsCasino)]
        public static void PokerCpsCasino(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Greeting, I`m glad to be at your service. Win or lose is not that important. To win is not the ultimate aim of the game, happiness is what we have been pursuing. Here, I even more like to wish you a good health than a good luck!")
                       .AddOption("I~have~no~interest~in~it.", 1)
                       .AddOption("Enter~Poker~Room.", 2)
                       .AddOption("I~still~want~to~play.", 255)
                       .AddAvatar(175).FinalizeDialog();

                        break;
                    }
                case 1:
                    {

                        client.SendSysMesage("You are teleported to Twin City.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.white);
                        client.Teleport(428, 378, 1002);
                        break;
                    }
                case 2:
                    {
                        client.SendSysMesage("You are teleported to the Poker Room.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.white);
                        client.Teleport(55, 63, 1858);

                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.PokerCasinoHostess)]
        public static void PokerCasinoHostess(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("Greeting, I`m glad to be at your service. Win or lose is not that important. To win is not the ultimate aim of the game, happiness is what we have been pursuing. Here, I even more like to wish you a good health than a good luck!")
                        .AddOption("I~have~no~interest~in~it.", 1)
                        .AddOption("Enter~VIP~Hall.", 2)
                        .AddOption("I~still~want~to~play.", 255)
                        .AddAvatar(175).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        client.SendSysMesage("You are teleported to Twin City.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.white);
                        client.Teleport(428, 378, 1002);

                        break;
                    }
                case 2:
                    {
                        client.SendSysMesage("You arrived on the VIP Hall.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.white);
                        client.Teleport(55, 62, 1860);

                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.PeachTree)]
        public static void PeachTree(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            if (!client.Player.ActivePick)
            {
                if (client.Player.QuestGUI.IsActiveQuest(1011))
                {
                    client.Player.AddPick(stream, "Pick", 5);
                }
            }
        }
        [NpcAttribute(NpcID.PeachTree2)]
        public static void PeachTree2(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            if (!client.Player.ActivePick)
            {
                if (client.Player.QuestGUI.IsActiveQuest(1011))
                {
                    client.Player.AddPick(stream, "Pick", 5);
                }
            }
        }
        public static string GetQuestModes(Client.GameClient user, uint UID, byte Level)
        {
            string text = "Level~" + Level.ToString();
            if (user.Player.QuestGUI.CheckQuest(UID, MsgQuestList.QuestListItem.QuestStatus.Finished))
                text = "Completed";
            else if (user.Player.QuestGUI.CheckQuest(UID, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                text = "Accepted";
            return text;
        }
        [NpcAttribute(NpcID.DailyItem1)]
        public static void DailyItem1(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 1:
                    {
                        client.Teleport(746, 665, 1015);
                        break;
                    }
                case 2:
                    {
                        client.Teleport(256, 238, 1002);
                        break;
                    }
            }
        }

        public static uint DailiHeavenCpsCost(uint Stage)
        {
            if (Stage == 1)
                return 5;
            if (Stage == 2)
                return 20;
            if (Stage == 3)
                return 35;
            if (Stage == 4)
                return 100;
            return 0;
        }
        //ThiefChen
        [NpcAttribute(NpcID.ThiefChen)]
        public static void ThiefChen(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.ThiefWong, client.Player.Class, 1719);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ThiefChen, client.Player.Class, 1720);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ThiefChen, client.Player.Class, 1721);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Beware of the bandits. They`re dangerous.");
                            data.AddOption("Are~you~the~Connector?", 1)
                                .AddOption("Thanks~for~reminding.", 255)
                               .AddAvatar(72).FinalizeDialog();
                        }
                        else if (!client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 5))
                            {
                                data.AddText("Beware of the bandits. They`re dangerous.");
                                data.AddOption("Hi!~Connector!", 4)
                                    .AddOption("Thanks~for~reminding.", 255)
                                   .AddAvatar(72).FinalizeDialog();
                                break;
                            }
                            data.AddText("Beware of the bandits. They`re dangerous.");
                            data.AddOption("I~came~for~Thief~Wong.", 2)
                                .AddOption("Thanks~for~reminding.", 255)
                               .AddAvatar(72).FinalizeDialog();
                        }
                        else if (!client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("Yes! Here`s a letter that should help. Take it to Wong. I bet he will pay you when he sees what I have to say.");
                            data.AddOption("I~won`t~let~you~down.", 5)
                                .AddOption("I`m~busy.", 255)
                               .AddAvatar(72).FinalizeDialog();

                        }
                        else
                        {
                            data.AddText("Beware of the bandits. They`re dangerous.");
                            data.AddOption("Thanks~for~reminding.", 255)
                               .AddAvatar(72).FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        data.AddText("You said you came from Twin City and were looking for Thief Chen? What`s the problem?");
                        data.AddOption("Thief~Wong~sent~me~here.", 2)
                           .AddAvatar(72).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You've received 100 Silver.", MsgMessage.ChatMode.System);
                        }
                        data.AddText("Well, I`m still going to need you to prove yourself. Go kill 5 Bandits, first!");
                        data.AddOption("Piece~of~cake.", 3).AddOption("I`m~leaving.", 255)
                           .AddAvatar(72).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.CreateBoxDialog("Thief~Chen~ran~away~and~hid.~Now~you`re~going~to~find~and~kill~5~Bandits.");

                        break;
                    }
                case 4:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.IncreaseExperience(stream, 1600, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You've received 100 Silver and 1600 EXP.", MsgMessage.ChatMode.System);
                        }
                        data.AddText("Fine. I guess I can trust you, after all.");
                        data.AddOption("Good.", 6)
                           .AddAvatar(72).FinalizeDialog();

                        break;
                    }
                case 6:
                    {
                        data.AddText("Yes! Here`s a letter that should help. Take it to Wong. I bet he will pay you when he sees what I have to say.");
                        data.AddOption("I~won`t~let~you~down.", 5)
                            .AddOption("I`m~busy.", 255)
                           .AddAvatar(72).FinalizeDialog();

                        break;
                    }
                case 5:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Why are you still here? Deliver the letter to Wong, right away!");
                            data.AddOption("I~lost~the~letter.", 7)
                                .AddOption("I`m~on~my~way.", 255)
                               .AddAvatar(72).FinalizeDialog();
                            break;
                        }
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory");
                            data.AddOption("Let me check.", 255)
                               .AddAvatar(56).FinalizeDialog();
                            break;
                        }
                        client.Inventory.Add(stream, 729942);
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        client.Player.QuestGUI.SendAutoPatcher("You`ve~received~the~Connector~Letter.~Hurry~and~deliver~it~to~Thief~Wong~(347,228).", ActiveQuest3.FinishNpcId.Map, ActiveQuest3.FinishNpcId.X, ActiveQuest3.FinishNpcId.Y, ActiveQuest3.FinishNpcId.ID);

                        break;
                    }
                case 7:
                    {
                        if (client.Inventory.Contain(729942, 1))
                        {
                            data.AddText("Hey, friend! Check your bag. The letter is right there!");
                            data.AddOption("Oh.", 255)
                               .AddAvatar(56).FinalizeDialog();
                            break;
                        }
                        else
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                client.Inventory.Add(stream, 729942);
                                client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                                client.Player.QuestGUI.SendAutoPatcher("You`ve~received~the~Connector~Letter.~Hurry~and~deliver~it~to~Thief~Wong~(347,228).", ActiveQuest3.FinishNpcId.Map, ActiveQuest3.FinishNpcId.X, ActiveQuest3.FinishNpcId.Y, ActiveQuest3.FinishNpcId.ID);

                            }
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.ThiefWong)]
        public static void ThiefWong(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaskmasterChang, client.Player.Class, 1718);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ThiefWong, client.Player.Class, 1719);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ThiefChen, client.Player.Class, 1721);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ThiefWong, client.Player.Class, 1722);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("The poor have always been squeezed by those devious land owners. I can`t just stand by and let it happen!");
                            data.AddOption("Here`s~a~letter~for~you!", 10)
                                .AddOption("Good.", 255)
                               .AddAvatar(56).FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("The poor have always been squeezed by those devious land owners. I can`t just stand by and let it happen!");
                            data.AddOption("Yeah!~Count~me~in!", 1)
                                .AddOption("Leave.", 255)
                               .AddAvatar(56).FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) &&
                            !client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("The poor have always been squeezed by those devious land owners. I can`t just stand by and let it happen!");
                            data.AddOption("Let~me~help~you!", 3)
                                .AddOption("Leave.", 255)
                               .AddAvatar(56).FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) &&
                            client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) && !client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("The poor have always been squeezed by those devious land owners. I can`t just stand by and let it happen!");
                            data.AddOption("Need~my~help?", 12)
                                .AddOption("Good.", 255)
                               .AddAvatar(56).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("The poor have always been squeezed by those devious land owners. I can`t just stand by and let it happen!");
                            data.AddOption("Good.", 255)
                               .AddAvatar(56).FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        data.AddText("To tell you the truth, I stole some jewelry from those slum lords, and want to give the proceeds back to the poor in Maple Forest.");
                        data.AddOption("That~would~be~great!", 2)
                            .AddOption("Leave.", 255)
                           .AddAvatar(56).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory");
                            data.AddOption("Let me check.", 255)
                               .AddAvatar(56).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);

                            data.AddText("To tell you the truth, I stole some jewelry from those slum lords, and want to give the proceeds back to the poor in Maple Forest.");
                            data.AddOption("That~would~be~great!", 3)
                                .AddOption("Leave.", 255)
                               .AddAvatar(56).FinalizeDialog();
                        }

                        break;
                    }
                case 3:
                    {
                        data.AddText("The problem is, I was wounded by the guards as I escaped. Can you take a message to my connector, Thief Chen?")
                            .AddText("~He should be somewhere on the road between Phoenix Castle and Twin City.");
                        data.AddOption("Sure.", 4)
                            .AddOption("Sorry,~I~can`t~help.", 255)
                           .AddAvatar(56).FinalizeDialog();

                        break;
                    }
                case 4:
                    {
                        if (!client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Go~find~Thief~Chen~on~the~road~between~Phoenix~Castle~and~Twin~City.", ActiveQuest2.FinishNpcId.Map, ActiveQuest2.FinishNpcId.X, ActiveQuest2.FinishNpcId.Y, ActiveQuest2.FinishNpcId.ID);

                        break;
                    }
                case 10:
                    {
                        client.Inventory.Remove(729942, 1, stream);
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                        {
                            client.Player.Money += 1000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.GainExpBall(100, true, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, Role.Flags.ExperienceEffect.bless.ToString());
                            client.SendSysMesage("You've received EXP worth 1/6 EXP Ball and 1,000 Silver!", MsgMessage.ChatMode.System);
                        }
                        data.AddText("Thank you for the letter!");
                        data.AddOption("You`re~welcome.", 11)
                           .AddAvatar(56).FinalizeDialog();

                        break;
                    }
                case 11:
                    {
                        data.AddText("Here`s your reward. Thank you again!");
                        data.AddOption("You`re~welcome.", 12)
                           .AddAvatar(56).FinalizeDialog();

                        break;
                    }
                case 12:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Hurry~and~claim~your~reward~from~Taskmaster~Chang!~It`s~a~necklace!", ActiveQuest4.FinishNpcId.Map, ActiveQuest4.FinishNpcId.X, ActiveQuest4.FinishNpcId.Y, ActiveQuest4.FinishNpcId.ID);

                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.ZhaoJian)]
        public static void ZhaoJian(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.VeteranHong, client.Player.Class, 1725);
            switch (Option)
            {
                case 0:
                    {

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1, 1))
                            {
                                data.AddText("I am the best at disguise work. As long as you pay, I can disguise you as almost anything! Young, old, pretty, ugly...you name it.")
                                 .AddOption("Whatever.", 255)
                                .AddAvatar(33).FinalizeDialog();
                                break;
                            }
                            data.AddText("I am the best at disguise work. As long as you pay, I can disguise you as almost anything! Young, old, pretty, ugly...you name it.");
                            data.AddOption("I~need~your~help.", 1)
                                .AddOption("Whatever.", 255)
                               .AddAvatar(33).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("I am the best at disguise work. As long as you pay, I can disguise you as almost anything! Young, old, pretty, ugly...you name it.")
                                .AddOption("Whatever.", 255)
                               .AddAvatar(33).FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        client.Player.TransformInfo = new Role.ClientTransform(client.Player);
                        client.Player.TransformInfo.CreateTransform(stream, 817, 224, (int)60, 8213);
                        client.Player.QuestGUI.SendAutoPatcher("You~are~disguised~as~a~ravishing~beauty!", 1011, 100, 430, 0);
                        data.AddText("I usually charge a fortune for this work, but as you`re going to rid us of Cloud the Lustful... I suppose I can make an exception.")
                              .AddOption("Thank~you.", 255)
                             .AddAvatar(33).FinalizeDialog();

                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.VeteranHong)]
        public static void VeteranHong(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaskmasterChang, client.Player.Class, 1723);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.VeteranHong, client.Player.Class, 1724);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.VeteranHong, client.Player.Class, 1725);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.VeteranHong, client.Player.Class, 1726);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("I miss those good old days. We were so valiant, and managed to conquer the whole country. We were legends! Feared and respected!")
                                .AddText("~Now that I am old, I can still fight as well as I could when I was young.");
                            data.AddOption("Taskmaster~Chang~sent~me~here.", 1)
                                .AddOption("You~bet!", 255)
                               .AddAvatar(91).FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            {
                                data.AddText("I miss those good old days. We were so valiant, and managed to conquer the whole country. We were legends! Feared and respected!")
                               .AddText("~Now that I am old, I can still fight as well as I could when I was young.");
                                data.AddOption("Anything~I~can~help~you~with?", 4)
                                    .AddOption("You~bet!", 255)
                                   .AddAvatar(91).FinalizeDialog();
                            }
                            else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            {
                                data.AddText("I miss those good old days. We were so valiant, and managed to conquer the whole country. We were legends! Feared and respected!")
                         .AddText("~Now that I am old, I can still fight as well as I could when I was young.");
                                data.AddOption("Talk~about~the~lost~armor.", 10)
                                    .AddOption("You~bet!", 255)
                                   .AddAvatar(91).FinalizeDialog();
                            }
                            else if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            {
                                data.AddText("I miss those good old days. We were so valiant, and managed to conquer the whole country. We were legends! Feared and respected!")
                         .AddText("~Now that I am old, I can still fight as well as I could when I was young.");
                                data.AddOption("I`ve~got~something~for~you..", 13)
                                    .AddOption("You~bet!", 255)
                                   .AddAvatar(91).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("I miss those good old days. We were so valiant, and managed to conquer the whole country. We were legends! Feared and respected!")
                         .AddText("~Now that I am old, I can still fight as well as I could when I was young.")
                                    .AddOption("You~bet!", 255)
                                   .AddAvatar(91).FinalizeDialog();
                            }

                        }
                        else
                        {
                            data.AddText("I miss those good old days. We were so valiant, and managed to conquer the whole country. We were legends! Feared and respected!")
                     .AddText("~Now that I am old, I can still fight as well as I could when I was young.")
                                .AddOption("You~bet!", 255)
                               .AddAvatar(91).FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        data.AddText("Yes! I`m in trouble now, and I could use your help. Someone has stolen my Spun Gold Armor. Were this found out by the Emperor,")
                               .AddText("~I would be sentenced to death! Please, you must help me! You should find some clues from those Bandits who roam outside the city.");
                        data.AddOption("Got~it.", 2)
                            .AddOption("Spun~Gold~Armor?", 255)
                           .AddAvatar(91).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You've received 100 Silver.", MsgMessage.ChatMode.System);
                        }
                        data.AddText("Yes! I guess it was those bandits who stole my armor. You should find them and try to recover any clues you can. Feel free to use force.");
                        data.AddOption("You~can~count~on~me!", 3)
                            //   .AddOption("Spun~Gold~Armor?", 10)
                            .AddOption("I`m~busy.", 255)
                           .AddAvatar(91).FinalizeDialog();

                        break;
                    }
                case 4:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 1))
                        {
                            data.AddText("Rumor has it that those bandits who roam outside the city have something to do with this. Go find them and see what they know!");
                            data.AddOption("Dirty~thief!", 6)
                                .AddOption("Who`s~Cloud~the~Lustful?", 7)
                               .AddAvatar(91).FinalizeDialog();
                            break;
                        }
                        data.AddText("This is an invitation to the Treasure Appraisal Meeting. Now I`m positive the Spun Gold Armor was stolen by Cloud the Lustful!");
                        data.AddOption("Okay.", 3)
                           .AddAvatar(91).FinalizeDialog();

                        break;
                    }
                case 6:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.Inventory.Remove(729971, 1, stream);
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You've received 100 Silver!", MsgMessage.ChatMode.System);

                            data.AddText("I miss those good old days. We were so valiant, and managed to conquer the whole country. We were legends! Feared and respected!")
                            .AddText("~Now that I am old, I can still fight as well as I could when I was young.");
                            data.AddOption("Talk~about~the~lost~armor.", 10)
                                .AddOption("You~bet!", 255)
                               .AddAvatar(91).FinalizeDialog();
                        }

                        break;
                    }
                case 7:
                    {
                        data.AddText("Cloud the Lustful is the head of those bandits. They are a motley crew... Notorious and capable of committing")
                           .AddText("~every kind of crime conceivable. Now they even have the gall to steal my Spun Gold Armor! Those nasty rogues!");
                        data.AddOption("Indeed.", 255)
                           .AddAvatar(91).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.CreateBoxDialog("Go~find~some~clues~from~the~Bandits.");

                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest3.MissionId, 1, 1))
                        {
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                            {
                                client.Player.Money += 1000;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                client.GainExpBall(100, true, Role.Flags.ExperienceEffect.angelwing);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, Role.Flags.ExperienceEffect.bless.ToString());
                                client.SendSysMesage("You've received EXP worth 1/6 EXP Ball and 1,000 Silver!", MsgMessage.ChatMode.System);
                            }
                            data.AddText("Thank you! I thought I would never regain my precious armor. Please, let me repay you for your heroic feat.");
                            data.AddOption("My~pleasure.", 13)
                               .AddAvatar(91).FinalizeDialog();
                            break;
                        }
                        data.AddText("He usually shows up around a small altar in the southwest of Phoenix Castle. He is a randy old man, and actually quite disgusting.")
                            .AddText("~The only way to attract the attention of Cloud the Lustful is beautiful girls. Please take these offerings and find Zhao Jian,")
                            .AddText("~the Disguiser (200,325). He will disguise you as an astounding beauty.");
                        //data.AddOption("I`m~setting~off.", 11)
                        data.AddOption("Gimme~some~offerings.", 12)
                        .AddOption("It`s~crazy.", 255)
                       .AddAvatar(91).FinalizeDialog();

                        break;
                    }

                case 12:
                    {
                        if (client.Inventory.HaveSpace(1) == false)
                        {
                            data.AddText("Please make 1 more space in your inventory");
                            data.AddOption("Let me check.", 255).AddAvatar(91).FinalizeDialog();
                            break;
                        }
                        if (client.Inventory.Contain(729972, 2))
                        {
                            data.AddText("Are you kidding me? You`ve already got the offering!");
                            data.AddOption("Let~me~see.", 255).AddAvatar(91).FinalizeDialog();
                            //Are you kidding me? You`ve already got the offering!
                            break;
                        }
                        client.CreateBoxDialog("You`ve~got~the~offering.~Now~go~visit~Disguiser~Zhao~(200,325)~for~help.");
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        client.Inventory.Add(stream, 729972);

                        break;
                    }
                case 13:
                    {
                        data.AddText("Thank you for retrieving my Spun Gold Armor. Now you can speak with Taskmaster Chang, to claim your reward.");
                        data.AddOption("Great!", 255)
                           .AddAvatar(91).FinalizeDialog();
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Hurry~and~claim~your~reward~from~Taskmaster~Chang!", ActiveQuest4.FinishNpcId.Map, ActiveQuest4.FinishNpcId.X, ActiveQuest4.FinishNpcId.Y, ActiveQuest4.FinishNpcId.ID);

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.ScholarWu)]
        public static void ScholarWu(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaskmasterChang, client.Player.Class, 1727);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ScholarWu, client.Player.Class, 1728);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.PharmacistMuMu, client.Player.Class, 1731);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ScholarWu, client.Player.Class, 1732);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Here it is, the Phoenix Castle. Well, this asthma... it has been on and off for years... Terrible, I`m telling you... They")
                                .AddText("~said I could find some good pills, here... I do hope so... it`s killing me...");
                            data.AddOption("Did~you~go~to~see~a~doctor?", 1)
                                .AddOption("Good~luck,~buddy.", 255).AddAvatar(40).FinalizeDialog();
                            break;
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            {
                                data.AddText("Here it is, the Phoenix Castle. Well, this asthma... it has been on and off for years... Terrible, I`m telling you... They")
                                    .AddText("~said I could find some good pills, here... I do hope so... it`s killing me...");
                                data.AddOption("Maybe~I~can~help?", 3)
                                    .AddOption("Good~luck,~buddy.", 255).AddAvatar(40).FinalizeDialog();
                            }
                            else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            {
                                data.AddText("Here it is, the Phoenix Castle. Well, this asthma... it has been on and off for years... Terrible, I`m telling you... They")
                                    .AddText("~said I could find some good pills, here... I do hope so... it`s killing me...");
                                data.AddOption("I`ll~try~my~best~to~help~you!", 7)
                                    .AddOption("Good~luck,~buddy.", 255).AddAvatar(40).FinalizeDialog();
                            }
                            else if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            {
                                data.AddText("Here it is, the Phoenix Castle. Well, this asthma... it has been on and off for years... Terrible, I`m telling you... They")
                                    .AddText("~said I could find some good pills, here... I do hope so... it`s killing me...");
                                data.AddOption("I`ll~try~my~best~to~help~you!", 8)
                                    .AddOption("Good~luck,~buddy.", 255).AddAvatar(40).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Here it is, the Phoenix Castle. Well, this asthma... it has been on and off for years... Terrible, I`m telling you... They")
                                   .AddText("~said I could find some good pills, here... I do hope so... it`s killing me...");
                                data.AddOption("Good~luck,~buddy.", 255).AddAvatar(40).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Here it is, the Phoenix Castle. Well, this asthma... it has been on and off for years... Terrible, I`m telling you... They")
                               .AddText("~said I could find some good pills, here... I do hope so... it`s killing me...");
                            data.AddOption("Good~luck,~buddy.", 255).AddAvatar(40).FinalizeDialog();
                        }
                        break;
                    }
                case 7:
                    {
                        data.AddText("Hats off to your valor! You saved my life! Please accept this, with my thanks.");
                        data.AddOption("Thank~you.", 8).AddAvatar(40).FinalizeDialog();


                        break;
                    }
                case 8:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                        {
                            client.Player.Money += 1500;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.GainExpBall(200, true, Role.Flags.ExperienceEffect.angelwing);
                            client.SendSysMesage("You've received EXP worth 1/3 EXP Ball and 1,500 Silver!", MsgMessage.ChatMode.System);
                        }
                        data.AddText("Thank you! You saved me! Now go claim your reward from Taskmaster Chang!");
                        data.AddOption("I`m~on~the~way.", 9).AddOption("Later.", 255).AddAvatar(40).FinalizeDialog();

                        break;
                    }
                case 9:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Hurry~and~claim~your~reward~from~Taskmaster~Chang!~It`s~a~ring!", ActiveQuest4.FinishNpcId.Map, ActiveQuest4.FinishNpcId.X, ActiveQuest4.FinishNpcId.Y, ActiveQuest4.FinishNpcId.ID);

                        break;
                    }
                case 1:
                    {
                        data.AddText("Yes. But sigh... I still haven`t gotten over it...");
                        data.AddOption("Sorry~to~hear~that.", 2).AddAvatar(40).FinalizeDialog();


                        break;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You've received 100 Silver!", MsgMessage.ChatMode.System);
                        }

                        goto case 3;
                    }
                case 3:
                    {
                        data.AddText("Thank you. I heard there is a rat called the Fire Rat L38 outside the castle... Its eye and meat could be used to make a powerful")
                            .AddText("~pill, called the Azure Pill. But those rats are ferocious... Will you be so kind as to help me with this?");
                        data.AddOption("Sure!", 4).AddOption("I`m~afraid~I~can`t~help.", 255).AddAvatar(40).FinalizeDialog();

                        break;
                    }
                case 4:
                    {

                        data.AddText("Well, you are so generous... thank you. The recipe for the Azure Pill belongs to Pharmacist Mu Mu (182,241). Please go there")
                            .AddText("~immediately... Oh, my throat...");
                        data.AddOption("I`m~off~right~now.", 5).AddAvatar(40).FinalizeDialog();

                        break;
                    }
                case 5:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Head~to~visit~Pharmacist~Mu~Mu~(182,241).", ActiveQuest2.FinishNpcId.Map, ActiveQuest2.FinishNpcId.X, ActiveQuest2.FinishNpcId.Y, ActiveQuest2.FinishNpcId.ID);

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.BianQing)]
        public static void BianQing(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.PharmacistMuMu, client.Player.Class, 1729);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 0, 0, 2) && client.Inventory.Contain(721697, 2))
                            {
                                data.AddText("Oh... look who`s coming? I have anything you want. Just name it.");
                                data.AddOption("You~bet!", 255).AddAvatar(55).FinalizeDialog();
                                break;
                            }
                            data.AddText("Oh... look who`s coming? I have anything you want. Just name it.");
                            data.AddOption("You~knew~the~Azure~Pill?", 1)
                                .AddOption("You~bet!", 255).AddAvatar(55).FinalizeDialog();
                            break;
                        }
                        else
                        {
                            data.AddText("Oh... look who`s coming? I have anything you want. Just name it.");
                            data.AddOption("You~bet!", 255).AddAvatar(55).FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        data.AddText("Yes, sure. So my old friend Mu Mu sent you here? Let me see... you need to collect 1 Ratling Eye and 3 Ratling Meat, yourself,")
                            .AddText("~but I will give you the 2 Herb Packs for free. He must need them to make some medicine. Here you are.");
                        data.AddOption("Thanks.", 2).AddAvatar(55).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (!client.Inventory.HaveSpace(2))
                        {
                            data.AddText("Please make 2 more spaces in your inventory.");
                            data.AddOption("Let me check.", 255).AddAvatar(55).FinalizeDialog();
                            break;
                        }
                        client.Inventory.AddItemWitchStack(721697, 0, 2, stream);
                        client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 0, 0, 2);
                        client.CreateBoxDialog("You~receive~2~Herb~Packs.~You~still~need~1~Ratling~Eye~and~3~Ratling~Meat!");

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.PharmacistMuMu)]
        public static void PharmacistMuMu(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.ScholarWu, client.Player.Class, 1728);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.PharmacistMuMu, client.Player.Class, 1729);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.PharmacistMuMu, client.Player.Class, 1730);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.PharmacistMuMu, client.Player.Class, 1731);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("I`ve spent most of my life travelling around, you know. Collecting medicine formulas and curing people. Trust me, I`m the best.");
                            data.AddOption("You~knew~Scholar~Wu?", 1)
                                .AddOption("Indeed.", 255).AddAvatar(62).FinalizeDialog();
                            break;
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            data.AddText("I`ve spent most of my life travelling around, you know. Collecting medicine formulas and curing people. Trust me, I`m the best.");
                            data.AddOption("Indeed.", 255).AddAvatar(62).FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("I`ve spent most of my life travelling around, you know. Collecting medicine formulas and curing people. Trust me, I`m the best.");
                                data.AddOption("What~about~the~Azure~Pill?", 4)
                                    .AddOption("Indeed.", 255).AddAvatar(62).FinalizeDialog();
                                break;
                            }
                            data.AddText("Scholar Wu is suffering from a rare asthma. Only the Azure Pill can cure it. I need 1 Ratling Eye, 3 Ratling Meat and")
                                .AddText("~2 Herb Packs. Kill Ratlings and you`ll have a chance to get what I need. You can ask Bian Qing (Twin City 342,232) for the packs.");
                            data.AddOption("I`m~on~my~way.", 3)
                                .AddOption("None~of~my~business.", 255).AddAvatar(62).FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (!client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("It will take a while to make the Azure Pill. Be patient.");
                                data.AddOption("Alright.", 6).AddAvatar(62).FinalizeDialog();
                            }
                            else
                            {
                                if (DateTime.Now > client.Player.AzurePillStamp)
                                {
                                    data.AddText("I`ve spent most of my life travelling around, you know. Collecting medicine formulas and curing people. Trust me, I`m the best.");
                                    data.AddOption("How`s~going~with~the~pill?", 9).AddOption("Indeed.", 255).AddAvatar(62).FinalizeDialog();
                                }
                                else
                                {
                                    data.AddText("I`ve spent most of my life travelling around, you know. Collecting medicine formulas and curing people. Trust me, I`m the best.");
                                    data.AddOption("How`s~going~with~the~pill?", 8).AddOption("Indeed.", 255).AddAvatar(62).FinalizeDialog();
                                }

                            }
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            data.AddText("I`ve spent most of my life travelling around, you know. Collecting medicine formulas and curing people. Trust me, I`m the best.");
                            data.AddOption("Any~news~about~the~Azure~Pill?", 14).AddOption("Indeed.", 255).AddAvatar(62).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("I`ve spent most of my life travelling around, you know. Collecting medicine formulas and curing people. Trust me, I`m the best.");
                            data.AddOption("Indeed.", 255).AddAvatar(62).FinalizeDialog();
                        }

                        break;
                    }
                case 14:
                    {
                        data.AddText("Finally, the Azure Pill is done. Hurry up, bring it to Scholar Wu.");
                        data.AddOption("I`ll~set~off~right~away.", 15).AddAvatar(62).FinalizeDialog();

                        break;
                    }
                case 15:
                    {
                        if (!client.Inventory.Contain(721698, 1))
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                data.AddText("Please make 1 more space in your inventory.");
                                data.AddOption("Let me check.", 255).AddAvatar(62).FinalizeDialog();
                                break;
                            }
                            client.Inventory.Add(stream, 721698);
                        }
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        client.Player.QuestGUI.SendAutoPatcher("You`ve~got~the~Azure~Pill!", ActiveQuest4.FinishNpcId.Map, ActiveQuest4.FinishNpcId.X, ActiveQuest4.FinishNpcId.Y, ActiveQuest4.FinishNpcId.ID);
                        client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest4.MissionId, 1);

                        break;
                    }
                case 9:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.");
                            data.AddOption("Let me check.", 255).AddAvatar(62).FinalizeDialog();
                            break;
                        }
                        client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId);
                        data.AddText("Haha, the Azure Pill is done!");
                        data.AddOption("Perfect!", 10).AddAvatar(62).FinalizeDialog();

                        break;
                    }
                case 10:
                    {
                        data.AddText("Finally, the Azure Pill is done. Hurry up, bring it to Scholar Wu");
                        data.AddOption("I`ll~set~off~right~away.", 11).AddAvatar(62).FinalizeDialog();

                        break;
                    }
                case 11:
                    {
                        client.Inventory.Add(stream, 721698);
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        client.Player.QuestGUI.SendAutoPatcher("You`ve~got~the~Azure~Pill!", ActiveQuest4.FinishNpcId.Map, ActiveQuest4.FinishNpcId.X, ActiveQuest4.FinishNpcId.Y, ActiveQuest4.FinishNpcId.ID);
                        client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest4.MissionId, 1);

                        break;
                    }
                case 8:
                    {
                        data.AddText("Don`t bother me, right now. Get some manners and be patient, OK?");
                        data.AddOption("I`ll~wait.", 255).AddAvatar(62).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        data.AddText("Oh, Scholar Wu`s disease... It`s difficult to cure. I`ll try my best, but I`ll need your help gathering things I need.");
                        data.AddOption("Go~ahead.", 2).AddAvatar(62).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You've received 100 Silver!", MsgMessage.ChatMode.System);
                        }
                        data.AddText("Scholar Wu is suffering from a rare asthma. Only the Azure Pill can cure it. I need 1 Ratling Eye, 3 Ratling Meat and")
                                .AddText("~2 Herb Packs. Kill Ratlings and you`ll have a chance to get what I need. You can ask Bian Qing (Twin City 342,232) for the packs.");
                        data.AddOption("I`m~on~my~way.", 3)
                            .AddOption("None~of~my~business.", 255).AddAvatar(62).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.CreateBoxDialog("Hurry~to~collect~1~Ratling~Eye,~3~Ratling~Meat,~and~buy~2~Herb~Packs~from~Bian~Qing~(Twin~City~342,232)!");

                        break;
                    }
                case 4:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 1, 3, 2))
                        {
                            data.AddText("Excellent! All of the ingredients are here. Now leave me alone for a while so I can combine them into an Azure Pill.");
                            data.AddOption("Cool.", 5).AddAvatar(62).FinalizeDialog();


                            break;
                        }
                        data.AddText("Now, bring me 1 Ratling Eye and 3 Ratling Meat. Make sure to get the 2 Herb Packs from Bian Qing (342,232).");
                        data.AddOption("I~see", 255).AddAvatar(62).FinalizeDialog();

                        break;
                    }
                case 5:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.Inventory.Remove(721695, 1, stream);
                            client.Inventory.Remove(721696, 3, stream);
                            client.Inventory.Remove(721697, 2, stream);
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You've received 100 Silver!", MsgMessage.ChatMode.System);
                        }
                        data.AddText("It will take a while to make the Azure Pill. Be patient.");
                        data.AddOption("Alright.", 6).AddAvatar(62).FinalizeDialog();

                        break;
                    }
                case 6:
                    {
                        client.Player.AzurePillStamp = DateTime.Now.AddSeconds(30);
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        client.CreateBoxDialog("Just~give~me~30~seconds!");

                        ActionQuery action = new ActionQuery();
                        action.ObjId = client.Player.UID;
                        action.Type = ActionType.CountDown;
                        action.dwParam = (uint)30;
                        client.Send(stream.ActionCreate(&action));

                        break;
                    }
            }
        }
        //Level43UniqueRingPack
        [NpcAttribute(NpcID.Level43UniqueRingPack)]
        public static void Level43UniqueRingPack(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            client.Inventory.Remove(728238, 1, stream);
            switch (Option)
            {
                case 1:
                    {
                        client.Inventory.Add(stream, 151077);
                        client.CreateBoxDialog("You~opened~the~pack~and~received~a~Unique~Ivory~Heavy~Ring!");

                        break;
                    }
                case 2:
                    {
                        client.Inventory.Add(stream, 150077);
                        client.CreateBoxDialog("You~opened~the~pack~and~received~a~Unique~Amethyst~Ring!");

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.ApprenticeLuo)]
        public static void ApprenticeLuo(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaskmasterChang, client.Player.Class, 1733);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ApprenticeLuo, client.Player.Class, 1734);
            switch (Option)
            {
                case 0:
                    {

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Ever wonder who makes the best arrows in the world? It`s my dad!")
                                .AddText("~Those arrows... So delicate, but they can fly so steadily...");
                            data.AddOption("Your~dad?", 1).AddOption("You~are~adorable.", 255).AddAvatar(68).FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) && client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("Have you met my father on the Wind Plain (442,431)? I`m sure he`ll")
                                    .AddText("~bring back lots of beautiful feathers.");
                                data.AddOption("Yeah.", 255).AddAvatar(68).FinalizeDialog();
                                break;
                            }
                            data.AddText("Have you ever met my father, Artisan Luo? He makes arrows, and has been off at the Wind Plain Bridge")
                            .AddText("~(442,431) collecting feathers. It usually only takes him one or two days, but it`s been almost a week")
                            .AddText("~since he left, this time. My mother and I are so very worried. I hope he`s alright...");
                            data.AddOption("River?", 2).AddOption("Sorry,~I~can`t~help.", 255).AddAvatar(68).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Have you met my father on the Wind Plain (442,431)? I`m sure he`ll")
                                   .AddText("~bring back lots of beautiful feathers.");
                            data.AddOption("Yeah.", 255).AddAvatar(68).FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        data.AddText("Have you ever met my father, Artisan Luo? He makes arrows, and has been off at the Wind Plain Bridge")
                              .AddText("~(442,431) collecting feathers. It usually only takes him one or two days, but it`s been almost a week")
                              .AddText("~since he left, this time. My mother and I are so very worried. I hope he`s alright...");
                        data.AddOption("River?", 2).AddOption("Sorry,~I~can`t~help.", 255).AddAvatar(68).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You've completed the quest and received 100 Silver!", MsgMessage.ChatMode.System);
                        }
                        data.AddText("He should be near the river between the Peach Blossom Garden and Wind Plain. There are many birds roaming around.")
                             .AddText("~My dad used to take me there to collect feathers, so I`m sure that`s where he`ll be.");
                        data.AddOption("Got~it.", 3).AddOption("Sorry,~I~can`t~help.", 255).AddAvatar(68).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Hurry~to~the~Riverside~(442,431)!", ActiveQuest2.FinishNpcId.Map, ActiveQuest2.FinishNpcId.X, ActiveQuest2.FinishNpcId.Y, ActiveQuest2.FinishNpcId.ID);

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.ArtisanLuo)]
        public static void ArtisanLuo(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.ArtisanLuo, client.Player.Class, 1010);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ApprenticeLuo, client.Player.Class, 1734);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ArtisanLuo, client.Player.Class, 1735);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ArtisanLuo, client.Player.Class, 1736);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)NpcID.ArtisanLuo, client.Player.Class, 1737);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("I am an artisan from Twin City. It`s my job to make exquisite arrows for hunters. The best arrow is a")
                                  .AddText(" ~perfect combination of a sharp arrowhead, solid shaft and brilliant feathers.")
                                .AddOption("I~came~for~your~son.", 10)
                                .AddOption("Oh~no,~thanks.", 255)
                                .AddAvatar(51).FinalizeDialog();

                            break;
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                            && client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            data.AddText("I am an artisan from Twin City. It`s my job to make exquisite arrows for hunters. The best arrow is a")
                                .AddText(" ~perfect combination of a sharp arrowhead, solid shaft and brilliant feathers.")
                              .AddOption("I`ve~got~the~feathers.", 11)
                              .AddOption("Oh~no,~thanks.", 255)
                              .AddAvatar(51).FinalizeDialog();
                            break;
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                            && client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            data.AddText("I am an artisan from Twin City. It`s my job to make exquisite arrows for hunters. The best arrow is a")
                               .AddText(" ~perfect combination of a sharp arrowhead, solid shaft and brilliant feathers.")
                             .AddOption("I`ve~got~the~Vulture~Feather.", 13)
                             .AddOption("Oh~no,~thanks.", 255)
                             .AddAvatar(51).FinalizeDialog();


                            break;
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                          && client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            data.AddText("I am an artisan from Twin City. It`s my job to make exquisite arrows for hunters. The best arrow is a")
                               .AddText(" ~perfect combination of a sharp arrowhead, solid shaft and brilliant feathers.")
                             .AddOption("Let~me~know~if~you~need~help.", 16)
                             .AddOption("Oh~no,~thanks.", 255)
                             .AddAvatar(51).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("I am an artisan from Twin City. It`s my job to make exquisite arrows for hunters. The best arrow is a")
                                .AddText(" ~perfect combination of a sharp arrowhead, solid shaft and brilliant feathers.")

                              .AddOption("Oh~no,~thanks.", 255)
                              .AddAvatar(51).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 10))
                            {
                                data.AddText("I am an artisan from Twin City. It`s my job to make exquisite arrows for hunters. The best arrow is a")
                                    .AddText(" ~perfect combination of a sharp arrowhead, solid shaft and brilliant feathers.")
                              .AddOption("Feather~Collection.", 4)
                              .AddOption(" Oh~no,~thanks.", 255)
                              .AddAvatar(51).FinalizeDialog();
                            }
                            else
                            {

                                data.AddText(" I ran out of the materials I use to make arrows. Can you hunt the Robins and collect 10 Robin Feathers for me?")
                               .AddOption("Here~you~are!", 3)
                               .AddOption("I`ll~go~now.", 255)
                               .AddAvatar(51).FinalizeDialog();
                            }
                        }
                        else if (!client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("I am an artisan from Twin City. It`s my job to make exquisite arrows for hunters. The best arrow is a")
                                .AddText("~perfect combination of a sharp arrowhead, solid shaft and brilliant feathers.")
                                .AddOption("Feather~Collection.", 1)
                                .AddOption("Oh~no,~thanks.", 255)
                                .AddAvatar(51).FinalizeDialog();
                            break;
                        }

                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You've completed the quest and received 100 Silver!", MsgMessage.ChatMode.System);
                        }
                        data.AddText("Oh, my son is looking for me? Alright, I`ll be able to head home as soon as I can gather enough feathers.")
                          .AddOption("You~crazy.", 11)
                          .AddOption("Fine.", 255)
                          .AddAvatar(51).FinalizeDialog();

                        break;
                    }
                case 11:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest3.MissionId, 100))
                        {
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                            {
                                client.Player.Money += 100;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                client.SendSysMesage("You've completed the quest and received 100 Silver!", MsgMessage.ChatMode.System);
                            }
                            data.AddText("That`s very kind of you! Thank you!")
                                .AddOption("No~problem.", 13)
                                .AddAvatar(51).FinalizeDialog();
                            break;
                        }
                        data.AddText("Ouch...my foot! I accidentally sprained my ankle while I was trapping a gigantic bird, so it`s hard for")
                            .AddText("~me to keep collecting feathers. Would you be so kind as to help me collect 100 feathers?")
                            .AddText("~I would really appreciate your help.")
                         .AddOption("My~pleasure.", 12)
                         .AddOption("Sorry,~I~can`t~help.", 255)
                         .AddAvatar(51).FinalizeDialog();

                        break;
                    }
                case 13:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            //You`ve~found~a~Vulture~Feather.
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest4.MissionId, 1))
                            {
                                data.AddText("Thank you for helping me! Take this as your reward. You deserve it.")
                                    .AddOption("My~pleasure.", 16)
                            .AddAvatar(51).FinalizeDialog();
                                break;
                            }
                            else
                            {
                                data.AddText("The Vultures are nesting in the Love Canyon, but be careful! They`re very dangerous.").AddOption("I~see.", 255)
                              .AddAvatar(51).FinalizeDialog();
                                break;
                            }
                        }
                        data.AddText("One last thing... I`ve been dreaming of getting my hands on some of the native vulture`s feathers.")
                            .AddText("~Perhaps you could help me out one more time?")
                                  .AddOption("I`ll~try~my~best.", 14).AddOption("I`m~busy,~you~know.", 255)
                                  .AddAvatar(51).FinalizeDialog();

                        break;
                    }
                case 16:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                        {
                            client.Inventory.Remove(729976, 1, stream);
                            client.Player.Money += 1500;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.GainExpBall(100, true, Role.Flags.ExperienceEffect.angelwing);
                            client.SendSysMesage("You've received EXP worth 1/6 EXP Ball and 1,500 Silver!", MsgMessage.ChatMode.System);
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Thank you for what you`ve done for me! Please pay a visit to Taskmaster Chang and claim your reward.")
                               .AddOption("I~will.", 255)
                       .AddAvatar(51).FinalizeDialog();
                            break;
                        }
                        data.AddText("Thank you for helping me. Now you can go pick a reward from Taskmaster Chang.")
                                .AddOption("Really?~I`m~on~my~way.", 17)
                                .AddOption("Got~it.", 255)
                        .AddAvatar(51).FinalizeDialog();

                        break;
                    }
                case 17:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest5, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Hurry~to~claim~your~reward~from~Taskmaster~Chang.~It`s~a~weapon!", ActiveQuest5.FinishNpcId.Map, ActiveQuest5.FinishNpcId.X, ActiveQuest5.FinishNpcId.Y, ActiveQuest5.FinishNpcId.ID);

                        break;
                    }
                case 14:
                    {
                        data.AddText("You certainly deserve your good reputation! I heard the strange birds from the Love Canyon can cast magic spells")
                         .AddText("~and turn human beings into monkeys! I could never risk going, but maybe you could? Do you think you could collect")
                         .AddText("~a feather from one of the vultures for me?")
                               .AddOption("You~can~count~on~me.", 15).AddOption("I`m~busy,~you~know.", 255)
                               .AddAvatar(51).FinalizeDialog();

                        break;
                    }
                case 15:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Hurry~to~the~Love~Canyon~to~hunt~the~Vultures.", 1020, 586, 771, 0);

                        break;
                    }
                case 12:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        client.CreateBoxDialog("Hurry~to~collect~100~feathers!");

                        break;
                    }
                case 4:
                    {
                        data.AddText("I ran out of the materials I use to make arrows. Can you hunt the Robins and collect 10 Robin Feathers for me?")
                                 .AddOption("Here~you~are!", 5)
                                 .AddOption("I`ll~go~now.", 255)
                                 .AddAvatar(51).FinalizeDialog();


                        break;
                    }
                case 5:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.CreateBoxDialog("You~finished~the~quest~Feather~Collection~and~received~400~silver~and~EXP~worth~1/15~of~an~EXP~Ball.");
                            client.Player.Money += 400;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.GainExpBall(10, true, Role.Flags.ExperienceEffect.angelwing);
                            data.AddText("Thank you very much for collecting the Robin Feathers for me! I can make good arrows with it!")
                               .AddOption("You~are~welcome.", 255)
                               .AddAvatar(51).FinalizeDialog();
                        }

                        break;
                    }
                case 3:
                    {
                        data.AddText("Hey, I don`t see any feathers on you. Don`t cheat me!")
                               .AddOption("I`ll~go~now.", 255)
                               .AddAvatar(51).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        data.AddText(" Hi! I`m the fletcher of Twin City. It`s my job to make exquisite arrows. Now, I`m out of the material I need to make arrows. Can you")
                              .AddText("~hunt some Robins and collect 10 Robin Feathers for me?")
                              .AddText("~I need those feathers, or I can`t make any arrows!")
                              .AddOption("No~problem.", 2)
                              .AddOption("I~have~other~things~to~do.", 255)
                              .AddAvatar(51).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Go~hunt~Robins~and~collect~10~Robin~Feathers.", 1002, 577, 718, 0);


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.ShenJunior)]
        public static void ShenJunior(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.DealerShen, client.Player.Class, 1742);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("So my father asked you to visit me? It is very kind of you. I really miss him.")
                               .AddOption("You~need~a~Gate~scroll?", 1)
                               .AddOption("Never~mind.", 255)
                               .AddAvatar(27).FinalizeDialog();
                            break;
                        }
                        else
                        {
                            data.AddText("So my father asked you to visit me? It is very kind of you. I really miss him.")
                             .AddOption("Never~mind.", 255)
                             .AddAvatar(27).FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        data.AddText("Thank you for your help. This means a lot to me, since I`ll finally be able to go home and get a break!")
                             .AddOption("Take~care.", 2)
                             .AddAvatar(27).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 1);
                        client.Inventory.Remove(721710, 1, stream);
                        client.Player.QuestGUI.SendAutoPatcher(1011, ActiveQuest.FinishNpcId.X, ActiveQuest.FinishNpcId.Y, ActiveQuest.FinishNpcId.ID);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.DealerShen)]
        public static void DealerShen(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.Minstrel, client.Player.Class, 1739);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DealerShen, client.Player.Class, 1740);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DealerShen, client.Player.Class, 1741);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DealerShen, client.Player.Class, 1742);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DealerShen, client.Player.Class, 1743);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Only the most glorious treasures will stand the test of time. Don`t laugh, young man. I`ve set my mind to unveiling their beauty!")
                               .AddOption("Are~you~Dealer~Shen?", 1)
                               .AddOption("That`s~interesting.", 255)
                               .AddAvatar(85).FinalizeDialog();
                            break;
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                          && client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            data.AddText("Only the most glorious treasures will stand the test of time. Don`t laugh, young man. I`ve set my mind to unveiling their beauty!")
                             .AddOption("I`ve~got~what~you~need.", 3)
                             .AddOption("That`s~interesting.", 255)
                             .AddAvatar(85).FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                      && client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            data.AddText("Only the most glorious treasures will stand the test of time. Don`t laugh, young man. I`ve set my mind to unveiling their beauty!")
                             .AddOption("I~finished~the~Ratlings.", 5)
                             .AddOption("That`s~interesting.", 255)
                             .AddAvatar(85).FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                     && client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            data.AddText("Only the most glorious treasures will stand the test of time. Don`t laugh, young man. I`ve set my mind to unveiling their beauty!")
                             .AddOption("I`m~always~at~your~service.", 7)
                             .AddOption("That`s~interesting.", 255)
                             .AddAvatar(85).FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                  && client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            data.AddText("Only the most glorious treasures will stand the test of time. Don`t laugh, young man. I`ve set my mind to unveiling their beauty!")
                             .AddOption("Your~son~is~back.", 10)
                             .AddOption("That`s~interesting.", 255)
                             .AddAvatar(85).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Only the most glorious treasures will stand the test of time. Don`t laugh, young man. I`ve set my mind to unveiling their beauty!")
                          .AddOption("That`s~interesting.", 255)
                          .AddAvatar(85).FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        data.AddText("Yes! Nice to see you! I love collecting antiques. They`ve been my biggest passion in life.")
                              .AddOption("I~want~your~Antique~Ring.", 2)
                              .AddAvatar(85).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You've completed the quest and received 100 Silver!", MsgMessage.ChatMode.System);
                        }
                        data.AddText("Oh, I could have helped you... But... you know... the Antique Ring... that`s valuable...")
                         .AddOption("What~do~you~want?", 3)
                         .AddOption("Never~mind.", 255)
                         .AddAvatar(85).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 12, 12))
                        {
                            data.AddText("Thank you. I`ll get them to take their medicine, now.")
                        .AddOption("Take~your~time.", 5)
                        .AddAvatar(85).FinalizeDialog();
                            break;
                        }
                        data.AddText("You`re smart. To be honest with you, I could use some help. I need 12 Stanchers and 12 Agrypnotics to help with my family`s illness.")
                            .AddText("~You can buy them from the Pharmacist, but it`s too far away. I need to stay close to my family, right now.")
                      .AddOption("I`ll~be~right~back.", 4)
                      .AddOption("Later.", 255)
                      .AddAvatar(85).FinalizeDialog();

                        break;
                    }
                case 4:
                    {
                        if (!client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                            foreach (var item in client.Inventory.ClientItems.Values)
                            {
                                if (item.ITEM_ID == 1000000)
                                    client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest2.MissionId, 1);
                                else if (item.ITEM_ID == 1001000)
                                    client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest2.MissionId, 0, 1);
                            }
                        }
                        client.Player.QuestGUI.SendAutoPatcher("Hurry~to~buy~12~Stanchers~and~12~Agrypnotics!", 1011, 189, 252, 10014);

                        break;
                    }
                case 5:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.Inventory.Remove(1000000, 12, stream);
                            client.Inventory.Remove(1001000, 12, stream);
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You've completed the quest and received 100 Silver!", MsgMessage.ChatMode.System);
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest3.MissionId, 20))
                            {
                                data.AddText("Thank you for what you`ve done for the village. I won`t soon forget your heroism!")
                                   .AddOption("You`re~welcome.", 7)
                                   .AddAvatar(85).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("How come you didn`t kill enough Ratlings?")
                                    .AddOption("Sorry,~I`ll~try~my~best.", 255)
                                    .AddAvatar(85).FinalizeDialog();

                            }
                            break;
                        }
                        data.AddText("Oh, thank you ,thank you... but... Will you please kill 20 Ratlings, too? They are really quite annoying, nibbling our food all the time.")
                       .AddOption("Okay.", 6)
                       .AddOption("It`s~boring.", 255)
                       .AddAvatar(85).FinalizeDialog();

                        break;
                    }
                case 6:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Hurry~to~kill~20~Ratlings!", 1011, 610, 429, 0);

                        break;
                    }
                case 7:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You've completed the quest and received 100 Silver!", MsgMessage.ChatMode.System);
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest4.MissionId, 1))
                            {
                                data.AddText("My son is back! How can I thank you enough!")
                   .AddOption("You`re~welcome.", 10)
                   .AddAvatar(85).FinalizeDialog();
                                break;
                            }
                            data.AddText("Have you heard the news? Recently, many people were robbed by the Bandits who hide in Maple Forest.")
                           .AddText("~I`m worried about my son. He`s working inside the Mine Cave (116,164), so he doesn`t get much news from outside.")
                   .AddOption("I`ll~take~him~home.", 255)
                   .AddOption("I~lost~the~scroll.", 9)
                   .AddAvatar(85).FinalizeDialog();
                            break;
                        }
                        data.AddText("Can you please head into Maple Forest and deliver this Castle Gate Scroll to my son?")
                            .AddText("~His name is Shen Junior, and he`s doing excavation work inside the Mine Cave (116,164).")
                    .AddOption("Sure.", 8)
                    .AddOption("Not~now.", 255)
                    .AddAvatar(85).FinalizeDialog();

                        break;
                    }
                case 8:
                    {
                        if (client.Inventory.HaveSpace(1) == false)
                        {
                            data.AddText("Please make 1 more space in your inventory");
                            data.AddOption("Let me check.", 255).AddAvatar(85).FinalizeDialog();
                            break;
                        }
                        if (!client.Inventory.Contain(721710, 1))
                            client.Inventory.Add(stream, 721710);

                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Deliver~the~Castle~Gate~Scroll~to~Shen~Junior!", 1011, 920, 552, 4502);

                        break;
                    }
                case 9:
                    {
                        if (!client.Inventory.Contain(721710, 1))
                        {
                            if (client.Inventory.HaveSpace(1) == false)
                            {
                                data.AddText("Please make 1 more space in your inventory");
                                data.AddOption("Let me check.", 255).AddAvatar(85).FinalizeDialog();
                                break;
                            }
                            client.Inventory.Add(stream, 721710);
                            client.CreateBoxDialog("Deliver~the~Castle~Gate~Scroll~to~Shen~Junior!");
                        }
                        else
                        {
                            data.AddText("You have the Scroll. Hurry up and deliver it to my son.");
                            data.AddOption("Okay.", 255).AddAvatar(85).FinalizeDialog();
                        }

                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You've completed the quest and received 100 Silver!", MsgMessage.ChatMode.System);
                        }
                        data.AddText("With my family finally together and safe, the ring is not important to me, anymore. Please, accept it as your reward.");
                        data.AddOption("Thank~you.", 11)
                            .AddOption("I`ll~take~it~later.", 255).AddAvatar(85).FinalizeDialog();


                        break;
                    }
                case 11:
                    {
                        if (client.Inventory.HaveSpace(1) == false)
                        {
                            data.AddText("Please make 1 more space in your inventory");
                            data.AddOption("Let me check.", 255).AddAvatar(85).FinalizeDialog();
                            break;
                        }
                        if (!client.Inventory.Contain(721708, 1))
                            client.Inventory.Add(stream, 721708);
                        client.Player.QuestGUI.Accept(ActiveQuest5, 0);
                        client.Player.QuestGUI.SendAutoPatcher("You`ve~got~the~Antique~Ring.~Hurry~and~bring~it~to~the~Minstrel.", ActiveQuest5.FinishNpcId.Map, ActiveQuest5.FinishNpcId.X, ActiveQuest5.FinishNpcId.Y, ActiveQuest5.FinishNpcId.ID);

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Minstrel)]
        public static void Minstrel(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaskmasterChang, client.Player.Class, 1738);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Minstrel, client.Player.Class, 1739);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DealerShen, client.Player.Class, 1743);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Minstrel, client.Player.Class, 1744);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Well, what a wonderful world! So many intricate treasures, unbreakable weapons, a panacea for immortality... I`ve had some ups and")
                               .AddText("~downs in my life, you know, but I have never stopped loving what I do. How can anyone resist their natural interests?")
                               .AddOption("Taskmaster~Chang~sent~me~here.", 1)
                               .AddOption("Uh...~Are~you~okay?", 255)
                               .AddAvatar(40).FinalizeDialog();
                            break;
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                            && client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            data.AddText("Well, what a wonderful world! So many intricate treasures, unbreakable weapons, a panacea for immortality... I`ve had some ups and")
                               .AddText("~downs in my life, you know, but I have never stopped loving what I do. How can anyone resist their natural interests?")
                               .AddOption("Anything~I~can~help~with?", 2)
                               .AddOption("Uh...~Are~you~okay?", 255)
                               .AddAvatar(40).FinalizeDialog();
                            break;
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Well, what a wonderful world! So many intricate treasures, unbreakable weapons, a panacea for immortality... I`ve had some ups and")
                        .AddText("~downs in my life, you know, but I have never stopped loving what I do. How can anyone resist their natural interests?")
                        .AddOption("What~about~the~Mystic~Ring?", 4)
                        .AddOption("Interesting.", 255)
                        .AddAvatar(40).FinalizeDialog();

                            break;
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                       && client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            data.AddText("Well, what a wonderful world! So many intricate treasures, unbreakable weapons, a panacea for immortality... I`ve had some ups and")
                               .AddText("~downs in my life, you know, but I have never stopped loving what I do. How can anyone resist their natural interests?")
                               .AddOption("Anything~I~can~help~with?", 7)
                               .AddOption("Uh...~Are~you~okay?", 255)
                               .AddAvatar(40).FinalizeDialog();
                            break;
                        }
                        else
                        {
                            data.AddText("Well, what a wonderful world! So many intricate treasures, unbreakable weapons, a panacea for immortality... I`ve had some ups and")
                            .AddText("~downs in my life, you know, but I have never stopped loving what I do. How can anyone resist their natural interests?")
                            .AddOption("Uh...~Are~you~okay?", 255)
                            .AddAvatar(40).FinalizeDialog();
                        }


                        break;
                    }
                case 1:
                    {
                        data.AddText("I heard Antique Dealer Shen has an Antique Ring which could be converted into Mystic Ring. But seems that I can`t even see it...")
                              .AddOption("What~a~pity!", 2)
                              .AddAvatar(40).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You've completed the quest and received 100 Silver!", MsgMessage.ChatMode.System);
                        }
                        data.AddText("A little bird told me an antique dealer named Shen (779,477) is living in a village near Phoenix Castle, and has an Antique Ring. His")
                            .AddText("~ring matches the description of the Mystic Ring! I must satisfy my curiosity and find out if it`s real! Will you check it out for me?")
                             .AddOption("No~problem.", 3)
                             .AddOption("Why~me?", 255)
                             .AddAvatar(40).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Ask~Dealer~Shen~(Phoenix~Castle~779,477)~about~the~Antique~Ring.", ActiveQuest2.FinishNpcId.Map, ActiveQuest2.FinishNpcId.X, ActiveQuest2.FinishNpcId.Y, ActiveQuest2.FinishNpcId.ID);

                        break;
                    }
                case 4:
                    {

                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest3.MissionId, 1))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest3.MissionId, 1, 1))
                            {
                                data.AddText("Oh gosh, the Mystic Ring... it`s no different than an ordinary one. But you truly did a great thing.")
                                    .AddText("~So, my hero, will you wear this ring and show me its power?");
                                data.AddOption("Of~course.", 7).AddAvatar(40).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Please use the AntiqueRing.");
                                data.AddOption("Let me check.", 255).AddOption("I~lost~the~Broken~Ring.", 8).AddAvatar(40).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("Finally, the Mystic Ring! Hats off to your gallantry and valor! Now, will you")
                        .AddText("~do me another favor and try it on? I want to see its legendary power unleashed!")
                        .AddOption("Sure.", 5)
                        .AddOption("Sorry,~I~have~to~go.", 255)
                        .AddAvatar(40).FinalizeDialog();

                        break;
                    }
                case 5:
                    {
                        data.AddText("Finally, the Mystic Ring! I can`t wait to see its magic! Please, wear it and show me its power! Right now!")
                       .AddOption("Fine.", 6)
                       .AddAvatar(40).FinalizeDialog();

                        break;
                    }
                case 6:
                    {
                        if (client.Inventory.HaveSpace(1) == false)
                        {
                            data.AddText("Please make 1 more space in your inventory");
                            data.AddOption("Let me check.", 255).AddAvatar(40).FinalizeDialog();
                            break;
                        }
                        client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest3.MissionId, 1);
                        client.Inventory.Remove(721708, 1, stream);
                        client.Inventory.Add(stream, 721707);
                        client.CreateBoxDialog("You~found~the~ring~is~broken!");

                        break;
                    }
                case 7:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                        {
                            client.Player.Money += 1000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.GainExpBall(100, true, Role.Flags.ExperienceEffect.angelwing);
                            client.SendSysMesage("You've received EXP worth 1/6 EXP Ball and 1,000 Silver!", MsgMessage.ChatMode.System);
                        }
                        data.AddText("Thank you for what you`ve done for me! Now you can report to Taskmaster Chang and claim your reward.")
                            .AddOption("I`ll~go~right~away.", 9)
                            .AddAvatar(40).FinalizeDialog();

                        break;
                    }
                case 8:
                    {
                        if (!client.Inventory.Contain(721707, 1))
                        {
                            if (client.Inventory.HaveSpace(1) == false)
                            {
                                data.AddText("Please make 1 more space in your inventory");
                                data.AddOption("Let me check.", 255).AddAvatar(85).FinalizeDialog();
                                break;
                            }
                            client.Inventory.Add(stream, 721707);
                            client.CreateBoxDialog("You~found~the~ring~is~broken!");
                        }
                        else
                        {
                            data.AddText("You have the ring.");
                            data.AddOption("Okay.", 255).AddAvatar(85).FinalizeDialog();
                        }

                        break;
                    }
                case 9:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Hurry~to~claim~your~reward~from~Taskmaster~Chang.~It`s~some~headgear!", ActiveQuest4.FinishNpcId.Map, ActiveQuest4.FinishNpcId.X, ActiveQuest4.FinishNpcId.Y, ActiveQuest4.FinishNpcId.ID);

                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.DoctorLi)]
        public static void DoctorLi(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.OfficerBao, client.Player.Class, 1747);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DoctorLi, client.Player.Class, 1748);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DoctorLi, client.Player.Class, 1749);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("What are you doing here? Don`t you ever mess around with me... I`m old, but not foolish...")
                               .AddOption("You~know~the~frantic~monkeys?", 1)
                               .AddOption("I`ll~leave~you~alone.", 255)
                               .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                            && client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            data.AddText("What are you doing here? Don`t you ever mess around with me... I`m old, but not foolish...")
                             .AddOption("What~shall~I~do~now?", 4)
                             .AddOption("I`ll~leave~you~alone.", 255)
                             .AddAvatar(67).FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                           && client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            data.AddText("What are you doing here? Don`t you ever mess around with me... I`m old, but not foolish...")
                             .AddOption("I`m~back.", 7)
                             .AddOption("I`ll~leave~you~alone.", 255)
                             .AddAvatar(67).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("What are you doing here? Don`t you ever mess around with me... I`m old, but not foolish...")
                          .AddOption("I`ll~leave~you~alone.", 255)
                          .AddAvatar(67).FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        data.AddText("What? Monkeys are attacking people! I`ve never heard that before!")
                             .AddOption("But~it`s~real.", 2)
                             .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        data.AddText("Are you sure it`s monkey`s heart? As far as I know, it`s posioned!")
                              .AddOption("Any~solution?", 3)
                              .AddAvatar(67).FinalizeDialog();


                        break;
                    }
                case 3:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "recovery");
                            client.SendSysMesage("You've completed the quest and received 100 Silver!", MsgMessage.ChatMode.System);
                        }
                        client.Inventory.Remove(721699, 1, stream);
                        if (client.Inventory.HaveSpace(1) == false)
                        {
                            data.AddText("Please make 1 more space in your inventory");
                            data.AddOption("Let me check.", 255).AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        if (!client.Inventory.Contain(721700, 1))
                            client.Inventory.Add(stream, 721700);
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.CreateBoxDialog("Doctor~Li~gave~you~a~bottle~of~poison.");

                        break;
                    }
                case 4:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 5))
                        {
                            data.AddText("You did go shockingly frantic! Well, your syndrome reminded me of the bites by Venomous Apes.")
                            .AddOption("I~see.", 7)
                            .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        data.AddText("Look at this poison...I need someone to test it...")
                            .AddText("~Will you do me this favor?")
                                .AddOption("Sure.", 5)
                                .AddOption("I~lost~the~posion.", 6)
                                .AddOption("Not~me...", 255)
                                .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 5:
                    {
                        if (client.Player.OnTransform == false)
                        {
                            client.Player.TransformInfo = new Role.ClientTransform(client.Player);
                            client.Player.TransformInfo.CreateTransform(stream, 817, 356, (int)60, 8213);
                        }
                        else
                        {
                            client.CreateBoxDialog("You~turned~yourself~into~a~gigantic~monkey.~You~can~take~the~poison~now.");
                        }

                        break;
                    }
                case 6:
                    {
                        if (!client.Inventory.Contain(721700, 1))
                        {
                            if (client.Inventory.HaveSpace(1) == false)
                            {
                                data.AddText("Please make 1 more space in your inventory");
                                data.AddOption("Let me check.", 255).AddAvatar(67).FinalizeDialog();
                                break;
                            }
                            client.Inventory.Add(stream, 721700);
                            client.CreateBoxDialog("You~turned~yourself~into~a~gigantic~monkey.~You~can~take~the~poison~now.");
                        }
                        else
                        {
                            data.AddText("Hey! You still have the poison!");
                            data.AddOption("Okay.", 255).AddAvatar(67).FinalizeDialog();
                        }

                        break;
                    }
                case 7:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "recovery");
                            client.SendSysMesage("You've completed the quest and received 100 Silver!", MsgMessage.ChatMode.System);
                        }
                        data.AddText("The Venomous Apes are harassing people in Love Canyon (795,471) on the outskirts of Ape City.")
                            .AddText("~Please take this Metamorphic Vial along. It`s made of a secret recipe. Use it when you arrive there.")
                           .AddOption("I`m~on~my~way.", 8)
                           .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 8:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        if (client.Inventory.HaveSpace(1) == false)
                        {
                            data.AddText("Please make 1 more space in your inventory");
                            data.AddOption("Let me check.", 255).AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        if (!client.Inventory.Contain(721701, 1))
                            client.Inventory.Add(stream, 721701);
                        data.AddText("Venomous Apes live in Love Canyon (795,471). People will turn frantic after being bitten by them. Search there for clues.")
                        .AddOption("I~will.", 9)
                        .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 9:
                    {
                        client.Player.QuestGUI.SendAutoPatcher(1020, 795, 471, 0);
                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.OfficerBao)]
        public static void OfficerBao(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaskmasterChang, client.Player.Class, 1745);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.OfficerBao, client.Player.Class, 1746);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.OfficerBao, client.Player.Class, 1747);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DoctorLi, client.Player.Class, 1749);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)NpcID.OfficerBao, client.Player.Class, 1750);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("I`m the Officer of Ape City. It is well situated... Both picturesque and thriving... People are working very hard...")
                               .AddText("~What a peaceful view... Or is it?...")
                               .AddOption("Taskmaster~Chang~sent~me~here.", 1)
                               .AddOption("You~really~did~a~good~job.", 255)
                               .AddAvatar(93).FinalizeDialog();
                            break;
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                            && client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            data.AddText("I`m the Officer of Ape City. It is well situated... Both picturesque and thriving... People are working very hard...")
                           .AddText("~What a peaceful view... Or is it?...")
                           .AddOption("About~the~Decayed~Heart.", 3)
                           .AddOption("You~really~did~a~good~job.", 255)
                           .AddAvatar(93).FinalizeDialog();

                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                         && client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            data.AddText("I`m the Officer of Ape City. It is well situated... Both picturesque and thriving... People are working very hard...")
                           .AddText("~What a peaceful view... Or is it?...")
                           .AddOption("How~to~deal~with~the~heart?", 4)
                           .AddOption("You~really~did~a~good~job.", 255)
                           .AddAvatar(93).FinalizeDialog();

                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("I`m the Officer of Ape City. It is well situated... Both picturesque and thriving... People are working very hard...")
                         .AddText("~What a peaceful view... Or is it?...")
                         .AddOption("I~found~this~sword.", 7)
                         .AddOption("You~really~did~a~good~job.", 255)
                         .AddAvatar(93).FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                       && client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            data.AddText("I`m the Officer of Ape City. It is well situated... Both picturesque and thriving... People are working very hard...")
                           .AddText("~What a peaceful view... Or is it?...")
                           .AddOption("Was~there~anything~else?", 8)
                           .AddOption("You~really~did~a~good~job.", 255)
                           .AddAvatar(93).FinalizeDialog();

                        }
                        else
                        {
                            data.AddText("I`m the Officer of Ape City. It is well situated... Both picturesque and thriving... People are working very hard...")
                         .AddText("~What a peaceful view... Or is it?...")
                         .AddOption("You~really~did~a~good~job.", 255)
                         .AddAvatar(93).FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        data.AddText("It`s weird that the monkeys outside the city strangely went frantic and began to attack villagers...")
                              .AddOption("Really?", 2)
                              .AddAvatar(93).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "recovery");
                            client.SendSysMesage("You've completed the quest and received 100 Silver!", MsgMessage.ChatMode.System);
                        }
                        data.AddText("Yes. You may have noticed those monkeys outside our city. They used to be benign, though sometimes a little bit naughty.")
                            .AddText("~But now they are attacking people... every one of them... Will you give me a hand and see what`s going on there?")
                           .AddOption("My~pleasure.", 3)
                           .AddAvatar(93).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 1))
                            {
                                data.AddText("Thank you for what you`ve done for the people!")
                      .AddOption("Never~mind.", 4)
                      .AddAvatar(93).FinalizeDialog();
                                break;
                            }
                            else
                            {
                                data.AddText("Only a genuine brave heart can conquer all. Please go and find out what`s driving the monkeys berserk. Quick!")
                       .AddOption("I`ll~be~right~back.", 255)
                       .AddAvatar(93).FinalizeDialog();
                            }
                            break;
                        }
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Nothing~ventured,~nothing~gained.~Go~find~reasons~why~the~monkeys~turned~frantic~so~suddenly.", 1020, 668, 673, 0);


                        break;
                    }
                case 4:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "recovery");
                            client.SendSysMesage("You've completed the quest and received 100 Silver!", MsgMessage.ChatMode.System);
                        }
                        data.AddText("Dear me! What a horrible heart! It`s decayed. I`ve never seen this kind of thing before. Will you go visit Royal Doctor Li")
                            .AddText("~in Twin City (296,243)? He`s an accomplished doctor. He must be of some help.")
                    .AddOption(" Good~idea.", 5)
                    .AddAvatar(93).FinalizeDialog();

                        break;
                    }
                case 5:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Hand~the~Decayed~Heart~to~Royal~Doctor~Li~in~Twin~City~(296,243).", ActiveQuest3.FinishNpcId.Map, ActiveQuest3.FinishNpcId.X, ActiveQuest3.FinishNpcId.Y, ActiveQuest3.FinishNpcId.ID);

                        break;
                    }
                case 7:
                    {
                        data.AddText("You got the Devilish Sword! I`m really impressed. This is your reward.")
                            .AddOption("Thank~you.", 8)
                            .AddAvatar(93).FinalizeDialog();

                        break;
                    }
                case 8:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                        {
                            client.Player.Money += 3000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.GainExpBall(300, true, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "recovery");
                            client.SendSysMesage("You've received EXP worth 1/2 EXP Ball and 3,000 Silver!", MsgMessage.ChatMode.System);
                        }
                        data.AddText("Thank you for restoring peace to our city. Now you can go claim your reward from Taskmaster Chang.")
                           .AddOption("I`m~on~the~way.", 9)
                           .AddAvatar(93).FinalizeDialog();

                        break;
                    }
                case 9:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest5, 0);
                        client.Player.QuestGUI.SendAutoPatcher("You`re~heading~to~see~Taskmaster~Chang.", ActiveQuest5.FinishNpcId.Map, ActiveQuest5.FinishNpcId.X, ActiveQuest5.FinishNpcId.Y, ActiveQuest5.FinishNpcId.ID);

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.GeneralAmber)]
        public static void GeneralAmber(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaskmasterChang, client.Player.Class, 1751);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.GeneralAmber, client.Player.Class, 1752);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.GeneralAmber, client.Player.Class, 1753);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.GeneralAmber, client.Player.Class, 1754);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)NpcID.GeneralAmber, client.Player.Class, 1755);
            var ActiveQuest6 = Database.QuestInfo.GetFinishQuest((uint)NpcID.GuardLi, client.Player.Class, 1756);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("You are too young to know of me. We weathered the greatest storm. We had our finest hour. Oh, yes, our grand alliance...")
                            .AddText("~When the hinges of fate came, we were closed in a ring of destruction... But a true fighter shall never be vanquished!")
                            .AddOption("Was~there~anything~else?", 20)
                            .AddOption("Marvellous!", 255)
                            .AddAvatar(91).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("You are too young to know of me. We weathered the greatest storm. We had our finest hour. Oh, yes, our grand alliance...")
                               .AddText("~When the hinges of fate came, we were closed in a ring of destruction... But a true fighter shall never be vanquished!")
                               .AddOption("Taskmaster~Chang~sent~me~here.", 1)
                               .AddOption("Marvellous!", 255)
                               .AddAvatar(91).FinalizeDialog();
                            break;
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                            && client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            data.AddText("You are too young to know of me. We weathered the greatest storm. We had our finest hour. Oh, yes, our grand alliance...")
                              .AddText("~When the hinges of fate came, we were closed in a ring of destruction... But a true fighter shall never be vanquished!")
                              .AddOption("Let~me~help~you.", 3)
                              .AddOption("Marvellous!", 255)
                              .AddAvatar(91).FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                            && client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            data.AddText("You are too young to know of me. We weathered the greatest storm. We had our finest hour. Oh, yes, our grand alliance...")
                            .AddText("~When the hinges of fate came, we were closed in a ring of destruction... But a true fighter shall never be vanquished!")
                            .AddOption("I~can~help~you.", 5)
                            .AddOption("Marvellous!", 255)
                            .AddAvatar(91).FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                          && client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            data.AddText("You are too young to know of me. We weathered the greatest storm. We had our finest hour. Oh, yes, our grand alliance...")
                            .AddText("~When the hinges of fate came, we were closed in a ring of destruction... But a true fighter shall never be vanquished!")
                            .AddOption("You~said~the~portrait?", 8)
                            .AddOption("Marvellous!", 255)
                            .AddAvatar(91).FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                        && client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            data.AddText("You are too young to know of me. We weathered the greatest storm. We had our finest hour. Oh, yes, our grand alliance...")
                            .AddText("~When the hinges of fate came, we were closed in a ring of destruction... But a true fighter shall never be vanquished!")
                            .AddOption("Here`s~the~portrait.", 10)
                            .AddOption("Marvellous!", 255)
                            .AddAvatar(91).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You are too young to know of me. We weathered the greatest storm. We had our finest hour. Oh, yes, our grand alliance...")
                         .AddText("~When the hinges of fate came, we were closed in a ring of destruction... But a true fighter shall never be vanquished!")
                         .AddOption("Marvellous!", 255)
                         .AddAvatar(91).FinalizeDialog();
                        }

                        break;
                    }
                case 20:
                    {
                        if (client.Inventory.HaveSpace(1) == false)
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                              .AddOption("Let me check.", 255)
                              .AddAvatar(91).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest6.MissionId, 1))
                        {
                            data.AddText("You`ve got the Paper Figure. Hurry to find General Zhao!")
                              .AddOption("I`m~on~my~way.", 255)
                              .AddAvatar(91).FinalizeDialog();
                            break;
                        }
                        data.AddText("Haha! Thank you for allowing me to control you like a pawn! I could not have taken my revenge without you. General Zhao")
                            .AddText("~is now captivated by my enchantment... He is now under my spell! My revenge is complete, all thanks to you!")
                            .AddOption("Stop~it!~Release~him!", 21)
                            .AddOption("Awful.", 255)
                            .AddAvatar(91).FinalizeDialog();

                        break;
                    }
                case 21:
                    {
                        ActionQuery action;

                        action = new ActionQuery()
                        {
                            ObjId = id,
                            Type = ActionType.RemoveEntity
                        };
                        client.Send(stream.ActionCreate(&action));
                        if (client.Player.View.ContainMobInScreen("JadePhantom") == false)
                            Database.Server.AddMapMonster(stream, client.Map, 33212, client.Player.X, client.Player.Y, 8, 8, 1, 0, true, MsgFloorItem.MsgItemPacket.EffectMonsters.Night);
                        client.CreateBoxDialog("General~Amber~vanished~into~thin~air.~A~vicious~Jade~Phantom~appeared...");

                        break;
                    }
                case 1:
                    {
                        data.AddText("My soul could not rest in peace. I still have some unfinished wishes. Oh, how they are torturing me...")
                            .AddText("~I do need your help.")
                            .AddOption("What~is~it?", 2)
                            .AddOption("Why~me?", 255)
                            .AddAvatar(91).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "recovery");
                            client.SendSysMesage("You've completed the quest and received 100 Silver!", MsgMessage.ChatMode.System);
                        }
                        data.AddText("Find General Zhao (262,247) in Twin City. We used to be best friends. But we had a big fight over some rift")
                         .AddText("~and swore never to meet again. But now... I miss him. Will you take a tuft of Hair of him for me as a token of peace?")
                         .AddOption("Okay.", 3)
                         .AddOption("I`ll~think~about~it.", 255)
                         .AddAvatar(91).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 1))
                            {
                                data.AddText("Oh, my, General Zhao`s Hair... This really reminds me of those days... when we were fighting side by side...")
                                    .AddText("~Will you help me complete my other wishes, too?")
                                  .AddOption("Not~right~now.", 5)
                                   .AddAvatar(91).FinalizeDialog();
                                break;
                            }
                            data.AddText("Pity! I can`t go visit General Zhao (262,247) myself. I do hope everything is fine with him. Will you please bring me")
                                .AddText("~a tuft of his Hair?")
                               .AddOption("Okay.", 255)
                                .AddAvatar(91).FinalizeDialog();
                            break;
                        }
                        data.AddText("My soul could not rest in peace. I still have some unfinished wishes. Oh, how they are torturing me...")
                    .AddText("~I do need your help.")
                     .AddOption("I`d~like~to.", 4)
                     .AddAvatar(91).FinalizeDialog();

                        break;
                    }
                case 5:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.Inventory.Remove(721703, 1, stream);
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "recovery");
                            client.SendSysMesage("You've completed the quest and received 100 Silver!", MsgMessage.ChatMode.System);
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("I need 1 Snake Man, 10 Rock Monsters (Level 42) and 10 Giant Apes (Level 53) Smells. Urr... Don`t ask me why. It`s like a")
             .AddText("~BIG surprise! But I will sure repay you handsomely... So, is it a deal?")
              .AddOption("I~need~a~Silk~Pack~for~this.", 7)
              .AddOption("You~crazy.", 255)
              .AddAvatar(91).FinalizeDialog();
                            break;
                        }
                        data.AddText("I need 1 Snake Man, 10 Rock Monsters (Level 42) and 10 Giant Apes (Level 53) Smells. Urr... Don`t ask me why. It`s like a")
                .AddText("~BIG surprise! But I will sure repay you handsomely... So, is it a deal?")
                 .AddOption("Deal.", 6)
                 .AddAvatar(91).FinalizeDialog();

                        break;
                    }
                case 7:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest3.MissionId, 1, 10, 10))
                        {
                            data.AddText("I didn`t expect you would return so soon. This is your reward. Please accept it.")
                               .AddOption("Okay.", 8)
                               .AddAvatar(91).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Hey you, one Silk Pack is enough.")
                                .AddOption("Got~it.", 255)
                                .AddAvatar(91).FinalizeDialog();

                        }

                        break;
                    }
                case 8:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                        {
                            client.Inventory.Remove(721704, 1, stream);
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "recovery");
                            client.SendSysMesage("You've completed the quest and received 100 Silver!", MsgMessage.ChatMode.System);
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest4.MissionId, 1))
                            {
                                //721705
                                data.AddText("Fantastic! So true to life! But he doesn`t look so well does he? General Zhao looks unhappy... Would you pay him a")
                                    .AddText("~visit for me? I am so worried...")
                                  .AddOption("Okay.", 10)
                                  .AddOption("Later.", 255)
                                  .AddAvatar(91).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Only the Painter Feng Kang (556,571) in Ape City can paint the best portrait. No more waste of time, please.")
                                   .AddOption("All~right.", 255)
                                   .AddAvatar(91).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("Ahhh, excellent. You have done well, and I commend you. But, if it`s not too much too ask, I still have one more wish. Will")
                            .AddText("~you find Painter Feng Kang (556,571) in Ape City and ask him to paint a portrait of General Zhao?")
                            .AddText("~I`d love to have such a painting...")
                               .AddOption("Well...~okay~then.", 9)
                               .AddOption("No~way.", 255)
                               .AddAvatar(91).FinalizeDialog();

                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                        {
                            client.Inventory.Remove(721705, 1, stream);
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "recovery");
                            client.SendSysMesage("You've completed the quest and received 100 Silver!", MsgMessage.ChatMode.System);
                            goto case 11;
                        }
                        else
                        {
                            data.AddText("Fantastic! So true to life! But he doesn`t look so well does he? General Zhao looks unhappy... Would you pay him a")
                                    .AddText("~visit for me? I am so worried...")
                                  .AddOption("Okay.", 11)
                                  .AddOption("Later.", 255)
                                  .AddAvatar(91).FinalizeDialog();
                        }

                        break;
                    }
                case 11:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest5, 0);
                        client.Player.QuestGUI.SendAutoPatcher("You~have~agreeed~to~pay~a~visit~to~General~Zhao~for~General~Amber.", 1002, 262, 247, 4488);

                        break;
                    }
                case 9:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Find~Painter~Feng~Kang~(556,571)~in~Ape~City~and~paint~a~full~length~Portrait.", 1020, 556, 571, 4489);

                        //Find~Painter~Feng~Kang~(556,571)~in~Ape~City~and~paint~a~full~length~Portrait.
                        break;
                    }
                case 6:
                    {
                        if (client.Inventory.HaveSpace(1) == false)
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                              .AddOption("Let me check.", 255)
                              .AddAvatar(91).FinalizeDialog();
                            break;
                        }
                        client.Inventory.Add(stream, 721704);
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        client.CreateBoxDialog("Kill 1 Snake Man, 10 Rock Monsters (Level 42) and 10 Giant Apes (Level 53).");


                        break;
                    }
                case 4:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Find~General~Zhao~(262,247)~in~Twin~City~and~take~back~a~tuft~of~his~hair~to~General~Amber.", 1002, 262, 247, 4488);

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.GuardLi)]
        public static void GuardLi(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.GeneralAmber, client.Player.Class, 1755);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.GuardLi, client.Player.Class, 1756);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("I will ward off any danger away from General Zhao.")
                               .AddOption("About~General~Zhao.", 1)
                               .AddOption("Good~for~you.", 255)
                               .AddAvatar(30).FinalizeDialog();
                            break;
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                  && client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            data.AddText("I will ward off any danger away from General Zhao.")
                       .AddOption("What`s~wrong~with~Zhao?", 1)
                       .AddOption("Good~for~you.", 255)
                       .AddAvatar(30).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("I will ward off any danger away from General Zhao.")
                               .AddOption("Good~for~you.", 255)
                               .AddAvatar(30).FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "recovery");
                            client.SendSysMesage("You've completed the quest and received 100 Silver!", MsgMessage.ChatMode.System);

                        }

                        data.AddText("Wake up! Don`t you realize now? The hair, the silk pack, and the portait...they are all for an enchantment! General Zhao has been")
                            .AddText("~bewitched! How could you take them for granted?! The man you helped is not real General Amber! You must return and kill that horrid phantom!")
                             .AddOption("I`ll~try~my~best.", 2)
                             .AddAvatar(30).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Go~back~to~kill~the~phantom!", 1020, 865, 540, 4487);

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.PainterFengKang)]
        public static void PainterFengKang(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.GeneralAmber, client.Player.Class, 1754);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Art is not only for art`s sake.")
                               .AddOption("I~came~for~a~portrait.", 1)
                               .AddOption("True.", 255)
                               .AddAvatar(74).FinalizeDialog();
                            break;
                        }
                        else
                        {
                            data.AddText("Art is not only for art`s sake.")
                               .AddOption("True.", 255)
                               .AddAvatar(74).FinalizeDialog();
                        }


                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(721705, 1))
                        {
                            data.AddText("Why not send the Portrait to General Amber right now? What`s been dragging you?")
                                     .AddOption("I`ll~hurry~up.", 255)
                                     .AddAvatar(74).FinalizeDialog();
                            break;
                        }
                        data.AddText("The revenant of General Amber has sent you here for a Portrait of General Zhao? Ok, I will try my best... But this sure")
                            .AddText("~does sound suspicious!")
                                  .AddOption("Thank~you.", 2)
                                  .AddAvatar(74).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        client.Inventory.Add(stream, 721705);
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1) == false)
                            client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 1);
                        client.Player.QuestGUI.SendAutoPatcher("You~obtain~a~Portrait.~Hurry~up~to~give~it~to~General~Amber!", ActiveQuest.FinishNpcId.Map, ActiveQuest.FinishNpcId.X, ActiveQuest.FinishNpcId.Y, ActiveQuest.FinishNpcId.ID);


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.KungfuMaster)]
        public static void KungfuMaster(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.GeneralAmber, client.Player.Class, 1752);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.GeneralAmber, client.Player.Class, 1755);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.GuardLi, client.Player.Class, 1756);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)NpcID.KungfuMaster, client.Player.Class, 1757);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Oh, yes. God, my head hurts. Ahhhh, my head!")
                               .AddOption("What`s~wrong~with~you?.", 15)
                               .AddOption("C`est~la~vie.", 255)
                               .AddAvatar(104).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Oh, yes. God, my head hurts. Ahhhh, my head!")
                               .AddOption("You~must~be~crazy.", 13)
                               .AddOption("C`est~la~vie.", 255)
                               .AddAvatar(104).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("I`m telling you! Don`t you ever put all your eggs in one basket. Life is so unpredictable..")
                               .AddOption("I~have~a~request.", 10)
                               .AddOption("C`est~la~vie.", 255)
                               .AddAvatar(104).FinalizeDialog();
                            break;
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                && client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            data.AddText("Oh, yes. God, my head hurts. Ahhhh, my head!")
                              .AddOption("Are~you~OK~now?.", 16)
                              .AddOption("C`est~la~vie.", 255)
                              .AddAvatar(104).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.IsActiveQuest(802))
                        {
                            data.AddText("I`m telling you! Don`t you ever put all your eggs in one basket. Life is so unpredictable..")
                                .AddOption("Tell~me~about~the~team~system.", 1)
                                .AddOption("See~you~then!", 255)
                                .AddAvatar(104).FinalizeDialog();
                        }
                        else if (!client.Player.QuestGUI.CheckQuest(807, MsgServer.MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("I`m telling you! Don`t you ever put all your eggs in one basket. Life is so unpredictable..")
                          .AddOption("Tell~me~about~the~team~system.", 2)
                          .AddOption("See~you~then!", 255)
                          .AddAvatar(104).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("I`m telling you! Don`t you ever put all your eggs in one basket. Life is so unpredictable..")
                                .AddOption("C`est~la~vie.", 255)
                                .AddAvatar(104).FinalizeDialog();
                        }

                        break;
                    }
                case 15:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest4.MissionId, 1))
                        {
                            data.AddText("What`s wrong with me? It seemed I`ve had a lot of nightmares these days... I see, it`s a spell... an enchantment... You")
                          .AddText("~have defeated Jade Phantom and it turned into a Paper Figure? I really appreciate your help. Thank you, and please take this.")
                              .AddOption("My~pleasure.", 16)
                              .AddOption("Hmm...", 255)
                              .AddAvatar(104).FinalizeDialog();
                        }
                        else
                        {
                            client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                            client.Player.QuestGUI.SendAutoPatcher("Go~back~to~kill~the~phantom!", 1020, 865, 540, 4487);
                        }

                        break;
                    }
                case 16:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                        {
                            client.Inventory.Remove(721706, 1, stream);
                            client.Player.Money += 4000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.GainExpBall(300, true, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "recovery");
                            client.SendSysMesage("You've received EXP worth 2/3 EXP Ball and 4,000 Silver!", MsgMessage.ChatMode.System);
                        }
                        data.AddText("Thank you, for saving my life! You can go claim your reward from Taskmaster Chang!")
                         .AddText("~have defeated Jade Phantom and it turned into a Paper Figure? I really appreciate your help. Thank you, and please take this.")
                             .AddOption("I~will", 17)
                             .AddAvatar(104).FinalizeDialog();

                        break;
                    }
                case 17:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest5, 0);
                        client.Player.QuestGUI.SendAutoPatcher("You`ve~completed~the~quest!~Hurry~to~claim~your~reward~from~Taskmaster~Chang!", ActiveQuest5.FinishNpcId.Map, ActiveQuest5.FinishNpcId.X, ActiveQuest5.FinishNpcId.Y, ActiveQuest5.FinishNpcId.ID);


                        break;
                    }
                case 13:
                    {
                        client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest3.MissionId, 1);
                        client.Player.QuestGUI.SendAutoPatcher("General~Zhao~is~delirious.~Maybe~Guard~Li~(261,243)~will~know~why.", ActiveQuest3.FinishNpcId.Map, ActiveQuest3.FinishNpcId.X, ActiveQuest3.FinishNpcId.Y, ActiveQuest3.FinishNpcId.ID);

                        break;
                    }
                case 10:
                    {
                        if (client.Inventory.Contain(721703, 1))
                        {
                            data.AddText("Didn`t I just give you my Hair?")
                               .AddOption("Oh,~yeah.", 255)
                               .AddAvatar(104).FinalizeDialog();
                            break;
                        }
                        data.AddText("Oh... General Amber missed me... I`m surprised... He always hated me so much. What would make him change his mind?")
                            .AddText("~Take this tuft of Hair back to him, as a token of trust.")
                                .AddOption("Thank~you.", 11)
                                .AddOption("Hmm...", 255)
                                .AddAvatar(104).FinalizeDialog();

                        break;
                    }
                case 11:
                    {
                        if (client.Inventory.HaveSpace(1) == false)
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                              .AddOption("Let me check.", 255)
                              .AddAvatar(104).FinalizeDialog();
                            break;
                        }
                        client.Inventory.Add(stream, 721703);
                        client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest2.MissionId, 1);
                        client.Player.QuestGUI.SendAutoPatcher("You~got~General~Zhao`s~Hair.", ActiveQuest2.FinishNpcId.Map, ActiveQuest2.FinishNpcId.X, ActiveQuest2.FinishNpcId.Y, ActiveQuest2.FinishNpcId.ID);


                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.FinishQuest(802))
                            client.GainExpBall(200);
                        data.AddText("I`m telling you! Don`t you ever put all your eggs in one basket. Life is so unpredictable..")
                                .AddOption("Tell~me~about~the~team~system.", 2)
                                .AddOption("See~you~then!", 255)
                                .AddAvatar(104).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        data.AddText("You can`t just venture out alone in this cruel world, the team system will help you to find some companions to help you! There are two methods to help you to find companions. The first one is to click team button to create a team by yourself and invite")
                            .AddText("~other people to join.")
                            .AddOption("What~about~the~other~one?", 3)
                            .AddAvatar(104).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        data.AddText("The second method is to click team button and click join to apply to join a team. You can join the team if there are less than 5 members in it, after the team leader agrees.")
                           .AddOption("What~are~the~benefits?", 4)
                           .AddAvatar(104).FinalizeDialog();

                        break;
                    }
                case 4:
                    {
                        data.AddText("You will receive bonus experience when slaying monsters in a team. If there is a new player in the team, the team leader will receive Virtue Points when that player levels up. Furthermore, some special quests require players to join as a team.")
                             .AddOption("Great!", 5)
                             .AddAvatar(104).FinalizeDialog();

                        break;
                    }
                case 5:
                    {
                        data.AddText("There are many things for you to learn in this world! Um, I guess you want to learn more, huh? Let me see. What about equipment and armors? That will be useful! Now speak with the Armor in Twin City, he will tell you something about the armors.")
                       .AddOption("Wonderful!", 6)
                       .AddOption("Other~things!", 255)
                       .AddAvatar(104).FinalizeDialog();

                        break;
                    }
                case 6:
                    {
                        var next_quest = Database.QuestInfo.GetFinishQuest((uint)id, client.Player.Class);
                        client.Player.QuestGUI.Accept(next_quest, 0);
                        client.Player.QuestGUI.SendAutoPatcher("General~Zhao~asked~you~to~speak~with~the~Armorer~in~Twin~City!", next_quest.FinishNpcId.Map, next_quest.FinishNpcId.X, next_quest.FinishNpcId.Y, next_quest.FinishNpcId.ID);

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.PurplePowder)]
        public static void PurplePowder(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.PharmacistDong, client.Player.Class, 1785);
            switch (Option)
            {

                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                data.AddText("Please make 1 more space in your inventory.")
                                    .AddOption("Let me check.", 255).FinalizeDialog();
                                break;
                            }
                            if (!client.Inventory.Contain(729989, 1))
                            {
                                client.Inventory.Add(stream, 729989);
                                client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 0, 0, 0, 0, 0, 0, 1);
                                if (client.Inventory.Contain(729983, 1) && client.Inventory.Contain(729984, 1) && client.Inventory.Contain(729985, 1)
                                    && client.Inventory.Contain(729986, 1) && client.Inventory.Contain(729987, 1) && client.Inventory.Contain(729988, 1)
                                    && client.Inventory.Contain(729989, 1))
                                {
                                    client.CreateBoxDialog("You`ve~collected~all~the~powers~needed.~Now~open~your~inventory~to~compose~them~into~the~Rainbow~Power.");
                                    break;
                                }
                                client.CreateBoxDialog("You`ve~collected~Indigo~Purple~from~this~purple~rock.");
                            }
                            else
                            {
                                data.AddText("The rock has an purple halo around it.").FinalizeDialog();
                            }
                            break;
                        }
                        else
                            data.AddText("The rock has an purple halo around it.").FinalizeDialog();

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.IndigoPowder)]
        public static void IndigoPowder(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.PharmacistDong, client.Player.Class, 1785);
            switch (Option)
            {

                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                data.AddText("Please make 1 more space in your inventory.")
                                    .AddOption("Let me check.", 255).FinalizeDialog();
                                break;
                            }
                            if (!client.Inventory.Contain(729988, 1))
                            {
                                client.Inventory.Add(stream, 729988);
                                client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 0, 0, 0, 0, 0, 1);
                                if (client.Inventory.Contain(729983, 1) && client.Inventory.Contain(729984, 1) && client.Inventory.Contain(729985, 1)
                                    && client.Inventory.Contain(729986, 1) && client.Inventory.Contain(729987, 1) && client.Inventory.Contain(729988, 1)
                                    && client.Inventory.Contain(729989, 1))
                                {
                                    client.CreateBoxDialog("You`ve~collected~all~the~powers~needed.~Now~open~your~inventory~to~compose~them~into~the~Rainbow~Power.");
                                    break;
                                }
                                client.CreateBoxDialog("You`ve~collected~Indigo~Powder~from~this~indigo~rock.");
                            }
                            else
                            {
                                data.AddText("The rock has an indigo halo around it.").FinalizeDialog();
                            }
                            break;
                        }
                        else
                            data.AddText("The rock has an indigo halo around it.").FinalizeDialog();

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.BluePowder)]
        public static void BluePowder(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.PharmacistDong, client.Player.Class, 1785);
            switch (Option)
            {

                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                data.AddText("Please make 1 more space in your inventory.")
                                    .AddOption("Let me check.", 255).FinalizeDialog();
                                break;
                            }
                            if (!client.Inventory.Contain(729987, 1))
                            {
                                client.Inventory.Add(stream, 729987);
                                client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 0, 0, 0, 0, 1);
                                if (client.Inventory.Contain(729983, 1) && client.Inventory.Contain(729984, 1) && client.Inventory.Contain(729985, 1)
                                    && client.Inventory.Contain(729986, 1) && client.Inventory.Contain(729987, 1) && client.Inventory.Contain(729988, 1)
                                    && client.Inventory.Contain(729989, 1))
                                {
                                    client.CreateBoxDialog("You`ve~collected~all~the~powers~needed.~Now~open~your~inventory~to~compose~them~into~the~Rainbow~Power.");
                                    break;
                                }
                                client.CreateBoxDialog("You`ve~collected~Blue~Powder~from~this~blue~rock.");
                            }
                            else
                            {
                                data.AddText("The rock has an blue halo around it.").FinalizeDialog();
                            }
                            break;
                        }
                        else
                            data.AddText("The rock has an blue halo around it.").FinalizeDialog();

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.GreenPowder)]
        public static void GreenPowder(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.PharmacistDong, client.Player.Class, 1785);
            switch (Option)
            {

                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                data.AddText("Please make 1 more space in your inventory.")
                                    .AddOption("Let me check.", 255).FinalizeDialog();
                                break;
                            }
                            if (!client.Inventory.Contain(729986, 1))
                            {
                                client.Inventory.Add(stream, 729986);
                                client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 0, 0, 0, 1);
                                if (client.Inventory.Contain(729983, 1) && client.Inventory.Contain(729984, 1) && client.Inventory.Contain(729985, 1)
                                    && client.Inventory.Contain(729986, 1) && client.Inventory.Contain(729987, 1) && client.Inventory.Contain(729988, 1)
                                    && client.Inventory.Contain(729989, 1))
                                {
                                    client.CreateBoxDialog("You`ve~collected~all~the~powers~needed.~Now~open~your~inventory~to~compose~them~into~the~Rainbow~Power.");
                                    break;
                                }
                                client.CreateBoxDialog("You`ve~collected~Green~Powder~from~this~green~rock.");
                            }
                            else
                            {
                                data.AddText("The rock has an yellow halo around it.").FinalizeDialog();
                            }
                            break;
                        }
                        else
                            data.AddText("The rock has an green halo around it.").FinalizeDialog();

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.YellowPowder)]
        public static void YellowPowder(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.PharmacistDong, client.Player.Class, 1785);
            switch (Option)
            {

                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                data.AddText("Please make 1 more space in your inventory.")
                                    .AddOption("Let me check.", 255).FinalizeDialog();
                                break;
                            }
                            if (!client.Inventory.Contain(729985, 1))
                            {
                                client.Inventory.Add(stream, 729985);
                                client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 0, 0, 1);
                                if (client.Inventory.Contain(729983, 1) && client.Inventory.Contain(729984, 1) && client.Inventory.Contain(729985, 1)
                                    && client.Inventory.Contain(729986, 1) && client.Inventory.Contain(729987, 1) && client.Inventory.Contain(729988, 1)
                                    && client.Inventory.Contain(729989, 1))
                                {
                                    client.CreateBoxDialog("You`ve~collected~all~the~powers~needed.~Now~open~your~inventory~to~compose~them~into~the~Rainbow~Power.");
                                    break;
                                }
                                client.CreateBoxDialog("You`ve~collected~Yellow~Powder~from~this~yellow~rock.");
                            }
                            else
                            {
                                data.AddText("The rock has an yellow halo around it.").FinalizeDialog();
                            }
                            break;
                        }
                        else
                            data.AddText("The rock has an red yellow around it.").FinalizeDialog();

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.OrangePowder)]
        public static void OrangePowder(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.PharmacistDong, client.Player.Class, 1785);
            switch (Option)
            {

                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                data.AddText("Please make 1 more space in your inventory.")
                                    .AddOption("Let me check.", 255).FinalizeDialog();
                                break;
                            }
                            if (!client.Inventory.Contain(729984, 1))
                            {
                                client.Inventory.Add(stream, 729984);
                                client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 0, 1);
                                if (client.Inventory.Contain(729983, 1) && client.Inventory.Contain(729984, 1) && client.Inventory.Contain(729985, 1)
                                    && client.Inventory.Contain(729986, 1) && client.Inventory.Contain(729987, 1) && client.Inventory.Contain(729988, 1)
                                    && client.Inventory.Contain(729989, 1))
                                {
                                    client.CreateBoxDialog("You`ve~collected~all~the~powers~needed.~Now~open~your~inventory~to~compose~them~into~the~Rainbow~Power.");
                                    break;
                                }
                                client.CreateBoxDialog("You`ve~collected~Orange~Powder~from~this~orange~rock.");
                            }
                            else
                            {
                                data.AddText("The rock has an orange halo around it.").FinalizeDialog();
                            }
                            break;
                        }
                        else
                            data.AddText("The rock has an red orange around it.").FinalizeDialog();

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.PharmacistDong)]
        public static void PharmacistDong(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.GeneralJudd, client.Player.Class, 1784);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.PharmacistDong, client.Player.Class, 1785);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("I need someone to kill those monsters. They must pay for their sins.")
                               .AddOption("Snake~Men!", 1)
                               .AddOption("Not~me.", 255)
                               .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                && client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            data.AddText("I need someone to kill those monsters. They must pay for their sins.")
                                .AddOption("About~the~Rainbow~Powder.", 2)
                                .AddOption("Not~interested.", 255)
                                .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        else
                        {
                            data.AddText("I need someone to kill those monsters. They must pay for their sins.")
                                .AddOption("Not~interested.", 255)
                                .AddAvatar(67).FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        data.AddText("Snake Men? Yes, I`ve heard of it. People get lunatic after being bitten by them. It may have been because of their")
                            .AddText("~Venomous Fang. But a true doctor never makes wild guesses. Wait a moment. Let me extract the toxin from the")
                            .AddText("~fang and see what that is.")
                              .AddOption("Good.~A~real~diagnosis.", 2)
                              .AddOption("About~these~Snake~Men...", 255)
                              .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "recovery");
                            client.SendSysMesage("You've completed the quest and received 100 Silver!", MsgMessage.ChatMode.System);

                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (!client.Inventory.HaveSpace(3))
                            {
                                data.AddText("Please make 3 more spaces in your inventory.")
                                    .AddOption("Let me chieck.", 255)
                                    .AddAvatar(67).FinalizeDialog();
                                break;
                            }
                            if (!client.Inventory.Contain(729979, 1))
                                client.Inventory.Add(stream, 729979);
                            if (!client.Inventory.Contain(729980, 1))
                                client.Inventory.Add(stream, 729980);
                            if (!client.Inventory.Contain(729981, 1))
                                client.Inventory.Add(stream, 729981);

                            data.AddText("Herbs have a variety of uses, including culinary, medicinal, or in some cases even spiritual meditation.")
                              .AddText("~Nobody can truly master them, even after years of cultivation. Nature`s secrets are even more obscure than I could possibly imagine.")
                                .AddOption("You~bet.", 255)
                                .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        data.AddText("Now we need Rainbow Powder to relieve Du San`s syndrome. It`s made of powder of seven different colors.")
                            .AddText("~I believe these can be found in this Kun Lun place... I`ll give you 3 toxins, and you can use them to reach Kun Lun.")
                            .AddText("~So, what`s your opinion?")
                              .AddOption("I`ll~do~it!", 3)
                              .AddOption("It`s~dangerous.", 255)
                              .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        if (!client.Inventory.HaveSpace(3))
                        {
                            data.AddText("Please make 3 more spaces in your inventory.")
                                .AddOption("Let me chieck.", 255)
                                .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        data.AddText("No more delays. Take the toxins now. Pick up two of them and right click to use. If your choice is right, you will arrive in Kun Lun and")
                               .AddText("~find those rock powders... They must be some type of sedimentary rock... Go collect the powders and be careful!")
                                 .AddOption("Alright.", 255)
                                 .AddAvatar(67).FinalizeDialog();

                        client.Inventory.Add(stream, 729979);
                        client.Inventory.Add(stream, 729980);
                        client.Inventory.Add(stream, 729981);
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.CreateBoxDialog("Pharmacist~Dong~gave~you~3~toxins.");

                        //Pharmacist~Dong~gave~you~3~toxins.
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.RedPowder)]
        public static void RedPowder(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.PharmacistDong, client.Player.Class, 1785);
            switch (Option)
            {

                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                data.AddText("Please make 1 more space in your inventory.")
                                    .AddOption("Let me check.", 255).FinalizeDialog();
                                break;
                            }
                            if (!client.Inventory.Contain(729983, 1))
                            {
                                client.Inventory.Add(stream, 729983);
                                client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 1);
                                if (client.Inventory.Contain(729983, 1) && client.Inventory.Contain(729984, 1) && client.Inventory.Contain(729985, 1)
                                    && client.Inventory.Contain(729986, 1) && client.Inventory.Contain(729987, 1) && client.Inventory.Contain(729988, 1)
                                    && client.Inventory.Contain(729989, 1))
                                {
                                    client.CreateBoxDialog("You`ve~collected~all~the~powers~needed.~Now~open~your~inventory~to~compose~them~into~the~Rainbow~Power.");
                                    break;
                                }

                                client.CreateBoxDialog("You`ve~collected~Red~Powder~from~this~red~rock.");
                            }
                            else
                            {
                                data.AddText("The rock has an red halo around it.").FinalizeDialog();
                            }
                            break;
                        }
                        else
                            data.AddText("The rock has an red halo around it.").FinalizeDialog();

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.GeneralJudd)]
        public static void GeneralJudd(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.DuSan, client.Player.Class, 1782);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.GeneralJudd, client.Player.Class, 1783);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.GeneralJudd, client.Player.Class, 1784);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.GeneralJudd, client.Player.Class, 710);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Don`t forget your country and people when you have established your name. This is what a responsible person should do. Your")
                                .AddText("~country needs you.")
                               .AddOption("I~have~no~time~to~play.", 2)
                               .AddOption("Brilliant.", 255)
                               .AddAvatar(95).FinalizeDialog();
                            break;
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                && client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            data.AddText("Don`t forget your country and people when you have established your name. This is what a responsible person should do. Your")
                              .AddText("~country needs you.")
                             .AddOption("News~about~Du~San.", 2)
                             .AddOption("Brilliant.", 255)
                             .AddAvatar(95).FinalizeDialog();
                            break;
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
             && client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            data.AddText("Don`t forget your country and people when you have established your name. This is what a responsible person should do. Your")
                              .AddText("~country needs you.")
                             .AddOption("I`ve~got~the~fang.", 4)
                             .AddOption("Brilliant.", 255)
                             .AddAvatar(95).FinalizeDialog();
                            break;
                        }
                        else
                        {
                            data.AddText("Don`t forget your country and people when you have established your name. This is what a responsible person should do. Your")
                             .AddText("~country needs you.");
                            if (client.Player.Level >= 70 && !client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                                data.AddOption("How~to~devote~myself?", 20);
                            data.AddOption("Brilliant.", 255)
                            .AddAvatar(95).FinalizeDialog();
                        }

                        break;
                    }
                case 20:
                    {
                        data.AddText("The Emperor keeps track of all those who make donations to his empire. When you have reached level 70, you are able to donate");
                        data.AddText("~money to the Emperor for your nobility rank, which can increase your battle power. Your title is determined by the amount of");
                        data.AddText("~money you have donated.");
                        data.AddOption("How~to~donate~money?", 21);
                        data.AddAvatar(95);
                        data.FinalizeDialog();
                        break;
                    }
                case 21:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        data.AddText("Click the Nobility Button, input the amount of money you want to donate in the box, and confirm your donation. If you don`t");
                        data.AddText("~have enough silver, you can exchange your CPs for silver to use.");
                        data.AddOption("I~see.", 22);
                        data.AddAvatar(95);
                        data.FinalizeDialog();
                        break;
                    }
                case 22:
                    {
                        data.AddText("Here is a question for you. How much Battle Power can be added to King/ Queen ranked players?");
                        data.AddInput("(Answer:~12)", 23);
                        data.AddAvatar(95);
                        data.FinalizeDialog();
                        break;
                    }
                case 23:
                    {
                        if (Input == "12")
                        {
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                            {
                                client.CreateBoxDialog("You`ve~learned~something~about~the~Nobility~Rankings~and~received~EXP~worth~1/6~of~an~EXP~Ball!");
                                client.GainExpBall(100);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "angelwing");
                            }
                        }
                        else
                        {
                            client.CreateBoxDialog("Sorry,~but~you`ve~given~the~incorrect~answer.");
                        }
                        break;
                    }
                case 1:
                    {
                        data.AddText("You mean you saw a potpourri bag just like this before? It must be my nephew, Du San. That poor child. He lost his parents")
                              .AddText("~when he was young, so I raised him up. But when he was in his twenties, he suddenly lost his mind...")
                              .AddText("~I guess I just couldn`t be there for him all the time...")
                             .AddOption("What~happened?", 2)
                             .AddAvatar(95).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "recovery");
                            client.SendSysMesage("You've completed the quest and received 100 Silver!", MsgMessage.ChatMode.System);

                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 1))
                            {
                                data.AddText("Really? You`ve got some clues?")
                                .AddOption("Look~at~this~Venomous~Fang.", 4)
                                .AddAvatar(95).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("I need some one to kill those Snake Men. They must pay for their sins.")
                                 .AddOption("I`m~in.", 255)
                                 .AddAvatar(95).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("He was in Ape City, learning Kungfu. Then our servants reported that he was missing. Several days later,")
                               .AddText("~someone caught him on the street of Ape City, totally unkempt, babbling strange words... They found snake bites all")
                               .AddText("~over his body... Snake Men got to him. Damn those snake vermin! But nobody has made them pay for it.")
                              .AddOption("I`ll~avenge~him.", 3)
                              .AddOption("I`ll~think~about~it.", 255)
                              .AddAvatar(95).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Snake~Men~are~in~the~west~of~Ape~City.~Kill~some~of~them~and~find~out~why~Du~San~went~lunatic.", 1020, 255, 504, 0);

                        break;
                    }
                case 4:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "recovery");
                            client.SendSysMesage("You've completed the quest and received 100 Silver!", MsgMessage.ChatMode.System);

                        }
                        data.AddText("Really! It`s about time! It must be those snake bites that made Du San go crazy! Please send this Venomous Fang to")
                            .AddText("~Pharmacist Dong (258,277) for diagnosis. We`ll find out for sure, then take revenge!")
                               .AddOption("Got~it.", 5)
                               .AddAvatar(95).FinalizeDialog();

                        break;
                    }
                case 5:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Speack~with~Pharmacist~Dong~(258,277)~for~diagnosis.", ActiveQuest3.FinishNpcId.Map, ActiveQuest3.FinishNpcId.X, ActiveQuest3.FinishNpcId.Y, ActiveQuest3.FinishNpcId.ID);

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.DuSan)]
        public static void DuSan(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TaskmasterChang, client.Player.Class, 1781);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DuSan, client.Player.Class, 1782);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.PharmacistDong, client.Player.Class, 1785);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DuSan, client.Player.Class, 1786);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("I will pass that exam! For the students, passing this exam means a guaranteed position and great credit to their family.")
                             .AddOption("I~have~no~time~to~play.", 10)
                             .AddOption("What~are~you~talking~about?", 255)
                             .AddAvatar(77).FinalizeDialog();
                            break;
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
               && client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            data.AddText("I will pass that exam! For the students, passing this exam means a guaranteed position and great credit to their family.")
                              .AddOption("I~have~no~time~to~play.", 13)
                              .AddOption("What~are~you~talking~about?", 255)
                              .AddAvatar(77).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("I will pass that exam! For the students, passing this exam means a guaranteed position and great credit to their family.")
                               .AddOption("I~have~no~time~to~play.", 1)
                               .AddOption("What~are~you~talking~about?", 255)
                               .AddAvatar(77).FinalizeDialog();
                            break;
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                && client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            data.AddText("I will pass that exam! For the students, passing this exam means a guaranteed position and great credit to their family.")
                               .AddOption("I~have~no~time~to~play.", 1)
                               .AddOption("What~are~you~talking~about?", 255)
                               .AddAvatar(77).FinalizeDialog();
                            break;
                        }
                        else
                        {
                            data.AddText("I will pass that exam! For the students, passing this exam means a guaranteed position and great credit to their family.")
                             .AddOption("What~are~you~talking~about?", 255)
                             .AddAvatar(77).FinalizeDialog();
                        }

                        break;
                    }
                case 10:
                    {
                        data.AddText("History has forgotten those glorious celestials... So aloof and dreamy...")
                             .AddText("~Oh, Kun Lun, the Land of the Immortality... Why do I only have this potpourri to remember you by?")
                             .AddOption("Let~me~help~you.", 11)
                            .AddOption("Brilliant.", 255)
                            .AddAvatar(95).FinalizeDialog();

                        break;
                    }
                case 11:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest4.MissionId, 0, 0, 0, 0, 0, 0, 0, 1))
                        {
                            data.AddText("Snakes! Help!")
                          .AddOption("Take~this~Rainbow~Powder.", 13)
                         .AddAvatar(95).FinalizeDialog();

                            break;
                        }
                        data.AddText("What`d happened to me?")
                           .AddOption("~I forget everthing...", 12)
                          .AddOption("The~nightmare~is~over.", 255)
                          .AddAvatar(95).FinalizeDialog();


                        break;
                    }
                case 12:
                    {
                        client.CreateBoxDialog("You took the Red Toxin and Blue Toxin in turn, and felt very dizzy.");

                        break;
                    }
                case 13:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                        {
                            client.Inventory.Remove(729982, 1, stream);
                            client.Player.Money += 5000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.GainExpBall(500, true, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "recovery");
                            client.SendSysMesage("You`ve~received~EXP~worth~5/6~EXP~Ball~and~5,000~Silver!~Claim~your~reward~from~Taskmaster~Chang!!", MsgMessage.ChatMode.System);
                        }
                        data.AddText("Yes! Thank you! My uncle has given your reward to Taskmaster Chang. Go claim it there!")
                                .AddOption("OK.~Thank~you.", 14)
                                .AddOption("I`ll~go~later.", 255)
                                .AddAvatar(77).FinalizeDialog();

                        break;
                    }
                case 14:
                    {
                        data.AddText("Where am I? I remembered I was in Kun Lun... then I was in a dismal abyss... Oh, my head...")
                            .AddText("~Oh, it was you! You saved me! Thank you! I thought I`d never escape the darkness.... Please, take this...")
                             .AddOption("Welcome.", 255)
                             .AddAvatar(77).FinalizeDialog();

                        client.Player.QuestGUI.Accept(ActiveQuest5, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Go~claim~your~reward~from~Taskmaster~Chang!", ActiveQuest5.FinishNpcId.Map, ActiveQuest5.FinishNpcId.X, ActiveQuest5.FinishNpcId.Y, ActiveQuest5.FinishNpcId.ID);

                        break;
                    }
                case 1:
                    {
                        data.AddText("History has forgotten those glorious celestials... So aloof and dreamy...")
                            .AddText("~Oh, Kun Lun, the Land of the Immortality... Why do I only have this potpourri to remember you by?")
                                 .AddOption("Taskmaster~Chang~sent~me~here.", 2)
                                 .AddOption("Bye.", 255)
                                 .AddAvatar(77).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.Money += 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "recovery");
                            client.SendSysMesage("You've completed the quest and received 100 Silver!", MsgMessage.ChatMode.System);

                        }
                        data.AddText("For what? The story of Kun Lun?")
                                   .AddText("~I don`t remember anything except the potpourri bag...")
                                        .AddOption("How~did~you~get~it?", 3)
                                        .AddAvatar(77).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        data.AddText(" Oh, this? Well, it was given by a celestial when I visited Kun Lun. Isn`t it elegant?")
                                         .AddOption("Sounds~interesting.", 4)
                                         .AddAvatar(77).FinalizeDialog();

                        break;
                    }
                case 4:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.Player.QuestGUI.SendAutoPatcher("The~potpourri~bag~looks~similar~to~General~Judd`s~(397,235)~in~Twin~City.~Visit~him~to~investigate.", ActiveQuest2.FinishNpcId.Map, ActiveQuest2.FinishNpcId.X, ActiveQuest2.FinishNpcId.Y, ActiveQuest2.FinishNpcId.ID);

                        break;
                    }
            }
        }

        public static string GetStrTask(Client.GameClient user, Database.QuestInfo.DBQuest dbquest)
        {
            if (user.Player.Level < dbquest.Lv_min)
                return "Level~" + dbquest.Lv_min + "";
            if (user.Player.QuestGUI.CheckQuest(dbquest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                return "Underway";
            if (user.Player.QuestGUI.CheckQuest(dbquest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                return "Complete";
            if (user.Player.Level > dbquest.Lv_min)
                return "Acceptable";
            return "Level~" + dbquest.Lv_min;
        }
        [NpcAttribute(NpcID.MysterCheast1)]
        public static void MysterCheast1(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.DailyQuestEnvoy, client.Player.Class, 6390);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.DailyHeavenChance == 0)
                        {
                            data.AddText("Are you ready to harvest fortune from the Mystery Chest? Waste no time, and go for it!")
                               .AddText("After opening the chest, you`ll receive 60 minutes of EXP, 10 Study Points, 1 Chi Token and 1 Heaven Key Scrap. If you`re a Jiang Hu fighter, you`ll also get 1 Talent point.");
                            data.AddOption("Open~the~chest.", 1).AddOption("Wait,~I`m~not~ready~yet!", 255).FinalizeDialog();
                        }
                        else if (client.Player.DailyHeavenChance > 0)
                        {
                            data.AddText("Are you ready to embrace wealth coming from the Mystery Chests? Waste no time, and go for it!");
                            data.AddOption("Open~the~chest.", 2).AddOption("Wait,~I`m~not~ready~yet!", 255).FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory");
                            data.AddOption("Let me check.", 255).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.DailyHeavenChance += 1;
                            client.GainExpBall(600, true, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.SubClass.AddStudyPoints(client, 10, stream);
                            client.Inventory.AddItemWitchStack(729304, 0, 1, stream);
                            client.Inventory.AddItemWitchStack(3002307, 0, 1, stream);
                            client.CreateBoxDialog("You~received~60~minutes~of~EXP,~10~Study~Points,~1~Chi~Token,~1~Heaven~Key~Scrap,~and~1~Talent~point!");
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "eidolon");
                        }

                        break;
                    }

                case 2:
                    {
                        if (client.Player.DailyHeavenChance == 1)
                        {
                            data.AddText("Well, it`s the 2nd time you want to open a Mystery Chest. You need to pay " + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + " CPs or use the Heaven Key to open the chest.")
                                .AddText("You`ll receive 60 minutes of EXP and 30 Chi Points from the chest. If you`re a Jiang Hu fighter, you`ll also receive 1 Free Course and 1 Talent point.");
                            data.AddOption("Open~the~chest~with~" + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + "~CPs.", 3).AddOption("Use~the~Heaven~Key.", 5).FinalizeDialog();
                        }
                        else if (client.Player.DailyHeavenChance == 2)
                        {
                            data.AddText("Well, it`s the 3nd time you want to open a Mystery Chest. You need to pay " + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + " CPs or use the Heaven Key to open the chest.")
                                .AddText("You`ll receive 60 minutes of EXP, 100 Study Points and 60 Chi Points from the chest. If you`re a Jiang Hu fighter, you`ll also receive 1 Free Course and 1 Talent point.");
                            data.AddOption("Open~the~chest~with~" + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + "~CPs.", 3).AddOption("Use~the~Heaven~Key.", 5).FinalizeDialog();
                        }
                        else if (client.Player.DailyHeavenChance == 3)
                        {
                            data.AddText("Well, it`s the 3nd time you want to open a Mystery Chest. You need to pay " + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + " CPs or use the Heaven Key to open the chest.")
                                .AddText("You`ll receive 60 minutes of EXP, 150 Study Points and 100 Chi Points from the chest. If you`re a Jiang Hu fighter, you`ll also receive 1 Talent point, 1 Super Protection Pill and 1 Free Course.");
                            data.AddOption("Open~the~chest~with~" + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + "~CPs.", 3).AddOption("Use~the~Heaven~Key.", 5).FinalizeDialog();
                        }
                        else if (client.Player.DailyHeavenChance == 4)
                        {
                            data.AddText("Well, it`s the 3nd time you want to open a Mystery Chest. You need to pay " + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + " CPs or use the Heaven Key to open the chest.")
                                .AddText("You`ll receive 60 minutes of EXP, 200 Study Points and 150 Chi Points from the chest. If you`re a Jiang Hu fighter, you`ll also receive 1 Talent point, 5 Protection Pills, 4 Super Protection Pills and 2 Free Courses.");
                            data.AddOption("Open~the~chest~with~" + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + "~CPs.", 3).AddOption("Use~the~Heaven~Key.", 5).FinalizeDialog();
                        }

                        break;
                    }
                case 3:
                    {
                        data.AddText("Are you sure you want to pay " + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + " CPs to open the Mystery Chest?");
                        data.AddOption("Yes.", 4).AddOption("No.", 255).FinalizeDialog();

                        break;
                    }
                case 5:
                    {
                        if (client.Inventory.Contain(3002308, 1))
                        {
                            client.Inventory.Remove(3002308, 1, stream);
                            client.GainExpBall(600, true, Role.Flags.ExperienceEffect.angelwing);

                            switch (client.Player.DailyHeavenChance)
                            {
                                case 1:
                                    {
                                        client.Player.MyChi.ChiPoints += 30;
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 30 Chi Points,~and~1 Talent point and 1 Free Course!");

                                        break;
                                    }
                                case 2:
                                    {

                                        client.Player.MyChi.ChiPoints += 60;
                                        client.Player.SubClass.AddStudyPoints(client, 100, stream);
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 100 Study Points and 60 Chi Points,~and~1 Talent point and 1 Free Course!");

                                        break;
                                    }
                                case 3:
                                    {
                                        client.Player.MyChi.ChiPoints += 100;
                                        client.Player.SubClass.AddStudyPoints(client, 150, stream);
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 150 Study Points and 100 Chi Points,~and~1 Talent point, 1 Super Protection Pill and 1 Free Cours!");

                                        break;
                                    }
                                case 4:
                                    {
                                        client.Player.MyChi.ChiPoints += 150;
                                        client.Player.SubClass.AddStudyPoints(client, 200, stream);
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 200 Study Points and 150 Chi Points,~and~1 Talent point, 5 Protection Pills, 4 Super Protection Pills and 2 Free Courses");

                                        break;
                                    }
                            }
                            client.Player.DailyHeavenChance += 1;
                            if (client.Player.DailyHeavenChance == 5)
                            {
                                client.Teleport(256, 238, 1002);
                            }
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "eidolon");
                        }
                        else
                        {
                            data.AddText("You don`t have a Heaven Key to open the Mystery Chest.");
                            data.AddOption("I~see.", 255).FinalizeDialog();

                        }
                        break;
                    }
                case 4:
                    {
                        uint cps = DailiHeavenCpsCost(client.Player.DailyHeavenChance);
                        if (client.Player.ConquerPoints >= cps)
                        {
                            client.Player.ConquerPoints -= cps;

                            client.GainExpBall(600, true, Role.Flags.ExperienceEffect.angelwing);
                            switch (client.Player.DailyHeavenChance)
                            {
                                case 1:
                                    {
                                        client.Player.MyChi.ChiPoints += 30;
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 30 Chi Points,~and~1 Talent point and 1 Free Course!");

                                        break;
                                    }
                                case 2:
                                    {
                                        client.Player.MyChi.ChiPoints += 60;
                                        client.Player.SubClass.AddStudyPoints(client, 100, stream);
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 100 Study Points and 60 Chi Points,~and~1 Talent point and 1 Free Course!");

                                        break;
                                    }
                                case 3:
                                    {
                                        client.Player.MyChi.ChiPoints += 100;
                                        client.Player.SubClass.AddStudyPoints(client, 150, stream);
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 150 Study Points and 100 Chi Points,~and~1 Talent point, 1 Super Protection Pill and 1 Free Cours!");

                                        break;
                                    }
                                case 4:
                                    {
                                        client.Player.MyChi.ChiPoints += 150;
                                        client.Player.SubClass.AddStudyPoints(client, 200, stream);
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 200 Study Points and 150 Chi Points,~and~1 Talent point, 5 Protection Pills, 4 Super Protection Pills and 2 Free Courses");

                                        break;
                                    }
                            }
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "eidolon");
                            client.Player.DailyHeavenChance += 1;
                            if (client.Player.DailyHeavenChance == 5)
                            {
                                client.Teleport(256, 238, 1002);
                            }

                        }
                        else
                        {
                            data.AddText("You don`t have enough CPs to open the Mystery Chest. Make sure you bring enough money, next time!");
                            data.AddOption("Alright.", 255).FinalizeDialog();

                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.MysterCheast2)]
        public static void MysterCheast2(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.DailyQuestEnvoy, client.Player.Class, 6390);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.DailyHeavenChance == 0)
                        {
                            data.AddText("Are you ready to harvest fortune from the Mystery Chest? Waste no time, and go for it!")
                               .AddText("After opening the chest, you`ll receive 60 minutes of EXP, 10 Study Points, 1 Chi Token and 1 Heaven Key Scrap. If you`re a Jiang Hu fighter, you`ll also get 1 Talent point.");
                            data.AddOption("Open~the~chest.", 1).AddOption("Wait,~I`m~not~ready~yet!", 255).FinalizeDialog();
                        }
                        else if (client.Player.DailyHeavenChance > 0)
                        {
                            data.AddText("Are you ready to embrace wealth coming from the Mystery Chests? Waste no time, and go for it!");
                            data.AddOption("Open~the~chest.", 2).AddOption("Wait,~I`m~not~ready~yet!", 255).FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory");
                            data.AddOption("Let me check.", 255).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.DailyHeavenChance += 1;
                            client.GainExpBall(600, true, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.SubClass.AddStudyPoints(client, 10, stream);
                            client.Inventory.AddItemWitchStack(729304, 0, 1, stream);
                            client.Inventory.AddItemWitchStack(3002307, 0, 1, stream);
                            client.CreateBoxDialog("You~received~60~minutes~of~EXP,~10~Study~Points,~1~Chi~Token,~1~Heaven~Key~Scrap,~and~1~Talent~point!");
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "eidolon");
                        }

                        break;
                    }

                case 2:
                    {
                        if (client.Player.DailyHeavenChance == 1)
                        {
                            data.AddText("Well, it`s the 2nd time you want to open a Mystery Chest. You need to pay " + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + " CPs or use the Heaven Key to open the chest.")
                                .AddText("You`ll receive 60 minutes of EXP and 30 Chi Points from the chest. If you`re a Jiang Hu fighter, you`ll also receive 1 Free Course and 1 Talent point.");
                            data.AddOption("Open~the~chest~with~" + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + "~CPs.", 3).AddOption("Use~the~Heaven~Key.", 5).FinalizeDialog();
                        }
                        else if (client.Player.DailyHeavenChance == 2)
                        {
                            data.AddText("Well, it`s the 3nd time you want to open a Mystery Chest. You need to pay " + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + " CPs or use the Heaven Key to open the chest.")
                                .AddText("You`ll receive 60 minutes of EXP, 100 Study Points and 60 Chi Points from the chest. If you`re a Jiang Hu fighter, you`ll also receive 1 Free Course and 1 Talent point.");
                            data.AddOption("Open~the~chest~with~" + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + "~CPs.", 3).AddOption("Use~the~Heaven~Key.", 5).FinalizeDialog();
                        }
                        else if (client.Player.DailyHeavenChance == 3)
                        {
                            data.AddText("Well, it`s the 3nd time you want to open a Mystery Chest. You need to pay " + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + " CPs or use the Heaven Key to open the chest.")
                                .AddText("You`ll receive 60 minutes of EXP, 150 Study Points and 100 Chi Points from the chest. If you`re a Jiang Hu fighter, you`ll also receive 1 Talent point, 1 Super Protection Pill and 1 Free Course.");
                            data.AddOption("Open~the~chest~with~" + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + "~CPs.", 3).AddOption("Use~the~Heaven~Key.", 5).FinalizeDialog();
                        }
                        else if (client.Player.DailyHeavenChance == 4)
                        {
                            data.AddText("Well, it`s the 3nd time you want to open a Mystery Chest. You need to pay " + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + " CPs or use the Heaven Key to open the chest.")
                                .AddText("You`ll receive 60 minutes of EXP, 200 Study Points and 150 Chi Points from the chest. If you`re a Jiang Hu fighter, you`ll also receive 1 Talent point, 5 Protection Pills, 4 Super Protection Pills and 2 Free Courses.");
                            data.AddOption("Open~the~chest~with~" + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + "~CPs.", 3).AddOption("Use~the~Heaven~Key.", 5).FinalizeDialog();
                        }

                        break;
                    }
                case 3:
                    {
                        data.AddText("Are you sure you want to pay " + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + " CPs to open the Mystery Chest?");
                        data.AddOption("Yes.", 4).AddOption("No.", 255).FinalizeDialog();

                        break;
                    }
                case 5:
                    {
                        if (client.Inventory.Contain(3002308, 1))
                        {
                            client.Inventory.Remove(3002308, 1, stream);

                            client.GainExpBall(600, true, Role.Flags.ExperienceEffect.angelwing);
                            switch (client.Player.DailyHeavenChance)
                            {
                                case 1:
                                    {
                                        client.Player.MyChi.ChiPoints += 30;
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 30 Chi Points,~and~1 Talent point and 1 Free Course!");

                                        break;
                                    }
                                case 2:
                                    {
                                        client.Player.MyChi.ChiPoints += 60;
                                        client.Player.SubClass.AddStudyPoints(client, 100, stream);
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 100 Study Points and 60 Chi Points,~and~1 Talent point and 1 Free Course!");

                                        break;
                                    }
                                case 3:
                                    {
                                        client.Player.MyChi.ChiPoints += 100;
                                        client.Player.SubClass.AddStudyPoints(client, 150, stream);
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 150 Study Points and 100 Chi Points,~and~1 Talent point, 1 Super Protection Pill and 1 Free Cours!");

                                        break;
                                    }
                                case 4:
                                    {
                                        client.Player.MyChi.ChiPoints += 150;
                                        client.Player.SubClass.AddStudyPoints(client, 200, stream);
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 200 Study Points and 150 Chi Points,~and~1 Talent point, 5 Protection Pills, 4 Super Protection Pills and 2 Free Courses");

                                        break;
                                    }
                            }
                            client.Player.DailyHeavenChance += 1;
                            if (client.Player.DailyHeavenChance == 5)
                            {
                                client.Teleport(256, 238, 1002);
                            }
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "eidolon");
                        }
                        else
                        {
                            data.AddText("You don`t have a Heaven Key to open the Mystery Chest.");
                            data.AddOption("I~see.", 255).FinalizeDialog();

                        }

                        break;
                    }
                case 4:
                    {
                        uint cps = DailiHeavenCpsCost(client.Player.DailyHeavenChance);
                        if (client.Player.ConquerPoints >= cps)
                        {
                            client.Player.ConquerPoints -= cps;


                            client.GainExpBall(600, true, Role.Flags.ExperienceEffect.angelwing);
                            switch (client.Player.DailyHeavenChance)
                            {
                                case 1:
                                    {
                                        client.Player.MyChi.ChiPoints += 30;
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 30 Chi Points,~and~1 Talent point and 1 Free Course!");

                                        break;
                                    }
                                case 2:
                                    {
                                        client.Player.MyChi.ChiPoints += 60;
                                        client.Player.SubClass.AddStudyPoints(client, 100, stream);
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 100 Study Points and 60 Chi Points,~and~1 Talent point and 1 Free Course!");

                                        break;
                                    }
                                case 3:
                                    {
                                        client.Player.MyChi.ChiPoints += 100;
                                        client.Player.SubClass.AddStudyPoints(client, 150, stream);
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 150 Study Points and 100 Chi Points,~and~1 Talent point, 1 Super Protection Pill and 1 Free Cours!");

                                        break;
                                    }
                                case 4:
                                    {
                                        client.Player.MyChi.ChiPoints += 150;
                                        client.Player.SubClass.AddStudyPoints(client, 200, stream);
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 200 Study Points and 150 Chi Points,~and~1 Talent point, 5 Protection Pills, 4 Super Protection Pills and 2 Free Courses");

                                        break;
                                    }
                            }
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "eidolon");
                            client.Player.DailyHeavenChance += 1;
                            if (client.Player.DailyHeavenChance == 5)
                            {
                                client.Teleport(256, 238, 1002);
                            }

                        }
                        else
                        {
                            data.AddText("You don`t have enough CPs to open the Mystery Chest. Make sure you bring enough money, next time!");
                            data.AddOption("Alright.", 255).FinalizeDialog();

                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.MysterCheast3)]
        public static void MysterCheast3(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.DailyQuestEnvoy, client.Player.Class, 6390);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.DailyHeavenChance == 0)
                        {
                            data.AddText("Are you ready to harvest fortune from the Mystery Chest? Waste no time, and go for it!")
                               .AddText("After opening the chest, you`ll receive 60 minutes of EXP, 10 Study Points, 1 Chi Token and 1 Heaven Key Scrap. If you`re a Jiang Hu fighter, you`ll also get 1 Talent point.");
                            data.AddOption("Open~the~chest.", 1).AddOption("Wait,~I`m~not~ready~yet!", 255).FinalizeDialog();
                        }
                        else if (client.Player.DailyHeavenChance > 0)
                        {
                            data.AddText("Are you ready to embrace wealth coming from the Mystery Chests? Waste no time, and go for it!");
                            data.AddOption("Open~the~chest.", 2).AddOption("Wait,~I`m~not~ready~yet!", 255).FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory");
                            data.AddOption("Let me check.", 255).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.DailyHeavenChance += 1;
                            client.GainExpBall(600, true, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.SubClass.AddStudyPoints(client, 10, stream);
                            client.Inventory.AddItemWitchStack(729304, 0, 1, stream);
                            client.Inventory.AddItemWitchStack(3002307, 0, 1, stream);
                            client.CreateBoxDialog("You~received~60~minutes~of~EXP,~10~Study~Points,~1~Chi~Token,~1~Heaven~Key~Scrap,~and~1~Talent~point!");
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "eidolon");
                        }

                        break;
                    }

                case 2:
                    {
                        if (client.Player.DailyHeavenChance == 1)
                        {
                            data.AddText("Well, it`s the 2nd time you want to open a Mystery Chest. You need to pay " + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + " CPs or use the Heaven Key to open the chest.")
                                .AddText("You`ll receive 60 minutes of EXP and 30 Chi Points from the chest. If you`re a Jiang Hu fighter, you`ll also receive 1 Free Course and 1 Talent point.");
                            data.AddOption("Open~the~chest~with~" + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + "~CPs.", 3).AddOption("Use~the~Heaven~Key.", 5).FinalizeDialog();
                        }
                        else if (client.Player.DailyHeavenChance == 2)
                        {
                            data.AddText("Well, it`s the 3nd time you want to open a Mystery Chest. You need to pay " + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + " CPs or use the Heaven Key to open the chest.")
                                .AddText("You`ll receive 60 minutes of EXP, 100 Study Points and 60 Chi Points from the chest. If you`re a Jiang Hu fighter, you`ll also receive 1 Free Course and 1 Talent point.");
                            data.AddOption("Open~the~chest~with~" + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + "~CPs.", 3).AddOption("Use~the~Heaven~Key.", 5).FinalizeDialog();
                        }
                        else if (client.Player.DailyHeavenChance == 3)
                        {
                            data.AddText("Well, it`s the 3nd time you want to open a Mystery Chest. You need to pay " + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + " CPs or use the Heaven Key to open the chest.")
                                .AddText("You`ll receive 60 minutes of EXP, 150 Study Points and 100 Chi Points from the chest. If you`re a Jiang Hu fighter, you`ll also receive 1 Talent point, 1 Super Protection Pill and 1 Free Course.");
                            data.AddOption("Open~the~chest~with~" + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + "~CPs.", 3).AddOption("Use~the~Heaven~Key.", 5).FinalizeDialog();
                        }
                        else if (client.Player.DailyHeavenChance == 4)
                        {
                            data.AddText("Well, it`s the 3nd time you want to open a Mystery Chest. You need to pay " + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + " CPs or use the Heaven Key to open the chest.")
                                .AddText("You`ll receive 60 minutes of EXP, 200 Study Points and 150 Chi Points from the chest. If you`re a Jiang Hu fighter, you`ll also receive 1 Talent point, 5 Protection Pills, 4 Super Protection Pills and 2 Free Courses.");
                            data.AddOption("Open~the~chest~with~" + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + "~CPs.", 3).AddOption("Use~the~Heaven~Key.", 5).FinalizeDialog();
                        }

                        break;
                    }
                case 3:
                    {
                        data.AddText("Are you sure you want to pay " + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + " CPs to open the Mystery Chest?");
                        data.AddOption("Yes.", 4).AddOption("No.", 255).FinalizeDialog();

                        break;
                    }
                case 5:
                    {
                        if (client.Inventory.Contain(3002308, 1))
                        {
                            client.Inventory.Remove(3002308, 1, stream);

                            client.GainExpBall(600, true, Role.Flags.ExperienceEffect.angelwing);
                            switch (client.Player.DailyHeavenChance)
                            {
                                case 1:
                                    {
                                        client.Player.MyChi.ChiPoints += 30;
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 30 Chi Points,~and~1 Talent point and 1 Free Course!");

                                        break;
                                    }
                                case 2:
                                    {
                                        client.Player.MyChi.ChiPoints += 60;
                                        client.Player.SubClass.AddStudyPoints(client, 100, stream);
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 100 Study Points and 60 Chi Points,~and~1 Talent point and 1 Free Course!");

                                        break;
                                    }
                                case 3:
                                    {
                                        client.Player.MyChi.ChiPoints += 100;
                                        client.Player.SubClass.AddStudyPoints(client, 150, stream);
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 150 Study Points and 100 Chi Points,~and~1 Talent point, 1 Super Protection Pill and 1 Free Cours!");

                                        break;
                                    }
                                case 4:
                                    {
                                        client.Player.MyChi.ChiPoints += 150;
                                        client.Player.SubClass.AddStudyPoints(client, 200, stream);
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 200 Study Points and 150 Chi Points,~and~1 Talent point, 5 Protection Pills, 4 Super Protection Pills and 2 Free Courses");

                                        break;
                                    }
                            }
                            client.Player.DailyHeavenChance += 1;
                            if (client.Player.DailyHeavenChance == 5)
                            {
                                client.Teleport(256, 238, 1002);
                            }
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "eidolon");
                        }
                        else
                        {
                            data.AddText("You don`t have a Heaven Key to open the Mystery Chest.");
                            data.AddOption("I~see.", 255).FinalizeDialog();

                        }

                        break;
                    }
                case 4:
                    {
                        uint cps = DailiHeavenCpsCost(client.Player.DailyHeavenChance);
                        if (client.Player.ConquerPoints >= cps)
                        {
                            client.Player.ConquerPoints -= cps;


                            client.GainExpBall(600, true, Role.Flags.ExperienceEffect.angelwing);
                            switch (client.Player.DailyHeavenChance)
                            {
                                case 1:
                                    {
                                        client.Player.MyChi.ChiPoints += 30;
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 30 Chi Points,~and~1 Talent point and 1 Free Course!");

                                        break;
                                    }
                                case 2:
                                    {
                                        client.Player.MyChi.ChiPoints += 60;
                                        client.Player.SubClass.AddStudyPoints(client, 100, stream);
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 100 Study Points and 60 Chi Points,~and~1 Talent point and 1 Free Course!");

                                        break;
                                    }
                                case 3:
                                    {
                                        client.Player.MyChi.ChiPoints += 100;
                                        client.Player.SubClass.AddStudyPoints(client, 150, stream);
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 150 Study Points and 100 Chi Points,~and~1 Talent point, 1 Super Protection Pill and 1 Free Cours!");

                                        break;
                                    }
                                case 4:
                                    {
                                        client.Player.MyChi.ChiPoints += 150;
                                        client.Player.SubClass.AddStudyPoints(client, 200, stream);
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 200 Study Points and 150 Chi Points,~and~1 Talent point, 5 Protection Pills, 4 Super Protection Pills and 2 Free Courses");

                                        break;
                                    }
                            }
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "eidolon");
                            client.Player.DailyHeavenChance += 1;
                            if (client.Player.DailyHeavenChance == 5)
                            {
                                client.Teleport(256, 238, 1002);
                            }

                        }
                        else
                        {
                            data.AddText("You don`t have enough CPs to open the Mystery Chest. Make sure you bring enough money, next time!");
                            data.AddOption("Alright.", 255).FinalizeDialog();

                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.MysterCheast4)]
        public static void MysterCheast4(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.DailyQuestEnvoy, client.Player.Class, 6390);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.DailyHeavenChance == 0)
                        {
                            data.AddText("Are you ready to harvest fortune from the Mystery Chest? Waste no time, and go for it!")
                               .AddText("After opening the chest, you`ll receive 60 minutes of EXP, 10 Study Points, 1 Chi Token and 1 Heaven Key Scrap. If you`re a Jiang Hu fighter, you`ll also get 1 Talent point.");
                            data.AddOption("Open~the~chest.", 1).AddOption("Wait,~I`m~not~ready~yet!", 255).FinalizeDialog();
                        }
                        else if (client.Player.DailyHeavenChance > 0)
                        {
                            data.AddText("Are you ready to embrace wealth coming from the Mystery Chests? Waste no time, and go for it!");
                            data.AddOption("Open~the~chest.", 2).AddOption("Wait,~I`m~not~ready~yet!", 255).FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory");
                            data.AddOption("Let me check.", 255).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.DailyHeavenChance += 1;
                            client.GainExpBall(600, true, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.SubClass.AddStudyPoints(client, 10, stream);
                            client.Inventory.AddItemWitchStack(729304, 0, 1, stream);
                            client.Inventory.AddItemWitchStack(3002307, 0, 1, stream);
                            client.CreateBoxDialog("You~received~60~minutes~of~EXP,~10~Study~Points,~1~Chi~Token,~1~Heaven~Key~Scrap,~and~1~Talent~point!");
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "eidolon");
                        }

                        break;
                    }

                case 2:
                    {
                        if (client.Player.DailyHeavenChance == 1)
                        {
                            data.AddText("Well, it`s the 2nd time you want to open a Mystery Chest. You need to pay " + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + " CPs or use the Heaven Key to open the chest.")
                                .AddText("You`ll receive 60 minutes of EXP and 30 Chi Points from the chest. If you`re a Jiang Hu fighter, you`ll also receive 1 Free Course and 1 Talent point.");
                            data.AddOption("Open~the~chest~with~" + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + "~CPs.", 3).AddOption("Use~the~Heaven~Key.", 5).FinalizeDialog();
                        }
                        else if (client.Player.DailyHeavenChance == 2)
                        {
                            data.AddText("Well, it`s the 3nd time you want to open a Mystery Chest. You need to pay " + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + " CPs or use the Heaven Key to open the chest.")
                                .AddText("You`ll receive 60 minutes of EXP, 100 Study Points and 60 Chi Points from the chest. If you`re a Jiang Hu fighter, you`ll also receive 1 Free Course and 1 Talent point.");
                            data.AddOption("Open~the~chest~with~" + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + "~CPs.", 3).AddOption("Use~the~Heaven~Key.", 5).FinalizeDialog();
                        }
                        else if (client.Player.DailyHeavenChance == 3)
                        {
                            data.AddText("Well, it`s the 3nd time you want to open a Mystery Chest. You need to pay " + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + " CPs or use the Heaven Key to open the chest.")
                                .AddText("You`ll receive 60 minutes of EXP, 150 Study Points and 100 Chi Points from the chest. If you`re a Jiang Hu fighter, you`ll also receive 1 Talent point, 1 Super Protection Pill and 1 Free Course.");
                            data.AddOption("Open~the~chest~with~" + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + "~CPs.", 3).AddOption("Use~the~Heaven~Key.", 5).FinalizeDialog();
                        }
                        else if (client.Player.DailyHeavenChance == 4)
                        {
                            data.AddText("Well, it`s the 3nd time you want to open a Mystery Chest. You need to pay " + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + " CPs or use the Heaven Key to open the chest.")
                                .AddText("You`ll receive 60 minutes of EXP, 200 Study Points and 150 Chi Points from the chest. If you`re a Jiang Hu fighter, you`ll also receive 1 Talent point, 5 Protection Pills, 4 Super Protection Pills and 2 Free Courses.");
                            data.AddOption("Open~the~chest~with~" + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + "~CPs.", 3).AddOption("Use~the~Heaven~Key.", 5).FinalizeDialog();
                        }

                        break;
                    }
                case 3:
                    {
                        data.AddText("Are you sure you want to pay " + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + " CPs to open the Mystery Chest?");
                        data.AddOption("Yes.", 4).AddOption("No.", 255).FinalizeDialog();

                        break;
                    }
                case 5:
                    {
                        if (client.Inventory.Contain(3002308, 1))
                        {
                            client.Inventory.Remove(3002308, 1, stream);

                            client.GainExpBall(600, true, Role.Flags.ExperienceEffect.angelwing);
                            switch (client.Player.DailyHeavenChance)
                            {
                                case 1:
                                    {
                                        client.Player.MyChi.ChiPoints += 30;
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 30 Chi Points,~and~1 Talent point and 1 Free Course!");

                                        break;
                                    }
                                case 2:
                                    {
                                        client.Player.MyChi.ChiPoints += 60;
                                        client.Player.SubClass.AddStudyPoints(client, 100, stream);
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 100 Study Points and 60 Chi Points,~and~1 Talent point and 1 Free Course!");

                                        break;
                                    }
                                case 3:
                                    {
                                        client.Player.MyChi.ChiPoints += 100;
                                        client.Player.SubClass.AddStudyPoints(client, 150, stream);
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 150 Study Points and 100 Chi Points,~and~1 Talent point, 1 Super Protection Pill and 1 Free Cours!");

                                        break;
                                    }
                                case 4:
                                    {
                                        client.Player.MyChi.ChiPoints += 150;
                                        client.Player.SubClass.AddStudyPoints(client, 200, stream);
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 200 Study Points and 150 Chi Points,~and~1 Talent point, 5 Protection Pills, 4 Super Protection Pills and 2 Free Courses");

                                        break;
                                    }
                            }
                            client.Player.DailyHeavenChance += 1;
                            if (client.Player.DailyHeavenChance == 5)
                            {
                                client.Teleport(256, 238, 1002);
                            }
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "eidolon");
                        }
                        else
                        {
                            data.AddText("You don`t have a Heaven Key to open the Mystery Chest.");
                            data.AddOption("I~see.", 255).FinalizeDialog();

                        }

                        break;
                    }
                case 4:
                    {
                        uint cps = DailiHeavenCpsCost(client.Player.DailyHeavenChance);
                        if (client.Player.ConquerPoints >= cps)
                        {
                            client.Player.ConquerPoints -= cps;


                            client.GainExpBall(600, true, Role.Flags.ExperienceEffect.angelwing);
                            switch (client.Player.DailyHeavenChance)
                            {
                                case 1:
                                    {
                                        client.Player.MyChi.ChiPoints += 30;
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 30 Chi Points,~and~1 Talent point and 1 Free Course!");

                                        break;
                                    }
                                case 2:
                                    {
                                        client.Player.MyChi.ChiPoints += 60;
                                        client.Player.SubClass.AddStudyPoints(client, 100, stream);
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 100 Study Points and 60 Chi Points,~and~1 Talent point and 1 Free Course!");

                                        break;
                                    }
                                case 3:
                                    {
                                        client.Player.MyChi.ChiPoints += 100;
                                        client.Player.SubClass.AddStudyPoints(client, 150, stream);
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 150 Study Points and 100 Chi Points,~and~1 Talent point, 1 Super Protection Pill and 1 Free Cours!");

                                        break;
                                    }
                                case 4:
                                    {
                                        client.Player.MyChi.ChiPoints += 150;
                                        client.Player.SubClass.AddStudyPoints(client, 200, stream);
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 200 Study Points and 150 Chi Points,~and~1 Talent point, 5 Protection Pills, 4 Super Protection Pills and 2 Free Courses");

                                        break;
                                    }
                            }
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "eidolon");
                            client.Player.DailyHeavenChance += 1;
                            if (client.Player.DailyHeavenChance == 5)
                            {
                                client.Teleport(256, 238, 1002);
                            }

                        }
                        else
                        {
                            data.AddText("You don`t have enough CPs to open the Mystery Chest. Make sure you bring enough money, next time!");
                            data.AddOption("Alright.", 255).FinalizeDialog();

                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.MysterCheast5)]
        public static void MysterCheast5(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.DailyQuestEnvoy, client.Player.Class, 6390);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.DailyHeavenChance == 0)
                        {
                            data.AddText("Are you ready to harvest fortune from the Mystery Chest? Waste no time, and go for it!")
                               .AddText("After opening the chest, you`ll receive 60 minutes of EXP, 10 Study Points, 1 Chi Token and 1 Heaven Key Scrap. If you`re a Jiang Hu fighter, you`ll also get 1 Talent point.");
                            data.AddOption("Open~the~chest.", 1).AddOption("Wait,~I`m~not~ready~yet!", 255).FinalizeDialog();
                        }
                        else if (client.Player.DailyHeavenChance > 0)
                        {
                            data.AddText("Are you ready to embrace wealth coming from the Mystery Chests? Waste no time, and go for it!");
                            data.AddOption("Open~the~chest.", 2).AddOption("Wait,~I`m~not~ready~yet!", 255).FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory");
                            data.AddOption("Let me check.", 255).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.DailyHeavenChance += 1;
                            client.GainExpBall(600, true, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.SubClass.AddStudyPoints(client, 10, stream);
                            client.Inventory.AddItemWitchStack(729304, 0, 1, stream);
                            client.Inventory.AddItemWitchStack(3002307, 0, 1, stream);
                            client.CreateBoxDialog("You~received~60~minutes~of~EXP,~10~Study~Points,~1~Chi~Token,~1~Heaven~Key~Scrap,~and~1~Talent~point!");
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "eidolon");
                        }

                        break;
                    }

                case 2:
                    {
                        if (client.Player.DailyHeavenChance == 1)
                        {
                            data.AddText("Well, it`s the 2nd time you want to open a Mystery Chest. You need to pay " + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + " CPs or use the Heaven Key to open the chest.")
                                .AddText("You`ll receive 60 minutes of EXP and 30 Chi Points from the chest. If you`re a Jiang Hu fighter, you`ll also receive 1 Free Course and 1 Talent point.");
                            data.AddOption("Open~the~chest~with~" + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + "~CPs.", 3).AddOption("Use~the~Heaven~Key.", 5).FinalizeDialog();
                        }
                        else if (client.Player.DailyHeavenChance == 2)
                        {
                            data.AddText("Well, it`s the 3nd time you want to open a Mystery Chest. You need to pay " + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + " CPs or use the Heaven Key to open the chest.")
                                .AddText("You`ll receive 60 minutes of EXP, 100 Study Points and 60 Chi Points from the chest. If you`re a Jiang Hu fighter, you`ll also receive 1 Free Course and 1 Talent point.");
                            data.AddOption("Open~the~chest~with~" + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + "~CPs.", 3).AddOption("Use~the~Heaven~Key.", 5).FinalizeDialog();
                        }
                        else if (client.Player.DailyHeavenChance == 3)
                        {
                            data.AddText("Well, it`s the 3nd time you want to open a Mystery Chest. You need to pay " + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + " CPs or use the Heaven Key to open the chest.")
                                .AddText("You`ll receive 60 minutes of EXP, 150 Study Points and 100 Chi Points from the chest. If you`re a Jiang Hu fighter, you`ll also receive 1 Talent point, 1 Super Protection Pill and 1 Free Course.");
                            data.AddOption("Open~the~chest~with~" + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + "~CPs.", 3).AddOption("Use~the~Heaven~Key.", 5).FinalizeDialog();
                        }
                        else if (client.Player.DailyHeavenChance == 4)
                        {
                            data.AddText("Well, it`s the 3nd time you want to open a Mystery Chest. You need to pay " + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + " CPs or use the Heaven Key to open the chest.")
                                .AddText("You`ll receive 60 minutes of EXP, 200 Study Points and 150 Chi Points from the chest. If you`re a Jiang Hu fighter, you`ll also receive 1 Talent point, 5 Protection Pills, 4 Super Protection Pills and 2 Free Courses.");
                            data.AddOption("Open~the~chest~with~" + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + "~CPs.", 3).AddOption("Use~the~Heaven~Key.", 5).FinalizeDialog();
                        }

                        break;
                    }
                case 3:
                    {
                        data.AddText("Are you sure you want to pay " + DailiHeavenCpsCost(client.Player.DailyHeavenChance) + " CPs to open the Mystery Chest?");
                        data.AddOption("Yes.", 4).AddOption("No.", 255).FinalizeDialog();

                        break;
                    }
                case 5:
                    {
                        if (client.Inventory.Contain(3002308, 1))
                        {
                            client.Inventory.Remove(3002308, 1, stream);

                            client.GainExpBall(600, true, Role.Flags.ExperienceEffect.angelwing);
                            switch (client.Player.DailyHeavenChance)
                            {
                                case 1:
                                    {
                                        client.Player.MyChi.ChiPoints += 30;
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 30 Chi Points,~and~1 Talent point and 1 Free Course!");

                                        break;
                                    }
                                case 2:
                                    {
                                        client.Player.MyChi.ChiPoints += 60;
                                        client.Player.SubClass.AddStudyPoints(client, 100, stream);
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 100 Study Points and 60 Chi Points,~and~1 Talent point and 1 Free Course!");

                                        break;
                                    }
                                case 3:
                                    {
                                        client.Player.MyChi.ChiPoints += 100;
                                        client.Player.SubClass.AddStudyPoints(client, 150, stream);
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 150 Study Points and 100 Chi Points,~and~1 Talent point, 1 Super Protection Pill and 1 Free Cours!");

                                        break;
                                    }
                                case 4:
                                    {
                                        client.Player.MyChi.ChiPoints += 150;
                                        client.Player.SubClass.AddStudyPoints(client, 200, stream);
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 200 Study Points and 150 Chi Points,~and~1 Talent point, 5 Protection Pills, 4 Super Protection Pills and 2 Free Courses");

                                        break;
                                    }
                            }
                            client.Player.DailyHeavenChance += 1;
                            if (client.Player.DailyHeavenChance == 5)
                            {
                                client.Teleport(256, 238, 1002);
                            }
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "eidolon");
                        }
                        else
                        {
                            data.AddText("You don`t have a Heaven Key to open the Mystery Chest.");
                            data.AddOption("I~see.", 255).FinalizeDialog();

                        }

                        break;
                    }
                case 4:
                    {
                        uint cps = DailiHeavenCpsCost(client.Player.DailyHeavenChance);
                        if (client.Player.ConquerPoints >= cps)
                        {
                            client.Player.ConquerPoints -= cps;


                            client.GainExpBall(600, true, Role.Flags.ExperienceEffect.angelwing);
                            switch (client.Player.DailyHeavenChance)
                            {
                                case 1:
                                    {
                                        client.Player.MyChi.ChiPoints += 30;
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 30 Chi Points,~and~1 Talent point and 1 Free Course!");

                                        break;
                                    }
                                case 2:
                                    {
                                        client.Player.MyChi.ChiPoints += 60;
                                        client.Player.SubClass.AddStudyPoints(client, 100, stream);
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 100 Study Points and 60 Chi Points,~and~1 Talent point and 1 Free Course!");

                                        break;
                                    }
                                case 3:
                                    {
                                        client.Player.MyChi.ChiPoints += 100;
                                        client.Player.SubClass.AddStudyPoints(client, 150, stream);
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 150 Study Points and 100 Chi Points,~and~1 Talent point, 1 Super Protection Pill and 1 Free Cours!");

                                        break;
                                    }
                                case 4:
                                    {
                                        client.Player.MyChi.ChiPoints += 150;
                                        client.Player.SubClass.AddStudyPoints(client, 200, stream);
                                        client.CreateBoxDialog("You~received~60 minutes of EXP, 200 Study Points and 150 Chi Points,~and~1 Talent point, 5 Protection Pills, 4 Super Protection Pills and 2 Free Courses");

                                        break;
                                    }
                            }
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "eidolon");
                            client.Player.DailyHeavenChance += 1;
                            if (client.Player.DailyHeavenChance == 5)
                            {
                                client.Teleport(256, 238, 1002);
                            }

                        }
                        else
                        {
                            data.AddText("You don`t have enough CPs to open the Mystery Chest. Make sure you bring enough money, next time!");
                            data.AddOption("Alright.", 255).FinalizeDialog();

                        }
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.FairyCloud)]
        public static void FairyCloud(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 1:
                case 0:
                    {
                        data.AddText("Wow, you`re so lucky to enter the Heaven Treasury! Let me introduce you the rules here.")
                           .AddText("~You can open one Mystery Chest in the Treasury, free of charge. Once opened, the chest will disappear. For other chests, you need to use CPs or the Heaven Keys to open them.")
                           .AddText("~Of course, the rewards will be better and better. Oh, if you`re a Jiang Hu fighter, you`ll also get a special reward.");
                        data.AddOption("Learn~about~opening~chests.", 2)
                            .AddOption("Send~me~to~Twin~City.", 6)
                             .AddOption("What`re~in~those~chests?", 4)
                              .AddOption("I~see.", 255)
                            .AddAvatar(233).FinalizeDialog();

                        break;
                    }
                case 6:
                    {
                        client.Teleport(256, 238, 1002);
                        break;
                    }
                case 2:
                    {
                        data.AddText("You can open one Mystery Chest for free, once in a day. For the other chests, you need to use CPs.")
               .AddText("~or the Heaven Keys to open. If you decide to pay CPs, the charge is, in order, 5 CPs, 20 CPs, 35 CPs and 100 CPs. While if you have a Heaven Key, ")
               .AddText("~you can open a chest worth 5 - 100 CPs. However, you can use up to 2 Heaven Keys in a day. Each 3 Heaven Key Scraps that you may obtain from the Mystery Chests")
               .AddText("~can be combined into a Heaven Key.");
                        data.AddOption("Learn~about~other~rules.", 1).AddOption("I~see.", 255).AddAvatar(233).FinalizeDialog();

                        break;
                    }
                case 4:
                    {
                        data.AddText("1st Time: 60 minutes of EXP, 10 Study Points, 1 Chi Token and 1 Heaven Key Scrap;\n")
                            .AddText("2nd Time: 60 minutes of EXP, 30 Chi Points;\n")
                            .AddText("3rd Time: 60 minutes of EXP, 100 Study Points and 60 Chi Points;\n")
                            .AddText("4th Time: 60 minutes of EXP, 150 Study Points and 100 Chi Points;\n")
                            .AddText("5th Time: 60 minutes of EXP, 200 Study Points and 150 Chi Points.");
                        data.AddOption("What`s~for~Jiang~Hu~fighters.", 5)
                            .AddOption("Learn~about~other~rules.", 1)
                            .AddOption("I~see.", 255).AddAvatar(233).FinalizeDialog();

                        break;
                    }
                case 5:
                    {
                        data.AddText("1st Time Extra Reward: 1 Talent point;\n")
                         .AddText("2nd Time Extra Reward: 1 Talent point and 1 Free Course;\n")
                         .AddText("3rd Time Extra Reward: 1 Talent point and 1 Free Course;\n")
                         .AddText("4th Time Extra Reward: 1 Talent point, 1 Super Protection Pill and 1 Free Course;\n")
                         .AddText("5th Time Extra Reward: 1 Talent point, 5 Protection Pills, 4 Super Protection Pills and 2 Free Courses;\nPlease note that, you won`t receive Talent points, if your Talent is already full.");
                        data.AddOption("Learn~about~other~rules.", 1)
                            .AddOption("I~see.", 255).AddAvatar(233).FinalizeDialog();

                        break;
                    }

            }
        }

        public static void CheckDesertGuardian(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {

            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.DesertGuardian, client.Player.Class, 6049);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (Role.Core.GetDistance(client.Player.X, client.Player.Y, client.OnRemoveNpc.X, client.OnRemoveNpc.Y) > 5)
                                client.CreateBoxDialog("You~are~too~far~away~from~the~Soldier`s~Remains!");
                            else
                                client.Player.AddPick(stream, "Sure", 4);
                        }

                        break;
                    }
            }
        }


        [NpcAttribute(NpcID.MagnoliaEnvoy)]
        public static void MagnoliaEnvoy(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.DailyQuestEnvoy, client.Player.Class, 6014);
            switch (Option)
            {
                case 0:
                    {
                        if (!client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished)
                             && !client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("I`m here to deliver seeds, and I can also teleport you back to Twin City.");
                            data.AddOption("Claim~1~seed.", 1);

                        }
                        else
                            data.AddText("I don`t have any Magnolia Seeds. You`ll need to wait until tomorrow!");
                        data.AddOption("Back~to~Twin~City.", 9);
                        data.AddOption("How~to~plant~them.", 10);
                        data.AddOption("I`m~just~passing~by.", 255);

                        data.AddAvatar(113).FinalizeDialog();

                        break;
                    }
                case 9:
                    {
                        client.Teleport(252, 235, 1002);
                        break;
                    }
                case 1:
                    {
                        if (client.Player.DailyMagnoliaItemId == 0)
                        {
                            client.Player.DailyMagnoliaChance += 1;
                            client.Player.DailyMagnoliaItemId = 729306;//5
                            client.Player.DailyMagnoliaItemId += (byte)Program.GetRandom.Next(0, 4);
                        }
                        var DbItem = Database.Server.ItemsBase[client.Player.DailyMagnoliaItemId];

                        data.AddText("" + DbItem.Name + " \n");
                        data.AddText("You`ve already changed [" + client.Player.DailyMagnoliaChance.ToString() + "] times.\n");
                        data.AddOption("Claim~the~seed.", 2);
                        data.AddOption("Another~seed.~(50~CP)", 3);
                        data.AddOption("Another~seed.~(25~Study~Points)", 4);
                        data.AddOption("Buy~1~Super~seed.~(600~CPs)", 5);
                        data.AddOption("I`ll~think~about~it.", 255);
                        data.AddAvatar(113).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory");
                            data.AddOption("Let me check.", 255).FinalizeDialog();
                            break;
                        }
                        var DbItem = Database.Server.ItemsBase[client.Player.DailyMagnoliaItemId];
                        client.Inventory.Add(stream, DbItem.ID);
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        client.CreateBoxDialog("You~received~1~" + DbItem.Name + "!~Go~plant~it~in~the~garden!");

                        break;
                    }
                case 3:
                    {
                        if (client.Player.ConquerPoints >= 50)
                        {
                            client.Player.DailyMagnoliaItemId = 0;
                            client.Player.ConquerPoints -= 50;
                            goto case 1;
                        }
                        else
                        {
                            data.AddText("Sorry, but you don`t have enough CPs.");
                            data.AddOption("Alright.", 255);
                            data.AddAvatar(113).FinalizeDialog();
                        }

                        break;
                    }
                case 4:
                    {
                        if (client.Player.SubClass.StudyPoints >= 25)
                        {
                            client.Player.DailyMagnoliaItemId = 0;
                            client.Player.SubClass.RemoveStudy(client, 25, stream);
                            goto case 1;
                        }
                        else
                        {
                            data.AddText("Sorry, but you don`t have enough StudyPoints.");
                            data.AddOption("Alright.", 255);
                            data.AddAvatar(113).FinalizeDialog();
                        }

                        break;
                    }
                case 5:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory");
                            data.AddOption("Let me check.", 255).FinalizeDialog();
                            break;
                        }
                        if (client.Player.ConquerPoints >= 600)
                        {
                            client.Player.ConquerPoints -= 600;
                            client.Inventory.Add(stream, 729310);
                            client.Player.DailyMagnoliaItemId = 729310;
                            client.Player.QuestGUI.Accept(ActiveQuest, 0);
                            client.CreateBoxDialog("You~received~1~Super~Magnolia~Seed!~Go~plant~it~in~the~garden!");
                        }
                        else
                        {
                            data.AddText("Sorry, but you don`t have enough CPs.");
                            data.AddOption("Alright.", 255);
                            data.AddAvatar(113).FinalizeDialog();
                        }

                        break;
                    }
                case 10:
                    {
                        data.AddText("I`ll tell you a secret! Did you know that different seeds will bring you different rewards?")
                            .AddText("~Which kind of seed were you interested in?");
                        data.AddOption("Normal~Magnolia~Seed..", 11)
                            .AddOption("Refined~Magnolia~Seed.", 12)
                            .AddOption("Unique~Magnolia~Seed.", 13)
                            .AddOption("Elite~Magnolia~Seed.", 14)
                            .AddOption("Super~Magnolia~Seed.", 15)
                            .AddOption("Bye.", 255)
                        .AddAvatar(113).FinalizeDialog();

                        break;
                    }
                case 11:
                    {
                        data.AddText("If your Normal Magnolia Seed becomes a flower, you`ll receive 60 minutes of EXP, 10 Study Points and 1 Chi Token.");
                        data.AddOption("Other~rewards.", 10).AddOption("Leave.", 255);
                        data.AddAvatar(113).FinalizeDialog();

                        break;
                    }
                case 12:
                    {
                        data.AddText("If your Refined Magnolia Seed becomes a flower, you`ll have the chance to receive 90 minutes of EXP, 20 Study Points, 1 Chi Token, and more!");
                        data.AddOption("Other~rewards.", 10).AddOption("Leave.", 255);
                        data.AddAvatar(113).FinalizeDialog();

                        break;
                    }
                case 13:
                    {
                        data.AddText("If your Unique Magnolia Seed becomes a flower, you`ll have the chance to receive 120 minutes of EXP, 50 Study Points, 1 Chi Token, and more!");
                        data.AddOption("Other~rewards.", 10).AddOption("Leave.", 255);
                        data.AddAvatar(113).FinalizeDialog();

                        break;
                    }
                case 14:
                    {
                        data.AddText("If your Elite Magnolia Seed becomes a flower, you`ll have the chance to receive 180 minutes of EXP, 100 Study Points, 1 Chi Token, and more!");
                        data.AddOption("Other~rewards.", 10).AddOption("Leave.", 255);
                        data.AddAvatar(113).FinalizeDialog();

                        break;
                    }
                case 15:
                    {
                        data.AddText("If your Super Magnolia Seed becomes a flower, you`ll have the chance to receive 300 minutes of EXP, 300 Study Points, 1 Chi Token, and more!");
                        data.AddOption("Other~rewards.", 10).AddOption("Leave.", 255);
                        data.AddAvatar(113).FinalizeDialog();

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.DesertGuardian)]
        public static void DesertGuardian(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.DesertGuardian, client.Player.Class, 6049);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            data.AddText("Several days ago, a group of bandits appeared in the Desert, and we failed to defeat them. Many of our soldiers were killed.")
                                .AddText("~I need someone to release the trapped souls of these brave soldiers. Could you please help me? Well, if you`re too busy,")
                                .AddText("~you can give 10 CPs so that I can hire other heroes to help me. Of course, you`ll be handsomely rewarded!");
                            data.AddOption("Let~me~help~you.", 1);
                            data.AddAvatar(101).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You`ve helped us a lot, already! You`d better have a rest. If you want, you can come back tomorrow!");
                            data.AddOption("Alright.", 255);
                            data.AddAvatar(101).FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 8))
                        {
                            data.AddText("You have released the souls of some dead soldiers, right? Just a few? Well, thanks for your help! I`ve got something to give you,")
                           .AddText("~for all that you`re doing for us. May those soldiers find peace in the afterlife...");
                            data.AddOption("Thanks!", 255)
                            .AddAvatar(101).FinalizeDialog();
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                            {
                                client.Player.SubClass.AddStudyPoints(client, 50, stream);
                                client.Inventory.AddItemWitchStack(729304, 0, 1, stream);
                                client.GainExpBall(1200, true, Role.Flags.ExperienceEffect.angelwing);
                                client.CreateBoxDialog("You`ve~completed~the~quest:~Release~the~Souls!~You~received~50~Study~Points,~120~minutes~of~EXP~and~1~Chi~Token!");

                            }
                            break;
                        }

                        data.AddText("Eh? Could it be there are still decent men in the world? It`s very kind of you to offer! If you can find 8 Soldier`s Remains and release their souls,")
                           .AddText("~I`ll reward you handsomely for all your effort. You have no idea what this will mean to the families. Take care, out there.");
                        data.AddOption("Okay!~I`ll~go~now!", 4)
                            .AddOption("Pay~700~CPs.", 3)
                            .AddAvatar(101).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        if (client.Player.ConquerPoints >= 700)
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                data.AddText("Please make 1 more space in your inventory");
                                data.AddOption("Let me check.", 255).FinalizeDialog();
                                break;
                            }
                            client.Player.ConquerPoints -= 700;
                            if (!client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                                client.Player.QuestGUI.Accept(ActiveQuest, 0);
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                            {
                                client.Player.SubClass.AddStudyPoints(client, 50, stream);
                                client.Inventory.AddItemWitchStack(729304, 0, 1, stream);
                                client.GainExpBall(1200, true, Role.Flags.ExperienceEffect.angelwing);
                                client.CreateBoxDialog("You`ve~completed~the~quest:~Release~the~Souls!~You~received~50~Study~Points,~120~minutes~of~EXP~and~1~Chi~Token!");

                            }
                        }
                        else
                        {
                            data.AddText("Sorry, but you don`t have enough CPs.")
                              .AddOption("Okay.", 255).AddAvatar(84)
                .FinalizeDialog();
                        }

                        break;
                    }
                case 4:
                    {
                        data.AddText("You`ve~accepted~the~quest:~Release~the~Souls.~Find~at~least~8~Soldier`s~Remains~in~the~Desert!");
                        data.AddOption("Yes", 5)
                            .AddOption("No", 255)
                            .AddAvatar(101).FinalizeDialog();

                        break;
                    }
                case 5:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        client.Player.QuestGUI.SendAutoPatcher(1000, 631, 500, 0);
                        break;
                    }
            }
        }
        public static uint GetNextSpitiBead(uint spiritbead)
        {
            if (spiritbead == 0)
                return 729611;
            if (spiritbead == 729611)
                return 729611 + 1;
            if (spiritbead == 729612)
                return spiritbead + 1;
            if (spiritbead == 729613)
                return spiritbead + 1;
            if (spiritbead == 729614)
                return 729703;
            return 729703;
        }
        public static uint GetDailySpiritBeadKills(Client.GameClient client)
        {

            switch (client.Player.DailySpiritBeadItem)
            {
                case 729611:
                    return 2500;
                case 729612:
                    return 2000;
                case 729613:
                    return 1500;
                case 729614:
                    return 1000;
                case 729703:
                    return 500;
            }
            return 0;

        }
        [NpcAttribute(NpcID.DailyNormalSpiritBead)]
        public static void DailyNormalSpiritBead(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.DailyQuestEnvoy, client.Player.Class, 2375);
            Dialog data = new Dialog(client, stream);
            if (!client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                client.Player.QuestGUI.Accept(ActiveQuest, 0);
            switch (Option)
            {
                case 0:
                    {
                        if (GetDailySpiritBeadKills(client) == 0)
                            return;
                        if (client.Player.DailySpiritBeadCount >= GetDailySpiritBeadKills(client))
                        {
                            data.AddText("You`ve collect enough spirits. Do you want to claim 120 minutes of EXP, 7 hours of Blessing, 30 Study Points and a Chi Token, now?")
                              .AddOption("Yes,~of~course!", 3)
                              .AddOption("No,~not~now.", 255).FinalizeDialog();
                            break;
                        }
                        data.AddText("This bead needs to absorb " + GetDailySpiritBeadKills(client) + " spirits. Current spirits: " + client.Player.DailySpiritBeadCount + ".")
                               .AddOption("Fill~it~up.~(500CPs)", 1)
                               .AddOption("Okay.", 255).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        data.AddText("This is a Normal Spirit Bead. Once fully charged, you`ll receive 120 minutes of EXP, 7 hours of Blessing, 30 Study Points and a Chi Token.")
                              .AddText("~Are you sure you want to pay 500 CPs to get the reward, directly?")
                             .AddOption("Yeah,~please!", 2)
                             .AddOption("Wait,~I~haven`t~decided!", 255).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId) || client.Player.DailySpiritBeadCount >= GetDailySpiritBeadKills(client))
                        {
                            client.Player.DailySpiritBeadCount = 0;
                            client.Inventory.Remove(client.Player.DailySpiritBeadItem, 1, stream);
                            client.Inventory.AddItemWitchStack(729304, 0, 1, stream);

                            client.GainExpBall(1200, true, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.SubClass.AddStudyPoints(client, 30, stream);
                            client.Player.AddHeavenBlessing(stream, 60 * 60 * 7);
                            client.CreateBoxDialog("You received 120 minutes of EXP, 7 hours of Blessing, 30 Study Points and 1 Chi Token.");

                            client.Player.DailySpiritBeadItem = GetNextSpitiBead(client.Player.DailySpiritBeadItem);
                        }

                        break;
                    }
                case 2:
                    {
                        if (client.Player.ConquerPoints >= 500)
                        {
                            //  if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                            {
                                client.Player.ConquerPoints -= 500;
                                goto case 3;
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, but you don`t have enough CPs.");
                            data.AddOption("I~see.", 255).AddAvatar(84).FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.DailyRefinedSpiritBead)]
        public static void DailyRefinedSpiritBead(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.DailyQuestEnvoy, client.Player.Class, 2375);
            if (!client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                client.Player.QuestGUI.Accept(ActiveQuest, 0);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (GetDailySpiritBeadKills(client) == 0)
                            return;
                        if (client.Player.DailySpiritBeadCount >= GetDailySpiritBeadKills(client))
                        {
                            data.AddText("You`ve collect enough spirits. Do you want to claim 180 minutes of EXP, 10 hours of Blessing, 40 Study Points and 1 Chi Token, now?")
                              .AddOption("Yes,~of~course!", 3)
                              .AddOption("No,~not~now.", 255).FinalizeDialog();
                            break;
                        }
                        data.AddText("This bead needs to absorb " + GetDailySpiritBeadKills(client) + " spirits. Current spirits: " + client.Player.DailySpiritBeadCount + ".")
                               .AddOption("Fill~it~up.~(500CPs)", 1)
                               .AddOption("Okay.", 255).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        data.AddText("This is a Normal Spirit Bead. Once fully charged, you`ll receive 180 minutes of EXP, 10 hours of Blessing, 40 Study Points and 1 Chi Token")
                               .AddText("~Are you sure you want to pay 500 CPs to get the reward, directly?")
                             .AddOption("Yeah,~please!", 2)
                             .AddOption("Wait,~I~haven`t~decided!", 255).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId) || client.Player.DailySpiritBeadCount >= GetDailySpiritBeadKills(client))
                        {
                            client.Player.DailySpiritBeadCount = 0;
                            client.Inventory.Remove(client.Player.DailySpiritBeadItem, 1, stream);
                            client.Inventory.AddItemWitchStack(729304, 0, 1, stream);

                            client.GainExpBall(1800, true, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.SubClass.AddStudyPoints(client, 40, stream);
                            client.Player.AddHeavenBlessing(stream, 60 * 60 * 10);
                            client.CreateBoxDialog("You received 180 minutes of EXP, 10 hours of Blessing, 40 Study Points and 1 Chi Token.");

                            client.Player.DailySpiritBeadItem = GetNextSpitiBead(client.Player.DailySpiritBeadItem);
                        }

                        break;
                    }
                case 2:
                    {
                        if (client.Player.ConquerPoints >= 500)
                        {
                            //   if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                            {
                                client.Player.ConquerPoints -= 500;
                                goto case 3;
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, but you don`t have enough CPs.");
                            data.AddOption("I~see.", 255).AddAvatar(84).FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.DailyUniqueSpiritBead)]
        public static void DailyUniqueSpiritBead(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.DailyQuestEnvoy, client.Player.Class, 2375);
            if (!client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                client.Player.QuestGUI.Accept(ActiveQuest, 0);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (GetDailySpiritBeadKills(client) == 0)
                            return;
                        if (client.Player.DailySpiritBeadCount >= GetDailySpiritBeadKills(client))
                        {
                            data.AddText("You`ve collect enough spirits. Do you want to claim 240 minutes of EXP, 15 hours of Blessing, 50 Study Points and 1 Chi Token, now?")
                              .AddOption("Yes,~of~course!", 3)
                              .AddOption("No,~not~now.", 255).FinalizeDialog();
                            break;
                        }
                        data.AddText("This bead needs to absorb " + GetDailySpiritBeadKills(client) + " spirits. Current spirits: " + client.Player.DailySpiritBeadCount + ".")
                               .AddOption("Fill~it~up.~(500CPs)", 1)
                               .AddOption("Okay.", 255).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        data.AddText("This is a Normal Spirit Bead. Once fully charged, you`ll receive 240 minutes of EXP, 15 hours of Blessing, 50 Study Points and 1 Chi Token")
                             .AddText("~Are you sure you want to pay 500 CPs to get the reward, directly?")
                             .AddOption("Yeah,~please!", 2)
                             .AddOption("Wait,~I~haven`t~decided!", 255).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId) || client.Player.DailySpiritBeadCount >= GetDailySpiritBeadKills(client))
                        {
                            client.Player.DailySpiritBeadCount = 0;
                            client.Inventory.Remove(client.Player.DailySpiritBeadItem, 1, stream);
                            client.Inventory.AddItemWitchStack(729304, 0, 1, stream);

                            client.GainExpBall(2300, true, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.SubClass.AddStudyPoints(client, 50, stream);
                            client.Player.AddHeavenBlessing(stream, 60 * 60 * 15);
                            client.CreateBoxDialog("You received 240 minutes of EXP, 15 hours of Blessing, 50 Study Points and 1 Chi Token.");

                            client.Player.DailySpiritBeadItem = GetNextSpitiBead(client.Player.DailySpiritBeadItem);
                        }

                        break;
                    }
                case 2:
                    {
                        if (client.Player.ConquerPoints >= 500)
                        {
                            //    if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                            {
                                client.Player.ConquerPoints -= 500;
                                goto case 3;
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, but you don`t have enough CPs.");
                            data.AddOption("I~see.", 255).AddAvatar(84).FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.DailyEliteSpiritBead)]
        public static void DailyEliteSpiritBead(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.DailyQuestEnvoy, client.Player.Class, 2375);
            Dialog data = new Dialog(client, stream);
            if (!client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                client.Player.QuestGUI.Accept(ActiveQuest, 0);
            switch (Option)
            {
                case 0:
                    {
                        if (GetDailySpiritBeadKills(client) == 0)
                            return;
                        if (client.Player.DailySpiritBeadCount >= GetDailySpiritBeadKills(client))
                        {
                            data.AddText("You`ve collect enough spirits. Do you want to claim 300 minutes of EXP, 24 hours of Blessing, 80 Study Points and 1 Chi Token, now?")
                              .AddOption("Yes,~of~course!", 3)
                              .AddOption("No,~not~now.", 255).FinalizeDialog();
                            break;
                        }
                        data.AddText("This bead needs to absorb " + GetDailySpiritBeadKills(client) + " spirits. Current spirits: " + client.Player.DailySpiritBeadCount + ".")
                               .AddOption("Fill~it~up.~(500CPs)", 1)
                               .AddOption("Okay.", 255).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        data.AddText("This is a Normal Spirit Bead. Once fully charged, you`ll receive 300 minutes of EXP, 24 hours of Blessing, 80 Study Points and 1 Chi Token.")
                                .AddText("~Are you sure you want to pay 500 CPs to get the reward, directly?")
                             .AddOption("Yeah,~please!", 2)
                             .AddOption("Wait,~I~haven`t~decided!", 255).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId) || client.Player.DailySpiritBeadCount >= GetDailySpiritBeadKills(client))
                        {
                            client.Player.DailySpiritBeadCount = 0;
                            client.Inventory.Remove(client.Player.DailySpiritBeadItem, 1, stream);
                            client.Inventory.AddItemWitchStack(729304, 0, 1, stream);

                            client.GainExpBall(3000, true, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.SubClass.AddStudyPoints(client, 80, stream);
                            client.Player.AddHeavenBlessing(stream, 60 * 60 * 24);
                            client.CreateBoxDialog("You received 300 minutes of EXP, 24 hours of Blessing, 80 Study Points and 1 Chi Token.");

                            client.Player.DailySpiritBeadItem = GetNextSpitiBead(client.Player.DailySpiritBeadItem);
                        }

                        break;
                    }
                case 2:
                    {
                        if (client.Player.ConquerPoints >= 500)
                        {
                            //if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                            {
                                client.Player.ConquerPoints -= 500;
                                goto case 3;
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, but you don`t have enough CPs.");
                            data.AddOption("I~see.", 255).AddAvatar(84).FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.DailySuperSpiritBead)]
        public static void DailySuperSpiritBead(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.DailyQuestEnvoy, client.Player.Class, 2375);
            Dialog data = new Dialog(client, stream);
            if (!client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                client.Player.QuestGUI.Accept(ActiveQuest, 0);
            switch (Option)
            {
                case 0:
                    {
                        if (GetDailySpiritBeadKills(client) == 0)
                            return;
                        if (client.Player.DailySpiritBeadCount >= GetDailySpiritBeadKills(client))
                        {
                            data.AddText("You`ve collect enough spirits. Do you want to claim 360 minutes of EXP, 48 hours of Blessing, 100 Study Points and 1 Chi Token, now?")
                              .AddOption("Yes,~of~course!", 3)
                              .AddOption("No,~not~now.", 255).FinalizeDialog();
                            break;
                        }
                        data.AddText("This bead needs to absorb " + GetDailySpiritBeadKills(client) + " spirits. Current spirits: " + client.Player.DailySpiritBeadCount + ".")
                               .AddOption("Fill~it~up.~(500CPs)", 1)
                               .AddOption("Okay.", 255).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        data.AddText("This is a Normal Spirit Bead. Once fully charged, you`ll receive 360 minutes of EXP, 48 hours of Blessing, 100 Study Points and 1 Chi Token.")
                             .AddText("~Are you sure you want to pay 500 CPs to get the reward, directly?")
                            .AddOption("Yeah,~please!", 2)
                            .AddOption("Wait,~I~haven`t~decided!", 255).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId) || client.Player.DailySpiritBeadCount >= GetDailySpiritBeadKills(client))
                        {
                            client.Player.DailySpiritBeadCount = 0;
                            client.Inventory.Remove(client.Player.DailySpiritBeadItem, 1, stream);
                            client.Inventory.AddItemWitchStack(729304, 0, 1, stream);

                            client.GainExpBall(3600, true, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.SubClass.AddStudyPoints(client, 100, stream);
                            client.Player.AddHeavenBlessing(stream, 60 * 60 * 48);
                            client.CreateBoxDialog("You received 360 minutes of EXP, 48 hours of Blessing, 100 Study Points and 1 Chi Token.");

                            client.Player.DailySpiritBeadItem = GetNextSpitiBead(client.Player.DailySpiritBeadItem);
                        }

                        break;
                    }
                case 2:
                    {
                        if (client.Player.ConquerPoints >= 500)
                        {
                            //   if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                            {
                                client.Player.ConquerPoints -= 500;
                                goto case 3;
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, but you don`t have enough CPs.");
                            data.AddOption("I~see.", 255).AddAvatar(84).FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.HeavenlyMaster)]
        public static void HeavenlyMaster(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.HeavenlyMaster, client.Player.Class, 6126);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Every day when you successfully challenged the Tower of Mystery, you can claim")
                                .AddText("~a Chi Token, 200 Champion Points, 3 Exorcism Tokens and 100 Study Points from me.");
                        data.AddOption("Take~me~to~the~tower.", 2);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Claim~my~rewards.", 30);
                        data.AddOption("Exchange~for~Exorcism~Pack.", 3)
                    .AddOption("Leave.", 255)
                    .AddAvatar(67)
                    .FinalizeDialog();

                        break;
                    }
                case 2:
                    {

                        client.Teleport(85, 75, 4020);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "movego");
                        break;
                    }
                case 30:
                    {
                        if (!client.Inventory.HaveSpace(2))
                        {
                            data.AddText("Please make 2 more spaces in your inventory.");
                            data.AddOption("I~see.", 255)
                                .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1))
                        {
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                            {

                                client.SendSysMesage("Congratulations! You've received a Chi Token, 3 Exorcism Tokens, 100 Study Points and 200 Champion Points!");
                                client.Player.AddChampionPoints(200);
                                client.Player.SubClass.AddStudyPoints(client, 100, stream);
                                client.Inventory.AddItemWitchStack(711211, 0, 3, stream);
                                client.Inventory.AddItemWitchStack(729304, 0, 1, stream);
                            }
                        }
                        else
                        {

                            data.AddText("You haven`t completed the challenge of the Tower of Mystery, and you can`t claim the rewards, otherwise you wold like to pay 1500 CPs or a Mystery Amulet.");
                            data.AddOption("Pay 1500 CPs for reward.", 11)
                                .AddOption("Swap MysteryAmulet for reward.", 10)
                                .AddOption("I haven`t decided, yet!", 255)
                                .AddAvatar(67).FinalizeDialog();
                            //You haven`t completed the challenge of the Tower of Mystery, and you can`t claim the rewards.
                        }

                        break;
                    }
                case 11:
                    {
                        if (client.Player.ConquerPoints >= 1500)
                        {
                            if (!client.Inventory.HaveSpace(2))
                            {
                                data.AddText("Please make 2 more spaces in your inventory.");
                                data.AddOption("I~see.", 255)
                                    .AddAvatar(67).FinalizeDialog();
                                break;
                            }
                            client.Player.QuestGUI.Accept(ActiveQuest, 0);
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                            {
                                client.Player.ConquerPoints -= 1500;
                                client.SendSysMesage("Congratulations! You've received a Chi Token, 3 Exorcism Tokens, 100 Study Points and 200 Champion Points!");
                                client.Player.AddChampionPoints(200);
                                client.Player.SubClass.AddStudyPoints(client, 100, stream);
                                client.Inventory.AddItemWitchStack(711211, 0, 3, stream);
                                client.Inventory.AddItemWitchStack(729304, 0, 1, stream);
                            }
                        }
                        else
                        {
                            data.AddText("You don`t have enough CPs to directly get the rewards.");
                            data.AddOption("Alright.", 255)
                                .AddAvatar(67).FinalizeDialog();
                        }
                        break;
                    }
                case 10:
                    {
                        if (client.Inventory.Contain(3600012, 1))
                        {
                            if (!client.Inventory.HaveSpace(2))
                            {
                                data.AddText("Please make 2 more spaces in your inventory.");
                                data.AddOption("I~see.", 255)
                                    .AddAvatar(67).FinalizeDialog();
                                break;
                            }
                            client.Player.QuestGUI.Accept(ActiveQuest, 0);
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                            {
                                client.Inventory.Remove(3600012, 1, stream);
                                client.SendSysMesage("Congratulations! You've received a Chi Token, 3 Exorcism Tokens, 100 Study Points and 200 Champion Points!");
                                client.Player.AddChampionPoints(200);
                                client.Player.SubClass.AddStudyPoints(client, 100, stream);
                                client.Inventory.AddItemWitchStack(711211, 0, 3, stream);
                                client.Inventory.AddItemWitchStack(729304, 0, 1, stream);
                            }
                        }
                        else
                        {
                            data.AddText("You don`t have Mystery amulet to directly get the rewards.");
                            data.AddOption("Alright.", 255)
                                .AddAvatar(67).FinalizeDialog();
                        }
                        break;
                    }

                case 3:
                    {
                        data.AddText("If you have 3 Exorcism Tokens, you can exchange for an Exorcism Pack. And if you have 9 tokens, you can get a")
                            .AddText("~Golden Exorcism Pack! Which one do you want to claim?");
                        data.AddOption("Exorcism~Pack.", 20)
                            .AddOption("Golden~Exorcism~Pack.", 21)
                            .AddOption("I`ll~think~about~it.", 255)
                            .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 20:
                    {
                        if (client.Inventory.Contain(711211, 3))
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                data.AddText("Please make 1 more space in your inventory.");
                                data.AddOption("I~see.", 255)
                                    .AddAvatar(67).FinalizeDialog();
                                break;
                            }
                            client.Inventory.Remove(711211, 3, stream);
                            client.Inventory.Add(stream, 720948);
                            client.SendSysMesage("You've successfully exchanged 3 Exorcism Tokens for an Exorcism Pack!", MsgMessage.ChatMode.System);
                        }
                        else
                        {
                            data.AddText("Sorry, but you don`t have 3 Exorcism Tokens.");
                            data.AddOption("I~see.", 255)
                                .AddAvatar(67).FinalizeDialog();
                        }

                        break;
                    }
                case 21:
                    {
                        if (client.Inventory.Contain(711211, 9))
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                data.AddText("Please make 1 more space in your inventory.");
                                data.AddOption("I~see.", 255)
                                    .AddAvatar(67).FinalizeDialog();
                                break;
                            }
                            client.Inventory.Remove(711211, 9, stream);
                            client.Inventory.Add(stream, 729594);
                            client.SendSysMesage("You've successfully exchanged 3 Exorcism Tokens for an Gold Exorcism Pack!", MsgMessage.ChatMode.System);
                        }
                        else
                        {
                            data.AddText("Sorry, but you don`t have 9 Exorcism Tokens.");
                            data.AddOption("I~see.", 255)
                                .AddAvatar(67).FinalizeDialog();
                        }

                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.EartMaster)]
        public static void EartMaster(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.HeavenlyMaster, client.Player.Class, 6126);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Welcome, my friend. Are you sure you want to release the Thrilling Spook now, or would you rather return to the Market");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted) == false
                            || !client.Map.ContainMobID(20160, client.Player.DynamicID))
                            data.AddOption("Release~a~Thrilling~Spook.", 1);
                        data.AddOption("Send~me~to~the~Market.", 2)
                        .AddOption("Nothing.", 255)
                        .AddAvatar(67)
                        .FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        client.Teleport(251, 153, 1036);
                        break;
                    }
                case 1:
                    {
                        data.AddText("I just want to be sure. Shall I release the Thrilling Spook, now?");
                        data.AddOption("Okay.", 3)
                            .AddOption("Not~now.", 255)
                            .AddAvatar(67)
                            .FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        if (client.Player.Level < 70)
                        {
                            data.AddText("Sorry,~you~cannot~release the Thrilling~Spook ~before~your~Level~is~70.~Please~train~harder.")
                                .AddOption("Oops.", 255)
                                .AddAvatar(67).FinalizeDialog();
                            return;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted) == false
                             || !client.Map.ContainMobID(20160, client.Player.DynamicID))
                        {
                            client.Player.QuestGUI.Accept(ActiveQuest, 0);
                            client.CreateBoxDialog("You~killed~a~Thrilling~Spook!~Speak~with~the~Heavenly~Master~to~claim~a~reward.");
                            Database.Server.AddMapMonster(stream, client.Map, 20160, client.Player.X, client.Player.Y, 10, 10, 1, client.Player.DynamicID, true, MsgFloorItem.MsgItemPacket.EffectMonsters.EarthquakeAndNight);
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.DailyQuestEnvoy)]
        public static void DailyQuestEnvoy(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.DailyQuestEnvoy, client.Player.Class, 6329);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DailyQuestEnvoy, client.Player.Class, 6245);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DailyQuestEnvoy, client.Player.Class, 6390);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DesertGuardian, client.Player.Class, 6049);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DailyQuestEnvoy, client.Player.Class, 6366);
            var ActiveQuest6 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DailyQuestEnvoy, client.Player.Class, 6014);
            var ActiveQuest7 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DailyQuestEnvoy, client.Player.Class, 2375);
            var ActiveQuest8 = Database.QuestInfo.GetFinishQuest((uint)NpcID.HeavenlyMaster, client.Player.Class, 6126);


            switch (Option)
            {
                case 0:
                    {
                        data.AddText("All heroes can talk to me to learn about the daily tasks, and go to the required places to accept the work.");
                        //data.AddOption("Cross-server~missions~(Lv.110)", 120);
                        data.AddOption("Bright~Fortune.~(" + (string)((client.Player.ClaimTowerAmulets == 0) ? "Lv.110" : "completed") + ")", 121);
                        data.AddOption("Worship~Leaders~(" + GetQuestModes(client, ActiveQuest.MissionId, 50) + ").", 1);
                        data.AddOption("Everything~Has~A~Price~(" + GetQuestModes(client, ActiveQuest2.MissionId, 60) + ").", 3);
                        data.AddOption("Release~the~Souls~(" + GetQuestModes(client, ActiveQuest4.MissionId, 70) + ")", 20);
                        //data.AddOption("Rare~Materials.~(" + GetQuestModes(client, ActiveQuest5.MissionId, 75) + ")", 30);
                        data.AddOption("Magnolia Envoy~(" + GetQuestModes(client, ActiveQuest6.MissionId, 80) + ")", 40);
                        //data.AddOption("Tower~of~Mystery.~[(" + GetQuestModes(client, ActiveQuest8.MissionId, 90) + ")", 60);
                        data.AddOption("Spirit~Beads~(" + GetQuestModes(client, ActiveQuest7.MissionId, 100) + ")", 50);
                        //data.AddOption("Heaven~Treasury.~(" + GetQuestModes(client, ActiveQuest3.MissionId, 110) + ")", 10);
                        data.AddOption("Leave.", 255)
     .AddAvatar(84).FinalizeDialog();

                        break;
                    }
                case 121:
                    {
                        if (client.Player.ClaimTowerAmulets == 0)
                        {
                            client.Teleport(88, 362, 3998);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "movego");
                        }
                        else
                        {

                            data.AddText("You`ve already made a big harvest in the Fiery Dragon region today. If you want to hunt for more treasures, please come to me tomorrow.");
                            data.AddOption("Learn~more~about~daily~quests.", 122)
                                .AddOption("Enter~the~Fiery~Dragon~region.", 123).AddAvatar(84).FinalizeDialog();
                        }
                        break;
                    }
                case 122:
                    {
                        goto case 0;
                    }
                case 123:
                    {
                        client.Teleport(88, 362, 3998);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "movego");
                        break;
                    }
                case 120:
                    {
                        client.SendSysMesage("Every day if you complete the cross-server missions first, you'll win many special tokens which enable you can directly complete corresponding daily quests. Don`t miss the change!", MsgMessage.ChatMode.System);
                        client.Player.QuestGUI.SendAutoPatcher(1002, 281, 291, 17400);
                        break;
                    }
                case 60:
                    {
                        if (client.Player.Level < 90)
                        {
                            data.AddText("I`m sorry, but you have to reach Level 90 to accept the quest.");
                            data.AddOption("I~see", 255).AddAvatar(84).FinalizeDialog();
                            break;
                        }

                        data.AddText("In the Wind Plain, there is the Tower of Mystery sealing the most cruel devils. For heroes who defeat those devils to energize the Mystery Pearl,")
       .AddText("~the Bright Tribe promises to give them wonderful rewards which include <tip color=0xfff05050 desc=collect#9#fragments#to#get#270#CPs#(B)>Blazing CP Fragments, </tip>??")
       .AddText("<tip color=0xfff05050 desc=randomly#give#Luxury#Protection#Pack,#Golden#Training#Pack,#Plentiful#Talent#Pack,#etc.>Concerted Effort Pack,</tip>")
       .AddText("~Chi Points and Study Points. If you`re willing to help, please talk to the Heavenly Master.");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest8.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Head~to~see~Heavenly~Master.", 61);
                        data.AddOption("Leave.", 255)
                        .AddAvatar(84).FinalizeDialog();

                        break;
                    }
                case 61:
                    {
                        client.Teleport(250, 150, 1036);
                        break;
                    }
                case 50:
                    {
                        return;

                        if (client.Player.Level < 100)
                        {
                            data.AddText("I`m sorry, but you have to reach Level 100 to accept the quest.");
                            data.AddOption("I~see", 255).AddAvatar(84).FinalizeDialog();
                            break;
                        }

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest7.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.DailySpiritBeadCount >= GetDailySpiritBeadKills(client))
                            {
                                client.Inventory.AddItemWitchStack(729304, 0, 1, stream);
                                switch (client.Player.DailySpiritBeadItem)
                                {
                                    case 729611:
                                        {
                                            client.GainExpBall(1200, true, Role.Flags.ExperienceEffect.angelwing);
                                            client.Player.SubClass.AddStudyPoints(client, 30, stream);
                                            client.Player.AddHeavenBlessing(stream, 60 * 60 * 7);
                                            client.CreateBoxDialog("You received 120 minutes of EXP, 7 hours of Blessing, 30 Study Points and 1 Chi Token.");

                                            break;
                                        }
                                    case 729612:
                                        {
                                            client.GainExpBall(1800, true, Role.Flags.ExperienceEffect.angelwing);
                                            client.Player.SubClass.AddStudyPoints(client, 40, stream);
                                            client.Player.AddHeavenBlessing(stream, 60 * 60 * 10);
                                            client.CreateBoxDialog("You received 180 minutes of EXP, 10 hours of Blessing, 40 Study Points and 1 Chi Token.");

                                            break;
                                        }
                                    case 729613:
                                        {
                                            client.GainExpBall(2400, true, Role.Flags.ExperienceEffect.angelwing);
                                            client.Player.SubClass.AddStudyPoints(client, 50, stream);
                                            client.Player.AddHeavenBlessing(stream, 60 * 60 * 15);
                                            client.CreateBoxDialog("You received 240 minutes of EXP, 15 hours of Blessing, 50 Study Points and 1 Chi Token.");

                                            break;
                                        }
                                    case 729614:
                                        {
                                            client.GainExpBall(3000, true, Role.Flags.ExperienceEffect.angelwing);
                                            client.Player.SubClass.AddStudyPoints(client, 80, stream);
                                            client.Player.AddHeavenBlessing(stream, 60 * 60 * 24);
                                            client.CreateBoxDialog("You received 300 minutes of EXP, 24 hours of Blessing, 80 Study Points and 1 Chi Token.");

                                            break;
                                        }
                                    case 729703:
                                        {
                                            client.GainExpBall(3600, true, Role.Flags.ExperienceEffect.angelwing);
                                            client.Player.SubClass.AddStudyPoints(client, 100, stream);
                                            client.Player.AddHeavenBlessing(stream, 60 * 60 * 48);
                                            client.CreateBoxDialog("You received 360 minutes of EXP, 48 hours of Blessing, 100 Study Points and 1 Chi Token.");

                                            break;
                                        }
                                }
                                client.Player.DailySpiritBeadItem = GetNextSpitiBead(client.Player.DailySpiritBeadItem);
                                break;
                            }

                        }
                        if (client.Player.DailySpiritBeadItem == 0)
                            client.Player.DailySpiritBeadItem = GetNextSpitiBead(0);
                        var DbItem = Database.Server.ItemsBase[client.Player.DailySpiritBeadItem];
                        var DbItem2 = Database.Server.ItemsBase[GetNextSpitiBead(client.Player.DailySpiritBeadItem)];

                        data.AddText("You can claim a " + DbItem.Name + ", today. If you complete the task, I`ll give you a " + DbItem2.Name + ", tomorrow.\nBy the way, you can do this job with other monster elimination tasks, at the same time.");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest7.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            data.AddOption("Claim~a~bead.", 51);
                            data.AddOption("Get~a~" + DbItem2.Name + ".~(100CP)", 52);
                            data.AddOption("Complete~the~task.~(500CPs)", 53);
                        }
                        data.AddOption("What~are~the~beads?", 54);
                        data.AddOption("Leave.", 255)
                          .AddAvatar(84).FinalizeDialog();


                        break;
                    }
                case 54:
                    {
                        return;

                        data.AddText("The Spirit Beads have 5 different qualities: Normal, Refined, Unique, Elite and Super. When you kill monsters, the bead will absorb the ")
                            .AddText("~monster spirits. When it`s fully charged, you can use the bead to claim a reward. If you complete the task, you`ll be able to claim")
                            .AddText("~a better bead, next time. As for the Super Spirit Bead, the next one will go back to a Normal bead.");
                        data.AddOption("How~many~spirits~are~needed?", 55)
                            .AddOption("What`re~the~rewards?", 56)
                            .AddOption("How~to~calculate~the~spirits?", 57)
                            .AddOption("I~want~to~know~something~else.", 50)
                            .AddOption("I~see.", 255)
                            .AddAvatar(84).FinalizeDialog();

                        break;
                    }
                case 57:
                    {
                        data.AddText("Killing a monster below Level 70 will add 1 spirit. Level 70 - 99, 2 spirits. Level 100 - 119, 3 spirits. Level 120 - 140, 4 spirits.")
                              .AddText("~A monster leader will provide 10 spirits. As for the Terato Dragon, Snow Banshee, Snow Banshee Soul, Sword Master and Thrilling Spook 3,")
                              .AddText("~you`ll receive 1,000 spirits, if you`re able to kill anyone of them!")
                            .AddOption("I~want~to~know~something~else.", 54)
                            .AddOption("I~see.", 255)
                            .AddAvatar(84).FinalizeDialog();

                        break;
                    }
                case 56:
                    {
                        data.AddText("Normal Spirit Bead: 120 minutes of EXP, 7 hours of Blessing, 30 Study Points and 1 Chi Token.\n")
                              .AddText("Refined Spirit Bead: 180 minutes of EXP, 10 hours of Blessing, 40 Study Points and 1 Chi Token.\n")
                              .AddText("Unique Spirit Bead: 240 minutes of EXP, 15 hours of Blessing, 50 Study Points and 1 Chi Token.\n")
                              .AddText("Elite Spirit Bead: 300 minutes of EXP, 24 hours of Blessing, 80 Study Points and 1 Chi Token.\n")
                              .AddText("Super bead: 360 minutes of EXP, 48 hours of Blessing, 100 Study Points and 1 Chi Token.\n")
                            .AddOption("I~want~to~know~something~else.", 54)
                            .AddOption("I~see.", 255)
                            .AddAvatar(84).FinalizeDialog();

                        break;
                    }
                case 55:
                    {
                        data.AddText("A Normal Spirit Bead can absorb 2,500 monster spirits. A Refined bead needs 2,000 spirits to fill it up,")
                              .AddText("~1,500 spirits for the Unique bead, 1,000 spirits for the Elite bead, and 500 spirits for a Super bead.")
                              .AddText("~a better bead, next time. As for the Super Spirit Bead, the next one will go back to a Normal bead.")
                            .AddOption("I~want~to~know~something~else.", 54)
                            .AddOption("I~see.", 255)
                            .AddAvatar(84).FinalizeDialog();

                        break;
                    }
                case 51:
                    {
                        return;
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory");
                            data.AddOption("Let me check.", 255).AddAvatar(84).FinalizeDialog();
                            break;
                        }
                        if (client.Player.DailySpiritBeadItem != 0)
                        {
                            if (client.Inventory.Contain(client.Player.DailySpiritBeadItem, 1))
                            {
                                data.AddText("You~already~have~a~Spirit~Bead~in~your~inventory.");
                                data.AddOption("Ok", 255).AddAvatar(84).FinalizeDialog();
                                break;
                            }
                        }
                        client.Player.QuestGUI.Accept(ActiveQuest7, 0);
                        var DbItem = Database.Server.ItemsBase[client.Player.DailySpiritBeadItem];
                        client.Player.DailySpiritBeadItem = DbItem.ID;
                        client.Inventory.Add(stream, DbItem.ID);
                        client.CreateBoxDialog("You received a " + DbItem.Name + "!");

                        break;
                    }
                case 53:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory");
                            data.AddOption("Let me check.", 255).AddAvatar(84).FinalizeDialog();
                            break;
                        }

                        if (client.Player.ConquerPoints >= 500)
                        {
                            client.Player.ConquerPoints -= 500;
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest7.MissionId))
                            {
                                client.Inventory.AddItemWitchStack(729304, 0, 1, stream);
                                switch (client.Player.DailySpiritBeadItem)
                                {
                                    case 729611:
                                        {
                                            client.GainExpBall(1200, true, Role.Flags.ExperienceEffect.angelwing);
                                            client.Player.SubClass.AddStudyPoints(client, 30, stream);
                                            client.Player.AddHeavenBlessing(stream, 60 * 60 * 7);
                                            client.CreateBoxDialog("You received 120 minutes of EXP, 7 hours of Blessing, 30 Study Points and 1 Chi Token.");

                                            break;
                                        }
                                    case 729612:
                                        {
                                            client.GainExpBall(1800, true, Role.Flags.ExperienceEffect.angelwing);
                                            client.Player.SubClass.AddStudyPoints(client, 40, stream);
                                            client.Player.AddHeavenBlessing(stream, 60 * 60 * 10);
                                            client.CreateBoxDialog("You received 180 minutes of EXP, 10 hours of Blessing, 40 Study Points and 1 Chi Token.");

                                            break;
                                        }
                                    case 729613:
                                        {
                                            client.GainExpBall(2400, true, Role.Flags.ExperienceEffect.angelwing);
                                            client.Player.SubClass.AddStudyPoints(client, 50, stream);
                                            client.Player.AddHeavenBlessing(stream, 60 * 60 * 15);
                                            client.CreateBoxDialog("You received 240 minutes of EXP, 15 hours of Blessing, 50 Study Points and 1 Chi Token.");

                                            break;
                                        }
                                    case 729614:
                                        {
                                            client.GainExpBall(3000, true, Role.Flags.ExperienceEffect.angelwing);
                                            client.Player.SubClass.AddStudyPoints(client, 80, stream);
                                            client.Player.AddHeavenBlessing(stream, 60 * 60 * 24);
                                            client.CreateBoxDialog("You received 300 minutes of EXP, 24 hours of Blessing, 80 Study Points and 1 Chi Token.");

                                            break;
                                        }
                                    case 729703:
                                        {
                                            client.GainExpBall(3600, true, Role.Flags.ExperienceEffect.angelwing);
                                            client.Player.SubClass.AddStudyPoints(client, 100, stream);
                                            client.Player.AddHeavenBlessing(stream, 60 * 60 * 48);
                                            client.CreateBoxDialog("You received 360 minutes of EXP, 48 hours of Blessing, 100 Study Points and 1 Chi Token.");

                                            break;
                                        }
                                }
                            }
                            client.Player.DailySpiritBeadItem = GetNextSpitiBead(client.Player.DailySpiritBeadItem);
                        }
                        else
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                data.AddText("Sorry, but you don`t have enough CPs.");
                                data.AddOption("I~see.", 255).AddAvatar(84).FinalizeDialog();

                                break;
                            }
                        }
                        break;
                    }
                case 52:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory");
                            data.AddOption("Let me check.", 255).AddAvatar(84).FinalizeDialog();
                            break;
                        }
                        if (client.Player.DailySpiritBeadItem != 0)
                        {
                            if (client.Inventory.Contain(client.Player.DailySpiritBeadItem, 1))
                            {
                                data.AddText("You~already~have~a~Spirit~Bead~in~your~inventory.");
                                data.AddOption("Ok", 255).AddAvatar(84).FinalizeDialog();
                                break;
                            }
                        }
                        if (client.Player.ConquerPoints >= 100)
                        {
                            client.Player.QuestGUI.Accept(ActiveQuest7, 0);
                            client.Player.ConquerPoints -= 100;
                            client.Player.DailySpiritBeadItem = GetNextSpitiBead(client.Player.DailySpiritBeadItem);
                            var DbItem = Database.Server.ItemsBase[client.Player.DailySpiritBeadItem];
                            client.Player.DailySpiritBeadItem = DbItem.ID;
                            client.Inventory.Add(stream, DbItem.ID);
                            client.CreateBoxDialog("You received a " + DbItem.Name + "!");
                        }
                        else
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                data.AddText("Sorry, but you don`t have enough CPs.");
                                data.AddOption("I~see.", 255).AddAvatar(84).FinalizeDialog();
                                break;
                            }
                        }


                        break;
                    }
                case 40:
                    {
                        if (client.Player.Level < 80)
                        {
                            data.AddText("I`m sorry, but you have to reach Level 80 to accept the quest.");
                            data.AddOption("I~see", 255).AddAvatar(84).FinalizeDialog();
                            break;
                        }
                        data.AddText("If you help the Magnolia Envoy plant a beautiful magnolia in the Garden, you`ll receive some EXP, Study Points, 1 Chi Token, and")
                            .AddText("~even some precious items like a Dragon Ball and Super Gems!");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Visit~the~Magnolia~Envoy.", 41);
                        data.AddOption("Leave.", 255)
                          .AddAvatar(84).FinalizeDialog();

                        break;
                    }
                case 41:
                    {
                        client.Teleport(106, 108, 1806);
                        break;
                    }
                case 30:
                    {
                        if (client.Player.Level < 75)
                        {
                            data.AddText("I`m sorry, but you have to reach Level 75 to accept the quest.");
                            data.AddOption("I~see", 255).AddAvatar(84).FinalizeDialog();
                            break;
                        }
                        data.AddText("Hey, I`m looking for some able men to collect items for me! You know, I always pay a high price for what I want.");
                        data.AddOption("Count~me~in!", 31).AddOption("Sorry,~I`m~busy~now.", 255).AddAvatar(84).FinalizeDialog();

                        break;
                    }
                case 31:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("You`ve finished today! Please come again tomorrow!");
                            data.AddOption("Okay.", 255).FinalizeDialog();
                            break;
                        }

                        data.AddText("     \t\t\t\t\t\t\t\t\tRare Materials\n")
                            .AddText("\t\t\t\t-----------------------\n")
                            .AddText("\t\t\t\tQuest Quality: [" + client.Player.DailyRareChance + 1 + "-Star]\n")
                            .AddText("\t\t\t\tItem: [QuestChanceA]; Amount: 2\n")
                            .AddText("\t\t\t\tChanged Times:  [ " + client.Player.DailyRareChance + " ]\n");
                        if (client.Player.DailyRareChance == 1)
                            data.AddText("\t\t\t\tRewards: 30 Study Points, 120 minutes of EXP and 1 Chi Token.\n");
                        else if (client.Player.DailyRareChance == 2)
                            data.AddText("50 Study Points, 180 minutes of EXP and 1 Chi Token.\n");
                        else if (client.Player.DailyRareChance == 3)
                            data.AddText("70 Study Points, 240 minutes of EXP, 1 Chi Token and 1 Protection Pill.");
                        data.AddText("\t\t\t\t-----------------------");
                        data.AddOption("Hand~in~the~item.", 32)
                            .AddOption("Change~the~required~item.", 33)
                            .AddOption("Directly~complete~it.", 34)
                            .AddOption("Sorry,~I`m~busy~now.", 255).AddAvatar(84).FinalizeDialog();


                        break;
                    }
                case 34:
                    {
                        data.AddText("If you would like to pay 50 CPs, you can directly claim the rewards without collecting the items for me.");
                        data.AddOption("Pay~50~CPs~to~complete~it.", 35)
                            .AddOption("I`ll~think~about~it.", 255).AddAvatar(84).FinalizeDialog();

                        break;
                    }
                case 35:
                    {
                        if (client.Player.ConquerPoints >= 50)
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                data.AddText("Please make 1 more space in your inventory");
                                data.AddOption("Let me check.", 255).AddAvatar(84).FinalizeDialog();
                                break;
                            }
                            if (!client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                                client.Player.QuestGUI.Accept(ActiveQuest5, 0);

                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest5.MissionId))
                            {
                                client.Player.ConquerPoints -= 50;
                                client.CreateBoxDialog("You received 70 Study Points, 240 minutes of EXP, 1 Chi Token and 1 Protection Pill.");
                                client.GainExpBall(2400, true, Role.Flags.ExperienceEffect.angelwing);
                                client.Player.SubClass.AddStudyPoints(client, 70, stream);
                                client.Inventory.AddItemWitchStack(729304, 0, 1, stream);
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, but you don`t have enough CPs.");
                            data.AddOption("Okay.", 255).AddAvatar(84).FinalizeDialog();
                        }

                        break;
                    }
                case 33:
                    {
                        if (client.Player.DailyRareChance == 3)
                        {
                            data.AddText("You`ve finished today! Please come again tomorrow!");
                            data.AddOption("Okay.", 255).FinalizeDialog();
                            break;
                        }
                        if (client.Player.DonationPoints >= 200)
                        {
                            client.Player.DonationPoints -= 200;
                            client.Player.SendUpdate(stream, client.Player.DonationPoints, MsgUpdate.DataType.RaceShopPoints);
                            client.Player.DailyRareChance += 1;
                            data.AddText("You are good. Now you have the item.");
                            data.AddOption("Thanks", 255).AddAvatar(84).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("I won`t change my mind if you don`t have 200 Horse Racing Points!");
                            data.AddOption("Alright.", 255).AddAvatar(84).FinalizeDialog();
                        }

                        break;
                    }
                case 32:
                    {
                        if (client.Player.DailyRareChance > 0)
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                data.AddText("Please make 1 more space in your inventory");
                                data.AddOption("Let me check.", 255).AddAvatar(84).FinalizeDialog();
                                break;
                            }
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest5.MissionId))
                            {
                                if (client.Player.DailyRareChance == 1)
                                {
                                    client.GainExpBall(1200, true, Role.Flags.ExperienceEffect.angelwing);
                                    client.CreateBoxDialog("You received 30 Study Points, 120 minutes of EXP and 1 Chi Token.");
                                    client.Player.SubClass.AddStudyPoints(client, 30, stream);
                                    client.Inventory.AddItemWitchStack(729304, 0, 1, stream);
                                }
                                else if (client.Player.DailyRareChance == 2)
                                {
                                    client.CreateBoxDialog("You received 50 Study Points, 180 minutes of EXP and 1 Chi Token.");
                                    client.GainExpBall(1800, true, Role.Flags.ExperienceEffect.angelwing);
                                    client.Player.SubClass.AddStudyPoints(client, 50, stream);
                                    client.Inventory.AddItemWitchStack(729304, 0, 1, stream);
                                }
                                else if (client.Player.DailyRareChance == 3)
                                {
                                    client.CreateBoxDialog("You received 70 Study Points, 240 minutes of EXP, 1 Chi Token and 1 Protection Pill.");
                                    client.GainExpBall(2400, true, Role.Flags.ExperienceEffect.angelwing);
                                    client.Player.SubClass.AddStudyPoints(client, 70, stream);
                                    client.Inventory.AddItemWitchStack(729304, 0, 1, stream);
                                }
                            }
                        }
                        else
                        {
                            data.AddText("Are you kidding me? You don`t have the items I want!");
                            data.AddOption("I`ll~bring~you~some!", 255).AddAvatar(84).FinalizeDialog();
                        }

                        break;
                    }
                case 20:
                    {
                        if (client.Player.Level < 70)
                        {
                            data.AddText("I`m sorry, but you have to reach Level 70 to accept the quest.");
                            data.AddOption("I~see", 255).AddAvatar(84).FinalizeDialog();
                            break;
                        }
                        data.AddText("Help the Desert Guardian release the souls of 8 soldiers in the Desert. Once completed, you`ll receive")
                        .AddText("~120 minutes of EXP, 50 Study Points and 1 Chi Token.");
                        if (!client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            data.AddOption("Go~to~the~Desert.", 21);
                        data.AddOption("Leave.", 255).AddAvatar(84).FinalizeDialog();

                        break;
                    }
                case 21:
                    {
                        client.Teleport(539, 646, 1000);
                        break;
                    }
                case 10:
                    {
                        if (client.Player.Level < 110 && client.Player.Reborn == 0)
                        {
                            data.AddText("I`m sorry, but you have to reach Level 110 to accept the quest.");
                            data.AddOption("I~see", 255).AddAvatar(84).FinalizeDialog();
                            break;
                        }

                        data.AddText("Trust me, I can never over praise the Heaven Treasury. It`s the top place that keeps fabulous treasures.")
                            .AddText("~If you`ve reached Level 110 or been reborn, I`ll give you a chance to enter that amazing land.");
                        if (!client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            data.AddOption("Take~me~to~Heaven~Treasury!", 11);
                        data.AddOption("I`m~just~passing~by.", 255).AddAvatar(84).FinalizeDialog();

                        break;
                    }
                case 11:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        client.CreateBoxDialog("You~entered~the~Heaven~Treasury!~Go~pick~a~Mystery~Chest!");
                        client.Teleport(61, 53, 9972);


                        break;
                    }
                case 1:
                    {
                        if (client.Player.Level < 50)
                        {
                            data.AddText("I`m sorry, but you have to reach Level 50 to accept the quest.");
                            data.AddOption("I~see", 255).AddAvatar(84).FinalizeDialog();
                            break;
                        }
                        data.AddText("If you worship the leaders of the Supreme Guilds in the Ancestral Hall, you`ll receive some rewards and a Chi Token. If the Guild Leaders are touched by your sincerity,");
                        data.AddText("~you`ll receive 200 Study Points and 20 CPs!");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Cool!~Send~me~there!", 2)
                                .AddOption("Awesome!", 255);
                        else
                            data.AddOption("Check~other~quests.", 255);
                        data.AddAvatar(84).FinalizeDialog();


                        break;
                    }
                case 2:
                    {
                        client.Teleport(53, 56, 3081, 0);
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        break;
                    }
                case 3:
                    {
                        if (client.Player.Level < 60)
                        {
                            data.AddText("I`m sorry, but you have to reach Level 60 to accept the quest.");
                            data.AddOption("I~see", 255).AddAvatar(84).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("When you`re killing monsters, you`ll have the chance to get the items I need. If you hand in the items I need according to")
                                .AddText("~the list, you`ll be handsomely rewarded.");
                            data.AddOption("What`s~the~reward?", 7).AddOption("Leave.", 255).AddAvatar(84).FinalizeDialog();
                            break;
                        }
                        data.AddText("\t\t\t\t\t\t\t\t\t\tItem List\n")
                            .AddText("\t\t\t??????????????????????????????????????????????\n")
                            .AddText("\t\t\tItem: [BirdClaw]\n")
                            .AddText("\t\t\tAmount: [25]\n")
                            .AddText("\t\t\tMonster: [Birdman][BirdmanL88]\n")
                            .AddText("\t\t\tLocation: [Island]\n")
                            .AddText("\t\t\tChanged times: [1]\n")
                            .AddText("\t\t\t??????????????????????????????????????????????\n")
                         .AddOption("Hand~in~items.", 4)
                         .AddOption("Pay~50~CPs~to~complete~it.", 5)
                         .AddOption("Directly~complete~the~quest.", 110)
                         .AddOption("Claim~a~list.", 6)
                         .AddOption("What`s~the~reward?", 7)
                         .AddAvatar(84)
                        .FinalizeDialog();

                        break;
                    }
                case 110:
                    {
                        data.AddText("If you think it`s too troublesome to collect these materials, you can give me 50 CPs")
                            .AddText("~or a Collection Order to directly complete the quest and claim the reward.")
  .AddOption("Use~a~[Collection~Order].", 111)
  .AddOption("Directly~complete.~(50~CPs).", 112)
  .AddOption("I`ll~think~about~it.", 255)
  .AddAvatar(226).FinalizeDialog();
                        break;
                    }
                case 112:
                    {

                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            break;
                        if (client.Player.ConquerPoints >= 50)
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                data.AddText("Please make 1 more space in your inventory");
                                data.AddOption("Let me check.", 255).AddAvatar(226).FinalizeDialog();
                                break;
                            }
                            client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                            {

                                client.Player.ConquerPoints -= 50;
                                client.GainExpBall(600, true, Role.Flags.ExperienceEffect.bless);
                                client.Inventory.Add(stream, 729304);
                                client.Player.SubClass.AddStudyPoints(client, 50, stream);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "eidolon");
                                client.CreateBoxDialog("You~received~600~minutes~of~EXP,~50~Study~Points~and~1~Chi~Token!");
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, but you don`t have enough CPs.");
                            data.AddOption("I~see.", 255).AddAvatar(226).FinalizeDialog();
                        }
                        break;
                    }
                case 111:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            break;
                        if (client.Inventory.Contain(3008731, 1))
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                data.AddText("Please make 1 more space in your inventory");
                                data.AddOption("Let me check.", 255).AddAvatar(226).FinalizeDialog();
                                break;
                            }
                            client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                            {
                                client.Inventory.Remove(3008731, 1, stream);
                                client.GainExpBall(600, true, Role.Flags.ExperienceEffect.bless);
                                client.Inventory.Add(stream, 729304);
                                client.Player.SubClass.AddStudyPoints(client, 50, stream);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "eidolon");
                                client.CreateBoxDialog("You~received~600~minutes~of~EXP,~50~Study~Points~and~1~Chi~Token!");
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have [Collection~Order] Token.");
                            data.AddOption("I~see.", 255).AddAvatar(226).FinalizeDialog();
                        }
                        break;
                    }
                case 6:
                    {
                        if (client.Inventory.Contain(729094, 25))
                        {
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                            {
                                client.Inventory.Remove(729094, 25, stream);

                                data.AddText("Well done! Here is your reward.");
                                data.AddOption("Thanks.", 255).AddAvatar(84).FinalizeDialog();

                                uint MinutesExp = 0;
                                if (client.Player.Level >= 60 && client.Player.Level <= 80)
                                    MinutesExp = 180;
                                else if (client.Player.Level >= 81 && client.Player.Level <= 100)
                                    MinutesExp = 240;
                                if (client.Player.Level >= 101 && client.Player.Level <= 110)
                                    MinutesExp = 300;
                                else if (client.Player.Level >= 111 && client.Player.Level <= 120)
                                    MinutesExp = 360;
                                else if (client.Player.Level >= 121 && client.Player.Level <= 130)
                                    MinutesExp = 480;
                                else if (client.Player.Level >= 131)
                                    MinutesExp = 600;

                                client.Inventory.Remove(729087, 1, stream);
                                client.GainExpBall(MinutesExp / 60 * 600, true, Role.Flags.ExperienceEffect.angelwing);
                                client.CreateBoxDialog("You~received~" + MinutesExp + "~minutes~of~EXP,~50~Study~Points~and~1~Chi~Token!");

                                client.Inventory.AddItemWitchStack(729304, 0, 1, stream);
                                client.Player.SubClass.AddStudyPoints(client, 50, stream);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "eidolon");
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, but you don`t have 25 BirdClaw. Hurry up!")
    .AddOption("Okay.", 255)
    .AddAvatar(226).FinalizeDialog();
                        }

                        break;
                    }
                case 7:
                    {
                        data.AddText("Level 60 - 80: 180 minutes of EXP, 50 Study Points and a Chi Token\n")
                            .AddText("Level 81 - 100: 240 minutes of EXP, 50 Study Points and a Chi Token\n")
                            .AddText("Level 101 - 110: 300 minutes of EXP, 50 Study Points and a Chi Token\n")
                            .AddText("Level 111 - 120: 360 minutes of EXP, 50 Study Points and a Chi Token\n")
                            .AddText("Level 121 - 130: 480 minutes of EXP, 50 Study Points and a Chi Token\n")
                            .AddText("Level 131+: 600 minutes of EXP, 50 Study Points and a Chi Token\n")
                              .AddOption("Leave.", 255).AddAvatar(84)
                .FinalizeDialog();

                        break;
                    }
                case 4:
                    {
                        if (client.Inventory.Contain(729087, 1) == false)
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                data.AddText("Please make 1 more space in your inventory");
                                data.AddOption("Let me check.", 255).FinalizeDialog();
                                break;
                            }
                            client.Inventory.Add(stream, 729087);
                            client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        }
                        else
                        {
                            data.AddText("Sorry, but you already had a list in your inventory.")
    .AddOption("I~forgot.", 255)
    .AddAvatar(226).FinalizeDialog();
                        }

                        break;
                    }
                case 5:
                    {
                        if (client.Player.ConquerPoints >= 50)
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                data.AddText("Please make 1 more space in your inventory");
                                data.AddOption("Let me check.", 255).FinalizeDialog();
                                break;
                            }
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                            {
                                uint MinutesExp = 0;
                                if (client.Player.Level >= 60 && client.Player.Level <= 80)
                                    MinutesExp = 180;
                                else if (client.Player.Level >= 81 && client.Player.Level <= 100)
                                    MinutesExp = 240;
                                if (client.Player.Level >= 101 && client.Player.Level <= 110)
                                    MinutesExp = 300;
                                else if (client.Player.Level >= 111 && client.Player.Level <= 120)
                                    MinutesExp = 360;
                                else if (client.Player.Level >= 121 && client.Player.Level <= 130)
                                    MinutesExp = 480;
                                else if (client.Player.Level >= 131)
                                    MinutesExp = 600;

                                client.Inventory.Remove(729087, 1, stream);
                                client.GainExpBall(MinutesExp / 60 * 600, true, Role.Flags.ExperienceEffect.angelwing);
                                client.CreateBoxDialog("You~received~" + MinutesExp + "~minutes~of~EXP,~50~Study~Points~and~1~Chi~Token!");
                                client.Player.ConquerPoints -= 50;
                                client.Inventory.AddItemWitchStack(729304, 0, 1, stream);
                                client.Player.SubClass.AddStudyPoints(client, 50, stream);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "eidolon");
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, but you don`t have enough CPs.")
                                .AddOption("Okay.", 255).AddAvatar(84)
                  .FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.GoodManLiu)]
        public static void GoodManLiu(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Thanks for coming to the Ancestral Hall. They`re all the greatest Guild Leaders of all time!")
                       .AddOption("How~to~worship?", 2).AddOption("Back~to~Twin~City.", 3).AddOption("Indeed!", 255).AddAvatar(47)
                      .FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        data.AddText("You just need to click on the incense burners in front of statues to worship Robin~, iEatBabies and ~*~PureHeart~*~. Each day, you only have one chance to worship one of them.")
                        .AddOption("Worship~xHolic.", 4).AddOption("Worship~Robin~.", 5).AddOption("Worship~*~PureHeart~*~.", 6).AddOption("Got~it.", 255)
                        .AddAvatar(47)
                            .FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        client.Teleport(256, 238, 1002);
                        break;
                    }
                case 4:
                    {
                        data.AddText("xHolic is the leader of the 2nd Supreme Guild MakeMeFamous. Worshipping xHolic will bring you 60 minutes` EXP, 50 Study Points and 1 Chi Token.")
                     .AddOption("I~see.", 255)
                      .AddAvatar(47)
                          .FinalizeDialog();

                        break;
                    }
                case 5:
                    {
                        data.AddText("Robin~ is the leader of the 1st Supreme Guild SkillzDatKillz. Worshipping Robin~ will bring you 5 hours` Blessing, 60 minutes` EXP and 1 Chi Token.")
                     .AddOption("I~see.", 255)
                      .AddAvatar(47)
                          .FinalizeDialog();

                        break;
                    }
                case 6:
                    {
                        data.AddText("~*~PureHeart~*~ is the leader of the 3rd Supreme Guild Seven?hH??aven. Worshipping ~*~PureHeart~*~ will briing you 5 hours` Blessing, 50 Study Points and 1 Chi Token.")
                     .AddOption("I~see.", 255)
                      .AddAvatar(47)
                          .FinalizeDialog();

                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.Nuwa)]
        public static void Nuwa(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        client.CreateBoxDialog("Failed~to~worship~Nuwa~.~Please~go~to~the~front~of~the~Nuwa~statue~to~worship.");

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.HuangDi)]
        public static void HuangDi(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        client.CreateBoxDialog("Failed~to~worship~HuangDi.~Please~go~to~the~front~of~the~HuangDi~statue~to~worship.");

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Cense3)]
        public static void Cense3(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        client.CreateBoxDialog("Failed~to~worship~HuangDi.~Please~go~to~the~front~of~the~HuangDi~statue~to~worship.");

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Censer2)]
        public static void Censer2(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        client.CreateBoxDialog("Failed~to~worship~Nuwa~.~Please~go~to~the~front~of~the~Nuwa~statue~to~worship.");

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Censer1)]
        public static void Censer1(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.DailyQuestEnvoy, client.Player.Class, 6329);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Worshipping ~YanDi~ will briing you 5 hours` Blessing, 50 Study Points and 1 Chi Token. Continue?");
                        data.AddOption("Yes.", 1);
                        data.AddOption("No.", 255).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory");
                            data.AddOption("Let me check.", 255).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.AddPick(stream, "Sure!", 2);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "accession1");
                            client.CreateBoxDialog("You~received~5~hours~Blessing,~50~Study~Points~and~1~Chi~Token~from~YanDi~.");
                            client.Inventory.AddItemWitchStack(729304, 0, 1, stream);
                            client.Player.SubClass.AddStudyPoints(client, 50, stream);
                            client.Player.AddHeavenBlessing(stream, (int)(5 * 60 * 60));
                        }
                        else
                        {
                            data.AddText("You`ve worshipped today! Please come again tomorrow!");
                            data.AddOption("Okay.", 255).FinalizeDialog();
                        }

                        break;
                    }
            }
        }


        [NpcAttribute(NpcID.YanDi)]
        public static void YanDi(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.DailyQuestEnvoy, client.Player.Class, 6329);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Worshipping ~YanDi~ will briing you 5 hours` Blessing, 50 Study Points and 1 Chi Token. Continue?");
                        data.AddOption("Yes.", 1);
                        data.AddOption("No.", 255).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory");
                            data.AddOption("Let me check.", 255).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "accession1");
                            client.CreateBoxDialog("You~received~5~hours~Blessing,~50~Study~Points~and~1~Chi~Token~from~YanDi~.");
                            client.Inventory.AddItemWitchStack(729304, 0, 1, stream);
                            client.Player.SubClass.AddStudyPoints(client, 50, stream);
                            client.Player.AddHeavenBlessing(stream, (int)(5 * 60 * 60));
                        }
                        else
                        {
                            data.AddText("You`ve worshipped today! Please come again tomorrow!");
                            data.AddOption("Okay.", 255).FinalizeDialog();
                        }

                        break;
                    }
            }
        }


        [NpcAttribute(NpcID.BanditBoss)]
        public static void BanditBoss(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.IntelligenceAgent, client.Player.Class, 1116);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.PhoenixCastellan, client.Player.Class, 1118);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("What are you looking for?");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted) && client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 0))
                            data.AddOption("Bandits`~Plot~II.", 1);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted) && client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 1, 1) == false)
                            data.AddOption("Bandits` Plot IV.", 6);
                        data.AddOption("Nothing.", 255)
     .AddAvatar(100).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Player.TransformationID != 0)
                        {
                            data.AddText("Well, we are going to take Phoenix Castle, tomorrow. Pass the message to the other remembers and don`t tell anyone else!");
                            data.AddOption("Sure~I~won`t.", 2)
                                 .AddAvatar(100).FinalizeDialog();
                        }
                        else
                        {
                            client.CreateBoxDialog("Please~put~on~the~coat~you~stole~from~level~33~Bandit.");
                        }

                        break;
                    }
                case 2:
                    {
                        data.AddText("You~are~heading~to~tell~the~Intelligence~Agent~the~news.");
                        data.AddOption("Yes.", 3).AddOption("No.", 255)
                             .AddAvatar(100).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        client.SendSysMesage("You've put on the Bandit`s Coat. Hurry to find the Bandit Boss to find out about the confidential letter!", MsgMessage.ChatMode.System);
                        client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 1);
                        client.Player.QuestGUI.SendAutoPatcher(ActiveQuest.FinishNpcId.Map, ActiveQuest.FinishNpcId.X, ActiveQuest.FinishNpcId.Y, ActiveQuest.FinishNpcId.ID);

                        break;
                    }
                case 6:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 1))
                        {
                            client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest2.MissionId, 0, 1);
                            client.Player.QuestGUI.SendAutoPatcher("You~are~heading~to~report~to~the~Phoenix~Castellan.", ActiveQuest2.FinishNpcId.Map, ActiveQuest2.FinishNpcId.X, ActiveQuest2.FinishNpcId.Y, ActiveQuest2.FinishNpcId.ID);
                            break;
                        }
                        data.AddText("You spy! I`ll kill you!");
                        data.AddOption("Keep~dreaming!", 7)
                             .AddAvatar(100).FinalizeDialog();

                        break;
                    }
                case 7:
                    {
                        if (!client.Map.ContainMobID(11008))
                        {
                            Database.Server.AddMapMonster(stream, client.Map, 11008, client.Player.X, client.Player.Y, 18, 18, 1);
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.WarrantOfArrest)]
        public static void WarrantOfArrest(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.WarrantOfArrest, client.Player.Class, 1144);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("		Most Wanted").AddText("  	Eidolon! Dead or alive!").AddText("                                 -----Militia Captain.");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted) == false)
                            data.AddOption("Slay~the~Eidolon~Envoy.", 1);
                        data.AddOption("Quit.", 255);
                        data.FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        data.AddText("Objective: 15 Fire Spirits\n").AddText("Fire Spirit Zone\n").AddText("Risk: Low\n").AddText("Issuer: Militia Captain\n")
                         .AddOption("Accept~Quest.", 3).AddOption("Quit.", 255)
                        .FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Kill~the~Fire~Spirits~and~then~report~back~to~the~Militia~Captain.", 1011, 613, 710, 0);

                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.MilitiaCaptain)]
        public static void MilitiaCaptain(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.MilitiaLeopard, client.Player.Class, 1143);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.BoldBoy, client.Player.Class, 1131);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.WarrantOfArrest, client.Player.Class, 1144);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.MilitiaCaptain, client.Player.Class, 1300);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I love my family and my village! It is my duty to stay here protect them. It will be great if you can offer me a hand. I will give you some jobs to do. Which one of the following do you want to try?");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("I~am~ordered~to~report~to~you!", 1);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("I~am~ordered~to~report~to~you!", 3);
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Solve~the~Fire~Spirit.", 8);
                        data.AddOption("Quest:~The~Ape~City.", 9);
                        data.AddOption("They~miss~you~too!", 255);
                        data.AddAvatar(102).FinalizeDialog();

                        break;
                    }
                case 8:
                    {
                        if (!client.Inventory.HaveSpace(3))
                        {
                            data.AddText("Please make 2 more spaces in your inventory")
                          .AddOption("Let me check.", 255)
                          .AddAvatar(102).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                        {

                            client.IncreaseExperience(stream, 161000, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.Money += 500;
                            client.Inventory.AddItemWitchStack(720172, 0, 5, stream);
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You've receive some EXP 1,000 Silver, 5 EXP Ball Scraps and Level 40 Super Weapon(B)! ", MsgMessage.ChatMode.System, MsgMessage.MsgColor.red);
                            if (Database.AtributesStatus.IsTrojan(client.Player.Class))
                                client.Inventory.Add(stream, 480079, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            else if (Database.AtributesStatus.IsWarrior(client.Player.Class))
                                client.Inventory.Add(stream, 561079, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            else if (Database.AtributesStatus.IsArcher(client.Player.Class))
                                client.Inventory.Add(stream, 500189, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            else if (Database.AtributesStatus.IsNinja(client.Player.Class))
                                client.Inventory.Add(stream, 601079, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            else if (Database.AtributesStatus.IsMonk(client.Player.Class))
                                client.Inventory.Add(stream, 610079, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            else if (Database.AtributesStatus.IsPirate(client.Player.Class))
                                client.Inventory.Add(stream, 611079, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            else if (Database.AtributesStatus.IsTaoist(client.Player.Class))
                                client.Inventory.Add(stream, 620079, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            break;
                        }
                        data.AddText("Well done! Maple Forest is a little bit safer, now! Take your reward. You did good, today.")
                            .AddOption("Thanks.", 9)
                            .AddAvatar(102).FinalizeDialog();


                        break;
                    }
                case 9:
                    {
                        data.AddText("The AC-Lieutenant in Ape City need our help! I hope you can offer him a hand!")
                          .AddOption("No~problem!", 10)
                          .AddOption("I~don`t~want~to~go~there!", 255)
                          .AddAvatar(102).FinalizeDialog();

                        break;
                    }
                case 10:
                    {
                        data.AddText("Speak~with~the~AC-Lieutenant~in~Ape~City!")
                           .AddOption("Yes.", 11)
                           .AddOption(" No.", 255)
                           .AddAvatar(102).FinalizeDialog();

                        break;
                    }
                case 11:
                    {
                        client.Teleport(573, 625, 1020);
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        client.Player.QuestGUI.SendAutoPatcher(ActiveQuest4.FinishNpcId.Map, ActiveQuest4.FinishNpcId.X, ActiveQuest4.FinishNpcId.Y, ActiveQuest4.FinishNpcId.ID);
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.IncreaseExperience(stream, 161000, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.Money += 500;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You receive 161,000 Experience and 500 Gold.. ", MsgMessage.ChatMode.System, MsgMessage.MsgColor.red);
                        }
                        data.AddText("This is not a safe place! You have to be careful, if you`re going to wander around, here!")
                           .AddOption("Yes~sir!", 2)
                           .AddAvatar(102).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        client.Player.QuestGUI.SendAutoPatcher(1011, 656, 698, 8278);
                        break;
                    }
                case 3:
                    {
                        data.AddText("What? He is gone? Oh, my god! He is really gone? Not Leopard!  LEOPARD! NOOOOOOOOOOOOOOOOOOOOOOOOOO!!!!!!!!!")
                             .AddOption("Control~yourself!", 4)
                             .AddAvatar(102).FinalizeDialog();

                        break;
                    }
                case 4:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                           .AddOption("Let me check", 255)
                           .AddAvatar(102).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                        {
                            client.Inventory.AddItemWitchStack(1000030, 0, 5, stream);
                            client.IncreaseExperience(stream, 100000, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.Money += 500;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You received some EXP, 500 Silver and 5 Amritas!", MsgMessage.ChatMode.System, MsgMessage.MsgColor.red);
                        }
                        data.AddText("What? He is gone? Oh, my god! He is really gone? Not Leopard!  LEOPARD! NOOOOOOOOOOOOOOOOOOOOOOOOOO!!!!!!!!!")
                             .AddOption("Control~yourself!", 5)
                             .AddAvatar(102).FinalizeDialog();

                        break;
                    }
                case 5:
                    {
                        data.AddText("Would you like to some Fire Spirits! I guarantee you would be well paid!")
                               .AddOption("Great!", 6)
                               .AddAvatar(102).FinalizeDialog();

                        break;
                    }
                case 6:
                    {
                        client.Player.QuestGUI.SendAutoPatcher(1011, 791, 478, 8281);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.MilitiaLeopard)]
        public static void MilitiaLeopard(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.MilitiaDragon, client.Player.Class, 1141);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.MilitiaLeopard, client.Player.Class, 1142);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.MilitiaLeopard, client.Player.Class, 1143);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I am a soldier! Whether I`m alive or dead, I will fight for my people! But I have many unfinished wishes. I want to return my identity token, and I want my revenge. Will you help me?");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Are~you~Leopard?", 1);
                        if (!client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            data.AddOption("I~will~revenge~for~you!", 3);
                        if (!client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            data.AddOption("What identity token?", 5);
                        data.AddOption("Great Soldier", 255);
                        data.AddAvatar(236).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.IncreaseExperience(stream, 194000, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.Money += 600;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You receive 200,000 Experience and 600 Gold. ", MsgMessage.ChatMode.System, MsgMessage.MsgColor.red);
                        }

                        if (!client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("Are you looking for me? I am a dead man now!")
                                     .AddOption("Rest~in~peace,~soldier!", 3)
                                     .AddAvatar(236).FinalizeDialog();
                        }

                        break;
                    }
                case 3:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 5))
                            {
                                if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                                {
                                    client.IncreaseExperience(stream, 194000, Role.Flags.ExperienceEffect.angelwing);
                                    client.Player.Money += 1000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                    client.Inventory.AddItemWitchStack(720172, 0, 1, stream);
                                    client.SendSysMesage("You've received some EXP, 1,000 Silver and 5 EXP Ball Scraps! ", MsgMessage.ChatMode.System, MsgMessage.MsgColor.red);
                                    data.AddText("Die! Die! You bastard!")
                                          .AddOption("I~know~you~are~angry!", 5)
                                          .AddAvatar(236).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Please, collect 5 Fury Cores for me! My soul will be appeased.")
                               .AddOption("Okay!", 255)
                               .AddAvatar(236).FinalizeDialog();
                            }

                            break;
                        }
                        data.AddText("I went too deep into this dangerous area and was trapped by the Fire Spirits. I`m a dead man, now.. But I didn`t lost the heart of a soldier! I will keep fighting to save my village! I know these beasts carry Fury Cores to boost their powers. Will you")
                            .AddText("~collect 5 cores for me? I need them to put my enraged soul at peace. Only then will I be able to move on to the next world...")
                            .AddOption("I~will~go!~Now!", 4)
                                 .AddAvatar(236).FinalizeDialog();


                        break;
                    }
                case 4:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Collect~5~Fury~Cores.", 1011, 683, 492, 0);

                        break;
                    }
                case 5:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("This is my identity token... I want you to take it to my Captain. He will know what happen to me when he sees it!")
             .AddOption("I~will.", 255)
             .AddAvatar(236).FinalizeDialog();
                            break;
                        }
                        data.AddText("This is a token used to recognize my identity. I want you to take it to my Captain. He will know what happened to me, when he sees it. I can`t forget Tiger and Dragon. They will always be my friends, even in the afterlife! I will miss them all...")
                                    .AddOption("I~will~do~that~for~you!", 6)
                                    .AddAvatar(236).FinalizeDialog();

                        break;
                    }
                case 6:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                                .AddOption("Let me check", 255)
                                .AddAvatar(236).FinalizeDialog();
                            break;
                        }
                        client.Inventory.Add(stream, 711333);
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest3.MissionId, 1);
                        client.Player.QuestGUI.SendAutoPatcher("Send~the~Token~to~Militia~Captain.", ActiveQuest3.FinishNpcId.Map, ActiveQuest3.FinishNpcId.X, ActiveQuest3.FinishNpcId.Y, ActiveQuest3.FinishNpcId.ID);

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.MilitiaDragon)]
        public static void MilitiaDragon(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.MilitiaDragon, client.Player.Class, 1133);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.MilitiaDragon, client.Player.Class, 1141);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("It is tough living out here in the wild! I just got a little water left, and unsavoury food to chow. And the worst thing is that we lost one of my team mate.");
                        if (!client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            data.AddOption("I~can~get~some~water~for~you!.", 1);
                        if (!client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            data.AddOption("I~can~get~some~water~for~you!.", 3);
                        data.AddOption("Homesick!~Right?", 255);
                        data.AddAvatar(48).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1))
                        {
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                            {
                                client.Inventory.Remove(711331, 1, stream);
                                client.IncreaseExperience(stream, 194000, Role.Flags.ExperienceEffect.angelwing);
                                client.Player.Money += 600;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                client.SendSysMesage("You receive 194,000 Experience and 600 Gold. ", MsgMessage.ChatMode.System, MsgMessage.MsgColor.red);
                                data.AddText("Ahhhhhh! Fresh water! You saved my life, man. Nothing like cool water, if you`re standing in this hell! Thank you!")
                                     .AddOption("You`re~welcome!", 3)
                                     .AddAvatar(48).FinalizeDialog();
                                break;
                            }
                        }
                        data.AddText("It`s hard staying near the territory of the Fire Spirits. It`s so hot and I need some water, but I can`t leave my post.")
                                 .AddText("~Hey! Will you go and get some water for me?")
                                 .AddOption("My~pleasure.", 2)
                                 .AddAvatar(48).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                                .AddOption("Let me to check", 255)
                                .AddAvatar(48).FinalizeDialog();
                            break;
                        }
                        client.Inventory.Add(stream, 711331);
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Use~the~Empty~Bucket~to~fetch~a~pail~of~water~by~the~river~near~the~bridge.", 1011, 643, 622, 0);

                        break;
                    }
                case 3:
                    {
                        data.AddText("I wonder where another of our team, Militia Leopard, might have gone? He has been missing for quite a while. I want to make sure he`s okay. Do you think you could take a look around, and see if you can find him?")
                                .AddOption("Show~me~the~direction!", 4)
                                .AddAvatar(48).FinalizeDialog();

                        break;
                    }

                case 4:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.Player.QuestGUI.SendAutoPatcher(ActiveQuest2.FinishNpcId.Map, ActiveQuest2.FinishNpcId.X, ActiveQuest2.FinishNpcId.Y, ActiveQuest2.FinishNpcId.ID);
                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.MilitiaTiger)]
        public static void MilitiaTiger(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.BoldBoy, client.Player.Class, 1131);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.MilitiaTiger, client.Player.Class, 1135);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I miss my wife and my son back home. My son`s birthday is also approaching. But I will not come home until those blasted Fire Spirits have all been wiped out!");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("I~got~a~letter~for~you!", 2);
                        if (!client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            data.AddOption("You~get~anything~for~your~son?.", 3);
                        data.AddOption("You~are~a~good~father.", 255);
                        data.AddAvatar(57).FinalizeDialog();


                        break;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {

                            client.IncreaseExperience(stream, 161000, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.Money += 500;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You receive 161,000 Experience and 500 Gold.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.red);
                        }
                        data.AddText("Oh, I miss them, too! But I have job to do here! We have to save the village! I can`t just walk away from my duty.")
                                  .AddOption("Great~man!", 3)
                                  .AddAvatar(57).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 10))
                        {
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                            {
                                client.Inventory.Remove(711332, 10, stream);
                                client.Player.Money += 1000;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                client.Player.RateExp = 2;
                                client.Player.DExpTime = 60 * 60;
                                client.Player.CreateExtraExpPacket(stream);
                                client.Inventory.AddItemWitchStack(1000030, 0, 5, stream);
                                client.SendSysMesage("You received 60 minutes EXP, 1,000 Silver and 5 Amritas!", MsgMessage.ChatMode.System, MsgMessage.MsgColor.red);
                            }
                            data.AddText("Wooh! What beautiful teeth you have! I can feel the heat coming off them, from here! My son will love it!")
                         .AddOption("You`re~a~good~father.", 5)
                         .AddAvatar(57).FinalizeDialog();
                            break;
                        }
                        data.AddText("My son holds great enthusiasm, joy, and pleasure for this world! I want to make him a necklace for his birthday, but I need 10 Fire Spirit Teeth to finish making it. Will you help me to collect some?")
                             .AddOption("Okay!", 4)
                             .AddAvatar(57).FinalizeDialog();

                        break;
                    }
                case 4:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Collect~10~Spirit~Teeth~from~the~Fire~Spirits.", 1011, 704, 673, 0);

                        break;
                    }
                case 5:
                    {
                        data.AddText("Wait a second, please. My brother, Militia Dragon, needs some water badly. Go help him, if you can!")
                        .AddOption("OK,~I~will.", 6)
                        .AddAvatar(57).FinalizeDialog();

                        break;
                    }
                case 6:
                    {
                        client.Player.QuestGUI.SendAutoPatcher(1011, 661, 704, 8279);
                        break;
                    }
            }

        }
        [NpcAttribute(NpcID.BoldBoy)]
        public static void BoldBoy(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.BoldBoy, client.Player.Class, 1121);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.BoldBoy, client.Player.Class, 1131);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I used to spend a night in the hill, alone! Don`t you think I`m brave? If you are also a brave man, I will have some job for you to do. Which of the following quests do you want to try?");
                        if (!client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            data.AddOption("Kill~10~Ratlings.", 2);
                        if (!client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            data.AddOption("Letter~From~Home.", 10);
                        data.AddOption("It`s~great!", 255);
                        data.AddAvatar(36).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        data.AddText("I bet you wouldn`t  even dare to kill a Ratling! If you think you can, kill 10 for me, and I`ll pay you!")
                                     .AddOption("It`s~a~cinch.", 3)
                                     .AddAvatar(36).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 10))
                        {

                            data.AddText("You are great! Thank you! You have definitely earned the right to join my gang! How cool is that?")
                                  .AddOption("Really?~That`s~great!", 5)
                                  .AddAvatar(36).FinalizeDialog();
                            break;
                        }
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        data.AddText("You~will~find~some~Ratlings~running~outside~the~village.~go~slay~them.")
                                    .AddOption("Yes.", 4).AddOption("No.", 255)
                                    .AddAvatar(36).FinalizeDialog();

                        break;
                    }
                case 4:
                    {
                        client.Player.QuestGUI.SendAutoPatcher("You`ve~killed~10~Ratlings!", 1011, 638, 456, 0);

                        break;
                    }
                case 5:
                    {

                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Player.Money += 800;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.Player.RateExp = 2;
                            client.Player.DExpTime = 60 * 60;
                            client.Player.CreateExtraExpPacket(stream);
                            client.Inventory.Add(stream, 721710);
                            client.SendSysMesage("You received 60 minutes EXP, 800 Silver and Castle Gate", MsgMessage.ChatMode.System, MsgMessage.MsgColor.red);
                            data.AddText(" I hear that the Fur Dealer is badly in need of some Ratling Fur. I`m sure you`ll be well paid, if you help him!")
                                    .AddOption("Thanks~for~the~info..", 6)
                                    .AddAvatar(36).FinalizeDialog();
                        }

                        break;
                    }
                case 6:
                    {
                        client.Player.QuestGUI.SendAutoPatcher(1011, 796, 475, 8275);
                        break;
                    }
                case 10:
                    {
                        data.AddText("Are you going to find the Militia in the forest? Can you take me with you? I miss my father, he has been away from home for over 2 months! No? Can you take this letter to my father? My mother and I miss him, very much! Oh, my father is the Militia Tiger.")
                                .AddOption("Sure,~I~can.", 11)
                                .AddAvatar(36).FinalizeDialog();

                        break;
                    }
                case 11:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Send~the~letter~to~the~Militia~Tiger.", ActiveQuest2.FinishNpcId.Map, ActiveQuest2.FinishNpcId.X, ActiveQuest2.FinishNpcId.Y, ActiveQuest2.FinishNpcId.ID);

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.FurDealer)]
        public static void FurDealer(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.FurDealer, client.Player.Class, 1123);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Ratlings have beautiful fur! I can make good money from selling their fur to the other cities.");
                        if (!client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            data.AddOption("Are~you~buying~the~Fur?", 2);
                        data.AddOption("What~a~good~business!", 255);
                        data.AddAvatar(53).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 10))
                        {
                            //client.Inventory.Remove(711325, 10, stream);
                            data.AddText("Oh! Beautiful, shining fur! I can make good money by selling these. Here is your reward! Thank you, again!")
                                   .AddOption("See~you!", 4)
                                   .AddAvatar(53).FinalizeDialog();
                            break;
                        }
                        data.AddText("Let me introduce myself, I am the Fur Dealer! A far travelling businessman, with quite the eye for animals! Would you like to make some money? I need to get 10 Ratling Furs, quick! If you can help, you will be paid handsomely!")
                                     .AddOption("Okay!", 3)
                                     .AddAvatar(53).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Collect~10~Ratling~Furs.", 1011, 638, 456, 0);

                        break;
                    }
                case 4:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Remove(711325, 10, stream);
                            client.Player.Money += 500;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.IncreaseExperience(stream, 500, Role.Flags.ExperienceEffect.angelwing);
                            if (Database.AtributesStatus.IsTrojan(client.Player.Class))
                                client.Inventory.Add(stream, 130038, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            else if (Database.AtributesStatus.IsWarrior(client.Player.Class))
                                client.Inventory.Add(stream, 131038, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            else if (Database.AtributesStatus.IsArcher(client.Player.Class))
                                client.Inventory.Add(stream, 133028, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            else if (Database.AtributesStatus.IsNinja(client.Player.Class))
                                client.Inventory.Add(stream, 135038, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            else if (Database.AtributesStatus.IsMonk(client.Player.Class))
                                client.Inventory.Add(stream, 136038, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            else if (Database.AtributesStatus.IsPirate(client.Player.Class))
                                client.Inventory.Add(stream, 139038, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            else if (Database.AtributesStatus.IsTaoist(client.Player.Class))
                                client.Inventory.Add(stream, 134038, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.SendSysMesage("You received some EXP, 500 Silver and a level 40 Elite Armor(B).", MsgMessage.ChatMode.System, MsgMessage.MsgColor.red);
                            data.AddText("Hey, wait! The Village Head is looking for you, about the Ratling, I guess.")
                                 .AddOption("Got~it.", 5)
                                 .AddAvatar(53).FinalizeDialog();
                        }

                        break;
                    }
                case 5:
                    {
                        client.Player.QuestGUI.SendAutoPatcher(1011, 772, 475, 8273);
                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.VillageHead)]
        public static void VillageHead(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.PhoenixCastellan, client.Player.Class, 1120);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.VillageHead, client.Player.Class, 1125);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.VillageHead, client.Player.Class, 1126);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.VillageHead, client.Player.Class, 1127);
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)NpcID.VillageHead, client.Player.Class, 1128);
            var ActiveQuest6 = Database.QuestInfo.GetFinishQuest((uint)NpcID.VillageHead, client.Player.Class, 1129);
            var ActiveQuest7 = Database.QuestInfo.GetFinishQuest((uint)NpcID.VillageHead, client.Player.Class, 1130);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("Phoenix Castle is always our friend! My village is in trouble now, I hope our friends in the Castle can help us out! If you are here to help me, I have a bunch of jobs for you to do! Which of the following quests do you want to try?");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("I~was~sent~to~help~you!", 2);
                        else if (!client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            data.AddOption("Ratling~King~1.", 5);
                        else if (!client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            data.AddOption("Ratling~King~2.", 7);
                        else if (!client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            data.AddOption("Ratling~King~3.", 10);
                        else if (!client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            data.AddOption("Ratling~King~4.", 12);
                        else if (!client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            data.AddOption("Ratling~King~5.", 14);
                        if (!client.Player.QuestGUI.CheckQuest(ActiveQuest7.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            data.AddOption("Help~Militia~Captain.", 20);
                        data.AddOption("See~you.", 255);
                        data.AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId);
                        client.Player.Money += 300;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.SendSysMesage("You've received 300 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.red);
                        data.AddText("Phoenix Castle will send help to us? Thank you! Thank you, so much!")
                                       .AddOption("You`re~welcome.", 3)
                                       .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        data.AddText("You`re welcome! By the way, there`s a Bold Boy who`s going to  kill a Ratling!")
                                        .AddOption("~That is dangerous! Go help him, please.", 4)
                                        .AddOption("Okay!", 255)
                                        .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 4:
                    {
                        client.Player.QuestGUI.SendAutoPatcher(1011, 761, 473, 8274);
                        break;
                    }
                case 5:
                    {
                        if (!client.Inventory.HaveSpace(2))
                        {
                            data.AddText("Please make 2 more spaces in your inventory.")
                                         .AddOption("Let me check.", 255)
                                         .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 1))
                        {
                            client.Inventory.Remove(711327, 1, stream);
                            client.Inventory.AddItemWitchStack(720172, 0, 3, stream);
                            client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId);
                            if (Database.AtributesStatus.IsTrojan(client.Player.Class))
                                client.Inventory.Add(stream, 118038, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            else if (Database.AtributesStatus.IsWarrior(client.Player.Class))
                                client.Inventory.Add(stream, 111038, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            else if (Database.AtributesStatus.IsArcher(client.Player.Class))
                                client.Inventory.Add(stream, 113038, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            else if (Database.AtributesStatus.IsNinja(client.Player.Class))
                                client.Inventory.Add(stream, 112018, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            else if (Database.AtributesStatus.IsMonk(client.Player.Class))
                                client.Inventory.Add(stream, 143038, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            else if (Database.AtributesStatus.IsPirate(client.Player.Class))
                                client.Inventory.Add(stream, 144038, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            else if (Database.AtributesStatus.IsTaoist(client.Player.Class))
                                client.Inventory.Add(stream, 114038, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.IncreaseExperience(stream, 138000, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.Money += 800;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You've received some EXP, 800 Silver, 3 EXP Ball Scraps and a Level 37 Elite Helment! ", MsgMessage.ChatMode.System, MsgMessage.MsgColor.red);


                            data.AddText("I am quite impressed by your performance! You really are great! We could use more people like you in the village.")
                           .AddOption(" Thank~you!", 7)
                                   .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        data.AddText("The Ratlings are out of control! We found that there is an elusive Ratling King, hiding out there. If you killed it, I think the Ratlings would get confused and stop attacking our village. Snake Meat is the favorite food of the Ratling King,")
                            .AddText("~so if you get some from the Winged Snakes, we should be able to use it to charm the Ratling King out of hiding!")
                            .AddOption("Winged~Snake~Meat?~Okay!", 6)
                                    .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 6:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Head~to~Hunter~Wang~for~more.", 1011, 790, 447, 8268);


                        break;
                    }
                case 7:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest3.MissionId, 1))
                        {
                            client.Inventory.Remove(711328, 1, stream);
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                            {
                                client.IncreaseExperience(stream, 151000, Role.Flags.ExperienceEffect.angelwing);
                                client.Player.Money += 500;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                client.SendSysMesage("You received 151000 Experience and 500 Gold. ", MsgMessage.ChatMode.System, MsgMessage.MsgColor.red);
                                data.AddText("Good Wine! I could smell it as soon as you were walking up the path! Well, let`s get busy making that lure.")
                  .AddOption("Great!~Let`s~get~busy!", 10)
                          .AddAvatar(67).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("You must be thinking what I am doing. I will make a lure using the Snake Meat! To make the lure more attractive! I need some Wine! Could you buy a bottle of wine from Deeler Shen?")
                              .AddOption("Okay!", 8)
                                      .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 8:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Buy~a~bottle~of~Wine~from~the~Dealer~Shen(779,447).", 1011, 182, 280, 4596);

                        break;
                    }
                case 10:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more spaces in your inventory.")
                                     .AddOption("Let me check.", 255)
                                     .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest4.MissionId, 10))
                        {
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId))
                            {
                                client.Inventory.AddItemWitchStack(720173, 0, 3, stream);
                                client.IncreaseExperience(stream, 151000, Role.Flags.ExperienceEffect.angelwing);
                                client.Player.Money += 800;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                client.SendSysMesage("You've received some EXP, 800 Silver and 3 Small Joy Stones. ", MsgMessage.ChatMode.System, MsgMessage.MsgColor.red);
                                data.AddText("I was quite impressed by you performance! Good job!")
                          .AddOption("Thank~you.", 12)
                       .AddAvatar(67).FinalizeDialog();

                            }


                            break;
                        }
                        data.AddText("I will soak the Snake Meet in the Wine, so it will take a bit. Why not use this time to slay some Ratlings! This will help make you smell like the Ratlings. That way, it will make it harder for the Ratling King to discover you!")
                            .AddOption("Okay!", 11)
                         .AddAvatar(67).FinalizeDialog();


                        break;
                    }
                case 11:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Slay~10~Ratlings~outside~the~village.", 1011, 638, 456, 0);

                        break;
                    }
                case 12:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest5.MissionId, 1))
                        {
                            data.AddText("Good! You have it! Now take a little break. I want study the Frost Token first, and will instruct you on what to do, later.")
                            .AddOption("Okay!", 14)
                         .AddAvatar(67).FinalizeDialog();

                            client.Player.QuestGUI.FinishQuest(ActiveQuest5.MissionId);
                            client.Inventory.Remove(711329, 1, stream);
                            client.IncreaseExperience(stream, 242000, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.Money += 800;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You received 242,000 Experience and 800 Gold. ", MsgMessage.ChatMode.System, MsgMessage.MsgColor.red);
                            break;
                        }
                        data.AddText("You still need a Frost Token. It will provide you with extra defense, especially your resistance against heat! I`ll show you where to find it!")
                        .AddOption("Okay!", 13)
                     .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 13:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest5, 0);
                        client.Player.QuestGUI.SendAutoPatcher(1011, 532, 434, 0);
                        break;
                    }
                case 14:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest6.MissionId, 1))
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                data.AddText("Please make 1 more spaces in your inventory.")
                                         .AddOption("Let me check.", 255)
                                         .AddAvatar(67).FinalizeDialog();
                                break;
                            }
                            client.Player.QuestGUI.FinishQuest(ActiveQuest6.MissionId);
                            client.IncreaseExperience(stream, 242000, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.Money += 2000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You received some EXP, 2,000 Silver and a Bound EXP Ball! ", MsgMessage.ChatMode.System, MsgMessage.MsgColor.red);
                            client.Inventory.Add(stream, Database.ItemType.ExpBall, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            data.AddText("I can`t believe my ears! You killed it and saved our village! See? The Ratlings are scattering! Your name will be remembered for as long as our village remains! Thank you, hero!")
                      .AddOption("Thank~you!", 20)
                .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        data.AddText("Listen! The Ratling King excels at fire attacks. This Frost Token can provide with you extra resistance against heat and fire, for 5 minutes. Use the Wine Soaked Snake to charm it out, then slay it while you`re protected. If you don`t make it in time,")
                    .AddText("~you will be sent back to village, before anything bad happens to you! Are you ready to challenge the Ratling King?")
                            .AddOption("I~am~ready!", 15)
                      .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 15:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more spaces in your inventory.")
                                     .AddOption("Let me check.", 255)
                                     .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        client.Inventory.Add(stream, 720840);
                        client.Player.QuestGUI.Accept(ActiveQuest6, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Use~the~Wine~Soaked~Snake~to~charm~the~Ratling~King~out,~and~then~slay~it!", 1011, 648, 441, 0);

                        break;
                    }
                case 20:
                    {
                        data.AddText("Fire Spirits are another big threat to the village! In fact, they`re a threat to Phoenix Castle, too! There are some militiaman fighting desperately against these evil spirits. Maybe you can offer them some help? You can speak with the Militia Captain")
                          .AddText("~for more information!")
                            .AddOption("Find~the~Militia~Captain.", 21)
                            .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 21:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest7, 0);
                        client.Player.QuestGUI.SendAutoPatcher(1011, 761, 473, 8274);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.WineKiddo)]
        public static void WineKiddo(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {

            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.VillageHead, client.Player.Class, 1126);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.VillagerChou, client.Player.Class, 401);

            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("My wine enjoys a great reputation among people! Would you like a bottle of wine? It`s free!");
                            data.AddOption("Do~you~have~wine~to~sell?", 5);
                            data.AddOption("Wonderful!");
                            data.AddAvatar(138);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("My wine enjoys a great reputation among people! Would you like a bottle of wine? It`s free!");
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                                data.AddOption("Quest:~Ratling~King~2.", 2);
                            data.AddOption("Wonderful!", 255);
                            data.AddAvatar(138).FinalizeDialog();
                        }
                        break;
                    }
                case 5:
                    {
                        data.AddText("Hey, my friend! Welcome to my store. You see, the Bamboo Wine is our best seller. Expensive? Nah, hah. It`s only 5,000");
                        data.AddText("~Silver for each bottle! Don`t get drunk, ok? Oh, I`ll have a branch in Twin City, soon. You can come and have a drink.");
                        data.AddOption("Buy~one.", 6);
                        data.AddOption("Let~me~check~my~wage,~first.");
                        data.AddAvatar(138);
                        data.FinalizeDialog();
                        break;
                    }
                case 6:
                    {
                        if (client.Inventory.Contain(721800, 1))
                        {
                            data.AddText("I tell you, this Bamboo Wine is pretty strong. I`ve never seen one guy buy 2 bottles before. Take care.");
                            data.AddOption("Don`t~worry~about~me.");
                            data.AddAvatar(138);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                if (client.Player.Money < 10000)
                                {
                                    data.AddText("You need 5,000 silvers for this. It`s already the floor price.");
                                    data.AddOption("Alright.");
                                    data.AddAvatar(138);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    client.Player.Money -= 10000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);

                                    client.Inventory.Add(stream, 721800, 1);
                                    client.SendSysMesage("You brought a bottle of Bamboo Wine with 5,000 silvers.");
                                }
                            }
                            else
                            {
                                data.AddText("Oh, look at your inventory. I have to remind you that the bottle is very fragile. Make some room for it, first.");
                                data.AddOption("One~second.");
                                data.AddAvatar(138);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 2:
                    {
                        data.AddText(" Come! Best wine! Cheap! 1000 gold a bottle! Come! Come! Best wine for sale!")
                                .AddOption(" I~need~a~bottle~of~wine!", 3)
                                .AddAvatar(138).FinalizeDialog();


                        break;
                    }
                case 3:
                    {
                        if (client.Inventory.Contain(711328, 1))
                        {
                            data.AddText("You have bought a bottle of wine from me! Don`t drink too much!")
                                .AddOption("Thanks.", 255)
                                .AddAvatar(138).FinalizeDialog();
                            break;
                        }
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                              .AddOption("let me check.", 255)
                              .AddAvatar(138).FinalizeDialog();
                            break;
                        }
                        if (client.Player.Money >= 1000)
                        {
                            client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 1);
                            client.Player.Money -= 1000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.Inventory.Add(stream, 711328);

                            data.AddText("You have bought a bottle of wine from me! Don`t drink too much!")
                              .AddOption("Thanks.", 4)
                              .AddAvatar(138).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You do not have 1000 silvers with you.")
                              .AddOption("I~see.", 255)
                              .AddAvatar(138).FinalizeDialog();

                        }

                        break;
                    }
                case 4:
                    {
                        client.Player.QuestGUI.SendAutoPatcher(ActiveQuest.FinishNpcId.Map, ActiveQuest.FinishNpcId.X, ActiveQuest.FinishNpcId.Y, ActiveQuest.FinishNpcId.ID);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.HunterWong)]
        public static void HunterWong(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.HunterWong, client.Player.Class, 1107);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("He who fights with monsters should take care, lest he wind up becoming a monster, himself! Would you like to help me with any quest?");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Snake~Scale.", 2);
                        data.AddOption("Sooner~or~later.", 255);
                        data.AddAvatar(45).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 10))
                        {
                            data.AddText("I can`t thank you enough. That`s perfect!")
                                .AddOption("Fantastic!.", 5)
                                .AddAvatar(45).FinalizeDialog();

                            break;
                        }
                        data.AddText("To do a good job, you must first sharpen your tools. I heard that poisonous Snake Scales can make animals dizzy.")
                                    .AddOption("~Can you get 10 Snake Scales, for me?", 3)
                                    .AddOption("I`d~love~to.", 255)
                                    .AddAvatar(45).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        data.AddText("You~are~going~to~kill~Winged~Snakes~and~collect~10~Snake~Scales.")
                                  .AddOption("Yes.", 4)
                                  .AddOption("No.", 255)
                                  .AddAvatar(45).FinalizeDialog();

                        break;
                    }
                case 4:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        client.Player.QuestGUI.SendAutoPatcher(1011, 342, 132, 0);
                        break;
                    }
                case 5:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Remove(711321, 10, stream);
                            client.IncreaseExperience(stream, 138000, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.Money += 600;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You received 138,000 EXP and 600 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.red);
                            data.AddText("Have you got some Snake Meat, by the way? Go speak with the Village Head. He`s worried about it.")
                                  .AddOption("I`m~on~my~way.", 6)
                                  .AddAvatar(45).FinalizeDialog();
                        }

                        break;
                    }
                case 6:
                    {
                        client.Player.QuestGUI.SendAutoPatcher(1011, 772, 475, 8273);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.PhoenixCastellan)]
        public static void PhoenixCastellan(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.IntelligenceAgent, client.Player.Class, 1117);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.PhoenixCastellan, client.Player.Class, 1118);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.PhoenixCastellan, client.Player.Class, 1120);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("I will always protect the people, here.")
                                     .AddOption("Bandits`~Plot~III.", 2)
                                     .AddOption("Greetings,~Castellan!", 255)
                                     .AddAvatar(71).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("I will always protect the people, here.");
                            if (!client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                                data.AddOption("Bandits`~Plot~IV.", 4);
                            else if (!client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                                data.AddOption("Help~the~Village~Head..", 10);
                            data.AddOption("Greetings,~Castellan!", 255)
                               .AddAvatar(71).FinalizeDialog();
                        }


                        break;
                    }
                case 2:
                    {
                        data.AddText("This letter is very important. Thank you very much!")
                                   .AddOption("It`s~OK.", 3)
                                   .AddAvatar(71).FinalizeDialog();


                        break;
                    }
                case 3:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Remove(711323, 1, stream);
                            client.IncreaseExperience(stream, 10000, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.Money += 500;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You've received some exp and 500 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.red);
                        }
                        data.AddText("Kill the leader and the gang will collapse. Please, help us kill the Bandit Boss!")
                                   .AddOption("Yes,~sir!", 5)
                                   .AddAvatar(71).FinalizeDialog();

                        break;
                    }
                case 4:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 1, 1))
                        {
                            client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId);
                            client.IncreaseExperience(stream, 10000, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.Money += 1200;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You've received some exp and 1200 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.red);
                            data.AddText("You must be tired. Take a break, buddy.")
                              .AddOption("Okay.", 10)
                              .AddAvatar(71).FinalizeDialog();
                            break;
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("What`s the matter? You need to go kill the Bandit Boss!")
                                .AddOption("I~will.", 255)
                                .AddAvatar(71).FinalizeDialog();
                            break;
                        }
                        data.AddText("Kill the leader and the gang will collapse. Please, help us kill the Bandit Boss!")
                                 .AddOption("Yes,~sir!", 5)
                                 .AddAvatar(71).FinalizeDialog();

                        break;
                    }
                case 5:
                    {
                        client.SendSysMesage("You are heading to kill the Bandit Boss.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.red);
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.Player.QuestGUI.SendAutoPatcher(1011, 227, 404, 8272);

                        break;
                    }
                case 10:
                    {
                        data.AddText("Yes, there is a small village outside the Phoenix Castle in the forest. We maintain a good relationship with the village. Recently, the village was badly damaged by rats. As a neighbor, we need to do something! Will you go see the Village Head first,")
                            .AddText("~and let him know about our plan to help out?")
                            .AddOption("Of~course!", 11)
                               .AddAvatar(71).FinalizeDialog();

                        break;
                    }
                case 11:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Tell~the~Village~Head~that~the~Castellan~will~help~him~deal~with~the~ratalings.", ActiveQuest3.FinishNpcId.Map, ActiveQuest3.FinishNpcId.X, ActiveQuest3.FinishNpcId.Y, ActiveQuest3.FinishNpcId.ID);

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.IntelligenceAgent)]
        public static void IntelligenceAgent(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.IntelligenceAgent, client.Player.Class, 1115);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.IntelligenceAgent, client.Player.Class, 1116);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.IntelligenceAgent, client.Player.Class, 1117);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hey, there! I`m Intelligence Agent. Want to take the quests and destroy Bandits` plots?");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Bandits`~Plot~I.", 1);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Bandits`~Plot~II.", 4);
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Bandits`~Plot~III.", 10);
                        data.AddOption("Nice~to~meet~you..", 255)
                        .AddAvatar(236).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 1))
                            {
                                client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId);
                                client.IncreaseExperience(stream, 15000, Role.Flags.ExperienceEffect.angelwing);
                                client.Player.Money += 800;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                client.SendSysMesage("You've received some exp and 800 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.red);
                                data.AddText("You did a good job!")
                                        .AddOption("No~problem.", 4)
                                        .AddAvatar(236).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You need to get a Bandit`s Coat from the Level 33 Bandits. We will be able to blend in with the rest of the gang, once we have it.")
                                    .AddOption("Roger.", 255)
                                    .AddAvatar(236).FinalizeDialog();
                            }

                            break;
                        }
                        data.AddText("We have been here trying to collect information for weeks, but haven`t found anything, yet. We are planning to steal a Bandit`s Coat from")
                        .AddText("~the Level 33 Bandits, so we will be able to blend into the gang. Would you like to get one for me?")
                        .AddOption("Sure.", 2)
                               .AddAvatar(236).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        data.AddText("You~are~going~to~get~a~Bandit`s~Coat~from~the~Level~33~Bandits.")
                       .AddOption("Yes.", 3).AddOption("No.", 255)
                              .AddAvatar(236).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        break;
                    }
                case 10:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (!client.Inventory.Contain(711323, 1))
                                client.Inventory.Add(stream, 711323);
                            data.AddText("OK. You`ve got the letter. Deliver it to the Phoenix Castellan.")
                          .AddOption("Take~care.", 255)
                          .AddAvatar(236).FinalizeDialog();
                            break;
                        }
                        data.AddText("I didn`t expect you would be back so soon! Did you read the letter yet?")
                            .AddOption("Yes.~I~remember~everything.", 11)
                            .AddAvatar(236).FinalizeDialog();

                        break;
                    }
                case 11:
                    {
                        data.AddText("That`s great. I`m writing a letter. Please deliver it to the Phoenix Castellan.")
                          .AddOption("I`ll~wait.", 12)
                          .AddAvatar(236).FinalizeDialog();

                        break;
                    }
                case 12:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                                .AddOption("Let me check", 255)
                                .AddAvatar(236).FinalizeDialog();
                            break;
                        }
                        client.Inventory.Add(stream, 711323);
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        client.Player.QuestGUI.SendAutoPatcher("You~are~going~to~deliver~the~letter~to~the~Phoenix~Castellan.", ActiveQuest3.FinishNpcId.Map, ActiveQuest3.FinishNpcId.X, ActiveQuest3.FinishNpcId.Y, ActiveQuest3.FinishNpcId.ID);

                        break;
                    }
                case 4:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                data.AddText("Please make 1 more space in your inventory.")
                                    .AddOption("Let me check", 255)
                                    .AddAvatar(236).FinalizeDialog();
                                break;
                            }
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 1))
                            {
                                client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId);
                                client.IncreaseExperience(stream, 16000, Role.Flags.ExperienceEffect.angelwing);
                                client.Player.Money += 1000;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                client.Inventory.AddItemWitchStack(1000030, 0, 5, stream);
                                client.SendSysMesage("You've received some Exp, 1,000 Silver and 5 Amritas!", MsgMessage.ChatMode.System, MsgMessage.MsgColor.red);
                                data.AddText("I didn`t expect you would be back so soon! Did you read the letter yet?")
    .AddOption("Yes.~I~remember~everything.", 11)
    .AddAvatar(236).FinalizeDialog();
                                break;
                            }
                            if (client.Inventory.Contain(720837, 1) == false)
                                client.Inventory.Add(stream, 720837);
                            data.AddText("If you happen to be recognized, just try to get another coat from the Level 33 Bandits and try again, later.")
     .AddOption("Copy~that.", 255)
     .AddAvatar(236).FinalizeDialog();
                            break;
                        }
                        data.AddText("Put on the Bandit`s Coat, and you won`t be recognized. If you happen to be recognized, just try to get another coat from the Level 33 Bandits.")
                     .AddOption("What~shall~I~do~then?", 5)
                            .AddAvatar(236).FinalizeDialog();


                        break;
                    }
                case 5:
                    {
                        data.AddText("You need to talk to the Bandit Boss and read the confidential letter. If he asks you what the code is, you should answer `Success is around the corner`.")
                            .AddOption("Got~it.", 6)
                            .AddAvatar(236).FinalizeDialog();

                        break;
                    }
                case 6:
                    {
                        data.AddText("You~put~on~the~coat~and~are~going~to~see~the~Bandit~Boss.")
                            .AddOption("Yes", 7).AddOption("No.", 255)
                            .AddAvatar(236).FinalizeDialog();

                        break;
                    }
                case 7:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (!client.Inventory.Contain(720837, 1))
                                client.Inventory.Add(stream, 720837);
                            client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                            client.Player.QuestGUI.SendAutoPatcher(1011, 227, 404, (uint)NpcID.BanditBoss);
                        }
                        else
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                          .AddOption("let me check.", 255)
                           .AddAvatar(236).FinalizeDialog();
                            break;
                        }

                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.ForestGuvernor)]
        public static void ForestGuvernor(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.ForestGuvernor, client.Player.Class, 1114);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hey! Who are you and why are you here? Did you take any quest, or what?");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            data.AddOption("Regain~Supplies.", 3);
                        data.AddOption("Good.", 255)
                        .AddAvatar(95).FinalizeDialog();

                        break;
                    }
                case 3:
                    {

                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 10))
                        {
                            if (!client.Inventory.HaveSpace(2))
                            {
                                data.AddText("Please make 2 more spaces in your inventory.")
                         .AddOption("Let me check.", 255)
                                .AddAvatar(95).FinalizeDialog();
                                break;
                            }
                            client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId);
                            client.Inventory.Remove(711322, 10, stream);
                            client.Inventory.Add(stream, 723017, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.Inventory.Add(stream, 150057, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.IncreaseExperience(stream, 5000, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.Money += 500;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You've received some exp, 500 Silver, a Bound EXP Potion and a Gold Ring(Bound)!", MsgMessage.ChatMode.System, MsgMessage.MsgColor.red);
                            data.AddText("Thank god! Please accept these gifts, as thanks. You`ve really managed to get me out of this mess! You`re a lifesaver!")
                           .AddOption("Thanks.", 6)
                                  .AddAvatar(95).FinalizeDialog();
                            break;
                        }

                        data.AddText("We got big trouble! Well, we were carrying military supplies to Phoenix Castle, when all of a sudden the Bandits rushed out")
                            .AddOption("Relax.~I`ll~be~back,~soon.", 4)
                                   .AddAvatar(95).FinalizeDialog();

                        break;
                    }
                case 4:
                    {
                        data.AddText("You~are~going~to~get~10~bags~of~grain~from~the~Bandits.")
                          .AddOption("Yes.", 5).AddOption("No.", 255)
                                 .AddAvatar(95).FinalizeDialog();

                        break;
                    }
                case 5:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        client.Player.QuestGUI.SendAutoPatcher(1011, 235, 373, 0);
                        break;
                    }
                case 6:
                    {
                        data.AddText("Listen! Since you`re smart, I`m wondering if you can go help the Intelligence Agent. He`ll give you a challenging mission!")
                            .AddOption("I`m~on~my~way.", 7)
                            .AddAvatar(95).FinalizeDialog();

                        break;
                    }
                case 7:
                    {
                        client.Player.QuestGUI.SendAutoPatcher(1011, 215, 360, 8270);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.YuJing)]
        public static void YuJing(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.YuLin, client.Player.Class, 1102);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.YuJing, client.Player.Class, 1103);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.YuJing, client.Player.Class, 1104);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("I can`t think of any need in childhood as strong as the need for a father`s protection. Well, are you coming for any quest?")
                               .AddOption("Father~and~Daughter~I.", 2)
                               .AddOption("Leave.", 255)
                               .AddAvatar(116).FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            {
                                data.AddText("I can`t think of any need in childhood as strong as the need for a father`s protection. Well, are you coming for any quest?")
                                  .AddOption("Father~and~Daughter~II.", 1)
                                  .AddOption("Leave.", 255)
                                  .AddAvatar(116).FinalizeDialog();
                            }
                            else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            {
                                data.AddText("I can`t think of any need in childhood as strong as the need for a father`s protection. Well, are you coming for any quest?")
                                  .AddOption("Father~and~Daughter~III.", 5)
                                  .AddOption("Leave.", 255)
                                  .AddAvatar(116).FinalizeDialog();
                            }
                            else
                            {

                                data.AddText("I can`t think of any need in childhood as strong as the need for a father`s protection. Well, are you coming for any quest?")
                                 .AddOption("Leave.", 255)
                                 .AddAvatar(116).FinalizeDialog();
                            }
                        }
                        else
                        {

                            data.AddText("I can`t think of any need in childhood as strong as the need for a father`s protection. Well, are you coming for any quest?")
                             .AddOption("Leave.", 255)
                             .AddAvatar(116).FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 10))
                        {
                            data.AddText("Great! You are my hero!")
                       .AddOption("No~problem.", 5)
                       .AddAvatar(116).FinalizeDialog();
                            break;
                        }
                        data.AddText("Haha, hi! Are you looking for me? Do you want to play a game? Let`s play hide-and-seek!")
                        .AddOption("No,~you~should~go~home.", 3)
                        .AddAvatar(116).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.IncreaseExperience(stream, 5000, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.Money += 300;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You've received some EXP and 300 Silver", MsgMessage.ChatMode.System, MsgMessage.MsgColor.red);
                        }
                        data.AddText("But I`m still waiting for my dad. You see those Bandits, over there? What if my dad walks home at night and they see him?")
                            .AddText("~Hey, do you think you can scare them off or something? If you can get rid of 10, I bet they`ll all run off.")
                      .AddOption("Alright.", 1)
                      .AddAvatar(116).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            data.AddText("You~are~going~to~kill~10~Bandits.")
                                .AddOption("Yes.", 4)
                                .AddOption("No.", 255)

                                .AddAvatar(116).FinalizeDialog();
                            client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        }

                        break;
                    }
                case 4:
                    {
                        client.Player.QuestGUI.SendAutoPatcher(1011, 48, 381, 0);
                        break;
                    }
                case 5:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                        {
                            client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId);
                            client.IncreaseExperience(stream, 5000, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.Money += 500;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You've received some EXP and 500 Silver", MsgMessage.ChatMode.System, MsgMessage.MsgColor.red);
                        }
                        data.AddText("Give me a break! I need to focus, if I`m going to spot Dad, in time. Can you go first, and tell my mum that I will be home soon?")
                                .AddOption("OK.~Take~care.", 6).AddAvatar(116).FinalizeDialog();

                        break;
                    }
                case 6:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        data.AddText("You~are~on~the~way~to~see~Yu~Lin.")
                                .AddOption("Yes.", 7).AddOption("No.", 255).AddAvatar(116).FinalizeDialog();

                        break;
                    }
                case 7:
                    {
                        client.Player.QuestGUI.SendAutoPatcher(ActiveQuest3.FinishNpcId.Map, ActiveQuest3.FinishNpcId.X, ActiveQuest3.FinishNpcId.Y, ActiveQuest3.FinishNpcId.ID);
                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.YuLin)]
        public static void YuLin(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.MasterHao, client.Player.Class, 1023);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.YuLin, client.Player.Class, 1102);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.YuJing, client.Player.Class, 1104);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Ever has it been, that love knows not its own depth until the hour of separation... Oh, sorry, I miss my husband... Well, which quest are you coming for?")
                            .AddOption("Father~and~Daughter~III.", 6)
                            .AddAvatar(116).FinalizeDialog();

                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Ever has it been, that love knows not its own depth until the hour of separation... Oh, sorry, I miss my husband... Well, which quest are you coming for?");
                            data.AddOption("Here`s~a~Letter~Home~for~you.", 1);
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                                data.AddOption("Father~and~Daughter~I.", 2);
                            data.AddOption("See~ya.", 255)
                       .AddAvatar(116).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("Ever has it been, that love knows not its own depth until the hour of separation... Oh, sorry, I miss my husband... Well, which quest are you coming for?")
                         .AddOption("Leave.", 255)
                         .AddAvatar(116).FinalizeDialog();
                            break;
                        }
                        data.AddText("Ever has it been, that love knows not its own depth until the hour of separation... Oh, sorry, I miss my husband... Well, which quest are you coming for?");
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            data.AddOption("Here`s~a~Letter~Home~for~you.", 1);
                        else
                            data.AddOption("Father~and~Daughter~I.", 2);
                        data.AddOption("See~ya.", 255)
                         .AddAvatar(116).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                            {
                                //Some EXP, 300 Silver, Bound EXP Potion
                                client.IncreaseExperience(stream, 5000, Role.Flags.ExperienceEffect.angelwing);

                                client.Player.Money += 300;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                client.Inventory.Remove(720777, 1, stream);
                                client.Inventory.Add(stream, Database.ItemType.DoubleExp, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                                data.AddText("What? My husband is dead? You can`t be serious!")
                                .AddText("~Please don`t tell my little girl. She couldn`t take it...")
                           .AddOption("I~won`t.", 2)
                           .AddAvatar(116).FinalizeDialog();
                            }
                        }


                        break;
                    }
                case 2:
                    {
                        data.AddText("My daughter, Yu Jing, goes to the northwest everyday, in hopes that she can see her father returning home.")
                               .AddText("~It has been many hours since she went out, today. I`m worried about her. Can you go there and bring her home, please?")
                          .AddOption("You~can~count~on~me.", 3)
                          .AddAvatar(116).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        data.AddText("You~are~on~the~way~to~look~for~Yu~Jing.")
                            .AddOption("Yes.", 4).AddOption("No.", 255)
                            .AddAvatar(116).FinalizeDialog();

                        break;
                    }
                case 4:
                    {
                        data.AddText("I can`t think of any need in childhood as strong as the need for a father`s protection. Well, are you coming for any quest?")
                                  .AddOption("Yes.", 5).AddOption("No.", 255)
                                  .AddAvatar(116).FinalizeDialog();


                        break;
                    }
                case 5:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.Player.QuestGUI.SendAutoPatcher(ActiveQuest2.FinishNpcId.Map, ActiveQuest2.FinishNpcId.X, ActiveQuest2.FinishNpcId.Y, ActiveQuest2.FinishNpcId.ID);
                        break;
                    }
                case 6:
                    {
                        data.AddText("Why are you alone? Where`s my daughter?")
                                .AddOption("She~will~be~back,~soon.", 7)
                                .AddAvatar(116).FinalizeDialog();

                        break;
                    }
                case 7:
                    {
                        if (!client.Inventory.HaveSpace(3))
                        {
                            data.AddText("Please make 3 more spaces in your inventory.")
                             .AddOption("let me check.", 255)
                             .AddAvatar(116).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId))
                        {
                            client.IncreaseExperience(stream, 5000, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.Money += 500;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.SendSysMesage("You've received some EXP and 500 Silver, and Uniquer Soft Boots(B).", MsgMessage.ChatMode.System, MsgMessage.MsgColor.red);
                            client.Inventory.Add(stream, 160057, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.Inventory.Add(stream, 721673);
                            if (Database.AtributesStatus.IsTaoist(client.Player.Class))
                                client.Inventory.Add(stream, 121047, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            else

                                client.Inventory.Add(stream, 120047, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);

                            client.Player.QuestGUI.SendAutoPatcher(1011, 211, 312, 8266);
                        }


                        //8266,1011,0211,0312
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.MasterHao)]
        public static void MasterHao(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.MasterHao, client.Player.Class, 1023);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Fortuneteller, client.Player.Class, 1017);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId))
                            {
                                client.CreateBoxDialog("The~quest~`Capture~Spirit~I`~is~completed.~You`ve~received~500~Silver~and~some~EXP!");
                                client.Player.Money += 500;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                client.GainExpBall(10, true, Role.Flags.ExperienceEffect.angelwing);
                            }
                        }
                        data.AddText("A holy habit cannot cleanse a foul soul. What can I do for you, my child?")
               .AddOption("Letter~Home.", 1)
               .AddOption("See~ya.", 255)
               .AddAvatar(67).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        data.AddText("I just found this letter. It was a poem written by a villager, specially for his wife.")
                            .AddText("~Unfortunately, it seems he was killed by the Grisly Specter, while he was on his way home...")
                        .AddOption("I`m~sorry~to~hear~that.", 2)
                        .AddAvatar(67).FinalizeDialog();


                        break;
                    }
                case 2:
                    {
                        data.AddText("I have a bad feeling that awful things are going to happen in Phoenix Castle.")
                            .AddText("~Can you pay a visit to the Forest Governor and pass along this message, for me?")
                        .AddOption("Sure.", 3)
                        .AddAvatar(67).FinalizeDialog();


                        break;
                    }
                case 3:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.Teleport(212, 258, 1011);
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            {
                                client.Inventory.Add(stream, 720777);
                                client.Player.QuestGUI.Accept(ActiveQuest, 0);
                                client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest.MissionId, 1);
                            }
                            data.AddText("You~were~teleported~to~Phoenix~Castle.~Hurry~to~visit~the~Forest~Governor!").FinalizeDialog();
                            client.Player.QuestGUI.SendAutoPatcher("This~is~extremely~important.~Take~this~letter~to~the~widow,~Yu~Lin.", ActiveQuest.FinishNpcId.Map, ActiveQuest.FinishNpcId.X, ActiveQuest.FinishNpcId.Y, ActiveQuest.FinishNpcId.ID);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "archer-s");


                        }
                        else
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                        .AddOption("let me check.", 255)
                        .AddAvatar(67).FinalizeDialog();
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Fortuneteller)]
        public static void Fortuneteller(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.Fortuneteller, client.Player.Class, 1016);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.Fortuneteller, client.Player.Class, 1017);
            switch (Option)
            {
                //Hello, there! Would you like to challenge the Eight-Diagram Dimensions, or any other quests?
                case 0:
                    {
                        data.AddText("Hello, there! Would you like to challenge the Eight-Diagram Dimensions, or any other quests?")
                          .AddOption("Capture~Spirit.", 1)
                          //  .AddOption("Dimensions?", 2) not add.
                          .AddOption("Just~passing~by.", 255)
                          .AddAvatar(7).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("It is strange that the spirits of Apparitions have been sealed by a mysterious power. I tried every possible way but none have worked!")
                                                              .AddText("~Can you pay a visit to Master Hao and ask him how to break the seal?")
                                                              .AddOption("Sure.", 3)
                                                              .AddAvatar(7).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted) == false)
                        {
                            data.AddText("I have been studying about spirits for years. Recently I invented this Spirit Container, but I`m not sure if it works.")
                                .AddText("~Would you like to capture the spirits of 10 Apparitions for me? I need to test if the aura is strong enough.")
                    .AddOption("I`m~on~my~way.", 255)
                    .AddAvatar(7).FinalizeDialog();
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Player.QuestGUI.Accept(ActiveQuest, 0);
                                client.Player.QuestGUI.SendAutoPatcher("You~are~going~to~capture~the~spirits~of~10~Apparitions.", 1002, 610, 510, 0);
                                client.Inventory.Add(stream, 711243);
                            }
                            else
                            {
                                data.AddText("Please make 1 more space in your inventory.")
                                       .AddOption("Let me check.", 255)
                                       .AddAvatar(7).FinalizeDialog();
                            }
                            break;
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest.MissionId, 10))
                            {
                                data.AddText("The Spirit Container is working! Thanks a million!")
                           .AddOption("You`re~welcome..", 2)//2
                           .AddAvatar(7).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Please take this Spirit Container and head out to capture the spirits of 10 Apparitions.")
                                    .AddOption("I`m~on~my~way.", 255)
                                    .AddAvatar(7).FinalizeDialog();
                            }
                            break;
                        }


                        break;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.CreateBoxDialog("The~quest~`Capture~Spirit~I`~is~completed.~You`ve~received~500~Silver~and~some~EXP!");
                            client.Player.Money += 500;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.GainExpBall(10, true, Role.Flags.ExperienceEffect.angelwing);
                            client.Inventory.Remove(711243, 1, stream);
                            data.AddText("It is strange that the spirits of Apparitions have been sealed by a mysterious power. I tried every possible way but none have worked!")
                                   .AddText("~Can you pay a visit to Master Hao and ask him how to break the seal?")
                                   .AddOption("Sure.", 3)
                                   .AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }
                case 3:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Please visit Master Hao and ask him how to break the seal that is binding the spirits.")
                                   .AddOption("I`ll~go~now.", 255)
                                   .AddAvatar(7).FinalizeDialog();
                            break;
                        }
                        client.Player.QuestGUI.SendAutoPatcher("You~are~on~the~way~to~see~Master~Hao.", ActiveQuest2.FinishNpcId.Map, ActiveQuest2.FinishNpcId.X, ActiveQuest2.FinishNpcId.Y, ActiveQuest2.FinishNpcId.ID);
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);

                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.RuHua)]
        public static void RuHua(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.XuLiang, client.Player.Class, 1012);//1013
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.RuHua, client.Player.Class, 1013);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.RuHua, client.Player.Class, 1014);
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.XuLiang, client.Player.Class, 1015);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("To the world you may be one person, but to one person you may be the world! I hope I can find my Mr. Right, soon.")
                                .AddOption("Good~luck!", 255)
                                .AddAvatar(129).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("What are you doing back here, so soon? Did my love enjoy the handkerchief? I do hope so!")
                       .AddOption("Send~you~a~message.", 10)
                       .AddOption("Just~passying~by.", 255)
                       .AddAvatar(129).FinalizeDialog();
                            break;
                        }
                        if (!client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("To the world you may be one person, but to one person you may be the world! I hope I can find my Mr. Right, soon.")
                                .AddText("~Oh, what? You have something for me?")
                        .AddOption("A~surprise~for~you.", 1)
                        .AddOption("Good~luck!", 255)
                        .AddAvatar(129).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (!client.Inventory.Contain(711241, 1))
                            {
                                data.AddText("Well, I have always had a bit of a crush on him... I wanted to make a Handkerchief and give it to him, but it was stolen by the Apparitions!")
                      .AddText("~Could you please help me to retrieve it?")
                      .AddOption("I`ll~go~now.", 255)
                      .AddAvatar(129).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("To the world you may be one person, but to one person you may be the world. I hope I can find my Mr. Right soon. What are you doing here?")
                    .AddOption("Do~you~love~Xu~Liang?", 5).AddOption("Good~luck!", 255)
                    .AddAvatar(129).FinalizeDialog();
                            }
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("I`ve sewn some patterns on the handkerchief. Could you please help me to send this Mandarin Duck Hanky to Xu Liang?")
                .AddOption("Okay.", 255)
                .AddAvatar(129).FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("To the world you may be one person, but to one person you may be the world. I hope I can find my Mr. Right soon. What are you doing here?")
                      .AddOption("Do~you~love~Xu~Liang?", 6)
                      .AddOption("Good~luck!", 255)
                      .AddAvatar(129).FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("To the world you may be one person, but to one person you may be the world. I hope I can find my Mr. Right soon. What are you doing here?")
                       .AddOption("Do~you~love~Xu~Liang?", 3)
                       .AddOption("Good~luck!", 255)
                       .AddAvatar(129).FinalizeDialog();
                        }



                        break;
                    }
                case 10:
                    {
                        data.AddText("You mean Xu Liang wants to take me on a date beside the river, tonight? Okay, I see. Thanks for telling me! I`d love to!")
                          .AddOption("Best~wishes~for~you.", 11)
                          .AddAvatar(129).FinalizeDialog();


                        break;
                    }
                case 11:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId);
                            client.CreateBoxDialog("You`ve~completed~`Love~Confession~5`~and~received~200~Silver~and~some~EXP!");
                            client.Player.Money += 200;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.GainExpBall(10, true, Role.Flags.ExperienceEffect.angelwing);

                            data.AddText("It`s said that the Fortuneteller nearby has been studying spirits for years and recently invented some new things.")
                                .AddText("~Go pay him a visit, if you wish.")
                       .AddOption("I`m~on~my~way.", 12)
                       .AddOption("Not~interested.", 255)
                       .AddAvatar(129).FinalizeDialog();

                        }
                        break;
                    }
                case 5:
                    {
                        data.AddText("Yes! This is the Handkerchief I made it, myself. Thanks for your help!")
                         .AddOption("No~problem.", 6)
                         .AddAvatar(129).FinalizeDialog();
                        client.Inventory.Remove(711241, 1, stream);
                        client.CreateBoxDialog("You`ve~completed~`Love~Confession~3`~and~received~500~Silver~and~EXP~worth~1/12~of~an~EXP~Ball.");
                        client.Player.Money += 200;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.GainExpBall(30, true, Role.Flags.ExperienceEffect.angelwing);
                        client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId);


                        break;
                    }
                case 6:
                    {
                        data.AddText("I`ve sewn some beautiful patterns on this handkerchief. Could you please help me send this Mandarin Duck Hanky to Xu Liang?")
                        .AddOption("Okay.", 7)
                        .AddAvatar(129).FinalizeDialog();

                        break;
                    }
                case 7:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                            client.Player.QuestGUI.SendAutoPatcher("Go~send~the~Mandarin~Duck~Hanky~to~Xu~Liang.", ActiveQuest3.FinishNpcId.Map, ActiveQuest3.FinishNpcId.X, ActiveQuest3.FinishNpcId.Y, ActiveQuest3.FinishNpcId.ID);
                            client.Inventory.Add(stream, 711242);
                            client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest3.MissionId, 1);
                        }
                        else
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                        .AddOption("let me check", 255)
                        .AddAvatar(129).FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        data.AddText("Wow, a Bouquet of Peach Blossoms! It`s from Xu Liang? Well, why don`t he send this by himself?")
                        .AddOption("Do~you~know~he~loves~you?", 2)
                        .AddAvatar(129).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        client.Inventory.Remove(711240, 1, stream);
                        client.CreateBoxDialog("You`ve~completed~Love~Confession~2~and~received~200~silver~and~EXP~worth~1/30~of~an~EXP~Ball");
                        client.Player.Money += 200;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.GainExpBall(30, true, Role.Flags.ExperienceEffect.angelwing);
                        client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId);


                        goto case 3;
                    }
                case 3:
                    {
                        data.AddText("Well, I have always had a bit of a crush on him... I wanted to make a Handkerchief and give it to him, but it was stolen by the Apparitions!")
                      .AddText("~Could you please help me to retrieve it?")
                            .AddOption("No~problem.", 4)
                          .AddAvatar(129).FinalizeDialog();

                        break;
                    }
                case 4:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Go~kill~the~Apparitions~and~bring~back~the~Handkerchief~to~Ru~Hua.", 1002, 627, 526, 0);

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.XuLiang)]
        public static void XuLiang(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TCViceCaptain, client.Player.Class, 1008);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.XuLiang, client.Player.Class, 1009);//2365
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.XuLiang, client.Player.Class, 2365);//1011
            var ActiveQuest4 = Database.QuestInfo.GetFinishQuest((uint)NpcID.XuLiang, client.Player.Class, 1011);//1012
            var ActiveQuest5 = Database.QuestInfo.GetFinishQuest((uint)NpcID.XuLiang, client.Player.Class, 1012);
            var ActiveQuest6 = Database.QuestInfo.GetFinishQuest((uint)NpcID.RuHua, client.Player.Class, 1014);
            var ActiveQuest7 = Database.QuestInfo.GetFinishQuest((uint)NpcID.XuLiang, client.Player.Class, 1015);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest7.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("My mission is to ensure the security and peace of Twin City. What are you doing here?")
                   .AddOption("Nothing.", 255)
                   .AddAvatar(30).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest7.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Splendid! I`m madly in love with Ru Hua! I really appreciate your help! Hmm, I want to take her on a date beside the river at night.")
                                .AddText("~Please do me one last favor and send this message to her, okay?")
                     .AddOption("I`ll~go~now.", 255)
                     .AddAvatar(30).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("My mission is to ensure the security and peace of Twin City. Hey, how is it going?")
                     .AddOption("I~have~something~for~you.", 30)
                     .AddOption("Nothing.", 255)
                     .AddAvatar(30).FinalizeDialog();
                            break;
                        }
                        if (!client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("My mission is to ensure the security and peace of Twin City. What are you doing here?")
                        .AddOption("Here~is~a~letter~for~you.", 1)
                        .AddOption("Nothing.", 255)
                        .AddAvatar(30).FinalizeDialog();
                            break;
                        }

                        if (!client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 10))
                            {
                                if (client.Inventory.HaveSpace(2) == false)
                                {
                                    data.AddText("Please make 2 more spaces in your inventory.")
                                    .AddOption("Let me check.", 255)
                                    .AddAvatar(30).FinalizeDialog();
                                    break;
                                }
                                client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId);
                                client.CreateBoxDialog("You~completed~`Robin~Elimination`~and~received~500~Silver,~some~EXP~and~3~Small~Joy~Stones!");
                                client.Player.Money += 500;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                client.GainExpBall(200, true, Role.Flags.ExperienceEffect.angelwing);
                                client.Inventory.AddItemWitchStack(720173, 0, 3, stream);
                                client.Inventory.Add(stream, 729508);
                                data.AddText("Good job! Thanks for your help! Here is a reward for you. Take it!")
                                  .AddOption("Okay,~see~you.", 8)
                                  .AddAvatar(30).FinalizeDialog();
                                break;
                            }
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("My mission is to ensure the security and peace of Twin City. You still want to take the Robins Elimination quest?")
                                    .AddOption("Absolutely.", 7)
                                    .AddOption("Nothing.", 255)
                                    .AddAvatar(30).FinalizeDialog();
                                break;
                            }
                            goto case 4;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest3.MissionId, 100))
                            {
                                client.CreateBoxDialog("You~received~1,300~silver~and~13~minutes~of~EXP,~and~you`ll~receive~Double~EXP~for~the~next~25~minutes!");
                                client.Player.Money += 1200;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                client.Player.RateExp = 2;
                                client.Player.DExpTime = 25 * 60;
                                client.Player.CreateExtraExpPacket(stream);
                                client.Player.QuestGUI.FinishQuest(ActiveQuest3.MissionId);
                                goto case 20;
                            }

                            data.AddText("My~mission~is~to~ensure~the~security~and~peace~of~Twin~City.~What~are~you~doing~here?")
                                .AddOption("Experience~XP~skill.", 12)
                                .AddOption("Nothing.", 255)
                                .AddAvatar(30).FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest4.MissionId, 5))
                            {
                                data.AddText("My mission is to ensure the security and peace of Twin City. Would you please do me a favor? ")
                      .AddOption("Sure~thing.", 24)
                      .AddOption(" Leave.", 255)
                      .AddAvatar(30).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("My mission is to ensure the security and peace of Twin City. Would you please do me a favor? ")
                        .AddOption("Sure~thing.", 22)
                        .AddOption(" Leave.", 255)
                        .AddAvatar(30).FinalizeDialog();
                            }
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Well, I`ve made a Bouquet of Peach Blossoms , but I`m afraid that she may refuse me when she saw the flowers...")
                                .AddText("Nothing.")
                                .AddAvatar(30).FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest6.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            goto case 31;
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest5.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("My mission is to ensure the security and peace of Twin City. What are you doing here?")
                                 .AddText(" ~Can you help me to send this Bouquet of Peach Blossoms to Ru Hua?")
                         .AddOption("No problem.", 255)
                         .AddAvatar(30).FinalizeDialog();
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest4.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            goto case 27;
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            goto case 20;
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            goto case 8;
                        }


                        break;
                    }
                case 30:
                    {
                        client.Inventory.Remove(711242, 1, stream);
                        data.AddText("Wow, Ru Hua asked you to give me this Mandarin Duck Hanky? How terrific! She has accepted my love! I`m so happy! ")
                         .AddOption("Best~wishes~for~you!", 31)
                         .AddAvatar(30).FinalizeDialog();
                        client.CreateBoxDialog("You`ve~completed~`Love~Confession~4`~and~received~300~Silver~and~EXP~worth~1/20~of~an~EXP~Ball.");
                        client.Player.Money += 300;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.GainExpBall(15, true, Role.Flags.ExperienceEffect.angelwing);
                        client.Player.QuestGUI.FinishQuest(ActiveQuest6.MissionId);


                        break;
                    }
                case 31:
                    {
                        data.AddText("Splendid! I`m madly in love with Ru Hua! I really appreciate your help! Hmm, I want to take her on a date beside the river at night. ")
                                .AddText("~Please do me one last favor and send this message to her, okay?")
                            .AddOption("No~problem.", 32)
                            .AddAvatar(30).FinalizeDialog();

                        break;
                    }
                case 32:
                    {
                        data.AddText("Splendid! I`m madly in love with Ru Hua! I really appreciate your help! Hmm, I want to take her on a date beside the river at night.")
                              .AddText("~Please do me one last favor and send this message to her, okay?")
                          .AddOption("I`ll~go~now.", 255)
                          .AddAvatar(30).FinalizeDialog();
                        client.Player.QuestGUI.Accept(ActiveQuest7, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Send~a~message~to~Ru~Hua.", ActiveQuest7.FinishNpcId.Map, ActiveQuest7.FinishNpcId.X, ActiveQuest7.FinishNpcId.Y, ActiveQuest7.FinishNpcId.ID);


                        break;
                    }
                case 26:
                    {
                        data.AddText("Well, I`ve made a bouquet of peach blossoms, but I`m afraid that she may refuse me when she sees the flowers... ")
                             .AddText("~Can you help me to send this Bouquet of Peach Blossoms to Ru Hua?")
                         .AddOption("My~pleasure.", 28)
                         .AddAvatar(30).FinalizeDialog();


                        break;
                    }
                case 27:
                    {
                        data.AddText("My mission is to ensure the security and peace of Twin City. Well, I do need your help again. You won`t say no, right? ")
                               .AddText("~Can you help me to send this Bouquet of Peach Blossoms to Ru Hua?")
                           .AddOption("Just~tell~me.", 26)
                          .AddOption("Leave.", 255)
                           .AddAvatar(30).FinalizeDialog();


                        break;
                    }
                case 28:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.Inventory.Add(stream, 711240);
                            client.Player.QuestGUI.Accept(ActiveQuest5, 0);
                            client.Player.QuestGUI.SendAutoPatcher("Please~give~the~Bouquet~of~Peach~Blossoms~to~Ru~Hua.", ActiveQuest5.FinishNpcId.Map, ActiveQuest5.FinishNpcId.X, ActiveQuest5.FinishNpcId.Y, ActiveQuest5.FinishNpcId.ID);
                            client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest5.MissionId, 1);
                        }
                        else
                        {
                            data.AddText("Please make 1 more space in you inventory. ")
                         .AddOption("Let me check", 255)
                          .AddAvatar(30).FinalizeDialog();

                        }


                        break;
                    }
                case 24:
                    {
                        data.AddText(" Wow, look at the beautiful peach blossoms! Thanks a lot! I`ll make a bouquet of peach blossoms and give them to Ru Hua!")
                         .AddOption("Good~luck!", 26)
                         .AddAvatar(30).FinalizeDialog();
                        client.CreateBoxDialog("You`ve~completed~`Love~Confession~1`~and~received~400~Silver~and~EXP~worth~1/15~of~an~EXP~Ball!");
                        client.Player.Money += 400;
                        client.Inventory.Remove(711239, 5, stream);
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.GainExpBall(15, true, Role.Flags.ExperienceEffect.angelwing);
                        client.Player.QuestGUI.FinishQuest(ActiveQuest4.MissionId);


                        break;
                    }
                case 22:
                    {
                        data.AddText("Hmm, I have been secretly in love with Ru Hua for a long time... But I`m still not courageous enough to tell her of my love. ")
                           .AddText("~Could you please help me pick 5 Peach Blossoms from the Peach Trees, so I can make a bouquet of Peach Blossoms to give to her?")
                       .AddOption("I`ll~go~now.", 255)
                       .AddAvatar(30).FinalizeDialog();


                        break;
                    }
                case 20:
                    {
                        data.AddText(" Hmm, I have been secretly in love with Ru Hua for a long time... But I`m still not courageous enough to tell her of my love.")
                            .AddText("~Could you please help me pick 5 Peach Blossoms from the Peach Trees, so I can make a bouquet of Peach Blossoms to give to her?")

                        .AddOption("No~problem.", 21)
                        .AddOption(" Leave.", 255)
                        .AddAvatar(30).FinalizeDialog();

                        break;
                    }
                case 21:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest4, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Go~pick~5~Peach~Blossoms~from~the~Peach~Trees,~nearby.", 1002, 480, 701, 7997);


                        break;
                    }
                case 1:
                    {
                        data.AddText("Oh, it`s a Plume Letter from the TC Vice Captain! Something must be urgent. Thanks for your help!")
                        .AddOption("You`re~welcome.", 2)
                        .AddAvatar(30).FinalizeDialog();


                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Contain(711237, 1))
                        {
                            client.Inventory.Remove(711237, 1, stream);
                            client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId);
                            client.CreateBoxDialog("You~completed~`Letter~Delivery~3`,~and~received~500~Silver~and~5~minutes~of~EXP!");
                            client.Player.Money += 500;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.Player.RateExp = 2;
                            client.Player.DExpTime = 5 * 60;
                            client.Player.CreateExtraExpPacket(stream);
                            data.AddText("Recently, lots of robins invaded the Wind Plain. Could you go kill 5 Robins and restore peace to Wind Plain?")
                     .AddOption("Piece~of~cake!", 4)
                     .AddAvatar(30).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Oh, where it`s a Plume Letter from the TC Vice Captain?")
              .AddOption("I lost that.", 255)
              .AddAvatar(30).FinalizeDialog();
                        }


                        break;
                    }

                case 4:
                    {
                        data.AddText("My mission is to ensure the security and peace of Twin City. Hey, I have 2 quests for you: Robins Elimination and Love Confession. Which one are you interested in?")
                            .AddOption("Robin~Elimination.", 5)
                            .AddOption("Nothing.", 255)
                            .AddAvatar(30).FinalizeDialog();

                        break;
                    }
                case 5:
                    {
                        data.AddText("By the way, Artisan Luo is looking for someone to help him gather some Robin Feather. Maybe you can give him a hand?")
                             .AddOption("Sure.", 6)
                             .AddAvatar(30).FinalizeDialog();
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Go~kill~10~Robins~and~then~return~to~Xu~Liang.", 1002, 468, 638, 0);


                        break;
                    }
                case 6:
                    {
                        client.Player.QuestGUI.SendAutoPatcher(1002, 442, 431, 4467);//4467,2,5510,1002,442,431
                        break;
                    }

                case 7:
                    {
                        data.AddText("Good. Then go kill 10 Robins and restore peace to Wind Plain!")
                              .AddOption("Piece~of~cake.", 255)
                              .AddAvatar(30).FinalizeDialog();


                        break;
                    }
                case 8:
                    {
                        Role.Flags.SpellID spell = (Role.Flags.SpellID)0;
                        if (Database.AtributesStatus.IsTrojan(client.Player.Class))
                            spell = Role.Flags.SpellID.Cyclone;
                        else if (Database.AtributesStatus.IsWarrior(client.Player.Class))
                            spell = Role.Flags.SpellID.Superman;
                        else if (Database.AtributesStatus.IsArcher(client.Player.Class))
                            spell = Role.Flags.SpellID.XpFly;
                        else if (Database.AtributesStatus.IsNinja(client.Player.Class))
                            spell = Role.Flags.SpellID.FatalStrike;
                        else if (Database.AtributesStatus.IsMonk(client.Player.Class))
                            spell = Role.Flags.SpellID.Oblivion;
                        else if (Database.AtributesStatus.IsPirate(client.Player.Class))
                            spell = Role.Flags.SpellID.CannonBarrage;
                        else if (Database.AtributesStatus.IsTaoist(client.Player.Class))
                            spell = Role.Flags.SpellID.Lightning;

                        if (spell != 0)
                        {
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)spell))
                                client.MySpells.Add(stream, (ushort)spell);
                        }
                        data.AddText("In this dangerous world, a powerful XP skill can make you stronger. Now I`ll teach you a unique XP skill, " + spell.ToString() + "")
                                .AddOption("What~is~it?", 10)
                                .AddOption("I`m~just~passing~by.", 255)
                                .AddAvatar(30).FinalizeDialog();


                        break;
                    }
                case 10:
                    {
                        if (Database.AtributesStatus.IsTrojan(client.Player.Class))
                        {
                            data.AddText("The Trojans have unique XP skill which disguises them as a robot and wreaks havoc amongst enemies.")
                              .AddOption("Kill~Robins.", 11)
                              .AddOption("I~see.", 255)
                              .AddAvatar(30).FinalizeDialog();
                        }
                        else if (Database.AtributesStatus.IsWarrior(client.Player.Class))
                        {
                            data.AddText("The 'Superman' XP Skill is unique, possessed only by the Warrior. When activated it causes a death blow, decupled damage!")
                              .AddOption("Kill~Robins.", 11)
                              .AddOption("I~see.", 255)
                              .AddAvatar(30).FinalizeDialog();
                        }
                        else if (Database.AtributesStatus.IsArcher(client.Player.Class))
                        {
                            data.AddText("The ability to 'Fly' is the unique ability of the archer. Archers who fly are ")
                                .AddText(" immune to physical attacks and can shoot without fear of being attacked.")
                              .AddOption("Kill~Robins.", 11)
                              .AddOption("I~see.", 255)
                              .AddAvatar(30).FinalizeDialog();
                        }
                        else if (Database.AtributesStatus.IsNinja(client.Player.Class))
                        {
                            data.AddText("The ninja's skills can cause massive damage in a split second, or disable enemies, or prevent them from healing themselves.\n\n")
                                 .AddText("Fatal Strike Boosts Ninja's speed and attack, allowing the Ninja to blink between ")
                                 .AddText("targets and kill them instantly. This can only be used against monsters (not players).")
                               .AddOption("Kill~Robins.", 11)
                               .AddOption("I~see.", 255)
                               .AddAvatar(30).FinalizeDialog();

                        }
                        else if (Database.AtributesStatus.IsMonk(client.Player.Class))
                        {
                            data.AddText("Move speed will increase. Inflict 200% damage on targets. For each monster killed within ")
                                .AddText(" 30 seconds after the XP skill is activated, the EXP awarded will be increased by 1/2.")
                              .AddOption("Kill~Robins.", 11)
                              .AddOption("I~see.", 255)
                              .AddAvatar(30).FinalizeDialog();
                        }
                        else if (Database.AtributesStatus.IsPirate(client.Player.Class))
                        {
                            data.AddText("(Cannon Barrage)  Inflict 400% damage on all monsters (100% damage on bosses), 10% of normal damage ")
                                .AddText(" on players within 5 paces every 2 seconds. ")
                              .AddOption("Kill~Robins.", 11)
                              .AddOption("I~see.", 255)
                              .AddAvatar(30).FinalizeDialog();
                        }
                        else if (Database.AtributesStatus.IsTaoist(client.Player.Class))
                        {
                            data.AddText("Taoists with no magic is a sitting duck. They cast skills or magic from range and their  ")
                                .AddText("XP skills will cause even greater damage.\n")
                                .AddText("The XP skill needs a certain period of time to accumulate its power. Once cast, you can kill a lot of monsters in a very short time.")
                              .AddOption("Kill~Robins.", 11)
                              .AddOption("I~see.", 255)
                              .AddAvatar(30).FinalizeDialog();
                        }
                        break;
                    }
                case 11:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Use your XP skill to kill 100 Robins!", 1002, 468, 638, 0);

                        break;
                    }
                case 12:
                    {
                        if (client.Player.QuestGUI.CheckObjectives(ActiveQuest3.MissionId, 100))
                        {
                            //  a
                        }
                        else
                        {
                            data.AddText("Use your XP skill to kill 100 Robins!")
                               .AddOption("Okay.", 255)
                               .AddAvatar(30).FinalizeDialog();
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.TCViceCaptain)]
        public static void TCViceCaptain(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TCViceCaptain, client.Player.Class, 1006);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.TCViceCaptain, client.Player.Class, 1007);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.TCViceCaptain, client.Player.Class, 1008);
            switch (Option)
            {
                case 0:
                    {
                        if (!client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("Hi! I`m the TC Vice Captain, and I`m here to guard Twin City. Hey, do you think you can help me deliver a letter?")
                        .AddOption("Tell~me~more!", 1)
                        .AddOption("Just~passing~by.", 255)
                        .AddAvatar(18).FinalizeDialog();
                            break;
                        }
                        else if (!client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            goto case 4;
                        }
                        else if (!client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            goto case 7;
                        }
                        data.AddText("Hi! I`m the TC Vice Captain, and I`m here to guard Twin City. Don`t make trouble, or we`re going to have problems!")
                         .AddOption("I see.", 255)
                         .AddAvatar(18).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(711235, 1))
                        {
                            data.AddText("Well done! You`ve got the letter. Thanks a lot!")
                             .AddOption("No~problem.", 3)
                             .AddAvatar(18).FinalizeDialog();
                            break;
                        }
                        data.AddText("I want you to deliver a letter to Xu Liang, but the letter is being held by the Warehouseman. Could you please get it back for me?")
                            .AddOption("No~problem.", 2)
                            .AddOption(" I~have~no~time.", 255)
                            .AddAvatar(18).FinalizeDialog();



                        break;
                    }
                case 2:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Go~retrieve~the~Military~Letter~from~the~Warehouseman.", 1002, 281, 251, 8);


                        break;
                    }
                case 3:
                    {
                        client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId);
                        client.Inventory.Remove(711235, 1, stream);
                        client.Player.Money += 100;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.CreateBoxDialog("You~completed~Letter~Delivery~1~and~received~100~silver.");


                        goto case 4;
                    }
                case 4:
                    {
                        if (client.Inventory.Contain(711236, 1))
                        {
                            data.AddText("Hi! I`m the TC Vice Captain, and I`m here to guard Twin City. Hmm, do you want to take the quest `Letter Delivery 2`?")
    .AddOption("Yeah,~I`d~like~to.", 6)
    .AddOption(" I~have~no~time.", 255)
    .AddAvatar(18).FinalizeDialog();
                            break;
                        }
                        data.AddText("The Military Letter is quite important, so I need a Turtledove Plume to mark the letter. Could you please hunt some Turtledoves and bring back a Turtledove Plume for me?")
     .AddOption("No~problem.", 5)
     .AddOption(" I~have~no~time.", 255)
     .AddAvatar(18).FinalizeDialog();

                        break;
                    }
                case 5:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Hunt~the~Turtledoves~and~collect~a~Turtledove~Plume!", 1002, 340, 484, 0);


                        break;
                    }
                case 6:
                    {
                        if (client.Inventory.HaveSpace(2) == false)
                        {
                            data.AddText("Please make 2 more spaces in your inventory.")
                            .AddOption("Let me check.", 255)
                            .AddAvatar(18).FinalizeDialog();
                            break;
                        }
                        if (client.Inventory.Contain(711236, 1))
                        {
                            client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId);
                            client.Inventory.Remove(711236, 1, stream);
                            client.CreateBoxDialog("You~completed~`Letter~Delivery~2`~and~received~300~Silver,~some~EXP,~5~Resolutives~and~a~Twin~City~Gate!");
                            client.GainExpBall(200, true, Role.Flags.ExperienceEffect.angelwing);
                            client.Player.Money += 300;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.Inventory.AddItemWitchStack(1000010, 0, 5, stream);
                            client.Inventory.Add(stream, 1060020);
                            goto case 7;
                        }



                        break;
                    }
                case 7:
                    {
                        data.AddText("Now, please hurry and deliver the Military Letter marked with the Turtledove Plume to Xu Liang in Wind Plain! It`s urgent!")
                              .AddOption("Got~it!", 8)
                              .AddOption("Leave.", 255)
                              .AddAvatar(18).FinalizeDialog();


                        break;
                    }
                case 8:
                    {
                        if (client.Inventory.HaveSpace(1) == false)
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                            .AddOption("Let me check.", 255)
                            .AddAvatar(18).FinalizeDialog();
                            break;
                        }
                        if (client.Inventory.Contain(711237, 1))
                        {
                            data.AddText("Now, please hurry and deliver the Plume Letter to Xu Liang in Wind Plain! It`s urgent!")
                                .AddOption("Got~it!", 255)
                                .AddAvatar(18).FinalizeDialog();
                            break;
                        }
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Hurry~and~give~the~Plume~Letter~to~Xu~Liang~in~Wind~Plain.", ActiveQuest3.FinishNpcId.Map, ActiveQuest3.FinishNpcId.X, ActiveQuest3.FinishNpcId.Y, ActiveQuest3.FinishNpcId.ID);
                        client.Inventory.Add(stream, 711237);


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Shelby)]
        public static void Shelby(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("We~hope~all~can~help~each~other.~If~you~power~level~the~newbies,~we~may~reward~you~Experience~or~meteors.~Are~you~interested?")
                    .AddOption("Tell~me~more~details.", 1)
                    .AddOption("Check~my~virtue~points.", 5)
                    .AddOption("Claim~Prize.", 6)
                    .AddOption("Just~passing~by.", 255)
                    .AddAvatar(7).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        data.AddText("If~you~are~above~level~70~and~try~to~power~level~the~newbies~(at~least~20~levels~lower~than~you),~you~may~gain~virtue~points.")
                            .AddOption("What~are~the~virtue~points?", 2)
                            .AddAvatar(7).FinalizeDialog();



                        break;
                    }
                case 2:
                    {
                        data.AddText("The~more~newbies~you~power~level,~the~more~virtue~points~you~gain.~I~shall~give~you~a~good~reward~for~a~certain~virtue~points.")
                           .AddOption("How~can~I~gain~virtue~points?", 3)
                           .AddOption("What~prize~can~I~expect?", 4)
                           .AddAvatar(7).FinalizeDialog();


                        break;
                    }
                case 3:
                    {
                        data.AddText("Once~the~newbies~are~one~level~up,~the~team~captain~can~gain~virtue~points~accordingly.")
                             .AddOption("I~see.", 255)
                             .AddAvatar(7).FinalizeDialog();


                        break;
                    }
                case 4:
                    {
                        data.AddText("I~shall~reward~you~exp.~of~equivalent~to~an~ExpBall~for~15,000~virtue~points~or~a~meteor~for~5000~virtue~points or DragonBall for 20,000 virtue~points.")
                         .AddOption("I~see.", 255)
                         .AddAvatar(7).FinalizeDialog();


                        break;
                    }
                case 5:
                    {
                        data.AddText("Your~current~virtue~points~are~" + client.Player.VirtutePoints + ",~please~try~to~gain~more.")
                           .AddOption("Thanks.", 255)
                           .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 6:
                    {
                        data.AddText("What~prize~do~you~prefer?")
                            .AddOption("Meteor.", 10)
                            .AddOption("Exp.", 11)
                            .AddOption("DragonBall", 12)
                            .AddOption("Let~me~think~it~over", 255)
                            .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 10:
                    {
                        if (client.Player.VirtutePoints >= 5000)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Player.VirtutePoints -= 5000;
                                client.Player.SendUpdate(stream, client.Player.VirtutePoints, MsgUpdate.DataType.VirtutePoints);
                                client.Inventory.Add(stream, Database.ItemType.Meteor);
                            }
                            else
                            {
                                data.AddText("Please make 1 more space in your inventory")
                                                         .AddOption("Let me check.", 255).AddAvatar(7)
                                                        .FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry,~you~do~not~have~the~required~virtue~points.")
                            .AddOption("I~see.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 11:
                    {
                        if (client.Player.Level >= 130)
                        {
                            data.AddText("Only the characters below level 130 can exchange the virtue points for exp. You may find Simon")
                                .AddText(" (Twin City 393,235) and spend 2,000 virtue points to hunt the treasure in the Labyrinth.")
                              .AddOption("Wow.~So~cool.", 255)
                              .AddAvatar(7).FinalizeDialog();
                            break;
                        }
                        if (client.Player.VirtutePoints >= 15000)
                        {
                            client.Player.VirtutePoints -= 15000;
                            client.Player.SendUpdate(stream, client.Player.VirtutePoints, MsgUpdate.DataType.VirtutePoints);
                            client.GainExpBall(600, true, Role.Flags.ExperienceEffect.angelwing);

                        }
                        else
                        {
                            data.AddText("Sorry,~you~do~not~have~the~required~virtue~points.")
                            .AddOption("I~see.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 12:
                    {
                        if (client.Player.VirtutePoints >= 20000)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Player.VirtutePoints -= 20000;
                                client.Player.SendUpdate(stream, client.Player.VirtutePoints, MsgUpdate.DataType.VirtutePoints);
                                client.Inventory.Add(stream, Database.ItemType.DragonBall);
                            }
                            else
                            {
                                data.AddText("Please make 1 more space in your inventory")
                                                         .AddOption("Let me check.", 255).AddAvatar(7)
                                                        .FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry,~you~do~not~have~the~required~virtue~points.")
                            .AddOption("I~see.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }

            }
        }

        [NpcAttribute(NpcID.TcBoxer)]
        public static void TcBoxer(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("If you are level 20 or above, you may level up at the training grounds.it does ")
                            .AddText(" not consume any durability,life and mana. Do you want me to teleport you there?")
                            .AddText("It is free for my guild members, and 1000 silver for others.")
                    .AddOption("Please teleport me there.", 1)
                    .AddOption("Just passing by.", 255)
                    .AddAvatar(8).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (client.Player.Money > 1000)
                        {
                            client.Player.Money -= 1000;
                            client.Teleport(226, 218, 1039);
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            data.AddText("When you gain experience at the training ground, you can only attack the dummies or stakes which ")
                            .AddText(" level is lower than your.")
                    .AddOption("I see.", 255)
                    .AddAvatar(8).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You do not have 1000 silvers with you.")
                                           .AddOption("oh, sorry", 255)
                                           .AddAvatar(8).FinalizeDialog();
                        }


                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.BirdBoxer)]
        public static void BirdBoxer(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("If you are level 20 or above, you may level up at the training grounds.it does ")
                            .AddText(" not consume any durability,life and mana. Do you want me to teleport you there?")
                            .AddText("It is free for my guild members, and 1000 silver for others.")
                    .AddOption("Please teleport me there.", 1)
                    .AddOption("Just passing by.", 255)
                    .AddAvatar(8).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (client.Player.Money > 1000)
                        {
                            client.Player.Money -= 1000;
                            client.Teleport(226, 218, 1039);
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            data.AddText("When you gain experience at the training ground, you can only attack the dummies or stakes which ")
                            .AddText(" level is lower than your.")
                    .AddOption("I see.", 255)
                    .AddAvatar(8).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You do not have 1000 silvers with you.")
                                           .AddOption("oh, sorry", 255)
                                           .AddAvatar(8).FinalizeDialog();
                        }


                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.PheonixBoxer)]
        public static void PheonixBoxer(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("If you are level 20 or above, you may level up at the training grounds.it does ")
                            .AddText(" not consume any durability,life and mana. Do you want me to teleport you there?")
                            .AddText("It is free for my guild members, and 1000 silver for others.")
                    .AddOption("Please teleport me there.", 1)
                    .AddOption("Just passing by.", 255)
                    .AddAvatar(8).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (client.Player.Money > 1000)
                        {
                            client.Player.Money -= 1000;
                            client.Teleport(226, 218, 1039);
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            data.AddText("When you gain experience at the training ground, you can only attack the dummies or stakes which ")
                            .AddText(" level is lower than your.")
                    .AddOption("I see.", 255)
                    .AddAvatar(8).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You do not have 1000 silvers with you.")
                                           .AddOption("oh, sorry", 255)
                                           .AddAvatar(8).FinalizeDialog();
                        }


                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.ApeBoxer)]
        public static void ApeBoxer(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("If you are level 20 or above, you may level up at the training grounds.it does ")
                            .AddText(" not consume any durability,life and mana. Do you want me to teleport you there?")
                            .AddText("It is free for my guild members, and 1000 silver for others.")
                    .AddOption("Please teleport me there.", 1)
                    .AddOption("Just passing by.", 255)
                    .AddAvatar(8).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (client.Player.Money > 1000)
                        {
                            client.Player.Money -= 1000;
                            client.Teleport(226, 218, 1039);
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            data.AddText("When you gain experience at the training ground, you can only attack the dummies or stakes which ")
                            .AddText(" level is lower than your.")
                    .AddOption("I see.", 255)
                    .AddAvatar(8).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You do not have 1000 silvers with you.")
                                           .AddOption("oh, sorry", 255)
                                           .AddAvatar(8).FinalizeDialog();
                        }



                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.DesertBoxer)]
        public static void DesertBoxer(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("If you are level 20 or above, you may level up at the training grounds.it does ")
                            .AddText(" not consume any durability,life and mana. Do you want me to teleport you there?")
                            .AddText("It is free for my guild members, and 1000 silver for others.")
                    .AddOption("Please teleport me there.", 1)
                    .AddOption("Just passing by.", 255)
                    .AddAvatar(8).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Player.Money > 1000)
                        {
                            client.Player.Money -= 1000;
                            client.Teleport(226, 218, 1039);
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            data.AddText("When you gain experience at the training ground, you can only attack the dummies or stakes which ")
                            .AddText(" level is lower than your.")
                    .AddOption("I see.", 255)
                    .AddAvatar(8).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You do not have 1000 silvers with you.")
                                           .AddOption("oh, sorry", 255)
                                           .AddAvatar(8).FinalizeDialog();
                        }


                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.DicCityMap4)]
        public static void DicCityMap4(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello there. Just let me know if you want to go to TwinCity.")
                   .AddOption("TwinCity.", 2)
                   .AddOption("I`m have the DarkHorn.", 20)
                   .AddOption("Let~me~think...", 255)
                   .AddAvatar(63).FinalizeDialog();

                        break;
                    }
                case 20:
                    {
                        if (client.Inventory.Contain(790001, 1))
                        {
                            if (client.Inventory.HaveSpace(8))
                            {
                                MsgTournaments.MsgSchedules.DisCity.RewardDarkHorn(client, stream);
                            }
                            else
                            {
                                data.AddText("Please make 8 more spaces in your inventory")
                                              .AddOption("Let me check.", 255)
                                              .AddAvatar(8).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry you not have DarkHorn.")
                      .AddOption("Ah. ok", 255).AddAvatar(154).FinalizeDialog();
                        }


                        break;
                    }
                case 2:
                    {
                        data.AddText("Sure you want to leave in TwinCity?")
                            .AddOption("Yes.", 3)
                            .AddOption("Let~me~think...", 255)
                            .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 3:
                    {
                        client.Teleport(428, 378, 1002);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.DisCityMap2)]
        public static void DisCityMap2(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello, can you help me? If you kill the required monsters I desire you can win some EXP. You must kill " + MsgTournaments.MsgSchedules.DisCity.KillsMap2Records(client.Player.Class) + " monsters.")
                                .AddText("You have killed " + client.Player.KillersDisCity + " monsters.")
                                .AddOption("I finished", 1)
                           .AddOption("Sorry, I'll be back", 255).AddAvatar(154).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Player.KillersDisCity >= MsgTournaments.MsgSchedules.DisCity.KillsMap2Records(client.Player.Class))
                        {
                            if (client.Inventory.HaveSpace(2))
                            {
                                client.Inventory.Add(stream, 723087);
                                if (Role.Core.Rate(2, 10))
                                {
                                    if (Role.Core.Rate(1, 2))
                                    {
                                        client.Inventory.Add(stream, 724155, 1);
                                        client.SendSysMesage("You passed the 2nd level in the Dis City quest and got the Medium Veneer Pack.");
                                    }
                                    else
                                    {
                                        client.Inventory.Add(stream, 724161, 1);
                                        client.SendSysMesage("You passed the 2nd level in the Dis City quest and got the Medium Cutter Pack.");
                                    }
                                }
                                else
                                {
                                    switch (Program.GetRandom.Next(0, 8))
                                    {
                                        case 0:
                                            {
                                                client.Inventory.Add(stream, 724158, 1);
                                                client.SendSysMesage("You passed the 2nd level in the Dis City quest and got the Medium Red Tassel Pack.");
                                                break;
                                            }
                                        case 1:
                                            {
                                                client.Inventory.Add(stream, 724137, 1);
                                                client.SendSysMesage("You passed the 2nd level in the Dis City quest and got the Medium Plate Pack.");
                                                break;
                                            }
                                        case 2:
                                            {
                                                client.Inventory.Add(stream, 724140, 1);
                                                client.SendSysMesage("You passed the 2nd level in the Dis City quest and got the Medium Visor Pack.");
                                                break;
                                            }
                                        case 3:
                                            {
                                                client.Inventory.Add(stream, 724164, 1);
                                                client.SendSysMesage("You passed the 2nd level in the Dis City quest and got the Medium Cauterant Pack.");
                                                break;
                                            }
                                        case 4:
                                            {
                                                client.Inventory.Add(stream, 724143, 1);
                                                client.SendSysMesage("You passed the 2nd level in the Dis City quest and got the Medium Breastplate Pack.");
                                                break;
                                            }
                                        case 5:
                                            {
                                                client.Inventory.Add(stream, 724173, 1);
                                                client.SendSysMesage("You passed the 2nd level in the Dis City quest and got the Medium Tri Plume Pack.");
                                                break;
                                            }
                                        case 6:
                                            {
                                                client.Inventory.Add(stream, 724176, 1);
                                                client.SendSysMesage("You passed the 2nd level in the Dis City quest and got the Medium Belt Pack.");
                                                break;
                                            }
                                        case 7:
                                            {
                                                client.Inventory.Add(stream, 724146, 1);
                                                client.SendSysMesage("You passed the 2nd level in the Dis City quest and got the Medium Hat Rope Pack.");
                                                break;
                                            }
                                    }
                                }
                                MsgTournaments.MsgSchedules.DisCity.TeleportToMap3(client);

                            }
                            else
                            {
                                data.AddText("Please make 2 empty space in your inventory to receive the reward for passing the 2nd level.");
                                data.AddOption("OK.");
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You`ll~pass~if~you~kill~" + MsgTournaments.MsgSchedules.DisCity.KillsMap2Records(client.Player.Class) + "~monsters~in~HellHall.~Hurry~up!~Only~30~persons~can~get~to~HellCloister~with~me.");
                            data.AddOption("I~see.");
                            data.FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.DisCityMap1)]
        public static void DisCityMap1(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(723085, 5))
                        {
                            data.AddText("Well, now that you`ve got 5 Soul Stones, I`ll give you 2 Exp Ball(B), a Cordiality Book(B), an Exp Pill(B) and a Dis City Bless Stone(12H)(B). Then, send you to the next level. Are you ready?");
                            data.AddOption("I`m~ready.", 2);
                            data.AddOption("Leave~Dis~City.", 1);
                            data.AddOption("Wait~a~moment.");
                            data.AddAvatar(67);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("I~need~five~SoulStones~in~order~to~help~you.");
                            data.AddOption("I~see.");
                            data.FinalizeDialog();
                        }


                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Contain(723085, 5))
                        {
                            client.Inventory.Remove(723085, 5, stream);

                            client.Inventory.AddItemWitchStack(Database.ItemType.ExpBall2, 0, 2, stream, true);
                            client.Inventory.Add(stream, 728883, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.Inventory.Add(stream, 720393, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.Inventory.Add(stream, 728888, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);

                            MsgTournaments.MsgSchedules.DisCity.TeleportToMap2(client);
                        }
                        else
                        {
                            data.AddText("I~need~five~SoulStones~in~order~to~help~you.");
                            data.AddOption("I~see.");
                            data.AddAvatar(67);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        client.Teleport(428, 378, 1002);



                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.TwinDisCityMain)]
        public static void TwinDisCityMain(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Our ancestors exerted their utmost efforts and defeathed the demons. Since")
                              .AddText(" then the world has been kept in peace for hundreads of years. Now the demons have come back and the world is getting into turbulence again.")
                              .AddText("The Dis City will take place during 7:30-7:35 and 17:30-17:35 every day, except Sundays.")
                              .AddOption("Could you tell me more?", 1)
                              .AddOption("I am here to drive away the evils!", 10)
                              .AddOption("I`m have the DarkHorn.", 20)
                         .AddOption("I'd better leave.", 255).AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        data.AddText("The decisive battle bewtween human and the demon broke out here. The ferocious battle lasted for seven days and nights. Countless heroes lost their")
                           .AddText(" lives. And the justice won. Afterwards we can live in peace for hundreads of years.")
                           .AddOption("And then?", 2).AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        data.AddText("UltimatePluto, leader of the demons sworn to take revenge in one thousand  years befote he managed to run away. To prevent the demons coming back, I")
                            .AddText(" have been scouting their land cautiously. Yesterday I found something  unwanted. It seems that UltimatePluto had come round to endanger humans again.")
                            .AddOption("What should we do?", 3).AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        data.AddText("Fortunately UltimatePluto is still unfledged. He must resort to a Battle Formation for the moments. So i am about to organize an army too infiltrate his")
                            .AddText(" land and destroy his formation before he becomes stronger.")
                            .AddOption("I'd like to know more.", 4).AddOption("Sigh, I'm helpless.", 255).AddAvatar(67).FinalizeDialog();


                        break;
                    }
                case 4:
                    {
                        data.AddText("You must kill UltimatePluto rapisly to get Darkhorn so that i can use it to diable the formation. Before you can do that, you must break into HellGate,")
                           .AddText(" enter the HellHall, and fight through the HellCloister. Countless ferocious  demons are watching those strongholds. I'll give you some strategies on")
                           .AddText(" breaking through those fortresses if you like.")
                           .AddOption("I want to know HellGate.", 6)
                           .AddOption("I want to know HellHall.", 7)
                           .AddOption("I want to know HellCloister.", 8)
                           .AddOption("I want to know BattleFormation.", 9)
                           .AddOption("Thanks. I know what to do.", 255)
                           .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 6:
                    {
                        data.AddText("HellGate is shielded from poisonous fog, so you can't approach it. But demons do not fear the gas. They may turn into SoulStones after they die. If")
                            .AddText(" you get 5 stones for me, i'll help you break through the gate. To protect  the unrealted persons, i'll send the others back as soon as the first 60")
                            .AddText(" persons pass through the gate.")
                            .AddOption("Thank you.", 255)
                            .AddOption("I'd like to know more.", 4).AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 7:
                    {
                        data.AddText("HellHall is the very spot where the demons swear their oaths of allegiance to UltimatePluto. Everybody must do his best to make a way out. Due to limited")
                            .AddText(" time, i can lead only 30 persons to hellCloister!")
                            .AddOption("Thank you.", 255)
                            .AddOption("I'd like to know more.", 4).AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 8:
                    {
                        data.AddText("You will be divided into 2 groups to attack from the left and the right flank of HellCloister. Kill the Wraithas many as you can, because you can't reach")
                            .AddText(" BattleFormation untill the amount of wraith is decreased to a certain level.")
                            .AddOption("Thank you.", 255)
                            .AddOption("I'd like to know more.", 4).AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 9:
                    {
                        data.AddText("BattleFormation is protected by Syrens. After they are killed out, UltimatePluto will appear. Make the best effort to kill him, get his Darkhorn")
                            .AddText(" and give it to me. I can disable the BattleFormation with it. Then i'll send you back. But if you fail to do it, we have to retreat and wait for another opportunity")
                            .AddOption("Thank you.", 255)
                            .AddOption("I'd like to know more.", 4).AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 20:
                    {
                        if (client.Inventory.Contain(790001, 1))
                        {
                            if (client.Inventory.HaveSpace(8))
                            {
                                MsgTournaments.MsgSchedules.DisCity.RewardDarkHorn(client, stream);
                            }
                            else
                            {
                                data.AddText("Please make 8 more spaces in your inventory")
                                              .AddOption("Let me check.", 255)
                                              .AddAvatar(67).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry you not have DarkHorn.")
                      .AddOption("Ah. ok", 255).AddAvatar(67).FinalizeDialog();
                        }
                        break;
                    }
                case 11:
                    {
                        client.SendSysMesage("As~long~as~you~reach~level110,~you~can~enter~the~Dis~City.");
                        break;
                    }
                case 10:
                    {
                        if (MsgTournaments.MsgSchedules.DisCity.AllowJoin())
                        {
                            if (client.Player.Level >= 110)
                            {
                                if (client.Inventory.HaveSpace(1))
                                {
                                    data.AddText("Kill~the~demons~to~gather~five~SoulStones.~Then~go~northeast~through~HellBridge,~and~look~for~me~at~HellGate.");
                                    data.AddOption("I~see.");
                                    data.AddAvatar(67);
                                    data.FinalizeDialog();



                                    MsgTournaments.MsgSchedules.DisCity.TeleportMap1(stream, client);
                                }
                                else
                                    client.CreateBoxDialog("Please make 1 more space in your inventory.");

                            }
                            else
                            {
                                data.AddText("You`re~not~strong~enough~for~the~moment.~Don`t~lose~your~life~in~vain.");
                                data.AddOption("I~see.", 11);
                                data.AddAvatar(67);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Please sign up between 7:30-7:35 and 17:30-17:35 every day, except Sundays.")
 .AddOption("I see. ", 255)
 .AddAvatar(67).FinalizeDialog();
                        }
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.DisCityMain)]
        public static void DisCityMain(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.StoneApe, client.Player.Class, 1312);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.DisCityMain, client.Player.Class, 1313);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("I have been questing the meaning of life for decades.")
                              .AddOption("Quest:~The~Stone~Ape(1).", 40)
                              .AddOption("Have~you~found~anything?", 41)
                              .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        else if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("I have been questing the meaning of life for decades.")
                            .AddOption("Have~you~found~anything?", 41)
                            .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        data.AddText("I have been questing the meaning of life for decades.");
                        data.AddOption("Have~you~found~anything?");
                        data.AddAvatar(67);
                        data.FinalizeDialog();




                        break;
                    }
                case 40:
                    {
                        data.AddText("The Stone Ape was born from the rock used to restore cracks in the sky. He never know about it. He gets potentials. If guided properly, he can be a great immortal!")
                               .AddOption("Thank~you~for~the~information!", 42)
                               .AddOption("See~you~then!", 255)
                               .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 42:
                    {
                        data.AddText("I have a Divine Calix. Get some water from the fountain in the Maple Forest. It will help the Stone Ape to unleash his potential!")
                              .AddOption("Okay!", 43)
                              .AddOption("See~you~then!", 255)
                              .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 43:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.Inventory.Add(stream, 711354);
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                            {
                                client.SendSysMesage("You received 238,000 points of EXP, 1,500 Silver.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.white);
                                client.IncreaseExperience(stream, 238000, Role.Flags.ExperienceEffect.angelwing);
                                client.Player.Money += 500;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            }
                            client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        }
                        else
                        {
                            data.AddText("Please make 1 more space in your inventory")
                                          .AddOption("Let me check.", 255)
                                          .AddAvatar(67).FinalizeDialog();
                        }


                        break;
                    }
                case 41:
                    {
                        data.AddText("Our ancestors exerted their utmost efforts and defeathed the demons. Since")
                         .AddText(" then the world has been kept in peace for hundreads of years. Now the demons have come back and the world is getting into turbulence again.")
                         .AddText("The Dis City will take place during 7:30-7:35 and 17:30-17:35 every day, except Sundays.")
                         .AddOption("Could you tell me more?", 1)
                         .AddOption("I am here to drive away the evils!", 10)
                         .AddOption("I`m have the DarkHorn.", 20)
                    .AddOption("I'd better leave.", 255).AddAvatar(67).FinalizeDialog();


                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.PkWarQuit)]
        public static void PkWarQuit(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello , you're the last player alive?")
                            .AddOption("Yes", 1)
                            .AddOption("Teleport~to~Twin~City.", 2)
                       .AddOption("Ah. wait", 255).AddAvatar(154).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (MsgTournaments.MsgSchedules.PkWar.IsFinished())
                        {
                            if (MsgTournaments.MsgSchedules.PkWar.TheLastPlayer())
                            {
                                if (client.Inventory.HaveSpace(2))
                                {
                                    MsgTournaments.MsgSchedules.PkWar.GiveReward(client, stream);
                                }
                                else
                                {
                                    data.AddText("Please make 2 more spaces in your inventory")
                                               .AddOption("Let me check.", 255)
                                               .AddAvatar(8).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Sorry, the war is not finished, or other players are still alive.")
               .AddOption("Ah ok", 255).AddAvatar(154).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, the war is not finished")
                .AddOption("Ah ok", 255).AddAvatar(154).FinalizeDialog();
                        }




                        break;

                    }
                case 2:
                    {
                        data.AddText("You wana to teleport back to TwinCity? You are sure?")
           .AddOption("Yes", 3).AddOption("Ah no.", 255).AddAvatar(154).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        client.Teleport(330, 269, 1002, 0);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.PkWar)]
        public static void PkWar(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello there! The Pk War will take place during 20:20-21:00 on Saturday,")
                                               .AddText("and you will be admitted into tournament during 20:00 and 20:19, Come! You will be impressed.")
                                          .AddOption("Sign~me~up", 1)
                                          .AddOption("I will come later. ", 255)
                                          .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (Game.MsgTournaments.MsgSchedules.PkWar.AllowJoin())
                        {
                            client.Teleport(87, 88, 1508);
                        }
                        else
                        {
                            data.AddText("Please sign up between 20:00 and 20:20 every Saturday.")
            .AddOption("I see. ", 255)
            .AddAvatar(63).FinalizeDialog();
                        }


                        break;
                    }
            }
        }//TeamDeathMatch
        [NpcAttribute(NpcID.SteedRace)]
        public static void SteedRace(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hey there " + client.Player.Name + "! The race is held every two hours, on even hours(11,15,23,..). Are you interested in joining the race? You might receive amazing gifts upon reaching the finish line!")

                   .AddOption("Sign~me~up", 1)
                   .AddOption("Open the shop.", 2)
                   .AddOption("I will come later. ", 255)
                   .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 3:
                    {
                        if (client.Player.ConquerPoints >= 100000)
                        {
                            client.Player.ConquerPoints -= 100000;
                            client.Player.DonationPoints += 5000;
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Equipment.FreeEquip(Role.Flags.ConquerItem.Steed))
                        {
                            data.AddText("You need a horse first.")
             .AddOption("I see. ", 255)
             .AddAvatar(63).FinalizeDialog();
                            break;
                        }
                        if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Riding))
                        {
                            data.AddText("You need to learn the ride spell first!")
             .AddOption("I see. ", 255)
             .AddAvatar(63).FinalizeDialog();
                            break;
                        }
                        if (Game.MsgTournaments.MsgSchedules.SteedRace.CanJoin)
                        {
                            if (client.Player.OnTransform || client.Player.ContainFlag(MsgUpdate.Flags.Cyclone) || client.Player.ContainFlag(MsgUpdate.Flags.Oblivion))
                            {
                                data.AddText("You can`t join while trasnformed or using the xp skill.")
                                    .AddOption("I see. ", 255)
                                    .AddAvatar(63).FinalizeDialog();

                            }
                            else
                                Game.MsgTournaments.MsgSchedules.SteedRace.Join(client, stream);
                        }
                        else
                        {
                            data.AddText("Please sign up at 11:00 AM and 15:00 and 23:00 every day.")
             .AddOption("I see. ", 255)
             .AddAvatar(63).FinalizeDialog();
                        }


                        break;
                    }
                case 2:
                    {
                        //464 
                        ActionQuery action = new ActionQuery()
                        {
                            Type = ActionType.OpenDialog,
                            ObjId = client.Player.UID,
                            dwParam = 464,
                            wParam1 = client.Player.X,
                            wParam2 = client.Player.Y
                        };
                        client.Send(stream.ActionCreate(&action));
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.SteedRaceFinish)]
        public static void SteedRaceFinish(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hey there " + client.Player.Name + "! You`ve have reached to the end of the line.")
                   .AddOption("Claim~my~prize", 1)
                   .AddOption("I will come later. ", 255)
                   .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        MsgTournaments.MsgSchedules.SteedRace.FinishRace(client);
                        client.TeleportCallBack();
                        break;
                    }
                case 2:
                    {
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.GodlyArtisan)]
        public static void GodlyArtisan(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hey, I`m proficient in repairing max Durability. What items do you wana me to repair?")
                   .AddOption("Repair the Talisman", 20)
                   .AddOption("Hat,Earring", 1)
                   .AddOption("Necklace", 2)
                   .AddOption("Coat", 3)
                   .AddOption("Weapon", 4)
                   .AddOption("Ring/Heavy Ring/Bracelet", 6)
                   .AddOption("Boots", 8)
                   //.AddOption("Riding Crop", 18)
                   .AddOption("I will come later. ", 255)
                   .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 20:
                    {
                        data.AddText("What Talisman do you want me to repair?")
                  .AddOption("Attack Talisman", 11)
                  .AddOption("Defense Talisman", 12)
                  .AddOption("I will come later. ", 255)
                  .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                default:
                    {
                        MsgServer.MsgGameItem GameItem;
                        if (client.Equipment.TryGetEquip((Role.Flags.ConquerItem)Option, out GameItem))
                        {
                            if (GameItem.Durability < GameItem.MaximDurability)
                            {
                                data.AddText("Sorry, please ask a shopkeeper to repair this item first. I only repair the max durability.")
         .AddOption("I see. ", 255)
         .AddAvatar(63).FinalizeDialog();
                                break;
                            }

                            Database.ItemType.DBItem DBItem;
                            if (Database.Server.ItemsBase.TryGetValue(GameItem.ITEM_ID, out DBItem))
                            {
                                if (GameItem.MaximDurability == DBItem.Durability)
                                {
                                    data.AddText("The max durability of this item is in good condition")
           .AddOption("I see. ", 255)
           .AddAvatar(63).FinalizeDialog();
                                    break;
                                }

                                GameItem.Durability = GameItem.MaximDurability = DBItem.Durability;
                                GameItem.Mode = Role.Flags.ItemMode.Update;
                                GameItem.Send(client, stream);

                                data.AddText("You durability was repaired successfully.")
       .AddOption("Thank you.", 255)
       .AddAvatar(63).FinalizeDialog();
                            }

                        }
                        else
                        {
                            data.AddText("Sorry,you do not wear this item. Please equip first.")
            .AddOption("I see. ", 255)
            .AddAvatar(63).FinalizeDialog();
                        }


                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.EquipmentBlacksmith)]
        private static void EquipmentBlacksmith(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("Hello! I can always succeed in upgrading item quality as I`ve penetrated the mystery of their powers. But I`ll ask for a few more dragon balls than Artisan Wind. I can also upgrade or lower item levels. How can I help you?")
                        .AddOption("Upgrade~Quality", 1)
                        .AddOption("Upgrade~item~level.", 30)
                        .AddOption("Lower Equipment Level.", 3)
                        .AddOption("Just passing by.")
                        .AddAvatar(63).FinalizeDialog();
                        break;
                    }
                case 30:
                    {
                        dialog.AddText("I see. Upgrading an item`s level makes it more powerful, but also harder to use, increasing the item level prerequisite.")
                        .AddOption("Helmet,~Earring", 31)
                        .AddOption("Upgrade~necklace~level.", 32)
                        .AddOption("Upgrade~armor~level.", 33)
                        .AddOption("Upgrade~Right~weapon~level.", 34)
                        .AddOption("Upgrade~Left~weapon~level.", 35)
                        .AddOption("Upgrade~ring,~heavy~ring~level.", 36)
                        .AddOption("Upgrade~boots~level.", 38)
                        .AddOption("Upgrade~shield~level.", 35)
                        //.AddOption("Goodbye.")
                        .AddAvatar(63).FinalizeDialog();
                        break;
                    }
                case 31:
                case 32:
                case 33:
                case 34:
                case 35:
                case 36:
                case 38:
                    {
                        MsgServer.MsgGameItem item;
                        if (client.Equipment.TryGetEquip((Role.Flags.ConquerItem)Option - 30, out item))
                        {
                            if (item.Durability != item.MaximDurability)
                            {
                                dialog.AddText("Sorry, this item has been damaged. Please get it repaired first.")
                                .AddOption("Oh,~I~see.~Farewell.")
                                .AddAvatar(63).FinalizeDialog();
                                break;
                            }
                            var lvl = Database.Server.ItemsBase[item.ITEM_ID].Level;
                            if (lvl < 120)
                            {
                                var cost = Database.ItemType.GetUpEpLevelInfo(item.ITEM_ID);
                                //var cost = lvl / 5;
                                //cost += (byte)((item.ITEM_ID % 10) / 3);
                                //cost += (byte)(lvl / 10);
                                //if (cost > 40)
                                //    cost = 40;
                                dialog.AddText("You have to give me " + cost + " meteors to upgrade this item's level.")
                           .AddOption("Sure.", (byte)(Option + 10))
                           .AddOption("Never~mind.")
                           .AddAvatar(63).FinalizeDialog();
                            }
                            else
                            {
                                var cost = 1;
                                dialog.AddText("You have to give me " + cost + " DragonBall to upgrade this item's level.")
                           .AddOption("Sure.", (byte)(Option + 10))
                           .AddOption("Never~mind.")
                           .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {
                            dialog.AddText("Sorry, please wear the item you want to upgrade first.")
                            .AddOption("Oh,~I~see.~Farewell.")
                            .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
                case 41:
                case 42:
                case 43:
                case 44:
                case 45:
                case 46:
                case 48:
                    {
                        MsgServer.MsgGameItem item;
                        if (client.Equipment.TryGetEquip((Role.Flags.ConquerItem)Option - 40, out item))
                        {
                            if (item.Durability != item.MaximDurability)
                            {
                                dialog.AddText("Sorry, this item has been damaged. Please get it repaired first.")
                                .AddOption("Oh,~I~see.~Farewell.")
                                .AddAvatar(63).FinalizeDialog();
                                break;
                            }
                            var lvl = Database.Server.ItemsBase[item.ITEM_ID].Level;
                            if (lvl < 120)
                            {
                                var cost = Database.ItemType.GetUpEpLevelInfo(item.ITEM_ID);
                                //var cost = lvl / 5;
                                //cost += (byte)((item.ITEM_ID % 10) / 3);
                                //cost += (byte)(lvl / 10);
                                if (!client.Inventory.CheckMeteors((byte)cost, false, stream))
                                {
                                    dialog.AddText("You do not have the required " + cost + " Meteors to upgrade this item's level!")
                                    .AddOption("Sorry", 255)
                                    .AddAvatar(63).FinalizeDialog();
                                    break;
                                }
                                Database.ItemType.DBItem DBItem;
                                if (Database.Server.ItemsBase.TryGetValue(item.ITEM_ID, out DBItem))
                                {
                                    bool succesed = false;

                                    uint nextItemId = Database.Server.ItemsBase.UpdateItem(item.ITEM_ID, out succesed);

                                    if ((/*DBItem.Level >= 70 && */Database.ItemType.Equipable(nextItemId, client, true) == false)
                                        /*&& (Database.ItemType.ItemPosition(item.ITEM_ID) == (ushort)Role.Flags.ConquerItem.RightWeapon
                                        || Database.ItemType.ItemPosition(item.ITEM_ID) == (ushort)Role.Flags.ConquerItem.LeftWeapon)*/)
                                    {
                                        client.CreateBoxDialog("You can`t update this item.");
                                    }
                                    else
                                    {
                                        item.ITEM_ID = Database.Server.ItemsBase.UpdateItem(item.ITEM_ID, out succesed);
                                        item.Mode = Role.Flags.ItemMode.Update;
                                        item.Send(client, stream);
#if TEST
                                            Console.WriteLine("Update Item " + DBItem.Name + " id = " + Database.ItemType.GetLevel(DataItem.ITEM_ID));
#endif
                                        client.Inventory.CheckMeteors((byte)cost, true, stream);
                                        // client.Inventory.Remove(Database.ItemType.Meteor, (byte)cost, stream);
                                        if (item.Position != 0)
                                            client.Equipment.QueryEquipment(client.Equipment.Alternante);

                                        dialog.AddText("Your item has been upgraded. Look and behold my marvelous upgrading skill! Isn`t it amazing?")
                                        .AddOption("Thanks~a~lot!")
                                        .AddAvatar(63).FinalizeDialog();
                                    }
                                }
                                //uint oldid = item.ITEM_ID;
                                //bool succesed = false;
                                //item.ITEM_ID = Database.Server.ItemsBase.UpdateItem(item.ITEM_ID, out succesed);
                                //if (succesed && oldid != item.ITEM_ID)
                                //{
                                //    client.Inventory.Remove(Database.ItemType.Meteor, (byte)cost, stream);
                                //    item.Mode = Role.Flags.ItemMode.Update;
                                //    item.Send(client, stream);
                                //    if (item.Position != 0)
                                //        client.Equipment.QueryEquipment(client.Equipment.Alternante);
                                //    dialog.AddText("Your item has been upgraded. Look and behold my marvelous upgrading skill! Isn`t it amazing?")
                                //    .AddOption("Thanks~a~lot!")
                                //    .AddAvatar(63).FinalizeDialog();


                                //}
                                //else
                                //{
                                //    dialog.AddText("Sorry,~I~cannot~upgrade~this~item.~You~either~don`t~have~the~required~items~or~your~level~isn`t~sufficient.")
                                //    .AddText("If you want to upgrade high level equipment, try option Upgrade Lv120+ Equipment.")
                                //    .AddOption("Oh,~I~see.~Farewell.")
                                //    .AddAvatar(63).FinalizeDialog();

                                //}
                            }
                            else
                            {
                                var cost = 1;
                                if (!client.Inventory.Contain(Database.ItemType.DragonBall, (byte)cost))
                                {
                                    dialog.AddText("You do not have the required " + cost + " DragonBall to upgrade this item's level!")
                                    .AddOption("Sorry", 255)
                                    .AddAvatar(63).FinalizeDialog();
                                    break;
                                }
                                Database.ItemType.DBItem DBItem;
                                if (Database.Server.ItemsBase.TryGetValue(item.ITEM_ID, out DBItem))
                                {
                                    bool succesed = false;

                                    uint nextItemId = Database.Server.ItemsBase.UpdateItem(item.ITEM_ID, out succesed);

                                    if ((/*DBItem.Level >= 70 && */Database.ItemType.Equipable(nextItemId, client, true) == false) || nextItemId == item.ITEM_ID
                                        /*&& (Database.ItemType.ItemPosition(item.ITEM_ID) == (ushort)Role.Flags.ConquerItem.RightWeapon
                                        || Database.ItemType.ItemPosition(item.ITEM_ID) == (ushort)Role.Flags.ConquerItem.LeftWeapon)*/)
                                    {
                                        client.CreateBoxDialog("You can`t update this item.");
                                    }
                                    else
                                    {
                                        item.ITEM_ID = Database.Server.ItemsBase.UpdateItem(item.ITEM_ID, out succesed);
                                        item.Mode = Role.Flags.ItemMode.Update;
                                        item.Send(client, stream);
#if TEST
                                            Console.WriteLine("Update Item " + DBItem.Name + " id = " + Database.ItemType.GetLevel(DataItem.ITEM_ID));
#endif

                                        client.Inventory.Remove(Database.ItemType.DragonBall, (byte)cost, stream);
                                        if (item.Position != 0)
                                            client.Equipment.QueryEquipment(client.Equipment.Alternante);

                                        dialog.AddText("Your item has been upgraded. Look and behold my marvelous upgrading skill! Isn`t it amazing?")
                                        .AddOption("Thanks~a~lot!")
                                        .AddAvatar(63).FinalizeDialog();
                                    }
                                }
                                //uint oldid = item.ITEM_ID;
                                //bool succesed = false;
                                //item.ITEM_ID = Database.Server.ItemsBase.UpdateItem(item.ITEM_ID, out succesed);
                                //if (succesed && oldid != item.ITEM_ID)
                                //{
                                //    client.Inventory.Remove(Database.ItemType.DragonBall, (byte)cost, stream);
                                //    item.Mode = Role.Flags.ItemMode.Update;
                                //    item.Send(client, stream);
                                //    if (item.Position != 0)
                                //        client.Equipment.QueryEquipment(client.Equipment.Alternante);
                                //    dialog.AddText("Your item has been upgraded. Look and behold my marvelous upgrading skill! Isn`t it amazing?")
                                //    .AddOption("Thanks~a~lot!")
                                //    .AddAvatar(63).FinalizeDialog();


                                //}
                                //else
                                //{
                                //    dialog.AddText("Sorry,~I~cannot~upgrade~this~item.~You~either~don`t~have~the~required~items~or~your~level~isn`t~sufficient.")
                                //    .AddText("If you want to upgrade high level equipment, try option Upgrade Lv120+ Equipment.")
                                //    .AddOption("Oh,~I~see.~Farewell.")
                                //    .AddAvatar(63).FinalizeDialog();

                                //}
                            }

                            // client.Equipment.Add(item, stream);
                        }
                        else
                        {
                            dialog.AddText("Sorry, please wear the item you want to upgrade first.")
                            .AddOption("Oh,~I~see.~Farewell.")
                            .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        dialog.AddText("Which piece of equipment do you want to upgrade the quality of?")
                        .AddOption("Helmet/Headband/Earrings.", 11)
                        .AddOption("Necklace.", 12)
                        .AddOption("Armor.", 13)
                        .AddOption("Right~Weapon.", 14)
                        .AddOption("Left~Weapon.", 15)
                        .AddOption("Ring/Heavy~Ring.", 16)
                        .AddOption("Boots.", 18)
                        .AddOption("Shield.", 15)
                        //.AddOption("Just passing by.")
                        .AddAvatar(63).FinalizeDialog();
                        break;
                    }
                case 11:
                case 12:
                case 13:
                case 14:
                case 15:
                case 16:
                case 18:
                    {
                        MsgServer.MsgGameItem item;
                        if (client.Equipment.TryGetEquip((Role.Flags.ConquerItem)Option - 10, out item))
                        {
                            if (item.ITEM_ID % 10 == 9)
                            {
                                dialog.AddText("Sorry, this item is a super one. There is no quality higher than this. It`s perfect!")
                                .AddOption("Oh,~I~see.~Farewell.")
                                .AddAvatar(63).FinalizeDialog();
                                break;
                            }
                            if (item.Durability != item.MaximDurability)
                            {
                                dialog.AddText("Sorry, this item has been damaged. Please get it repaired first.")
                                .AddOption("Oh,~I~see.~Farewell.")
                                .AddAvatar(63).FinalizeDialog();
                                break;
                            }
                            // int cost = 1 + 100 / Database.ItemType.ChanceToUpgradeQuality(item.ITEM_ID);
                            var cost = Database.ItemType.GetUpEpQualityInfo(item.ITEM_ID);
                            dialog.AddText("Please give me " + cost + " Dragon Balls to upgrade this item.")
                            .AddOption("Sure.", (byte)(Option + 10))
                            .AddOption("Never~mind.")
                            .AddAvatar(63).FinalizeDialog();
                        }
                        else
                        {
                            dialog.AddText("Sorry, please wear the item you want to upgrade first.")
                            .AddOption("Oh,~I~see.~Farewell.")
                            .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
                case 21:
                case 22:
                case 23:
                case 24:
                case 25:
                case 26:
                case 28:
                    {
                        MsgServer.MsgGameItem item;
                        if (client.Equipment.TryGetEquip((Role.Flags.ConquerItem)Option - 20, out item))
                        {
                            if (item.ITEM_ID % 10 == 9)
                            {
                                dialog.AddText("Sorry, this item is a super one. There is no quality higher than this. It`s perfect!")
                                .AddOption("Oh,~I~see.~Farewell.")
                                .AddAvatar(63).FinalizeDialog();
                                break;
                            }
                            if (item.Durability != item.MaximDurability)
                            {
                                dialog.AddText("Sorry, this item has been damaged. Please get it repaired first.")
                                .AddOption("Oh,~I~see.~Farewell.")
                                .AddAvatar(63).FinalizeDialog();
                                break;
                            }

                            // int cost = 1 + 100 / Database.ItemType.ChanceToUpgradeQuality(item.ITEM_ID);
                            //  if (cost > 40)
                            //     break;
                            var cost = Database.ItemType.GetUpEpQualityInfo(item.ITEM_ID);
                            if (!client.Inventory.Contain(Database.ItemType.DragonBall, (byte)cost))
                            {
                                dialog.AddText("You do not have the required " + cost + " DragonBalls to upgrade quality!")
                                .AddOption("Sorry", 255)
                                .AddAvatar(63).FinalizeDialog();
                                break;

                            }
                            if (!Database.ItemType.UpQualityDB(item.ITEM_ID, (uint)(cost + 1)))
                            {
                                dialog.AddText("Sorry,~I~cannot~upgrade~this~item.~You~either~don`t~have~the~required~items~or~your~level~isn`t~sufficient.")
                                .AddOption("Oh,~I~see.~Farewell.")
                                .AddAvatar(63).FinalizeDialog();
                                break;
                            }
                            if (client.Inventory.Remove(Database.ItemType.DragonBall, (byte)cost, stream))
                            {
                                if (item.ITEM_ID % 10 < 5)
                                    item.ITEM_ID += 5 - item.ITEM_ID % 10;
                                item.ITEM_ID++;
                                item.Mode = Role.Flags.ItemMode.Update;
                                item.Send(client, stream);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                dialog.AddText("Your item has been upgraded. Look and behold my marvelous upgrading skill! Isn`t it amazing?")
                                .AddOption("Thanks~a~lot!")
                                .AddAvatar(63).FinalizeDialog();

                                if (item.Position != 0)
                                    client.Equipment.QueryEquipment(client.Equipment.Alternante);
                            }
                        }
                        else
                        {
                            dialog.AddText("Sorry, please wear the item you want to upgrade first.")
                            .AddOption("Oh,~I~see.~Farewell.")
                            .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
                case 3:
                    {
                        ActionQuery action = new ActionQuery()
                        {
                            Type = ActionType.OpenDialog,
                            ObjId = client.Player.UID,
                            dwParam = MsgServer.DialogCommands.DegradeEquip,
                            wParam1 = client.Player.X,
                            wParam2 = client.Player.Y
                        };
                        client.Send(stream.ActionCreate(&action));
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.TeratoTwin)]
        public static void TeratoTwin(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Want to open TeratoDragon? You need DragonPill and five meteors.")
                    .AddOption("Yes i wana open that.", 1)
                    .AddOption("Let~me~think. ", 255)
                    .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(Database.ItemType.Meteor, 5))
                        {
                            if (client.Inventory.Contain(720598, 1))
                            {
                                if (!client.Map.ContainMobID(20060))
                                {

                                    client.Inventory.Remove(720598, 1, stream);
                                    client.Inventory.Remove(Database.ItemType.Meteor, 5, stream);

                                    Database.Server.AddMapMonster(stream, client.Map, 20060, client.Player.X, client.Player.Y, 1, 1, 1, client.Player.DynamicID, true, MsgFloorItem.MsgItemPacket.EffectMonsters.EarthquakeAndNight);
                                }
                                else
                                    client.CreateDialog(stream, "Sorry,but the monster is already spawned..", "I~see.");
                            }
                            else
                            {
                                data.AddText("Sorry you not have 1 dragonpill.")
                 .AddOption("Ah ok. ", 255)
                 .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry you not have 5 meteors.")
                   .AddOption("Ah ok. ", 255)
                   .AddAvatar(63).FinalizeDialog();
                        }


                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.GWJail)]
        public static void GWJail(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Welcome~in~GuildWar,~GuildArea~jail.~I~am~giving~jail~pardons~each~five~minutes.")
                    .AddOption("huuuh??", 2)
                    .AddOption("Lets~rock! ", 255)
                    .AddAvatar(63).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        data.AddText("It~is~time~for~GuildWar~pardon~I~will~let~you~get~out~of~here.~Enjoy.")
                            .AddOption("Cool~thx.", 3)
                            .AddOption("I~wanna~stay.", 255)
                            .AddAvatar(63).FinalizeDialog();



                        break;
                    }
                case 3:
                    {
                        client.Teleport(428, 378, 1002, 0, true, true);
                        break;
                    }
            }
        }
        //[NpcAttribute(NpcID.DragonTail)]
        public static void DragonTail(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hey I`m the new merchant around. I can grant you the power of some of the most amazing skills.")
                    .AddOption("Dragon Tail", 1)
                    .AddOption("Emerald", 2)
                    .AddOption("EuxeniteOre", 3)
                    .AddOption("Let~me~think.", 255)
                    .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Player.ConquerPoints >= 200)
                            {
                                client.Player.ConquerPoints -= 200;

                                client.Inventory.Add(stream, Database.ItemType.MoonBox);
                            }
                        }
                        else
                        {

                            data.AddText("Please make 1 space in your inventory.")
                         .AddOption("Let~me~think.", 255)
                        .AddAvatar(63).FinalizeDialog();
                        }



                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Player.ConquerPoints >= 100)
                            {
                                client.Player.ConquerPoints -= 100;

                                client.Inventory.Add(stream, 1080001);
                            }
                        }
                        else
                        {

                            data.AddText("Please make 1 space in your inventory.")
                         .AddOption("Let~me~think.", 255)
                        .AddAvatar(63).FinalizeDialog();
                        }


                        break;
                    }
                case 3:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Player.ConquerPoints >= 20)
                            {
                                client.Player.ConquerPoints -= 20;

                                client.Inventory.Add(stream, 1072031);
                            }
                        }
                        else
                        {

                            data.AddText("Please make 1 space in your inventory.")
                         .AddOption("Let~me~think.", 255)
                        .AddAvatar(63).FinalizeDialog();
                        }


                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.SellItems)]
        public static void SellItems(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hey how I can help you ? I`m Sell MoonBox for 200 ConquerPoints, Emerald for 100 ConquerPoints, EuxeniteOre for 20 ConquerPoints.")
                    .AddOption("MoonBox", 1)
                    .AddOption("Emerald", 2)
                    .AddOption("EuxeniteOre", 3)
                    .AddOption("Let~me~think.", 255)
                    .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Player.ConquerPoints >= 200)
                            {
                                client.Player.ConquerPoints -= 200;

                                client.Inventory.Add(stream, Database.ItemType.MoonBox);
                            }
                        }
                        else
                        {

                            data.AddText("Please make 1 space in your inventory.")
                         .AddOption("Let~me~think.", 255)
                        .AddAvatar(63).FinalizeDialog();
                        }



                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Player.ConquerPoints >= 100)
                            {
                                client.Player.ConquerPoints -= 100;

                                client.Inventory.Add(stream, 1080001);
                            }
                        }
                        else
                        {

                            data.AddText("Please make 1 space in your inventory.")
                         .AddOption("Let~me~think.", 255)
                        .AddAvatar(63).FinalizeDialog();
                        }


                        break;
                    }
                case 3:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Player.ConquerPoints >= 20)
                            {
                                client.Player.ConquerPoints -= 20;

                                client.Inventory.Add(stream, 1072031);
                            }
                        }
                        else
                        {

                            data.AddText("Please make 1 space in your inventory.")
                         .AddOption("Let~me~think.", 255)
                        .AddAvatar(63).FinalizeDialog();
                        }


                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.MarketCpAdmin)]
        public static void MarketCpAdmin(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Do~you~know~how~I~desire~the~DragonBall?~I~would~like~to~pay~all~I~have~for~DragonBalls.~Would~you~like~to~exchange")
                            .AddText("DragonBalls~for~CPs?~I~will~pay~you~215~CPs~for~a~DragonBall,~and~2150~CPs~for~a~DBScroll.~What~about~the~deal?")
                            .AddOption("Exchange~a~DBScroll.", 1)
                       .AddOption("Exchange~a~DragonBall.", 2)
                       .AddOption("I~have~nothing.", 255).AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(Database.ItemType.DragonBallScroll, 1))
                        {
                            client.Inventory.Remove(Database.ItemType.DragonBallScroll, 1, stream);
                            client.Player.ConquerPoints += 2150;

                            client.CreateBoxDialog("Congratulations!You~have~got~2150~CPs~in~your~inventory");
                        }
                        else
                        {
                            data.AddText("Where~is~your~DBScroll?")
                          .AddOption("Er,~sorry.~I'm not have DBScroll.", 255).AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Contain(Database.ItemType.DragonBall, 1))
                        {
                            client.Inventory.Remove(Database.ItemType.DragonBall, 1, stream);
                            client.Player.ConquerPoints += 215;

                            client.CreateBoxDialog("Congratulations!You~have~got~215~CPs~in~your~inventory");
                        }
                        else
                        {
                            data.AddText("Where~is~your~DragonBall?")
                          .AddOption("Er,~sorry.~I'm not have Dragon Ball.", 255).AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Steed1)]
        public static void Steed1(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {

            if (!client.Inventory.Contain(728525, 1))
            {
                client.CreateBoxDialog("Sorry, you don`t have a Steed+1.");
                return;
            }



            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello. You can chose a horse: black, brown or white.")
                            .AddOption("Black horse", 1)
                       .AddOption("Brown horse", 2)
                       .AddOption("White horse", 3)
                       .AddOption("Nevermind", 255)
                       .FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        client.Inventory.Remove(728525, 1, stream);
                        client.Inventory.AddSteed(stream, 300000, 1, 1, false, 255, 0, 150);

                        break;
                    }
                case 2:
                    {
                        client.Inventory.Remove(728525, 1, stream);
                        client.Inventory.AddSteed(stream, 300000, 1, 1, false, 0, 150, 255);

                        break;
                    }
                case 3:
                    {
                        client.Inventory.Remove(728525, 1, stream);
                        client.Inventory.AddSteed(stream, 300000, 1, 1, false, 150, 255, 0);

                        break;
                    }
            }
        }
        //DazzlingDiamondBox
        [NpcAttribute(NpcID.DazzlingDiamondBox)]
        public static void DazzlingDiamondBox(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            if (!client.Inventory.Contain(3008732, 0) && !client.Inventory.Contain(3008732, 0, 1))
            {
                //Sun~Diamond,~Moon~Diamond,~Star~Diamond~and~Cloud~Diamond
                client.CreateBoxDialog("Sorry, you don`t have a DazzlingDiamondBox.");
                return;
            }

            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello. You can chose a 30 pieces Diamond: Sun~Diamond, Moon~Diamond, Star~Diamond or Cloud~Diamond.")
                           .AddOption("Sun~Diamond", 1)
                      .AddOption("Moon~Diamond", 2)
                      .AddOption("Star~Diamond", 3)
                      .AddOption("Cloud~Diamond", 4)
                      .AddOption("Nevermind", 255)
                      .FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.Inventory.Remove(3008732, 1, stream);
                            client.Inventory.AddItemWitchStack(721533, 0, 30, stream);

                            client.CreateBoxDialog("You receive 30 pieces of the Sun~Diamond.");
                        }
                        else
                        {
                            data.AddText("Please make 30 spaces in your inventory.")
                     .AddOption("Let me check.", 255)
                     .FinalizeDialog();
                        }



                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.HaveSpace(3))
                        {
                            client.Inventory.Remove(3008732, 1, stream);
                            client.Inventory.AddItemWitchStack(721534, 0, 30, stream);

                            client.CreateBoxDialog("You receive 30 pieces of the Moon~Diamond.");
                        }
                        else
                        {
                            data.AddText("Please make 30 spaces in your inventory.")
                     .AddOption("Let me check.", 255)
                     .FinalizeDialog();
                        }



                        break;
                    }
                case 3:
                    {
                        if (client.Inventory.HaveSpace(3))
                        {
                            client.Inventory.Remove(3008732, 1, stream);
                            client.Inventory.AddItemWitchStack(721535, 0, 30, stream);

                            client.CreateBoxDialog("You receive 30 pieces of the Star~Diamond.");
                        }
                        else
                        {
                            data.AddText("Please make 30 spaces in your inventory.")
                     .AddOption("Let me check.", 255)
                     .FinalizeDialog();
                        }


                        break;
                    }
                case 4:
                    {
                        if (client.Inventory.HaveSpace(3))
                        {
                            client.Inventory.Remove(3008732, 1, stream);
                            client.Inventory.AddItemWitchStack(721536, 0, 30, stream);

                            client.CreateBoxDialog("You receive 30 pieces of the Cloud~Diamond.");
                        }
                        else
                        {
                            data.AddText("Please make 30 spaces in your inventory.")
                     .AddOption("Let me check.", 255)
                     .FinalizeDialog();
                        }



                        break;
                    }


            }
        }
        [NpcAttribute(NpcID.Steed3)]
        public static void Steed3(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            if (!client.Inventory.Contain(728526, 1))
            {
                client.CreateBoxDialog("Sorry, you don`t have a Steed+1.");
                return;
            }


            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello. You can chose a horse: black, brown or white.")
                           .AddOption("Black horse", 1)
                      .AddOption("Brown horse", 2)
                      .AddOption("White horse", 3)
                      .AddOption("Nevermind", 255)
                      .FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        client.Inventory.Remove(728526, 1, stream);
                        client.Inventory.AddSteed(stream, 300000, 1, 3, false, 255, 0, 150);

                        break;
                    }
                case 2:
                    {
                        client.Inventory.Remove(728526, 1, stream);
                        client.Inventory.AddSteed(stream, 300000, 1, 3, false, 0, 150, 255);

                        break;
                    }
                case 3:
                    {
                        client.Inventory.Remove(728526, 1, stream);
                        client.Inventory.AddSteed(stream, 300000, 1, 3, false, 150, 255, 0);

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Steed6)]
        public static void Steed6(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            if (!client.Inventory.Contain(728527, 1))
            {
                client.CreateBoxDialog("Sorry, you don`t have a Steed+1.");
                return;
            }

            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello. You can chose a horse: black, brown or white.")
                            .AddOption("Black horse", 1)
                       .AddOption("Brown horse", 2)
                       .AddOption("White horse", 3)
                       .AddOption("Nevermind", 255)
                       .FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        client.Inventory.Remove(728527, 1, stream);
                        client.Inventory.AddSteed(stream, 300000, 1, 6, false, 255, 0, 150);

                        break;
                    }
                case 2:
                    {
                        client.Inventory.Remove(728527, 1, stream);
                        client.Inventory.AddSteed(stream, 300000, 1, 6, false, 0, 150, 255);

                        break;
                    }
                case 3:
                    {
                        client.Inventory.Remove(728527, 1, stream);
                        client.Inventory.AddSteed(stream, 300000, 1, 6, false, 150, 255, 0);

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.RareSteedPack6)]
        public static void RareSteedPack6(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            if (!client.Inventory.Contain(720049, 1) && !client.Inventory.Contain(720049, 1, 1))
            {
                client.CreateBoxDialog("Sorry, you don`t have a NobleSteedPack");
                return;
            }
            client.Inventory.Remove(720049, 1, stream);
            switch (Program.GetRandom.Next(0, 5))
            {
                case 0:
                    client.Inventory.AddSteed(stream, 300000, 1, 6, false, 201, 135, 187);
                    break;
                case 1:
                    client.Inventory.AddSteed(stream, 300000, 1, 6, false, 184, 63, 62);
                    break;
                case 2:
                    client.Inventory.AddSteed(stream, 300000, 1, 6, false, 137, 156, 148);
                    break;
                case 3:
                    client.Inventory.AddSteed(stream, 300000, 1, 6, false, 122, 134, 147);
                    break;
                case 4:
                    client.Inventory.AddSteed(stream, 300000, 1, 6, false, 46, 39, 142);
                    break;
            }
            //Dialog data = new Dialog(client, stream);
            //switch (Option)
            //{
            //    case 0:
            //        {
            //            data.AddText("Hello. You can chose a horse: SpitfireSteed, FrostbiteSteed, BlazehoofSteed, SpottedSteed or Zebra.")
            //                .AddOption("+6~Spitfire~Steed", 1)
            //           .AddOption("+6~Frostbite~Steed", 2)
            //           .AddOption("+6~Blazehoof~Steed", 3)
            //           .AddOption("+6~Spotted~Steed", 4)
            //           .AddOption("+6~Zebra", 5)
            //           .AddOption("Nevermind", 255)
            //           .FinalizeDialog();

            //            break;
            //        }
            //    case 1:
            //        {
            //            client.Inventory.Remove(3001406, 1, stream);
            //            client.Inventory.AddSteed(stream, 300000, 1, 6, false, 201, 135, 187);

            //            break;
            //        }
            //    case 2:
            //        {
            //            client.Inventory.Remove(3001406, 1, stream);
            //            client.Inventory.AddSteed(stream, 300000, 1, 6, false, 184, 63, 62);

            //            break;
            //        }
            //    case 3:
            //        {
            //            client.Inventory.Remove(3001406, 1, stream);
            //            client.Inventory.AddSteed(stream, 300000, 1, 6, false, 137, 156, 148);

            //            break;
            //        }
            //    case 4:
            //        {
            //            client.Inventory.Remove(3001406, 1, stream);
            //            client.Inventory.AddSteed(stream, 300000, 1, 6, false, 122, 134, 147);

            //            break;
            //        }
            //    case 5:
            //        {
            //            client.Inventory.Remove(3001406, 1, stream);
            //            client.Inventory.AddSteed(stream, 300000, 1, 6, false, 46, 39, 142);

            //            break;
            //        }
            //}
        }
        [NpcAttribute(NpcID.NobleSteedPack)]
        public static void NobleSteedPack(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            if (!client.Inventory.Contain(729990, 1))
            {
                client.CreateBoxDialog("Sorry, you don`t have a NobleSteedPack");
                return;
            }

            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello. You can chose a horse: SpitfireSteed, FrostbiteSteed, BlazehoofSteed, SpottedSteed or Zebra.")
                            .AddOption("+6~Spitfire~Steed", 1)
                       .AddOption("+6~Frostbite~Steed", 2)
                       .AddOption("+6~Blazehoof~Steed", 3)
                       .AddOption("+6~Spotted~Steed", 4)
                       .AddOption("+6~Zebra", 5)
                       .AddOption("Nevermind", 255)
                       .FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        client.Inventory.Remove(729990, 1, stream);
                        client.Inventory.AddSteed(stream, 300000, 1, 6, false, 201, 135, 187);

                        break;
                    }
                case 2:
                    {
                        client.Inventory.Remove(729990, 1, stream);
                        client.Inventory.AddSteed(stream, 300000, 1, 6, false, 184, 63, 62);

                        break;
                    }
                case 3:
                    {
                        client.Inventory.Remove(729990, 1, stream);
                        client.Inventory.AddSteed(stream, 300000, 1, 6, false, 137, 156, 148);

                        break;
                    }
                case 4:
                    {
                        client.Inventory.Remove(729990, 1, stream);
                        client.Inventory.AddSteed(stream, 300000, 1, 6, false, 122, 134, 147);

                        break;
                    }
                case 5:
                    {
                        client.Inventory.Remove(729990, 1, stream);
                        client.Inventory.AddSteed(stream, 300000, 1, 6, false, 46, 39, 142);

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.StartNpc)]
        public static void StartNpc(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {

            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("This~is~the~way~to~TwinCity.~Many~people~are~gathering~there.")
                   .AddOption("Teleport~me~to~TwinCity", 3)
                   .AddOption("Let~me~think.", 255)
                   .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 3:
                    {
                        data.AddText("Welcome~in~" + Program.ServerConfig.ServerName + "~you~have~some~free~items!~and~2kk~money.")
                            .FinalizeDialog();


                        if (Database.AtributesStatus.IsTrojan(client.Player.Class))
                        {
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.FastBlader))
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.FastBlader);

                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.ScrenSword))
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.ScrenSword);

                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Cyclone))
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.Cyclone);
                        }
                        else if (Database.AtributesStatus.IsWarrior(client.Player.Class))
                        {
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Superman))
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.Superman);
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.FastBlader))
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.FastBlader);
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.ScrenSword))
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.ScrenSword);
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Shield))
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.Shield);
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Accuracy))
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.Accuracy);
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Roar))
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.Roar);
                        }
                        else if (Database.AtributesStatus.IsArcher(client.Player.Class))
                        {
                            client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.XpFly);
                        }
                        else if (Database.AtributesStatus.IsNinja(client.Player.Class))
                        {
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.FatalStrike))
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.FatalStrike);
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.ToxicFog))
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.ToxicFog);
                        }
                        else if (Database.AtributesStatus.IsMonk(client.Player.Class))
                        {
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.WhirlwindKick))
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.WhirlwindKick);
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.TripleAttack))
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.TripleAttack);
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Oblivion))
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.Oblivion);
                        }
                        else if (Database.AtributesStatus.IsPirate(client.Player.Class))
                        {
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.CannonBarrage))
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.CannonBarrage);
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.BladeTempest))
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.BladeTempest);
                        }
                        else if (Database.AtributesStatus.IsTaoist(client.Player.Class))
                        {
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.ChainBolt))
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.ChainBolt);
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Lightning))
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.Lightning);

                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Thunder))
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.Thunder);

                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Cure))
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.Cure);
                        }

                        client.Player.Money += 2000000;
                        //   client.Player.ConquerPoints += 500;

                        client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);

                        client.Inventory.Add(stream, 3000550, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true, Role.Flags.ItemEffect.None);
                        client.Inventory.AddItemWitchStack(1000000, 0, 15, stream);
                        client.Inventory.AddItemWitchStack(1001000, 0, 15, stream);
                        client.Inventory.AddItemWitchStack(Database.ItemType.ExpBall, 0, 10, stream);
                        client.Teleport(428, 378, 1002);


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.ExitElitePk)]
        public static void ExitElitePk(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello there. Just let me know if you want to go to TwinCity.")
                    .AddOption("TwinCity.", 2)
                    .AddOption("Let~me~think...", 255)
                    .AddAvatar(63).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        data.AddText("Sure you want to leave in TwinCity?")
                            .AddOption("Yes.", 3)
                            .AddOption("Let~me~think...", 255)
                            .AddAvatar(63).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        if (client.Player.TransformationID != 0)
                        {
                            client.Player.TransformInfo.FinishTransform();
                        }
                        if (client.Player.OnMyOwnServer == false)
                        {
                            client.Player.InElitePk = false;
                            client.Player.InTeamPk = false;
                            client.Socket.Disconnect();
                        }
                        else
                        {
                            client.Player.InElitePk = false;
                            client.Player.InTeamPk = false;
                            client.Teleport(428, 378, 1002);
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.TreasureLeave)]
        public static void TreasureLeave(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello there. Just let me know if you want to go to TwinCity.")
                    .AddOption("TwinCity.", 2)
                    .AddOption("Let~me~think...", 255)
                    .AddAvatar(63).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        data.AddText("Sure you want to leave in TwinCity?")
                           .AddOption("Yes.", 3)
                           .AddOption("Let~me~think...", 255)
                           .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 3:
                    {

                        client.Teleport(428, 378, 1002);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.ExitSuperGuildWar)]
        public static void ExitSuperGuildWar(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello there. Just let me know if you want to go to TwinCity.")
                    .AddOption("TwinCity.", 2)
                    .AddOption("Let~me~think...", 255)
                    .AddAvatar(63).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        data.AddText("Sure you want to leave in TwinCity?")
                            .AddOption("Yes.", 3)
                            .AddOption("Let~me~think...", 255)
                            .AddAvatar(63).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        client.Teleport(428, 378, 1002);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.ExitCaptureTheFlag)]
        public static void ExitCaptureTheFlag(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello there. Just let me know if you want to go to TwinCity.")
                    .AddOption("TwinCity.", 2)
                    .AddOption("Let~me~think...", 255)
                    .AddAvatar(63).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        data.AddText("Sure you want to leave in TwinCity?")
                            .AddOption("Yes.", 3)
                            .AddOption("Let~me~think...", 255)
                            .AddAvatar(63).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        client.Teleport(428, 378, 1002);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.SkillTeamPkManager)]
        public static void SkillTeamPkManager(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("The new Skill Team Pk Tournament is open! It is held at 19:45,every")
                            .AddText(" Wednesday. The contestants will receive a very good prizes")
                            .AddText(" and Honor Points for each round! The top 8 teams will receive extra prize!")
                            .AddOption("Tell~me~more~about~the~rules.", 1)
                            .AddOption("Sign~me~up!", 3)
                            .AddOption("I~want~to~claim~my~prize!", 5)
                       .AddOption("Not~interested.", 255).AddAvatar(154).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        data.AddText("There are limits on the Equipmen Level and Rank. Moreover, there are")
                           .AddText(" restrictions on Equipment Quality, Bonus Level, Sockets, Gems and ")
                           .AddText(" Blessing effects. Besides, the effects of the Sub-classes are ajusted, too.")
                           .AddText(" (Except for Apothecary.) By the way , the Battle Power shared from you Clan, ")
                           .AddText("  Mentor, and Guild won`t count; ")
                           .AddOption("Go ahead.", 10)
                      .AddOption("Not~interested.", 255).AddAvatar(154).FinalizeDialog();

                        break;
                    }
                case 10:
                    {
                        data.AddText("here Skill Team Pk Tournament is held at 19:45 , every day. You need")
                          .AddText(" to team up with others to take part in it. Only the team leaders are capable of ")
                          .AddText(" claiming the rewards. You can up with friends in advance, or while")
                          .AddText("  (in the waiting area. People who don`t team up will be kicked out, when the")
                          .AddText(" contest starts. There are 4-groups: Level 130+, level 120-129, level 100-199  and level 1-99. ")
                          .AddOption("What else?.", 11)
                     .AddOption("Not~interested.", 255).AddAvatar(154).FinalizeDialog();


                        break;
                    }
                case 11:
                    {
                        data.AddText("You can talk to me to enter the Waiting area at 19:45. No threams will be allowed to enter ")
                          .AddText(" after the contest start. The contest for level 130+ starts at 21:00, level 120-129 21:02,")
                          .AddText(" level 100-119 20:04 and level 1-99 21:06. Disbanding/creating a team during the contest will")
                          .AddText(" to disqualification. In knockout stage, each round lasts for 10 minutes")
                          .AddOption("Okay.", 255).AddAvatar(154).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        if (client.Team == null)
                        {
                            data.AddText("You need to team up with others to take part in it. Please create team.")
                  .AddOption("Okay.", 255).AddAvatar(154).FinalizeDialog();
                            break;
                        }
                        if (!MsgTournaments.MsgSchedules.SkillTeamPkTournament.SignUp(client))
                        {
                            data.AddText("Please sign up between 19:45 and 19:50 every Wednesday night for the Skill PK Tournament.")
                            .AddOption("Okay.", 255).AddAvatar(154).FinalizeDialog();
                        }


                        break;
                    }
                case 5:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (!MsgTournaments.MsgSchedules.SkillTeamPkTournament.GetReward(client, stream))
                            {
                                data.AddText("Sorry, you are not in top 8 in Skill Pk Tournament or you claimed the reward.")
                        .AddOption("Okay.", 255).AddAvatar(154).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Please make one space in your bag.")
                          .AddOption("Okay.", 255).AddAvatar(154).FinalizeDialog();
                        }

                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.TeamPkManager)]
        public static void TeamPkManager(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Attention! The Team Pk Tournament is held at 16:45, each Saturday. The Top 8")
                            .AddText("  teams will be handsomely rewarded, and each player in the team can")
                            .AddText(" receive EXP and 1000 HonorPoints affter each match.")
                            .AddOption("Tell~me~more~about~the~rules.", 1)
                            .AddOption("Sign~me~up!", 3)
                            .AddOption("I~want~to~claim~my~prize!", 5)
                       .AddOption("Not~interested.", 255).AddAvatar(154).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        data.AddText("The Team Pk Tournament start at 16:45 every Saturday, and teams will be divided")
                           .AddText("  into four grups: Level 1-99, Level 100-119, level 120-129 and level 130+ ")
                           .AddText(" Only teams can participate in this Tournament . You can either create a team")
                           .AddText(" befor signin up, or enter the waiting area and create you team. At the start of the")
                           .AddText(" Tournament, any player who`s not in team will be removed from the tournament map.")
                           .AddText("  Where the Tournament ends, only the team leaders of the winning teams can claim the reward.")
                           .AddOption("Ok Thank you!", 255)
                      .AddOption("Not~interested.", 255).AddAvatar(154).FinalizeDialog();

                        break;
                    }

                case 3:
                    {
                        if (client.Team == null)
                        {
                            data.AddText("You need to team up with others to take part in it. Please create team.")
                  .AddOption("Okay.", 255).AddAvatar(154).FinalizeDialog();
                            break;
                        }
                        if (!MsgTournaments.MsgSchedules.TeamPkTournament.SignUp(client))
                        {
                            data.AddText("Please sign up at 16:45 every Saturday night for the Team PK Tournament.")
                            .AddOption("Okay.", 255).AddAvatar(154).FinalizeDialog();
                        }



                        break;
                    }
                case 5:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (!MsgTournaments.MsgSchedules.TeamPkTournament.GetReward(client, stream))
                            {
                                data.AddText("Sorry, you are not in top 8 in Team Pk Tournament or you claimed the reward.")
                        .AddOption("Okay.", 255).AddAvatar(154).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Please make one space in your bag.")
                          .AddOption("Okay.", 255).AddAvatar(154).FinalizeDialog();
                        }


                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.ElitePk)]
        public static void ElitePk(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Glad to see you! I take it that you haven`t heard of the Elite PK Tournament, have you? No? Aha, please allow me to")
                            .AddText(" introduce this exciting event for you! It`s a new PK Tournament that takes place every Friday. You will be divided into four groups, based")
                            .AddText("~on your level. Not only will the top 3 winners of each group receive nice prizes, you will also receive EXP worth 1 EXP Ball and 50k Honor points for each match you take part in at the end of that round. Do you want to have a go?")
                            .AddOption("Tell~me~more~about~the~rules.", 1)
                            .AddOption("Sign~me~up!", 3)
                            .AddOption("I~want~to~claim~my~prize!", 5)
                       .AddOption("Not~interested.", 255).AddAvatar(154).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        data.AddText("The Elite PK Tournament begins at 20:00 every Friday night, and players will be divided into four groups, which are the Under 100 group, the 100-119 group, the 120-129 group, and the 130+ group. You can sign up for it")
                                                 .AddText("~between 19:55 and 19:59. No admittance after the tournament begins. Players should first wait in the Waiting Area, and if you leave the area before your round, you will forfeit your chance. There will be a Knockout round before the Final.")
                                                 .AddText("~But if there are less than 8 players at the start of the Elite PK Tournament, the Final will be replaced by the Knockout. Each round in the Knockout lasts 3 minutes. At the end of 3 minutes, if no one is killed, the player with a higher score wins.")
                                                 .AddText("~After you finish your round, you`ll have to wait for all the other players to finish this round to enter the next round.")
                                                 .AddOption("There~is~a~Final?", 2).AddAvatar(154).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        data.AddText("Sure. When there are less than 8 players left in the field, the Final starts. Each round of the Final lasts for 5 minutes. Though all of the Top 8 players will receive nice prizes, the top 3 will earn special prizes! Claim your reward before the next")
                                .AddText("~week`s Elite PK Tournament begins, or you won`t get them. We hope everyone will join this tournament, and so not only will the top 3 winners of each group receive nice prizes, you will also receive EXP worth 1 EXP Ball and 1000 Honor")
                                .AddText("~points for each match you take part in at the end of that match!")
                                .AddOption("Sign~me~up!", 3).AddOption("Not~interested", 255).AddAvatar(154).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        if (!MsgTournaments.MsgSchedules.ElitePkTournament.SignUp(client))
                        {
                            data.AddText("Please sign up between 19:55 and 19:59 every Friday night for the Elite PK Tournament.")
                            .AddOption("Okay.", 255).AddAvatar(154).FinalizeDialog();
                        }


                        break;
                    }
                case 5:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (!MsgTournaments.MsgSchedules.ElitePkTournament.GetReward(client, stream))
                            {
                                data.AddText("Sorry, you are not in top 8 in elite pk or you claimed the reward.")
                        .AddOption("Okay.", 255).AddAvatar(154).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Please make 1 more space in your bag.")
                          .AddOption("Okay.", 255).AddAvatar(154).FinalizeDialog();
                        }


                        break;
                    }

            }
        }

        [NpcAttribute(NpcID.ClassPkWar)]
        public static void NpcClassPkWar(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello , you're the last player alive?")
                            .AddOption("Yes", 1)
                            .AddOption("Teleport~to~Twin~City.", 2)
                       .AddOption("Ah. wait", 255).AddAvatar(154).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        MsgTournaments.MsgClassPKWar.War war;
                        if (Game.MsgTournaments.MsgSchedules.ClassPkWar.GetWar(client, out war) != MsgTournaments.ProcesType.Dead)
                        {
                            if (!war.CheckJoin())
                            {
                                if (war.IsFinish(client))
                                {
                                    if (!client.Inventory.HaveSpace(4))
                                    {
                                        data.AddText("Please make 4 more spaces in your inventory.")
                                            .AddOption("Let me check.", 255).AddAvatar(154).FinalizeDialog();

                                    }
                                    war.GetMyReward(client, stream);

                                }
                                else
                                {
                                    data.AddText("Sorry, the war is not finished, or other players are still alive.")
                   .AddOption("Ah ok", 255).AddAvatar(154).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Sorry, the war is not finished")
                    .AddOption("Ah ok", 255).AddAvatar(154).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, the war is finished, or other players are still alive.")
           .AddOption("Ah ok", 255).AddAvatar(154).FinalizeDialog();
                        }

                        break;

                    }
                case 2:
                    {
                        data.AddText("You wana to teleport back to TwinCity? You are sure?")
           .AddOption("Yes", 3).AddOption("Ah no.", 255).AddAvatar(154).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        client.Teleport(430, 269, 1002, 0);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.ClassPkEnvoy)]
        public static void ClassPkEnvoy(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Everyone settle down! I need to announce that there are new rules for the Class PK War!")
                            .AddOption("Tell~me~more.", 1)
                       .AddOption("Sign~up.", 2)
                       .AddOption("Not~interested.", 255).AddAvatar(154).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        data.AddText("The ClassPK War is held each monday where all classes fight for their top halo. The winner gets 20,000 CPs! The event is held on monday at 18:00.")
                   .AddOption("Sign~up.", 2)
                   .AddOption("Not~interested.", 255).AddAvatar(154).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        MsgTournaments.MsgClassPKWar.War war;
                        if (Game.MsgTournaments.MsgSchedules.ClassPkWar.GetWar(client, out war) != MsgTournaments.ProcesType.Dead)
                        {
                            if (war.CheckJoin())
                            {
                                client.Teleport(81, 62, Game.MsgTournaments.MsgClassPKWar.MapID, war.DinamicID);
                            }
                            else
                            {
                                data.AddText("I`m sorry, but the Class PK War is only held on Mondays.")
                  .AddOption("Alright.", 255).AddAvatar(154).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("I`m sorry, but the Class PK War is only held on Mondays.")
                     .AddOption("Alright.", 255).AddAvatar(154).FinalizeDialog();
                        }

                        break;
                    }

            }
        }

        [NpcAttribute(NpcID.NemesysConductort)]
        public static void NemesysConductort(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("With only 100 silver, I can teleport you to somewhere far away. Please choose your destination.")
                           .AddOption("Desert~City.", 1)
                      .AddOption("Market.", 2)
                      .AddOption("Just~passing~by.", 255).AddAvatar(1).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (client.Player.Money >= 100)
                        {
                            client.Player.Money -= 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                            client.Teleport(502, 646, 1000);
                        }
                        else
                        {
                            data.AddText("You do not have 100 Silvers with you.")
   .AddOption("I~see", 255).AddAvatar(1).FinalizeDialog();
                        }

                        break;
                    }
                case 2:
                    {
                        if (client.Player.Money >= 100)
                        {
                            client.Player.Money -= 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                            client.Teleport(200, 204, 1036);
                        }
                        else
                        {
                            data.AddText("You do not have 100 Silvers with you.")
   .AddOption("I~see", 255).AddAvatar(1).FinalizeDialog();
                        }

                        break;
                    }

            }
        }
        public static void SpaceMarks(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {

            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (Database.AtributesStatus.IsWater(client.Player.Class))
                        {

                            data.AddText("I`m sell WindSpell for 1.000 Silver. Use that to teleport back to me")
                         .AddOption("Ok give me.", 1).AddOption("No thanks.", 255).AddAvatar(3).FinalizeDialog();
                        }
                        else
                        {

                            data.AddText("Only Water class can buy this teleport scroll.")
                           .AddOption("I see.", 255).AddAvatar(3).FinalizeDialog();
                        }


                        break;
                    }
                case 1:
                    {
                        if (Database.AtributesStatus.IsWater(client.Player.Class))
                        {
                            if (client.Player.Money >= 1000)
                            {
                                if (client.Inventory.HaveSpace(1))
                                {
                                    client.Player.Money -= 1000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                    switch (id)
                                    {
                                        case 10031: client.Inventory.Add(stream, 1060025); break;
                                        case 10032: client.Inventory.Add(stream, 1060026); break;
                                        case 10033: client.Inventory.Add(stream, 1060027); break;
                                        case 10034: client.Inventory.Add(stream, 1060028); break;
                                        case 10035: client.Inventory.Add(stream, 1060029); break;
                                        case 10036: client.Inventory.Add(stream, 1060038); break;
                                        case 10037: client.Inventory.Add(stream, 1060031); break;
                                        case 10038: client.Inventory.Add(stream, 1060032); break;
                                        case 10039: client.Inventory.Add(stream, 1060033); break;
                                        case 10040: client.Inventory.Add(stream, 1060034); break;
                                        case 10041: client.Inventory.Add(stream, 1060035); break;
                                        case 10043: client.Inventory.Add(stream, 1060037); break;

                                    }
                                }
                                else
                                {
                                    data.AddText("Please make space in you inventory")
          .AddOption("Ah~thank~you!.", 255)
          .AddAvatar(3).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("You do not have 1000 Silvers with you.")
            .AddOption("I~see", 255).AddAvatar(3).FinalizeDialog();
                            }
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.JailCPAdmin)]
        public static void JailCPAdmin(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Do~you~know~how~I~desire~the~DragonBall?~I~would~like~to~pay~all~I~have~for~DragonBalls.~Would~you~like~to~exchange")
                            .AddText("DragonBalls~for~CPs?~I~will~pay~you~215~CPs~for~a~DragonBall,~and~2150~CPs~for~a~DBScroll.~What~about~the~deal?")
                            .AddOption("Exchange~a~DBScroll.", 1)
                       .AddOption("Exchange~a~DragonBall.", 2)
                       .AddOption("I~have~nothing.", 255).AddAvatar(7).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(Database.ItemType.DragonBallScroll, 1))
                        {
                            client.Inventory.Remove(Database.ItemType.DragonBallScroll, 1, stream);
                            client.Player.ConquerPoints += 2150;

                            client.CreateBoxDialog("Congratulations!You~have~got~2150~CPs~in~your~inventory");
                        }
                        else
                        {
                            data.AddText("Where~is~your~DBScroll?")
                          .AddOption("Er,~sorry.~I'm not have DBScroll.", 255).AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Contain(Database.ItemType.DragonBall, 1))
                        {
                            client.Inventory.Remove(Database.ItemType.DragonBall, 1, stream);
                            client.Player.ConquerPoints += 215;

                            client.CreateBoxDialog("Congratulations!You~have~got~215~CPs~in~your~inventory");
                        }
                        else
                        {
                            data.AddText("Where~is~your~DragonBall?")
                          .AddOption("Er,~sorry.~I'm not have Dragon Ball.", 255).AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.WardenZhang)]
        public static void WardenZhang(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Were always in the need of fresh bounty hunters.You see... murderers and thieves can evade out guards.")
                            .AddText("We need heroes to slay he killers and restore peace. If you can PK those whose names are black (known criminals),")
                            .AddText("you might get rewarded. If they pay")
                            .AddOption("I~want~to~claim~my~reward.", 1)
                       .AddOption("None~of~my~business.", 255).AddAvatar(37).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        Database.TheCrimeTable MyCrimes;
                        if (Database.Server.TheCrimePoll.TryGetValue(client.Player.UID, out MyCrimes))
                        {
                            string KillerName = "";
                            int ConquerPoints = MyCrimes.Claim(out KillerName);
                            if (ConquerPoints > 0)
                            {
                                data.AddText("For arrest " + KillerName + ", you will be awarded " + ConquerPoints + " ConquerPoints.")
                   .AddOption("Ok, I see.", 255).AddAvatar(37).FinalizeDialog();
                                client.Player.ConquerPoints += (uint)ConquerPoints;

                                break;
                            }
                        }

                        data.AddText("You dont have anything to claim!!")
                 .AddOption("Ok thanks!", 255).AddAvatar(37).FinalizeDialog();

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.JailWarden)]
        public static void JailWarden(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Lucky~for~you,~the~player~who~killed~you~is~willing~to~drop~the~murder~charges~if~you~pay~him~according~to~what~you~did.")
                            .AddText("~So~if~you~pay~him~properly~he~is~willing~to~drop~the~murder~charges.")
                            .AddOption("Ok!~Let~me~get~out~from~here.", 1)
                            .AddOption("Any~chance~for~discount?", 2)
                       .AddOption("I~would~rather~rot~in~hell!", 255).AddAvatar(37).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        data.AddText("The~red~name,~whose~PK~points~are~30-99,~can~leave~here~without~any~price.~The~black~name,~whose~PK~points~are~100~")
                            .AddText("or~above,~should~pay~gold~as~recognizance~to~leave~here.~Or~pay~in~CPs~if~they~really~killed~a~lot.")
                            .AddOption("Ok,~I~will~pay.", 1)
                       .AddOption("I~would~rather~stay~here.", 255).AddAvatar(37).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Player.PKPoints < 100)
                        {
                            data.AddText("You~don\'t~need~to~stay~here~any~more.~Let~me~help~you~out")
                       .AddOption("Ok,~thanks.", 3)
                  .AddOption("I~wanna~stay~here.", 255).AddAvatar(37).FinalizeDialog();

                            break;
                        }
                        else
                        {
                            int cost = 30000;
                            // int cost = (int)(5000 + client.Player.PKPoints * 10);
                            data.AddText("You~really~murdered~a~lot.~Well~in~this~case~if~you~pay~for~yours~sins~" + cost.ToString() + "~CPs~I~will~let~you~go.")
         .AddOption("Here~is~my~payment.", 4)
    .AddOption("No,~thanks.", 255).AddAvatar(37).FinalizeDialog();
                        }

                        break;
                    }
                case 4:
                    {
                        uint cost = 20000;
                        // uint cost = (uint)(5000 + client.Player.PKPoints * 10);
                        if (client.Player.ConquerPoints >= cost)
                        {
                            client.Player.ConquerPoints -= cost;
                            client.Player.PKPoints = 0;

                            if (client.Player.JailerUID > 1000000)
                            {
                                Database.TheCrimeTable crime;
                                if (Database.Server.TheCrimePoll.TryGetValue(client.Player.JailerUID, out crime))
                                {
                                    crime.AddCrime(client.Player.Name, client.Player.UID, (int)(cost / 2));
                                }
                                else
                                {
                                    crime = new Database.TheCrimeTable();
                                    crime.AddCrime(client.Player.Name, client.Player.UID, (int)(cost / 2));
                                    Database.Server.TheCrimePoll.TryAdd(client.Player.JailerUID, crime);
                                }
                                client.Player.JailerUID = 0;
                                Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage($"Congratulation {client.Player.Name} paid {cost} ConquerPoints compensation for his crimes!", MsgServer.MsgMessage.MsgColor.white, MsgServer.MsgMessage.ChatMode.TopLeftSystem).GetArray(stream));
                            }
                            client.Teleport(516, 356, 1002);

                        }
                        else
                        {
                            data.AddText("You do not have " + cost.ToString() + " ConquerPoints with you.")
                             .AddOption("I~see", 255).AddAvatar(37).FinalizeDialog();
                        }


                        break;
                    }
                case 3:
                    {
                        client.Teleport(513, 355, 1002);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.JailJoin)]
        public static void JailJoin(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("What~can~I~do~for~you?")
                            .AddOption("Visit~the~jail.", 1)
                       .AddOption("Just~passing~by.", 255).AddAvatar(37).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        data.AddText("Give~me~1000~silver,~I~will~teleport~you~there.")
                                 .AddOption("Here~are~1000~silver.", 2)
                            .AddOption("If~so,~I~will~stay~here.", 255).AddAvatar(37).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (client.Player.PKPoints < 30)
                        {
                            if (client.Player.Money > 1000)
                            {
                                client.Player.Money -= 1000;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Teleport(29, 72, 6000);

                            }
                            else
                            {
                                data.AddText("You do not have 1000 silvers with you.")
                               .AddOption("I~see", 255).AddAvatar(37).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("I'm sorry you have more Pkpoints")
                             .AddOption("I~see", 255).AddAvatar(37).FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.SarckSoldier)]
        public static void SarckSoldier(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Tell you what, there`s a monster called Nemesis Tyrant hiding at the bottom of the Bloodshed Sea! No one has come back alive after seeing it!")
                            .AddText("~It`s said that anyone who kills this goddamned monster will receive a Savage Bone, which can be used to explored the P7 Sacred Treasures!")
                            .AddOption("Send~me~to~the~Bloodshed~Sea!", 1)
                       .AddOption("Holy...So~scary!", 255).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        client.CreateBoxDialog("You~arrived~at~the~Bloodshed~Sea.");
                        client.Teleport(381, 271, 3846);


                        break;
                    }
            }
        }
        public static void InvokeSarckSoldier(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("This is where the Nemesis Tyrant is hiding. I can`t recall the number of the people who came here. I just remember how they got killed. If you wanna")
                            .AddText("~talk about it, tell me any time.")
                            .AddOption("Tell~me~about~the~sea.", 1)
                       .AddOption("I~wanna~buy~some~Sea~Potions.", 2)
                       .AddOption("God!~Send~me~back!", 3)
                    .AddOption("Alright.", 255).FinalizeDialog();

                        break;
                    }
                case 4:
                    {
                        data.AddText("This is where the Nemesis Tyrant is hiding. I can`t recall the number of the people who came here. I just remember how they got killed. If you wanna")
                           .AddText("~talk about it, tell me any time.")
                           .AddOption("Tell~me~about~the~sea.", 1)
                      .AddOption("I~wanna~buy~some~Sea~Potions.", 2)
                      .AddOption("God!~Send~me~back!", 3)
                   .AddOption("Alright.", 255).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        data.AddText("Well, this sea is kinda special. You won`t get PK points and can`t use City Gates. The Nemesis Tyrant will show up at 15 and 45 of each hour. Look at you...")
                        .AddText("~Before it shows up, you`ll find some Gold Boxes! Open the boxes, you`ll receive some Sea Potions and learn the position of the monster in advance!")
                        .AddText("~Oh, you can also get the potions if you defeat the Nightmare Captain!")
                        .AddOption("Tell~me~something~else.", 4)
                   .AddOption("Got~you.", 255).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        client.CreateBoxDialog("You~arrived~at~the~Gale~Shallow.");
                        client.Teleport(62, 89, 3055);

                        break;
                    }
                case 2:
                    {
                        ActionQuery action = new ActionQuery()
                        {
                            ObjId = client.Player.UID,
                            dwParam = (uint)Role.Flags.NpcType.DialogAndGui,
                            Type = ActionType.OpenGuiNpc,
                            Timestamp = (int)client.ActiveNpc,
                            wParam1 = client.Player.X,
                            wParam2 = client.Player.Y,
                            dwParam3 = client.Player.Map
                        };
                        client.Send(stream.ActionCreate(&action));
                        break;
                    }

            }
        }

        [NpcAttribute(NpcID.SarckSoldierEnctrance)]
        public static void SarckSoldierEnctrance(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            InvokeSarckSoldier(client, stream, Option, Input, id);
        }
        [NpcAttribute(NpcID.SarckSoldierSuppluPoint1)]
        public static void SarckSoldierSuppluPoint1(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            InvokeSarckSoldier(client, stream, Option, Input, id);
        }
        [NpcAttribute(NpcID.SarckSoldierSuppluPoint2)]
        public static void SarckSoldierSuppluPoint2(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            InvokeSarckSoldier(client, stream, Option, Input, id);
        }
        [NpcAttribute(NpcID.SarckSoldierSuppluPoint3)]
        public static void SarckSoldierSuppluPoint3(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            InvokeSarckSoldier(client, stream, Option, Input, id);
        }
        [NpcAttribute(NpcID.SarckSoldierSuppluPoint4)]
        public static void SarckSoldierSuppluPoint4(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            InvokeSarckSoldier(client, stream, Option, Input, id);
        }
        [NpcAttribute(NpcID.SarckSoldierSuppluPoint5)]
        public static void SarckSoldierSuppluPoint5(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            InvokeSarckSoldier(client, stream, Option, Input, id);
        }
        [NpcAttribute(NpcID.SelectP7EquipmentSoulPack)]
        public static void SelectP7EquipmentSoulPack(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            if (!client.Inventory.Contain(3004248, 1))
            {
                client.CreateBoxDialog("Sorry, you don`t have a P7WeaponSoulPack.");
                return;
            }


            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 40:
                    {
                        data.AddText("Select the p7 weapon you need.")
                            .AddOption("MoonHeadgear", 1)
                       .AddOption("SunHeadgear", 2)
                       .AddOption("StarHeadgear", 3)
                       .AddOption("IceHeadgear", 4)
                       .AddOption("HeavenNecklace", 5)
                       .AddOption("FervorBag", 6)
                       .AddOption("NetherArmor", 7)
                    .AddOption("Next~Page", 8).FinalizeDialog();


                        break;
                    }
                case 8:
                    {
                        data.AddText("Select the p7 weapon you need.")
                            .AddOption("EclipseArmor", 9)
                       .AddOption("CraneRing", 10)
                       .AddOption("DragonRing", 11)
                       .AddOption("RainbowBracelet", 12)
                       .AddOption("LionHeavyRing", 13)
                       .AddOption("TigerHeavyRing", 14)
                       .AddOption("FoxBoots", 15)
                       .AddOption("DragonBoots", 16)
                       .AddOption("CraneBoots", 17)
                    .AddOption("Back~Page", 40).FinalizeDialog();



                        break;
                    }
                case 1:
                    {
                        client.Inventory.Remove(3004248, 1, stream);
                        client.Inventory.Add(stream, 820073, 1);
                        break;
                    }
                case 2:
                    {
                        client.Inventory.Remove(3004248, 1, stream);
                        client.Inventory.Add(stream, 820074, 1);
                        break;
                    }
                case 3:
                    {
                        client.Inventory.Remove(3004248, 1, stream);
                        client.Inventory.Add(stream, 820075, 1);
                        break;
                    }
                case 4:
                    {
                        client.Inventory.Remove(3004248, 1, stream);
                        client.Inventory.Add(stream, 820076, 1);
                        break;
                    }
                case 5:
                    {
                        client.Inventory.Remove(3004248, 1, stream);
                        client.Inventory.Add(stream, 821033, 1);
                        break;
                    }
                case 6:
                    {
                        client.Inventory.Remove(3004248, 1, stream);
                        client.Inventory.Add(stream, 821034, 1);
                        break;
                    }
                case 7:
                    {
                        client.Inventory.Remove(3004248, 1, stream);
                        client.Inventory.Add(stream, 822071, 1);
                        break;
                    }
                case 9:
                    {
                        client.Inventory.Remove(3004248, 1, stream);
                        client.Inventory.Add(stream, 822072, 1);
                        break;
                    }
                case 10:
                    {
                        client.Inventory.Remove(3004248, 1, stream);
                        client.Inventory.Add(stream, 823058, 1);
                        break;
                    }
                case 11:
                    {
                        client.Inventory.Remove(3004248, 1, stream);
                        client.Inventory.Add(stream, 823059, 1);
                        break;
                    }
                case 12:
                    {
                        client.Inventory.Remove(3004248, 1, stream);
                        client.Inventory.Add(stream, 823060, 1);
                        break;
                    }
                case 13:
                    {
                        client.Inventory.Remove(3004248, 1, stream);
                        client.Inventory.Add(stream, 823061, 1);
                        break;
                    }
                case 14:
                    {
                        client.Inventory.Remove(3004248, 1, stream);
                        client.Inventory.Add(stream, 823062, 1);
                        break;
                    }
                case 15:
                    {
                        client.Inventory.Remove(3004248, 1, stream);
                        client.Inventory.Add(stream, 824018, 1);
                        break;
                    }
                case 16:
                    {
                        client.Inventory.Remove(3004248, 1, stream);
                        client.Inventory.Add(stream, 824019, 1);
                        break;
                    }
                case 17:
                    {
                        client.Inventory.Remove(3004248, 1, stream);
                        client.Inventory.Add(stream, 824020, 1);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.SelectP7WeaponSoulPack)]
        public static void SelectP7WeaponSoulPack(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            if (!client.Inventory.Contain(3004247, 1))
            {
                client.CreateBoxDialog("Sorry, you don`t have a P7WeaponSoulPack.");
                return;
            }


            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 20:
                    {
                        data.AddText("Select the p7 weapon you need.")
                            .AddOption("MonsterSaber", 1)
                       .AddOption("SkyHammer", 2)
                       .AddOption("ShadowKatana", 3)
                       .AddOption("SkyHalberd", 4)
                       .AddOption("DemonScythe", 5)
                       .AddOption("SpiritShield", 6)
                       .AddOption("TimeBacksword", 7)
                    .AddOption("Next~Page", 8).FinalizeDialog();


                        break;
                    }
                case 0:
                    {
                        data.AddText("Select the p7 weapon you need.")
                            .AddOption("MonsterSaber", 1)
                       .AddOption("SkyHammer", 2)
                       .AddOption("ShadowKatana", 3)
                       .AddOption("SkyHalberd", 4)
                       .AddOption("DemonScythe", 5)
                       .AddOption("SpiritShield", 6)
                       .AddOption("TimeBacksword", 7)
                    .AddOption("Next~Page", 8).FinalizeDialog();

                        break;
                    }
                case 8:
                    {
                        data.AddText("Selecte the p7 weapon you need.")
                      .AddOption("SunBow", 9)
                 .AddOption("BuddaBeads", 10)
                 .AddOption("DeathPistol", 11)
                 .AddOption("RepentRapier", 12)
                 .AddOption("GhostKnife", 13)
                  .AddOption("WarCraze(Nunchaku)", 14)
                   .AddOption("WonderHossu", 15)
                  .AddOption("Back~Page", 20)
                  .AddOption("Next~Page", 21).FinalizeDialog();

                        break;
                    }
                case 21:
                    {
                        data.AddText("Selecte the p7 weapon you need.")
                      .AddOption("FistofDeity(EpicWarrior)", 16)
                 .AddOption("FistofDemon(EpicWarrior)", 17)
                  .AddOption("DivineFan(WindWalker)", 18)
                  .AddOption("Back~Page", 8).FinalizeDialog();
                        break;
                    }
                case 18:
                    {
                        client.Inventory.Remove(3004247, 1, stream);
                        client.Inventory.Add(stream, 801308, 1);
                        break;
                    }
                case 16:
                    {
                        client.Inventory.Remove(3004247, 1, stream);
                        client.Inventory.Add(stream, 801216, 1);
                        break;
                    }
                case 17:
                    {
                        client.Inventory.Remove(3004247, 1, stream);
                        client.Inventory.Add(stream, 801218, 1);
                        break;
                    }

                case 14:
                    {
                        client.Inventory.Remove(3004247, 1, stream);
                        client.Inventory.Add(stream, 801004, 1);
                        break;
                    }
                case 15:
                    {
                        client.Inventory.Remove(3004247, 1, stream);
                        client.Inventory.Add(stream, 801104, 1);
                        break;
                    }
                case 1:
                    {
                        client.Inventory.Remove(3004247, 1, stream);
                        client.Inventory.Add(stream, 800020, 1);
                        break;
                    }
                case 2:
                    {
                        client.Inventory.Remove(3004247, 1, stream);
                        client.Inventory.Add(stream, 800111, 1);
                        break;
                    }
                case 3:
                    {
                        client.Inventory.Remove(3004247, 1, stream);
                        client.Inventory.Add(stream, 800142, 1);
                        break;
                    }
                case 4:
                    {
                        client.Inventory.Remove(3004247, 1, stream);
                        client.Inventory.Add(stream, 800215, 1);
                        break;
                    }
                case 5:
                    {
                        client.Inventory.Remove(3004247, 1, stream);
                        client.Inventory.Add(stream, 800255, 1);
                        break;
                    }
                case 6:
                    {
                        client.Inventory.Remove(3004247, 1, stream);
                        client.Inventory.Add(stream, 800422, 1);
                        break;
                    }
                case 7:
                    {
                        client.Inventory.Remove(3004247, 1, stream);
                        client.Inventory.Add(stream, 800522, 1);
                        break;
                    }
                case 9:
                    {
                        client.Inventory.Remove(3004247, 1, stream);
                        client.Inventory.Add(stream, 800618, 1);
                        break;
                    }
                case 10:
                    {
                        client.Inventory.Remove(3004247, 1, stream);
                        client.Inventory.Add(stream, 800725, 1);
                        break;
                    }
                case 11:
                    {
                        client.Inventory.Remove(3004247, 1, stream);
                        client.Inventory.Add(stream, 800810, 1);
                        break;
                    }
                case 12:
                    {
                        client.Inventory.Remove(3004247, 1, stream);
                        client.Inventory.Add(stream, 800811, 1);
                        break;
                    }
                case 13:
                    {
                        client.Inventory.Remove(3004247, 1, stream);
                        client.Inventory.Add(stream, 800917, 1);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.P7SacredTreasuresEnvoy)]
        public static void P7SacredTreasuresEnvoy(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("There`s a mysterious treasure sealed since the ancient times. With a Savage Bone, you can explore and have a chance to get Sacred refinery materials, rare")
                            .AddText("~weapon accessories, and even the legendary P7 Dragon Soul.")
                            .AddOption("I~wanna~explore.", 1)
                       .AddOption("Special~exploration.", 2)
                    .AddOption("I~see.", 255)
                     .AddAvatar(200)
                    .FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        data.AddText("The Nemesis Tyrant in the Bloodshed Sea has the Savage Bones. You can use one to explore each time.")
                           .AddOption("Use~a~Savage~Bone.", 10)
                   .AddOption("I~see.", 255)
                    .AddAvatar(200)
                   .FinalizeDialog();


                        break;
                    }
                case 11:
                    {
                        client.CreateBoxDialog("You~arrived~at~the~Gale~Shallow.");
                        client.Teleport(62, 89, 3055);


                        break;
                    }
                case 10:
                    {
                        if (client.Inventory.Contain(3004181, 1))
                        {
                            client.Inventory.Remove(3004181, 1, stream);
                            uint ItemID = 0;
                            ushort Rand = (ushort)Program.GetRandom.Next(1, 1000);
                            if (Rand < 200)
                            {
                                client.CreateBoxDialog("You received a P7 Weapon Soul Pack.");
                                ItemID = 3004247;
                            }
                            else if (Rand > 600 && Rand < 700)
                            {
                                client.CreateBoxDialog("You received a P7 Equipment Soul Pack.");
                                ItemID = 3004248;
                            }
                            else
                            {
                                client.CreateBoxDialog("You received a SacredRefineryPack.");
                                ItemID = 3004249;
                            }
                            client.Inventory.Add(stream, ItemID);

                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have a Savage Bone.")
         .AddOption("My~bad.", 255)
          .AddAvatar(200)
         .FinalizeDialog();
                        }


                        break;
                    }
                case 2:
                    {//3004181 SavageBone
                        data.AddText("If you don`t have a Savage Bone, you can also pay 3700 or 17.000 CPs to explore. Of course, the more you pay, the better you get.")
                           .AddText("~How much would you like to pay?")
                           .AddOption("3700~CPs.", 3)
                      .AddOption("17.000~CPs.", 5)
                   .AddOption("I~see.", 255)
                    .AddAvatar(200)
                   .FinalizeDialog();


                        break;
                    }
                case 3:
                    {
                        data.AddText("Are you sure you want to use 3700 CPs to explored the P7 Sacred Treasures?")
                          .AddOption("Yes.", 4)
                  .AddOption("No.", 255).AddAvatar(200).FinalizeDialog();

                        break;
                    }
                case 5:
                    {
                        data.AddText("Are you sure you want to use 17.000 CPs to explored the P7 Sacred Treasures?")
                          .AddOption("Yes.", 6)
                  .AddOption("No.", 255).AddAvatar(200).FinalizeDialog();


                        break;
                    }
                case 6:
                    {
                        if (client.Player.ConquerPoints >= 17000)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Player.ConquerPoints -= 17000;


                                uint ItemID = 3001322;
                                if (Role.Core.Rate(20))
                                {
                                    ItemID = 3004181;
                                }
                                else
                                    client.CreateBoxDialog("You~received~a~Money~Bag.");
                                client.Inventory.Add(stream, ItemID);
                            }
                            else
                            {
                                data.AddText("Please make 1 space in your inventory.")
                                .AddOption("Ah~yes.", 255).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, but you don`t have enough CPs to buy that.")
                        .AddOption("Alright.", 255).AddAvatar(200).FinalizeDialog();
                        }



                        break;
                    }
                case 4:
                    {
                        if (client.Player.ConquerPoints >= 3700)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Player.ConquerPoints -= 3700;


                                uint ItemID = 3001318;
                                if (Role.Core.Rate(4))
                                {
                                    ItemID = 3004181;
                                }
                                else
                                    client.CreateBoxDialog("You~received~a~Money~Bag.");
                                client.Inventory.Add(stream, ItemID);
                            }
                            else
                            {
                                data.AddText("Please make 1 space in your inventory.")
                                .AddOption("Ah~yes.", 255).AddAvatar(200).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, but you don`t have enough CPs to buy that.")
                        .AddOption("Alright.", 255).AddAvatar(200).FinalizeDialog();
                        }


                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.ElementalPool)]
        public static void ElementalPool(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("My optione its: 1: I open the  NightmareCaptain for one YinYangSeal and you'll have 20% chance to obtain an Elemental Jade.")
                            .AddText("2: I open the  PurpleBanshee for one Elemental Jade and you'll have 40% chance to obtain an Life`sEye.")
                            .AddText("3: I change you Stardust for Shadow Scroll , TwilightScroll or FatalScroll!")
                            .AddOption("Change my Stardust", 1)
                       .AddOption("Open~NightmareCaptain", 3)
                    .AddOption("Open~PurpleBanshee", 2)
                    .AddOption("Not~interested.", 255)
                    .AddAvatar(203).FinalizeDialog();


                        break;
                    }
                case 3:
                    {
                        if (client.Inventory.Contain(3004462, 1))
                        {
                            if (client.Player.Map == 3851)
                            {
                                if (!client.Map.ContainMobID(20100))
                                {
                                    client.Inventory.Remove(3004462, 1, stream);
                                    Database.Server.AddMapMonster(stream, client.Map, 20100, client.Player.X, client.Player.Y, 1, 1, 1, client.Player.DynamicID, true, MsgFloorItem.MsgItemPacket.EffectMonsters.Night);
                                }
                                else
                                    client.CreateDialog(stream, "Sorry,but the monster is already spawned..", "I~see.");

                            }
                            else
                                client.CreateDialog(stream, "Use that item in Infinity Abyss,", "I~see.");
                        }
                        else
                        {
                            data.AddText("Sorry, you not have the YinYangSeal in your inventory.")
                .AddOption("Okay.", 255)
                .AddAvatar(203).FinalizeDialog();
                        }


                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Contain(3004463, 1))
                        {
                            if (client.Player.Map == 3851)
                            {
                                if (!client.Map.ContainMobID(20101))
                                {
                                    client.Inventory.Remove(3004463, 1, stream);
                                    Database.Server.AddMapMonster(stream, client.Map, 20101, client.Player.X, client.Player.Y, 1, 1, 1, client.Player.DynamicID, true, MsgFloorItem.MsgItemPacket.EffectMonsters.Night);
                                }
                                else
                                    client.CreateDialog(stream, "Sorry,but the monster is already spawned..", "I~see.");

                            }
                            else
                                client.CreateDialog(stream, "Use that item in Infinity Abyss,", "I~see.");
                        }
                        else
                        {
                            data.AddText("Sorry, you not have the ElementalJade in your inventory.")
                .AddOption("Okay.", 255)
                .AddAvatar(203).FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        data.AddText("I change you Stardust for Shadow Scroll , TwilightScroll or FatalScroll. Please select the item.")
                      .AddOption("ShadowScroll", 10)
                      .AddOption("TwilightScroll", 11)
                      .AddOption("FatalScroll", 12)

                      .AddOption("Not~interested.", 255)
                      .AddAvatar(203).FinalizeDialog();


                        break;
                    }
                case 10:
                    {
                        if (client.Inventory.Contain(3004465, 1))
                        {
                            client.Inventory.Remove(3004465, 1, stream);
                            client.Inventory.Add(stream, 3004459, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you not have the Stardust in your inventory.")
                .AddOption("Okay.", 255)
                .AddAvatar(203).FinalizeDialog();
                        }


                        break;
                    }
                case 11:
                    {
                        if (client.Inventory.Contain(3004465, 1))
                        {
                            client.Inventory.Remove(3004465, 1, stream);
                            client.Inventory.Add(stream, 3004460, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you not have the Stardust in your inventory.")
                .AddOption("Okay.", 255)
                .AddAvatar(203).FinalizeDialog();
                        }


                        break;
                    }
                case 12:
                    {
                        if (client.Inventory.Contain(3004465, 1))
                        {
                            client.Inventory.Remove(3004465, 1, stream);
                            client.Inventory.Add(stream, 3004461, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you not have the Stardust in your inventory.")
                .AddOption("Okay.", 255)
                .AddAvatar(203).FinalizeDialog();
                        }

                        break;
                    }

            }
        }

        [NpcAttribute(NpcID.SwapperStarry)]
        public static void SwapperStarry(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("You'll need 4 Red Flowers and 4 White Flowers to begin the quest. You can obtain Red Flowers and White Flowers in the Evil Abyss .")
                            .AddText("There are 3 stages for you to complete the Epic Quest:")
                            .AddText("Stage 1: Go to feel Yin Yang Stele, and you'll have 30% chance to obtain a Yin Yang Seal.")
                            .AddText("Stage 2: Use a Yin Yang Seal to try to awaken the Elemental Guard, and you'll have 20% chance to obtain an Elemental Jade.")
                            .AddText("Stage 3: Use an Elemental Jade to try Wheel of Life, and you'll have 40% chance to obtain a Life's Eye.")
                            .AddOption("Tell~me~more", 1)
                              .AddOption("I~have~4 Red Flowers and 4 White Flowers.", 3)
                              .AddOption("Buy YinYangSeal 1000 CPs.", 12)
                    .AddOption("Teleport~to~Evil~Abyss", 2)
                    .AddOption("Teleport~to~TwinCity", 10)
                    .AddOption("Not~interested.", 255)
                    .AddAvatar(203).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        data.AddText("If you fail to obtain key quest items during Stage 2 and Stage 3, instead you'll receive Stardust. With Stardust, you can exchange with Swapper Starry at the Infinite Abyss (27,40) for Shadow Scroll, Twilight Scroll, Fatal Scroll.")
                            .AddText("Note: When using a Life's Eye with a Katana equipped, you'll be able to transform the Katana into an Epic Weapon, Nobunaga's Claw. If you already have a Nobunaga's Claw in your left hand, and a Katana in the right, when you use a Life's Eye, your Katana will automatically be transformed into a Nobunaga's Claw, vice versa.")
                      .AddOption("Sound~Good", 255)
                      .AddAvatar(203).FinalizeDialog();


                        break;
                    }
                case 12:
                    {
                        if (client.Player.ConquerPoints >= 1000)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Player.ConquerPoints -= 1000;
                                client.Inventory.Add(stream, 3004462, 1);
                            }
                            else
                            {
                                data.AddText("Please make 1 more space in your inventory")
                                                                    .AddOption("Let me check.", 255)
                                                                    .AddAvatar(203).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, but you don`t have enough CPs to buy that.")
                        .AddOption("Alright.", 255).AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }
                case 2:
                    {

                        client.Teleport(612, 634, 1700, 0);
                        break;
                    }
                case 3:
                    {
                        if (client.Inventory.Contain(722732, 4) && client.Inventory.Contain(722736, 4))
                        {
                            client.Inventory.Remove(722732, 4, stream);
                            client.Inventory.Remove(722736, 4, stream);
                            if (Role.Core.Rate(30))
                            {
                                client.Inventory.Add(stream, 3004462);
                            }
                            else
                                data.AddText("You wasn`t very lucky today .. I hope you will have a better luck next time ^^.")
                     .AddOption("Ah~OK", 255)
                     .AddAvatar(203).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Please come back when you will have at inventory 4 Red Flowers and 4 White Flowers.")
                     .AddOption("Ah~OK", 255)
                     .AddAvatar(203).FinalizeDialog();
                        }


                        break;
                    }
                case 10:
                    {
                        client.Teleport(428, 378, 1002);
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.GameManager)]
        public static void GameManager(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {


                        data.AddText("Hi, I can teleport you to the poker room. Where you can enjoy yourself in the Texas Hold`em Poker. Wish you a good luck and good health.")
                   .AddOption("Enter~Poker~Room.", 1)
                   .AddOption("Enter~VIP~Hall.", 2)
#if Roullete
                   .AddOption("Enter~Roulette~Room.", 3)
#endif
.AddOption("Not~interested.", 255)
                   .AddAvatar(175).FinalizeDialog();



                        break;
                    }
                case 3:
                    {

#if Roullete
                       client.Teleport(55, 62, 3852);
                       client.SendSysMesage("You arrived on the Roulette Room.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.white);
#endif


                        break;
                    }
                case 1:
                    {
                        client.SendSysMesage("You are teleported to the Poker Room.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.white);
                        client.Teleport(55, 63, 1858);


                        break;
                    }
                case 2:
                    {
                        client.SendSysMesage("You arrived on the VIP Hall.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.white);
                        client.Teleport(55, 62, 1860);

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.CasinoHostess)]
        public static void CasinoHostess(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Greeting, I`m glad to be at your service. Win or lose is not that important. To win is not the ultimate aim of the game, happiness is what we have been pursuing. Here, I even more like to wish you a good health than a good luck!")
                    .AddOption("I~have~no~interest~in~it.", 1)
                    .AddOption("I~still~want~to~play.", 255)
                    .AddAvatar(175).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        client.Teleport(298, 283, 1002);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Stanley)]
        public static void Stanley(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello there. Just let me know if you want to go to TwinCity.")
                   .AddOption("TwinCity.", 2)
                   .AddOption("Let~me~think...", 255)
                   .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 2:
                    {
                        data.AddText("Sure you want to leave in TwinCity?")
                            .AddOption("Yes.", 3)
                            .AddOption("Let~me~think...", 255)
                            .AddAvatar(63).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        client.Teleport(428, 378, 1002);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Lab4)]
        public static void Lab4(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I~am~NorthGeneral.~This~is~the~fourth~floor.~If~you~want~to~go~back~to~Twin~City.~I~can~help~you.");
                        data.AddOption("To~Twin~City.", 2);
                        data.AddOption("I~will~stay~here.");
                        data.AddAvatar(31);
                        data.FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        data.AddText("Sure you want to leave in TwinCity?")
                            .AddOption("Yes.", 3)
                            .AddOption("Let~me~think...", 255)
                            .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 3:
                    {
                        client.Teleport(428, 378, 1002);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Lab3)]
        public static void Lab3(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I~am~SouthGeneral.~This~is~the~third~floor~of~Labyrinth.~If~you~want~to~enter~the~next~floor,~you~should~give~me~a");
                        data.AddText("~SoulToken.~Or~would~you~like~to~go~back~to~Twin~City?");
                        data.AddOption("To~the~next~floor.", 1);
                        data.AddOption("To~Twin~City.", 3);
                        data.AddOption("I~will~stay~here.");
                        data.AddAvatar(31);
                        data.FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(721539, 1))
                        {
                            data.AddText("The~next~floor~is~more~dangerous.~You~should~be~more~careful.");
                            data.AddOption("Thank~you~very~much.", 2);
                            data.AddAvatar(31);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You~don`t~have~a~SoulToken,~I~cannot~teleport~you~there.");
                            data.AddOption("I~will~stay~here.");
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Contain(721539, 1))
                        {
                            client.Inventory.Remove(721539, 1, stream);
                            client.Teleport(5, 290, 1354);
                        }
                        else
                        {
                            data.AddText("Sorry,~you~don`t~have~1~SoulToken.")
                        .AddOption("Sigh...", 255)
                        .AddAvatar(63).FinalizeDialog();

                        }


                        break;
                    }
                case 3:
                    {
                        data.AddText("Sure you want to leave in TwinCity?")
                            .AddOption("Yes.", 4)
                            .AddOption("Let~me~think...", 255)
                            .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 4:
                    {
                        client.Teleport(428, 378, 1002);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Lab2)]
        public static void Lab2(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I~am~WestGeneral.~This~is~the~second~floor~of~Labyrinth.~If~you~want~to~enter~the~next~floor,~you~should~give~me~an");
                        data.AddText("~EarthToken,~or~would~you~like~to~go~back~to~Twin~City?");
                        data.AddOption("To~the~next~floor.", 1);
                        data.AddOption("To~Twin~City.", 3);
                        data.AddOption("I~will~stay~here.");
                        data.AddAvatar(31);
                        data.FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(721538, 1))
                        {
                            data.AddText("The~next~floor~is~more~dangerous.~You~should~be~more~careful.");
                            data.AddOption("Thank~you~very~much.", 2);
                            data.AddAvatar(31);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You~don`t~have~an~EarthToken.~I~cannot~teleport~you~to~the~next~floor.");
                            data.AddOption("I~will~stay~here.");
                            data.AddAvatar(31);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Contain(721538, 1))
                        {
                            client.Inventory.Remove(721538, 1, stream);
                            client.Teleport(25, 268, 1353);
                        }
                        else
                        {
                            data.AddText("You~don`t~have~an~EarthToken.~I~cannot~teleport~you~to~the~next~floor.");
                            data.AddOption("I~will~stay~here.");
                            data.AddAvatar(31);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 3:
                    {
                        data.AddText("Sure you want to leave in TwinCity?")
                            .AddOption("Yes.", 4)
                            .AddOption("Let~me~think...", 255)
                            .AddAvatar(63).FinalizeDialog();

                        break;
                    }
                case 4:
                    {
                        client.Teleport(428, 378, 1002);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Lab1)]
        public static void Lab1(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I~am~EastGeneral.~This~is~the~first~floor~of~Labyrinth.~If~you~want~to~enter~the~next~floor,~you~should~give~me~a");
                        data.AddText("~Sky~Token,~which~is~carried~by~the~Gold~Gosts.");
                        data.AddOption("To~the~next~floor.", 1);
                        data.AddOption("To~Twin~City.", 3);
                        data.AddOption("I~will~stay~here.");
                        data.AddAvatar(31);
                        data.FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(721537, 1))
                        {
                            data.AddText("The~next~floor~is~more~dangerous.~You~should~be~more~careful.");
                            data.AddOption("Thank~you~very~much.", 2);
                            data.AddAvatar(31);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You~have~no~Sky~Token.~Hurry~to~loot~one~from~the~Gold~Gosts.");
                            data.AddOption("I~will~stay~here.");
                            data.AddAvatar(31);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {

                        if (client.Inventory.Contain(721537, 1))
                        {
                            client.Inventory.Remove(721537, 1, stream);
                            client.Teleport(27, 227, 1352);
                        }
                        else
                        {
                            data.AddText("You~have~no~Sky~Token.~Hurry~to~loot~one~from~the~Gold~Gosts.");
                            data.AddOption("I~will~stay~here.");
                            data.AddAvatar(31);
                            data.FinalizeDialog();

                        }


                        break;
                    }
                case 3:
                    {
                        data.AddText("Sure you want to leave in TwinCity?")
                            .AddOption("Yes.", 4)
                            .AddOption("Let~me~think...", 255)
                            .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 4:
                    {
                        client.Teleport(428, 378, 1002);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Simon)]
        public static void Simon(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Great~rewards~will~attract~many~brave~people.~I~am~looking~for~brave~people~to~help~me~take~my~patrimony~back.")
                   .AddOption("Please~tell~me~more.", 1)
                   .AddOption("What~rewards?", 10)
                   .AddOption("I~got~SunDiamonds.", 12)
                   .AddOption("I~got~MoonDiamonds.", 13)
                   .AddOption("I~got~StarDiamonds.", 14)
                   .AddOption("I~got~CloudDiamonds.", 15)
                   .AddOption("Let~me~think...", 255)
                   .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 15:
                    {
                        if (client.Inventory.Contain(721536, 17))
                        {
                            client.Inventory.Remove(721536, 17, stream);
                            client.Inventory.Add(stream, 721540, 1);
                            data.AddText("Well~done.~Here~is~the~rewards~I~promised~to~you.");
                            data.AddOption("Thanks.");
                            data.AddAvatar(63);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You~are~kidding~on~me.~How~dare~you~come~here~to~claim~prize~with~so~few~CloudDiamonds?")
             .AddOption("Wait.~I~will~get~more.", 255)
             .AddAvatar(63).FinalizeDialog();
                        }


                        break;
                    }
                case 14:
                    {
                        if (client.Inventory.Contain(721535, 17))
                        {
                            client.Inventory.Remove(721535, 17, stream);
                            Role.Flags.Gem[] Gems = new Role.Flags.Gem[] { Role.Flags.Gem.NormalDragonGem, Role.Flags.Gem.NormalFuryGem, Role.Flags.Gem.NormalGloryGem
                           , Role.Flags.Gem.NormalKylinGem, Role.Flags.Gem.NormalMoonGem, Role.Flags.Gem.NormalPhoenixGem, Role.Flags.Gem.NormalRainbowGem, Role.Flags.Gem.NormalThunderGem
                           , Role.Flags.Gem.NormalTortoiseGem, Role.Flags.Gem.NormalVioletGem};

                            Role.Flags.Gem GemType = (Role.Flags.Gem)Gems[Program.GetRandom.Next(0, Gems.Length)];
                            client.Inventory.Add(stream, (uint)(700000 + (int)GemType), 1);
                            data.AddText("Well~done.~Here~is~the~rewards~I~promised~to~you.");
                            data.AddOption("Thanks.");
                            data.AddAvatar(63);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You~are~kidding~on~me.~How~dare~you~come~here~to~claim~prize~with~so~few~StarDiamonds?")
             .AddOption("Wait.~I~will~get~more.", 255)
             .AddAvatar(63).FinalizeDialog();
                        }


                        break;
                    }
                case 13:
                    {
                        if (client.Inventory.Contain(721534, 17))
                        {
                            client.Inventory.Remove(721534, 17, stream);
                            client.Inventory.Add(stream, Database.ItemType.Meteor, 4);
                            data.AddText("Well~done.~Here~is~the~rewards~I~promised~to~you.");
                            data.AddOption("Thanks.");
                            data.AddAvatar(63);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You~are~kidding~on~me.~How~dare~you~come~here~to~claim~prize~with~so~few~MoonDiamonds?")
             .AddOption("Wait.~I~will~get~more.", 255)
             .AddAvatar(63).FinalizeDialog();
                        }


                        break;
                    }
                case 12:
                    {
                        if (client.Inventory.Contain(721533, 17))
                        {
                            client.Inventory.Remove(721533, 17, stream);
                            client.Inventory.Add(stream, Database.ItemType.Meteor, 2);
                            data.AddText("Well~done.~Here~is~the~rewards~I~promised~to~you.");
                            data.AddOption("Thanks.");
                            data.AddAvatar(63);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You~are~kidding~on~me.~How~dare~you~come~here~to~claim~prize~with~so~few~SunDiamonds?")
             .AddOption("Wait.~I~will~get~more.", 255)
             .AddAvatar(63).FinalizeDialog();
                        }

                        break;
                    }
                case 10:
                    {
                        data.AddText("I~need~Sun`Diamond,~Moon~Diamond,~Star~Diamond~and~Cloud~Diamond.")
                          .AddText("If~You~get~them~for~me,~I~will~give~you~some~rewards.")
                .AddOption("What~rewards?", 11)
                .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 11:
                    {
                        data.AddText("2~meteors~for~17~SunDiamonds,~4~meteors~for~17~MoonDiamonds,~a~normal~gem~for~17~StarDiamonds~and~a~AncestorBox")
                         .AddText("for~17~CloudDiamonds.~If~you~are~lucky~enough,~you~will~get~a~big~surprise~from~the~box.")
               .AddOption("I~see.~Thank~you.", 255)
               .AddAvatar(63).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        data.AddText("My~ancestors~built~a~Labyrinth~long~before.~Many~treasures~were~stored~there~like~SunDiamonds,~MoonDiamonds,~")
                                  .AddText("StarDiamond~and~so~on.~But~it~was~occupied~by~fiece~monsters~soon.~They~expelled~our~clansmen~and~kept~the~treasure.")
                        .AddOption("Wow,~miserable.", 2)
                        .AddOption("I~have~no~interest.", 255)
                        .AddAvatar(63).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        data.AddText("The~Labyrinth~contains~4~floors~guarded~by~different~monsters.~If~you~can~find~the~treasures~and~give~them~to~me,~I~will~reward")
              .AddOption("Please~continue.", 3)
              .AddAvatar(63).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        data.AddText("There~are~3~kinds~of~monsters~on~each~floor.~The~more~monsters,~the~weaker~they~are.~The~ones~in~lesser")
                              .AddText("quantities~are~strong.~The~fiercest~monsters~are~always~moving~around.~And~they~drop~different~tokens.")
                           .AddOption("What~do~they~drop?", 4)
                           .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 4:
                    {
                        data.AddText("SkyToken,~EarthToken~and~SoulToken~you~need~to~enter~the~next~floor.~While~the~weak~monsters~usually~drop~treasure.")
                        .AddText("After~You~get~a~token,~find~a~general~who~will~send~you~to~the~next~floor.~Some~boss~monsters~drop~rare~items.")
              .AddOption("I~see.~Thanks.", 5)
              .AddOption("I~must~leave~now.", 255)
              .AddAvatar(63).FinalizeDialog();

                        break;
                    }
                case 5:
                    {
                        data.AddText("There are 3 ways to enter the Labyrinth: 1. Pay 2,000 Virtue Points; 2. Submit 5 meteors;")
                      .AddText("~3. VIP service.")
            .AddOption("Give~you~2000~Virtue~Points.", 6)
            .AddOption("I~have~5~Meteors.", 7)
              .AddOption("VIP~service.", 8)
            .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 8:
                    {
                        if (client.Player.VipLevel >= 1)
                        {
                            client.Teleport(18, 127, 1351);
                        }
                        else
                        {
                            data.AddText("Sorry,~you~don`t~have~VIP.")
                           .AddOption("Sigh...", 255)
                           .AddAvatar(63).FinalizeDialog();
                        }

                        break;
                    }
                case 6:
                    {
                        if (client.Player.VirtutePoints > 2000)
                        {
                            client.Player.VirtutePoints -= 2000;
                            client.Player.SendUpdate(stream, client.Player.VirtutePoints, MsgServer.MsgUpdate.DataType.VirtutePoints);
                            client.Teleport(18, 127, 1351);
                        }
                        else
                        {
                            data.AddText("Sorry,~you~don`t~have~enough~virtue~points.")
                           .AddOption("Sigh...", 255)
                           .AddAvatar(63).FinalizeDialog();
                        }

                        break;
                    }
                case 7:
                    {
                        if (client.Inventory.Contain(Database.ItemType.Meteor, 5))
                        {
                            client.Inventory.Remove(Database.ItemType.Meteor, 5, stream);
                            client.Teleport(18, 127, 1351);
                        }
                        else
                        {
                            data.AddText("Sorry,~you~don`t~have~5~Meteors.")
                            .AddOption("Sigh...", 255)
                            .AddAvatar(63).FinalizeDialog();

                        }

                        break;
                    }

            }
        }
        //FrozenGrottoGuardian5
        [NpcAttribute(NpcID.FrozenGrottoGuardian5)]
        public static void FrozenGrottoGuardian5(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText(" Who`s there?.. Oh, you are from Twin City. aren`t you? Finally, i thoyght no one would come here to rescue us..")
                            .AddText("We`ve still got some business to carry out on the 6th floor. You`re here to go there and clear out the monsters,")
                            .AddText("right? I can also help you get the other floors, if you like.")
                    .AddOption("How can i go FG6? ", 1)
                    .AddOption("Gimme a Shadow Jave", 2)
                    .AddOption("Send me to FG4 then.", 3)
                    .AddOption("Let~me~think...", 255)
                    .AddAvatar(31).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        data.AddText("There is a portal on this floor (150,178). You can get to F6 from here. Be careful.")
                            .AddOption("Thanks. I will.", 255)
                            .AddAvatar(31).FinalizeDialog();


                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Inventory.Contain(720599, 1))
                            {
                                data.AddText("Sorry, but your have ShadowJade.")
                                 .AddOption("Ah~yes.", 255)
                               .AddAvatar(0).FinalizeDialog();
                                break;
                            }
                            client.Inventory.Add(stream, 720599);
                        }
                        else
                        {
                            data.AddText("Please make 1 space in your inventory.")
                                  .AddOption("Ah~yes.", 255)
                                .AddAvatar(0).FinalizeDialog();
                        }


                        break;
                    }
                case 3:
                    {
                        client.Teleport(379, 470, 2054);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.FrozenFroto4Teleporter)]
        public static void FrozenFroto4Teleporter(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText(" ~I guess you`ve heard about the 5th floor of Frozen Grotto before. The place is infested with so many ferocious monsters that no one dares go up there. Well, until recently,")
                            .AddText(" that is... Yeah, you heard me... I found out that the monsters on the 3rd and 4th")
                            .AddText("~are carrying a Grotto Key with them. With this key, it would be easier to kill the monsters on the 5th floor. If you are interested, go kill those monsters")
                            .AddText(" on the 3rd and 4th floor and get a key, then I`ll send you to the 5th floor to get rid of")
                            .AddText("~those nasty beasts. Hmmm,~I`m~on~it.")
                            .AddText("If your VIP level has reached 4, you can enter the 5th floor of Frozen Grotto everyday, for free!")
                    .AddOption("Hey,~I`ve~got~a~key~here.", 1)
                    .AddOption("Frozen~Grotto~F5.", 2)
                    .AddOption("Let~me~think...", 255)
                    .AddAvatar(31).FinalizeDialog();


                        break;
                    }
                case 1:
                    {//721347 GrottoKey
                        if (client.Inventory.Contain(721347, 1))
                        {
                            client.Inventory.Remove(721347, 1, stream);
                            client.Teleport(526, 562, 2055);
                        }
                        else
                        {
                            data.AddText("Sorry, you not have the Grotto Key in your inventory. Go to kill monsters to obtain that key..")
                    .AddOption("Okay.", 255)
                    .AddAvatar(31).FinalizeDialog();
                        }


                        break;
                    }
                case 2:
                    {
                        if (client.Player.VipLevel >= 4)
                        {
                            client.Teleport(526, 562, 2055);
                        }
                        else
                        {
                            data.AddText("Sorry, but your VIP Level has to reach 4 to enter the 5th floor for free. If you want to go there, you must collect the Grotto Key.")
                 .AddOption("I~see.", 255)
                 .AddAvatar(31).FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.DesertFrozenGroto)]
        public static void DesertFrozenGroto(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("The Frozen Grotto is a dangerous and ancient place. Many heroes have died there while searching for its hidden treasures.")
                            .AddText("~Six layers of the Frozen Grotto have been excavated so far. If you have made up your mind to test your ability there, I can")
                            .AddText("~teleport you to the first 2 floors. If you want to go to the 5th floor, speak to the Guardian on Frozen Grotto F4 (387,460).")
                    .AddOption("Frozen~Grotto~1.", 1)
                    .AddOption("Frozen~Grotto~2 (SnowBanshee`s land).", 2)
                    .AddOption("Frozen~Grotto~6.", 3)
                    .AddOption("Let~me~think...", 255)
                    .AddAvatar(183).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        client.Teleport(338, 354, 1762);
                        break;
                    }
                case 2:
                    {
                        client.Teleport(379, 470, 2054);
                        //client.Teleport(373, 620, 1927);
                        break;
                    }
                case 3:
                    {
                        client.Teleport(300, 300, 2056);
                        break;
                    }
            }
        }
        public static void Furnitures(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {

            Database.NpcServer.Furniture Furniture;
            if (Database.NpcServer.FurnitureInformations.TryGetValue(id, out Furniture))
            {
                Dialog data = new Dialog(client, stream);
                switch (Option)
                {
                    case 0:
                        {
                            data.AddText("Do you want this " + Furniture.Name + " ? It costs only " + Furniture.MoneyCost + " silvers.")
                                                     .AddOption("Yes.", 1)
                                                       .AddOption("No.", 255)
                                                     .AddAvatar(0).FinalizeDialog();


                            break;
                        }
                    case 1:
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                if (client.Player.Money >= Furniture.MoneyCost)
                                {
                                    client.Player.Money -= (uint)Furniture.MoneyCost;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                    client.Inventory.Add(stream, Furniture.ItemID, 1);

                                    Database.ItemType.DBItem item;
                                    if (Database.Server.ItemsBase.TryGetValue(Furniture.ItemID, out item))
                                    {
                                        client.SendSysMesage("You got a " + item.Name + "!", MsgMessage.ChatMode.System);
                                    }
                                }
                                else
                                {

                                    data.AddText("You do not have " + Furniture.MoneyCost + " silvers with you.")
                                     .AddOption("I~see.", 255)
                                   .AddAvatar(0).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("There is not enough room in your inventory.")
                                    .AddOption("Ah~yes.", 255)
                                  .AddAvatar(0).FinalizeDialog();
                            }


                            break;
                        }
                }
            }
        }
        public static void LotteryBoxes(Client.GameClient user, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(user, stream);
            switch (Option)
            {

                case 0:
                    {
                        //data.AddText("Lottery is disabled for now till 7th of march.")
                        //    .AddOption("Okay.", 255)
                        //    .AddAvatar(0)
                        //    .FinalizeDialog();
                        data.AddText("Are you sure you want to open this lottery box?")
                            .AddOption("Pay 1 SmallLotteryPack.", 1)
                            .AddOption("No thanks.", 255)
                            .AddAvatar(0)
                            .FinalizeDialog();
                        break;
                    }
                case 1:
                    {

                        if (user.Player.LotteryEntries < Database.Server.Lottery.LotteryEntry(user.Player.VipLevel))
                        {
                            if (user.Inventory.Contain(724002, 1))
                            {
                                if (user.Inventory.HaveSpace(1))
                                {
                                    user.Inventory.Remove(724002, 1, stream);
                                    user.Player.LotteryEntries++;
                                    //reset lottery jade 
                                    user.Player.AddJade = 0;
                                    Database.Lottery.GetRandomPrize(user, stream);
                                    Game.MsgServer.MsgStringPacket packet = new Game.MsgServer.MsgStringPacket();
                                    packet.ID = MsgStringPacket.StringID.Effect;
                                    packet.UID = id;
                                    packet.Strings = new string[1] { "lottery" };
                                    user.Player.View.SendView(stream.StringPacketCreate(packet), true);
                                    data.AddText("You got an item from the lottery. Check your inventory.")
                      .AddOption("Okay thanks.", 255)
                      .AddAvatar(0).FinalizeDialog();
                                }
                                else
                                    user.CreateBoxDialog("Please make 1 more space in your inventory.");

                            }
                            else
                            {
                                data.AddText("You need to have a SmallLotteryPack to draw from the lottery in the lottery Center.")
                      .AddOption("Oops.", 255)
                      .AddAvatar(0).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, your LotteryEntries " + user.Player.LotteryEntries + "  has finished come tomorrow.")
                               .AddOption("Oops.", 255)
                               .AddAvatar(0).FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        public static void Warehause(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            if (client.ActiveNpc == (uint)NpcID.WHTwin)
            {
                var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.Barber, client.Player.Class);
                var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)id, client.Player.Class);

                var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.TCViceCaptain, client.Player.Class, 1006);
                Dialog data = new Dialog(client, stream);
                switch (Option)
                {

                    case 0:
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                data.AddText("You can deposit or withdraw your items and money, here. Wait, are you here to claim the Military Letter for the TC Vice Captain?")
                                 .AddOption("Yeah!", 10)
                                 .AddOption("Open~my~Warehouse.", 1)
                                 .AddAvatar(10).FinalizeDialog();
                                break;
                            }
                            if (client.Player.QuestGUI.IsActiveQuest(ActiveQuest.MissionId))
                            {
                                data.AddText("I am the most reliable man in Twin City! Your valuable things will be safe in my warehouse!")
                               .AddOption("You~look~reliable.", 2)
                               .AddOption("Open~my~Warehouse.", 1)
                               .AddAvatar(10).FinalizeDialog();
                                break;
                            }
                            if (client.Player.QuestGUI.IsActiveQuest(ActiveQuest2.MissionId))
                            {
                                data.AddText("You really need a good weapon during your long journey! The Blacksmith has many good stuffs! He should have something for you.")
                .AddOption("I~will~speak~with~him~now!", 3)
                  .AddOption("Open~my~Warehouse.", 1)
                .AddAvatar(10).FinalizeDialog();
                                break;
                            }
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            {
                                goto case 1;
                            }
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            {
                                data.AddText("You really need a good weapon during your long journey! The Blacksmith has many good stuffs! He should have something for you.")
                  .AddOption("I~will~speak~with~him~now!", 3)
                    .AddOption("Open~my~Warehouse.", 1)
                  .AddAvatar(10).FinalizeDialog();
                                break;
                            }
                            goto case 1;


                        }
                    case 10:
                        {
                            if (client.Inventory.HaveSpace(1) == false)
                            {
                                data.AddText("Please make 1 more space in your inventory.")
                               .AddOption("let me to check.", 255)
                               .AddAvatar(10).FinalizeDialog();
                                break;
                            }
                            if (client.Inventory.Contain(711235, 1))
                            {
                                data.AddText("You`ve got the Military Letter. Go give it to the TC Vice Captain!")
                                   .AddOption("I`ll~go~now.", 11)
                                   .AddAvatar(10).FinalizeDialog();
                                break;
                            }
                            client.Inventory.Add(stream, 711235);
                            client.Player.QuestGUI.IncreaseQuestObjectives(stream, ActiveQuest3.MissionId, 1, 1);

                            data.AddText("This is the letter you want. Take it. By the way, don`t forget about our wonderful storage services!")
                                .AddOption("Okay,~thanks.", 11)
                                .AddAvatar(10).FinalizeDialog();



                            break;
                        }
                    case 11:
                        {
                            client.Player.QuestGUI.SendAutoPatcher(1002, ActiveQuest3.FinishNpcId.X, ActiveQuest3.FinishNpcId.Y, ActiveQuest3.FinishNpcId.ID);
                            break;
                        }
                    case 1:
                        {
                            ActionQuery action = new ActionQuery()
                            {
                                Type = ActionType.OpenDialog,
                                ObjId = client.Player.UID,
                                dwParam = MsgServer.DialogCommands.Warehouse,
                                wParam1 = client.Player.X,
                                wParam2 = client.Player.Y
                            };
                            client.Send(stream.ActionCreate(&action));

                            break;
                        }
                    case 2:
                        {
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                            {
                                client.IncreaseExperience(stream, 1400, Role.Flags.ExperienceEffect.angelwing);
                                data.AddText("You really need a good weapon during your long journey! The Blacksmith has many good stuffs! He should have something for you.")
                  .AddOption("I~will~speak~with~him~now!", 3)
                    .AddOption("Open~my~Warehouse.", 1)
                  .AddAvatar(10).FinalizeDialog();
                            }


                            break;
                        }
                    case 3:
                        {
                            client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                            client.Player.QuestGUI.SendAutoPatcher("The~Warehouseman~asked~you~to~pay~a~visit~to~the~Blacksmith.", ActiveQuest2.FinishNpcId.Map, ActiveQuest2.FinishNpcId.X, ActiveQuest2.FinishNpcId.Y, ActiveQuest2.FinishNpcId.ID);



                            //client.Player.QuestGUI.Accept(818, 0);
                            //  client.Player.QuestGUI.SendAutoPatcher("The~Warehouseman~asked~you~to~pay~a~visit~to~the~Blacksmith.", 1002, 324, 230, (uint)NpcID.BlackSmith);

                            break;
                        }
                }
            }
            else
            {
                ActionQuery action = new ActionQuery()
                {
                    ObjId = client.Player.UID,
                    Type = ActionType.OpenDialog,
                    dwParam = MsgServer.DialogCommands.Warehouse,
                    wParam1 = client.Player.X,
                    wParam2 = client.Player.Y
                };
                client.Send(stream.ActionCreate(&action));


            }
        }
        public static void GuildCondTeleBack(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("In exchange of a fee of 500gold, I will teleport you back to the guild war map. Don't bother me if you are poor.")
                        .AddOption("Teleport me.", 1)

                        .AddOption("I'm too poor.", 255).AddAvatar(3).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (client.Player.Money >= 500)
                        {
                            client.Player.Money -= 500;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                            client.Teleport(348, 339, 1038);
                        }
                        else
                        {
                            data.AddText("You do not have 500 silvers with you.")
                                 .AddOption("I~see.", 255)
                               .AddAvatar(3).FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        public static void GuildConductorsProces(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Are~you~heading~for~the~next~teleporter?~It~is~free~for~our~members,~and~1,000~silver~for~others.")
                        .AddOption("Please~teleport~me~there.", 1)
                        .AddOption("Buy~Guild~Teleporter.", 2)
                        .AddOption("Just~passing~by.", 255).AddAvatar(3).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Player.Money >= 1000)
                        {
                            client.Player.Money -= 1000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);

                            ushort x, y;
                            uint map;
                            Game.MsgTournaments.MsgSchedules.GuildWar.GuildConductors[(NpcID)client.ActiveNpc - 1].GetCoords(out x, out y, out map);

                            client.Teleport(x, y, map);
                        }
                        else
                        {
                            data.AddText("Please~take~1000~silvers~to~use~guild~teleporter.")
                        .AddOption("I~see.", 255).AddAvatar(3).FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        data.AddText("A~Teleporter~costs~100,000~silver.~After~you~buy~one~and~place~it~at~a~good~location,~you~can~be~teleported~there~directly.")
                     .AddOption("Buy~Teleporter~1.", 3)
                     .AddOption("Buy~Teleporter~2.", 4)
                              .AddOption("Buy~Teleporter~3.", 5)
                     .AddOption("Buy~Teleporter~4.", 6)
                     .AddOption("I~changed~my~mind.", 255).AddAvatar(3).FinalizeDialog();


                        break;
                    }
                case 3:
                    {
                        if (client.Player.GuildID == MsgTournaments.MsgSchedules.GuildWar.Winner.GuildID
                                                   && MsgTournaments.MsgSchedules.GuildWar.Proces == MsgTournaments.ProcesType.Dead)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                if (client.Player.Money >= 100000)
                                {
                                    client.Player.Money -= 100000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                    client.Inventory.Add(stream, 720021);
                                }
                                else
                                {

                                    data.AddText("You do not have 100.000 silvers with you.")
                                  .AddOption("I~see.", 255).AddAvatar(3).FinalizeDialog();
                                }
                            }
                            else
                            {

                                data.AddText("Please make one more space in your inventory.")
                              .AddOption("I~see.", 255).AddAvatar(3).FinalizeDialog();
                            }
                        }
                        else
                        {

                            data.AddText("Sorry,~only~the~guild~leader~who~won~the~guild~war~can~buy~a~Guild~Teleporter.")
                          .AddOption("I~see.", 255).AddAvatar(3).FinalizeDialog();
                        }



                        break;
                    }
                case 6:
                    {
                        if (client.Player.GuildID == MsgTournaments.MsgSchedules.GuildWar.Winner.GuildID
                            && MsgTournaments.MsgSchedules.GuildWar.Proces == MsgTournaments.ProcesType.Dead)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                if (client.Player.Money >= 100000)
                                {
                                    client.Player.Money -= 100000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                    client.Inventory.Add(stream, 720024);
                                }
                                else
                                {

                                    data.AddText("You do not have 100.000 silvers with you.")
                                  .AddOption("I~see.", 255).AddAvatar(3).FinalizeDialog();
                                }
                            }
                            else
                            {

                                data.AddText("Please make one more space in your inventory.")
                              .AddOption("I~see.", 255).AddAvatar(3).FinalizeDialog();
                            }
                        }
                        else
                        {

                            data.AddText("Sorry,~only~the~guild~leader~who~won~the~guild~war~can~buy~a~Guild~Teleporter.")
                          .AddOption("I~see.", 255).AddAvatar(3).FinalizeDialog();
                        }



                        break;
                    }
                case 5:
                    {
                        if (client.Player.GuildID == MsgTournaments.MsgSchedules.GuildWar.Winner.GuildID
                           && MsgTournaments.MsgSchedules.GuildWar.Proces == MsgTournaments.ProcesType.Dead)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                if (client.Player.Money >= 100000)
                                {
                                    client.Player.Money -= 100000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                    client.Inventory.Add(stream, 720023);
                                }
                                else
                                {

                                    data.AddText("You do not have 100.000 silvers with you.")
                                  .AddOption("I~see.", 255).AddAvatar(3).FinalizeDialog();
                                }
                            }
                            else
                            {

                                data.AddText("Please make one more space in your inventory.")
                              .AddOption("I~see.", 255).AddAvatar(3).FinalizeDialog();
                            }
                        }
                        else
                        {

                            data.AddText("Sorry,~only~the~guild~leader~who~won~the~guild~war~can~buy~a~Guild~Teleporter.")
                          .AddOption("I~see.", 255).AddAvatar(3).FinalizeDialog();
                        }



                        break;
                    }
                case 4:
                    {
                        if (client.Player.GuildID == MsgTournaments.MsgSchedules.GuildWar.Winner.GuildID
                            && MsgTournaments.MsgSchedules.GuildWar.Proces == MsgTournaments.ProcesType.Dead)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                if (client.Player.Money >= 100000)
                                {
                                    client.Player.Money -= 100000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                    client.Inventory.Add(stream, 720022);
                                }
                                else
                                {

                                    data.AddText("You do not have 100.000 silvers with you.")
                                  .AddOption("I~see.", 255).AddAvatar(3).FinalizeDialog();
                                }
                            }
                            else
                            {

                                data.AddText("Please make one more space in your inventory.")
                              .AddOption("I~see.", 255).AddAvatar(3).FinalizeDialog();
                            }
                        }
                        else
                        {

                            data.AddText("Sorry,~only~the~guild~leader~who~won~the~guild~war~can~buy~a~Guild~Teleporter.")
                          .AddOption("I~see.", 255).AddAvatar(3).FinalizeDialog();
                        }



                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.GuildOfficer)]
        public static void GuildOfficer(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (MsgTournaments.MsgSchedules.GuildWar.Proces == MsgTournaments.ProcesType.Dead)
                        {
                            data.AddText("There~is~" + MsgTournaments.MsgGuildWar.GuildWarScrore.ConquerPointsReward.ToString() + "~CPs~income~every~week.~Guild~leader~can~claim~it~from~Monday~to~Thursday.~First~come,~First~served.")
                                .AddOption("I~would~like~to~claim~it", 1)
                           .AddOption("Just~passing~by.", 255).AddAvatar(110).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Guild war is being held now. Afterwards the leader of winning guild can gain the tax income,")
                                .AddText("which can be claimed from Monday to Thursday next week.")
                            .AddOption("Ok,~I~see.", 255).AddAvatar(110).FinalizeDialog();
                        }


                        break;
                    }
                case 1:
                    {
                        if (client.Player.GuildID == MsgTournaments.MsgSchedules.GuildWar.Winner.GuildID && client.Player.MyGuild != null && MsgTournaments.MsgSchedules.GuildWar.Proces == MsgTournaments.ProcesType.Dead)
                        {

                            if (client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader && MsgTournaments.MsgSchedules.GuildWar.Winner.LeaderReward > 0
                                 && !MsgTournaments.MsgSchedules.GuildWar.RewardLeader.Contains(client.Player.UID))
                            {
                                if (!client.Inventory.HaveSpace(3))
                                {
                                    data.AddText("Please make 3 more spaces in your inventory.")
                  .AddOption("let me check.", 255).AddAvatar(110).FinalizeDialog();
                                    break;
                                }

                                MsgTournaments.MsgSchedules.GuildWar.RewardLeader.Add(client.Player.UID);

                                MsgTournaments.MsgSchedules.GuildWar.Winner.LeaderReward -= 1;
                                client.Player.ConquerPoints += MsgTournaments.MsgGuildWar.GuildWarScrore.ConquerPointsReward;
                                client.Inventory.Add(stream, 723467, 1);
                                client.Inventory.Add(stream, 721169, 2);
                                client.Player.AddFlag(MsgServer.MsgUpdate.Flags.TopGuildLeader, Role.StatusFlagsBigVector32.PermanentFlag, false);
                                Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("" + client.Player.Name + " , GuildLeader from " + client.Player.MyGuild.GuildName + " was rewarded with " + MsgTournaments.MsgGuildWar.GuildWarScrore.ConquerPointsReward.ToString() + " ConquerPoints and 1 LordToken for the domination the GuildWar.", MsgServer.MsgMessage.MsgColor.red, MsgServer.MsgMessage.ChatMode.TopLeft).GetArray(stream));
                            }
                            else if (client.Player.GuildRank == Role.Flags.GuildMemberRank.DeputyLeader && MsgTournaments.MsgSchedules.GuildWar.Winner.DeputiLeaderReward > 0
                                && !MsgTournaments.MsgSchedules.GuildWar.RewardDeputiLeader.Contains(client.Player.UID))
                            {
                                if (!client.Inventory.HaveSpace(4))
                                {
                                    data.AddText("Please make 4 more spaces in your inventory.")
               .AddOption("Let me check.", 255).AddAvatar(110).FinalizeDialog();
                                    break;
                                }
                                client.Inventory.Add(stream, Database.ItemType.PowerExpBall, 4);

                                MsgTournaments.MsgSchedules.GuildWar.Winner.DeputiLeaderReward -= 1;
                                MsgTournaments.MsgSchedules.GuildWar.RewardDeputiLeader.Add(client.Player.UID);
                                client.Player.AddFlag(MsgServer.MsgUpdate.Flags.TopDeputyLeader, Role.StatusFlagsBigVector32.PermanentFlag, false);
                            }
                            else
                            {
                                data.AddText("Just the GuildLeader or DeputiLeader can claim the reward!")
                        .AddOption("Ok~thank~you.", 255).AddAvatar(110).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Your~guild~has~not~dominated~guild~area.~Guild~war~will~be~held~on~every~Saturday,~lasting~2~days.")
                        .AddOption("Ok~thank~you.", 255).AddAvatar(110).FinalizeDialog();
                        }


                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.EliteGuildOfficer)]
        public static void EliteGuildOfficer(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (MsgTournaments.MsgSchedules.EliteGuildWar.Proces == MsgTournaments.ProcesType.Dead)
                        {
                            data.AddText("This~is~the~elite~guild~war~envoy.This~event~is~held~twice~a day~and you can gain a good amount of~CPs~income~every~day.~Only~GL~can~claim~this~prize.")
                                .AddText(" The event is held from 15:00 to 16:00.")
                                .AddOption("I~would~like~to~claim~it", 1)
                           .AddOption("Just~passing~by.", 255).AddAvatar(110).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("EliteGW is being held now. Afterwards the leader of winning guild can gain the prize.")
                                .AddOption("Let me in.", 2).AddOption("Ok,~I~see.", 255).AddAvatar(110).FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        client.Teleport(47, 131, 2071);
                        break;
                    }
                case 1:
                    {
                        if (client.Player.GuildID == MsgTournaments.MsgSchedules.EliteGuildWar.Winner.GuildID && client.Player.MyGuild != null && MsgTournaments.MsgSchedules.EliteGuildWar.Proces == MsgTournaments.ProcesType.Dead)
                        {

                            if ((client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader || client.Player.GuildRank == Role.Flags.GuildMemberRank.LeaderSpouse) && MsgTournaments.MsgSchedules.EliteGuildWar.Winner.LeaderReward > 0
                                 && !MsgTournaments.MsgSchedules.EliteGuildWar.RewardLeader.Contains(client.Player.UID))
                            {

                                MsgTournaments.MsgSchedules.EliteGuildWar.RewardLeader.Add(client.Player.UID);
                                MsgTournaments.MsgSchedules.EliteGuildWar.Winner.LeaderReward -= 1;
                                client.Player.ConquerPoints += MsgTournaments.MsgEliteGuildWar.GuildWarScrore.ConquerPointsReward;
                                Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("" + client.Player.Name + " , GuildLeader from " + client.Player.MyGuild.GuildName + " was rewarded with " + MsgTournaments.MsgEliteGuildWar.GuildWarScrore.ConquerPointsReward.ToString() + " ConquerPoints for the domination the MsgEliteGuildWar.", MsgServer.MsgMessage.MsgColor.red, MsgServer.MsgMessage.ChatMode.TopLeft).GetArray(stream));
                            }

                            else
                            {
                                data.AddText("Just the GuildLeader/LeaderSpouse can claim the reward!")
                        .AddOption("Ok~thank~you.", 255).AddAvatar(110).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Your~guild~has~not~dominated~guild~area..")
                        .AddOption("Ok~thank~you.", 255).AddAvatar(110).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.PoleDomination)]
        public static void PoleDomination(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (MsgTournaments.MsgSchedules.PoleDomination.Proces == MsgTournaments.ProcesType.Dead)
                        {
                            data.AddText("This is the pole domination prize center npc. I can only award the prize to the winner guild leader")
                                .AddOption("I~would~like~to~claim~it", 1)
                           .AddOption("Just~passing~by.", 255).AddAvatar(110).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("PoleDomination is being held now. Afterwards the leader of winning guild can gain the prize.")
                                .AddOption("Let me in.", 2).AddOption("Ok,~I~see.", 255).AddAvatar(110).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Player.GuildID == MsgTournaments.MsgSchedules.PoleDomination.Winner.GuildID && client.Player.MyGuild != null && MsgTournaments.MsgSchedules.PoleDomination.Proces == MsgTournaments.ProcesType.Dead)
                        {

                            if ((client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader || client.Player.GuildRank == Role.Flags.GuildMemberRank.LeaderSpouse) && MsgTournaments.MsgSchedules.PoleDomination.Winner.LeaderReward > 0
                                 && !MsgTournaments.MsgSchedules.PoleDomination.RewardLeader.Contains(client.Player.UID))
                            {

                                MsgTournaments.MsgSchedules.PoleDomination.RewardLeader.Add(client.Player.UID);
                                MsgTournaments.MsgSchedules.PoleDomination.Winner.LeaderReward -= 1;
                                client.Player.ConquerPoints += MsgTournaments.MsgPoleDomination.GuildWarScrore.ConquerPointsReward;
                                string Rank = "";
                                if (client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader) Rank = "GuildLeader";
                                else Rank = "LeaderSpouse";
                                Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("" + client.Player.Name + " , " + Rank + " from " + client.Player.MyGuild.GuildName + " was rewarded with " + MsgTournaments.MsgPoleDomination.GuildWarScrore.ConquerPointsReward.ToString() + " ConquerPoints for the domination the PoleDomination.", MsgServer.MsgMessage.MsgColor.red, MsgServer.MsgMessage.ChatMode.TopLeft).GetArray(stream));
                            }

                            else
                            {
                                data.AddText("Just the GuildLeader can claim the reward!")
                        .AddOption("Ok~thank~you.", 255).AddAvatar(110).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Your~guild~has~not~dominated~guild~area..")
                        .AddOption("Ok~thank~you.", 255).AddAvatar(110).FinalizeDialog();
                        }
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.ClassicClanWar)]
        public static void ClassicClanWar(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (MsgTournaments.MsgSchedules.ClassicClanWar.Proces == MsgTournaments.ProcesType.Dead)
                        {
                            data.AddText("This is the daily clan war. It is held everyday at 21:00 to 21:30 and after the war ends you can come and claim the prize from here.")
                                .AddOption("I~would~like~to~claim~it.", 1)
                                .AddOption("Sign~up (Closed now)", 255)
                           .AddOption("Just~passing~by.", 255).AddAvatar(110).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("ClanWar is being held now. Afterwards the leader of winning clan can gain the prize.")
                                .AddOption("Let me in.", 2)
                                .AddOption("Ok,~I~see.", 255).AddAvatar(110).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Player.ClanUID == MsgTournaments.MsgSchedules.ClassicClanWar.Winner.GuildID && client.Player.MyClan != null
                            && MsgTournaments.MsgSchedules.ClassicClanWar.Proces == MsgTournaments.ProcesType.Dead)
                        {

                            if (client.Player.ClanRank == 100 && MsgTournaments.MsgSchedules.ClassicClanWar.Winner.LeaderReward > 0
                                 && !MsgTournaments.MsgSchedules.ClassicClanWar.RewardLeader.Contains(client.Player.UID))
                            {

                                MsgTournaments.MsgSchedules.ClassicClanWar.RewardLeader.Add(client.Player.UID);
                                MsgTournaments.MsgSchedules.ClassicClanWar.Winner.LeaderReward -= 1;
                                client.Player.ConquerPoints += MsgTournaments.MsgClassicClanWar.GuildWarScrore.ConquerPointsReward;
                                Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("" + client.Player.Name + " leader of winner clan (" + client.Player.MyClan.Name + ") was rewarded with " + MsgTournaments.MsgClassicClanWar.GuildWarScrore.ConquerPointsReward.ToString() + " ConquerPoints for the domination the ClanWar.", MsgServer.MsgMessage.MsgColor.red, MsgServer.MsgMessage.ChatMode.TopLeft).GetArray(stream));
                            }

                            else
                            {
                                data.AddText("Just the leader can claim the reward!")
                        .AddOption("Ok~thank~you.", 255).AddAvatar(110).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Your~clan~has~not~won~the~clan~war.")
                        .AddOption("Ok~thank~you.", 255).AddAvatar(110).FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        if (MsgTournaments.MsgSchedules.ClassicClanWar.Proces != MsgTournaments.ProcesType.Dead)
                            client.Teleport(210, 265, 1011, MsgSchedules.ClassicClanWar.DynamicId);
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.LeftGate)]
        public static void LeftGate(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Select the option you want to pursue.")
                        .AddOption("Open~the~gate", 1)
                        .AddOption("Close gate.", 2)
                        .AddOption("Get inside.", 3)
                        .AddOption("Not~interested.", 255).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        if (client.Player.GuildID == MsgTournaments.MsgSchedules.GuildWar.Winner.GuildID)
                        {
                            client.TerainMask = 0;
                            client.Teleport(162, 192, 1038);
                        }
                        else
                        {
                            data.AddText("Sorry,~you~cannot~open~it.Only DSl or GLs can, from guild who dominated the pole.")
                              .AddOption("Okay.", 255).FinalizeDialog();

                        }


                        break;
                    }
                case 2:
                    {
                        if ((client.Player.GuildRank == Role.Flags.GuildMemberRank.DeputyLeader || client.Player.GuildRank == Role.Flags.GuildMemberRank.LeaderSpouse
                                                   || client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader || client.Player.GuildRank == Role.Flags.GuildMemberRank.HDeputyLeader) && MsgTournaments.MsgSchedules.GuildWar.Winner.GuildID == client.Player.GuildID)
                        {
                            if (MsgTournaments.MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.LeftGate].Mesh == Role.SobNpc.StaticMesh.LeftGate)
                            {
                                data.AddText("Gate~is~already~closed.")
                            .AddOption("Okay.", 255).FinalizeDialog();
                                break;
                            }
                            if (MsgTournaments.MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.LeftGate].HitPoints == 0)
                                MsgTournaments.MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.LeftGate].HitPoints = MsgTournaments.MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.LeftGate].MaxHitPoints;

                            MsgTournaments.MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.LeftGate].Mesh = Role.SobNpc.StaticMesh.LeftGate;

                            MsgServer.MsgUpdate upd = new MsgServer.MsgUpdate(stream, MsgTournaments.MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.LeftGate].UID, 2);

                            stream = upd.Append(stream, MsgServer.MsgUpdate.DataType.Mesh, (long)MsgTournaments.MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.LeftGate].Mesh);
                            stream = upd.Append(stream, MsgServer.MsgUpdate.DataType.Hitpoints, (long)MsgTournaments.MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.LeftGate].HitPoints);
                            stream = upd.GetArray(stream);
                            foreach (var pclient in Database.Server.GamePoll.Values)
                            {
                                if (pclient.Player.Map == 1038)
                                {
                                    if (Role.Core.GetDistance(pclient.Player.X, pclient.Player.Y, MsgTournaments.MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.LeftGate].X
                                        , MsgTournaments.MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.LeftGate].Y) <= Role.SobNpc.SeedDistrance)
                                    {
                                        pclient.Send(stream);
                                    }
                                }
                            }
                        }
                        else
                        {

                            data.AddText("Sorry,~you~cannot~open~it.Only DSl or GLs can, from guild who dominated the pole.")
                            .AddOption("Okay.", 255).FinalizeDialog();
                        }


                        break;
                    }
                case 1:
                    {
                        if ((client.Player.GuildRank == Role.Flags.GuildMemberRank.DeputyLeader || client.Player.GuildRank == Role.Flags.GuildMemberRank.LeaderSpouse
                            || client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader || client.Player.GuildRank == Role.Flags.GuildMemberRank.HDeputyLeader) && MsgTournaments.MsgSchedules.GuildWar.Winner.GuildID == client.Player.GuildID)
                        {
                            if (MsgTournaments.MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.LeftGate].Mesh == Role.SobNpc.StaticMesh.OpenLeftGate)
                            {
                                data.AddText("Gate~is~already~opened.")
                            .AddOption("Okay.", 255).FinalizeDialog();
                                break;
                            }
                            MsgTournaments.MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.LeftGate].Mesh = Role.SobNpc.StaticMesh.OpenLeftGate;
                            MsgServer.MsgUpdate upd = new MsgServer.MsgUpdate(stream, MsgTournaments.MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.LeftGate].UID, 1);

                            stream = upd.Append(stream, MsgServer.MsgUpdate.DataType.Mesh, (long)MsgTournaments.MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.LeftGate].Mesh);
                            stream = upd.GetArray(stream);
                            foreach (var pclient in Database.Server.GamePoll.Values)
                            {
                                if (pclient.Player.Map == 1038)
                                {
                                    if (Role.Core.GetDistance(pclient.Player.X, pclient.Player.Y, MsgTournaments.MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.LeftGate].X
                                        , MsgTournaments.MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.LeftGate].Y) <= Role.SobNpc.SeedDistrance)
                                    {
                                        pclient.Send(stream);
                                    }
                                }
                            }
                        }
                        else
                        {

                            data.AddText("Sorry,~you~cannot~open~it.Only DSl or GLs can, from guild who dominated the pole.")
                            .AddOption("Okay.", 255).FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.RightGate)]
        public static void RightGate(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Select the option you want to pursue.")
                        .AddOption("Open~the~gate", 1)
                        .AddOption("Close gate.", 2)
                        .AddOption("Get inside.", 3)
                        .AddOption("Not~interested.", 255).FinalizeDialog();


                        break;
                    }
                case 3:
                    {
                        if (client.Player.GuildID == MsgTournaments.MsgSchedules.GuildWar.Winner.GuildID)
                        {
                            client.TerainMask = 0;
                            client.Teleport(203, 176, 1038);
                        }
                        else
                        {
                            data.AddText("Sorry,~you~cannot~open~it.Only DSl or GLs can, from guild who dominated the pole.")
                              .AddOption("Okay.", 255).FinalizeDialog();

                        }


                        break;
                    }
                case 2:
                    {
                        if ((client.Player.GuildRank == Role.Flags.GuildMemberRank.DeputyLeader || client.Player.GuildRank == Role.Flags.GuildMemberRank.LeaderSpouse
                           || client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader || client.Player.GuildRank == Role.Flags.GuildMemberRank.HDeputyLeader) && MsgTournaments.MsgSchedules.GuildWar.Winner.GuildID == client.Player.GuildID)
                        {
                            if (MsgTournaments.MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.RightGate].Mesh == Role.SobNpc.StaticMesh.RightGate)
                            {
                                data.AddText("Gate~is~already~closed.")
                            .AddOption("Okay.", 255).FinalizeDialog();
                                break;
                            }
                            if (MsgTournaments.MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.RightGate].HitPoints == 0)
                                MsgTournaments.MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.RightGate].HitPoints = MsgTournaments.MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.RightGate].MaxHitPoints;

                            MsgTournaments.MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.RightGate].Mesh = Role.SobNpc.StaticMesh.RightGate;

                            MsgServer.MsgUpdate upd = new MsgServer.MsgUpdate(stream, MsgTournaments.MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.RightGate].UID, 2);

                            stream = upd.Append(stream, MsgServer.MsgUpdate.DataType.Mesh, (long)MsgTournaments.MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.RightGate].Mesh);
                            stream = upd.Append(stream, MsgServer.MsgUpdate.DataType.Hitpoints, (long)MsgTournaments.MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.RightGate].HitPoints);
                            stream = upd.GetArray(stream);
                            foreach (var pclient in Database.Server.GamePoll.Values)
                            {
                                if (pclient.Player.Map == 1038)
                                {
                                    if (Role.Core.GetDistance(pclient.Player.X, pclient.Player.Y, MsgTournaments.MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.RightGate].X
                                        , MsgTournaments.MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.RightGate].Y) <= Role.SobNpc.SeedDistrance)
                                    {
                                        pclient.Send(stream);
                                    }
                                }
                            }
                        }
                        else
                        {

                            data.AddText("Sorry,~you~cannot~open~it.Only DSl or GLs can, from guild who dominated the pole.")
                            .AddOption("Okay.", 255).FinalizeDialog();
                        }


                        break;
                    }
                case 1:
                    {
                        if ((client.Player.GuildRank == Role.Flags.GuildMemberRank.DeputyLeader || client.Player.GuildRank == Role.Flags.GuildMemberRank.LeaderSpouse
                            || client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader || client.Player.GuildRank == Role.Flags.GuildMemberRank.HDeputyLeader) && MsgTournaments.MsgSchedules.GuildWar.Winner.GuildID == client.Player.GuildID)
                        {
                            if (MsgTournaments.MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.RightGate].Mesh == Role.SobNpc.StaticMesh.OpenRightGate)
                            {
                                data.AddText("Gate~is~already~opened.")
                            .AddOption("Okay.", 255).FinalizeDialog();
                                break;
                            }
                            MsgTournaments.MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.RightGate].Mesh = Role.SobNpc.StaticMesh.OpenRightGate;
                            MsgServer.MsgUpdate upd = new MsgServer.MsgUpdate(stream, MsgTournaments.MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.RightGate].UID, 1);

                            stream = upd.Append(stream, MsgServer.MsgUpdate.DataType.Mesh, (long)MsgTournaments.MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.RightGate].Mesh);
                            stream = upd.GetArray(stream);
                            foreach (var pclient in Database.Server.GamePoll.Values)
                            {
                                if (pclient.Player.Map == 1038)
                                {
                                    if (Role.Core.GetDistance(pclient.Player.X, pclient.Player.Y, MsgTournaments.MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.RightGate].X
                                        , MsgTournaments.MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.RightGate].Y) <= Role.SobNpc.SeedDistrance)
                                    {
                                        pclient.Send(stream);
                                    }
                                }
                            }
                        }
                        else
                        {

                            data.AddText("Sorry,~you~cannot~open~it.Only DSl or GLs can, from guild who dominated the pole.")
                            .AddOption("Okay.", 255).FinalizeDialog();
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Flame1)]
        public static void Flame1(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (MsgTournaments.MsgSchedules.GuildWar.Proces == MsgTournaments.ProcesType.Dead)
                        {
                            client.SendSysMesage("It`s not the right time. You can`t light up the Flame Stone.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                            break;
                        }
                        if (client.Inventory.Contain(729960, 1))
                        {
                            client.Inventory.Remove(729960, 1, stream);
                            client.Inventory.Add(stream, 729961);
                            data.AddText("Congratulation! light~up~the~Flame~Stone~(317,270)~on~the~right~of~the~Guild~Arena.").FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You cannot flame up this stone without the proper rune. Light~up~the~Flame~Stone~(317,270)~on~the~right~of~the~Guild~Arena.").FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Flame2)]
        public static void Flame2(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (MsgTournaments.MsgSchedules.GuildWar.Proces == MsgTournaments.ProcesType.Dead)
                        {
                            client.SendSysMesage("It`s not the right time. You can`t light up the Flame Stone.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                            break;
                        }
                        if (client.Inventory.Contain(729961, 1))
                        {
                            client.Inventory.Remove(729961, 1, stream);
                            client.Inventory.Add(stream, 729962);
                            data.AddText("Congratulation! light~up~the~Flame~Stone~(236,291)~near~the~bridge~in~the~Guild~Arena.").FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You cannot flame up this stone without the proper rune. Light~up~the~Flame~Stone~(236,291)~near~the~bridge~in~the~Guild~Arena.").FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Flame3)]
        public static void Flame3(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (MsgTournaments.MsgSchedules.GuildWar.Proces == MsgTournaments.ProcesType.Dead)
                        {
                            client.SendSysMesage("It`s not the right time. You can`t light up the Flame Stone.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                            break;
                        }
                        if (client.Inventory.Contain(729962, 1))
                        {
                            client.Inventory.Remove(729962, 1, stream);
                            client.Inventory.Add(stream, 729963);
                            data.AddText("Congratulation! light~up~the~Flame~Stone~(194,168)~near~the~right~gate~of~the~Guild~City.").FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You cannot flame up this stone without the proper rune. Light~up~the~Flame~Stone~(194,168)~near~the~right~gate~of~the~Guild~City.").FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Flame4)]
        public static void Flame4(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (MsgTournaments.MsgSchedules.GuildWar.Proces == MsgTournaments.ProcesType.Dead)
                        {
                            client.SendSysMesage("It`s not the right time. You can`t light up the Flame Stone.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                            break;
                        }
                        if (client.Inventory.Contain(729963, 1))
                        {
                            client.Inventory.Remove(729963, 1, stream);
                            client.Inventory.Add(stream, 729964);
                            data.AddText("Congratulation! light~up~the~Flame~Stone~(115,53)~on~the~right~of~the~Guild~City.").FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You cannot flame up this stone without the proper rune. Light~up~the~Flame~Stone~(115,53)~on~the~right~of~the~Guild~City.").FinalizeDialog();
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Flame5)]
        public static void Flame5(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (MsgTournaments.MsgSchedules.GuildWar.Proces == MsgTournaments.ProcesType.Dead)
                        {
                            client.SendSysMesage("It`s not the right time. You can`t light up the Flame Stone.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                            break;
                        }
                        if (client.Inventory.Contain(729964, 1))
                        {
                            client.Inventory.Remove(729964, 1, stream);
                            client.Inventory.Add(stream, 729965);
                            data.AddText("Congratulation! light~up~the~Flame~Stone~(316,378)~on~the~left~of~the~Guild~Arena.").FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You cannot flame up this stone without the proper rune. Light~up~the~Flame~Stone~(316,378)~on~the~left~of~the~Guild~Arena.").FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Flame6)]
        public static void Flame6(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (MsgTournaments.MsgSchedules.GuildWar.Proces == MsgTournaments.ProcesType.Dead)
                        {
                            client.SendSysMesage("It`s not the right time. You can`t light up the Flame Stone.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                            break;
                        }
                        if (client.Inventory.Contain(729965, 1))
                        {
                            client.Inventory.Remove(729965, 1, stream);
                            client.Inventory.Add(stream, 729966);
                            data.AddText("Congratulation! light~up~the~Flame~Stone~(136,182)~near~the~left~gate~of~the~Guild~City.").FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You cannot flame up this stone without the proper rune. Light~up~the~Flame~Stone~(136,182)~near~the~left~gate~of~the~Guild~City.").FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Flame7)]
        public static void Flame7(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (MsgTournaments.MsgSchedules.GuildWar.Proces == MsgTournaments.ProcesType.Dead)
                        {
                            client.SendSysMesage("It`s not the right time. You can`t light up the Flame Stone.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                            break;
                        }
                        if (client.Inventory.Contain(729966, 1))
                        {
                            client.Inventory.Remove(729966, 1, stream);
                            client.Inventory.Add(stream, 729967);
                            data.AddText("Congratulation! light~up~the~Flame~Stone~(38,94)~on~the~left~of~the~Guild~City.").FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You cannot flame up this stone without the proper rune. Light~up~the~Flame~Stone~(38,94)~on~the~left~of~the~Guild~City.").FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Flame8)]
        public static void Flame8(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (MsgTournaments.MsgSchedules.GuildWar.Proces == MsgTournaments.ProcesType.Dead)
                        {
                            client.SendSysMesage("It`s not the right time. You can`t light up the Flame Stone.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                            break;
                        }
                        if (client.Inventory.Contain(729967, 1))
                        {
                            client.Inventory.Remove(729967, 1, stream);
                            client.Inventory.Add(stream, 729968);
                            data.AddText("Congratulation! light~up~the~Flame~Stone~(350,321)~near~the~Flame~Taoist.").FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You cannot flame up this stone without the proper rune. Light~up~the~Flame~Stone~(350,321)~near~the~Flame~Taoist.").FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Flame9)]
        public static void Flame9(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (MsgTournaments.MsgSchedules.GuildWar.Proces == MsgTournaments.ProcesType.Dead)
                        {
                            client.SendSysMesage("It`s not the right time. You can`t light up the Flame Stone.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                            break;
                        }
                        if (client.Inventory.Contain(729968, 1))
                        {
                            client.Inventory.Remove(729968, 1, stream);
                            client.Inventory.Add(stream, 729969);
                            data.AddText("Congratulation! light~up~the~Flame~Stone~(350,321)~near~the~Flame~Taoist.").FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You cannot flame up this stone without the proper rune. Light~up~the~Flame~Stone~(350,321)~near~the~Flame~Taoist.").FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Flame10)]
        public static void Flame10(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (MsgTournaments.MsgSchedules.GuildWar.Proces == MsgTournaments.ProcesType.Dead)
                        {
                            client.SendSysMesage("You totally missed the right time.the 10th Flame Stone can`t be lit up now.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                            break;
                        }
                        if (MsgTournaments.MsgSchedules.GuildWar.FlamesQuest.ActiveFlame10)
                        {
                            if (client.Inventory.Contain(729969, 1))
                            {
                                client.Inventory.Remove(729969, 1, stream);
                                client.Inventory.Add(stream, 729970);
                                data.AddText("Congratulation! light~up~the~Flame~Stone~(62,59)~near~the~Stone~Pole~in~the~Guild~City.").FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You cannot flame up this stone without the proper rune. light~up~the~Flame~Stone~(62,59)~near~the~Stone~Pole~in~the~Guild~City.").FinalizeDialog();
                            }
                        }
                        else
                        {
                            client.SendSysMesage("You totally missed the right time.the 10th Flame Stone can`t be lit up now.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.FlameTaoist)]
        public static void FlameTaoist(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("You must have heard that the Olympic Games. I`ve been waiting for it for my entire life. There are 10 Flame Stones")
                                                      .AddText("~that I would like you to light up...You will get some rewards, of course. It really makes sense to us, ah, at least to me.")
                                                  .AddOption("Rewards?~Tell~me~more!~Come~on!", 1)
                                                  .AddOption("Can you give me a rune?", 4)
                                                  .AddOption("I~have~a~rune.~Gimme~the~reward!", 5)
                                                  .AddOption("Not~interested.", 255)
                                                  .AddAvatar(67).FinalizeDialog();


                        break;
                    }
                case 5:
                    {
                        if (client.Inventory.Contain(729970, 1))
                        {
                            if (MsgTournaments.MsgSchedules.GuildWar.Proces == MsgTournaments.ProcesType.Dead)
                            {
                                client.Inventory.Remove(729970, 1, stream);
                                client.GainExpBall(600 * 12, true, Role.Flags.ExperienceEffect.angelwing);
                            }
                            else
                            {
                                data.AddText("You cannot claim experience while guild war.")
                   .AddOption("Ahh", 255)
                   .AddAvatar(67).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You cannot claim experience if you don't have a rune.")
                   .AddOption("Ahh", 255)
                   .AddAvatar(67).FinalizeDialog();
                        }

                        break;
                    }
                case 4:
                    {
                        if (MsgTournaments.MsgSchedules.GuildWar.Proces != MsgTournaments.ProcesType.Dead)
                        {
                            if (!MsgTournaments.MsgSchedules.GuildWar.FlamesQuest.Registred.Contains(client.Player.UID))
                            {
                                if (client.Inventory.HaveSpace(1))
                                {
                                    client.Inventory.Add(stream, 729960);
                                }
                                else
                                {
                                    data.AddText("There is not enough room in your inventory.")
                    .AddOption("Ah, hold on.", 255)
                    .AddAvatar(67).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("You already have a rune.")
                .AddOption("Thank you.", 255)
                .AddAvatar(67).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You? Wait a sec... Oh, yeah, no wonder you looked familir. Each player can carry this quest ONCE a week")
                                .AddText("only, and if you have more runes, you may as well accept the quest with Flame Taoist next week and claim your reward directly when the quest ends.")
               .AddOption("Once~a~week?!", 255)
               .AddAvatar(67).FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        data.AddText("Ah, you seem very interested! Good. You are eligible to light up the flame! But, it`s not the right time. You see, the")
                                                     .AddText("~ceremony will be held till the last two hours of the Guild War. Come and sign up then.")
                                                 .AddOption("Would~you~please~give~me~more~information?", 2)
                                                 .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        data.AddText("Yeah. I`ve prepare 10 Flame Stones in the Wind Plain and Guild Arena. When the time comes, I will give you a Jade Rune. You")
                                                      .AddText("~just take it to light up all the Flame Stones in sequence.")
                                                  .AddOption("Sure.", 255)
                                                  .AddAvatar(67).FinalizeDialog();

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Class6House)]
        public static void Class6House(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Welcome, this is the Class 6 model house with many new features. When you`re walking around the house,")
                            .AddText("~you can talk to our guide in each area to learn more. If you want to upgrade your house to Class 6,")
                            .AddText("~I`m the right person to serve you./n")
                            .AddText("You will need 99,000 Conquer Points in order to update your House to the next level.");
                        data.AddOption("Upgrade~my~house~with~CPs.", 1);
                        data.AddOption("Use~materials~to~upgrade.", 3);
                        data.AddOption("How~to~upgrade~my~house?", 6);
                        data.AddOption("Where~is~the~exit?", 2);
                        data.AddOption("Just passing by.", 255).AddAvatar(111).FinalizeDialog();


                        break;
                    }
                case 6:
                    {
                        data.AddText("There are two ways to upgrade to Class 6: pay 8,999 CPs or submit 500 Class 6 House Packs. You can collect the Class 6 House Packs")
                            .AddText("~by participating in Dis City, Evil Labyrinth, cross-server competitions and other quests, or buy them with Honor Points,")
                            .AddText("~Horse Racing Points, or Champion Points.")
                              .AddOption("I~see", 255).AddAvatar(111).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        data.AddText("We need totally 500 Class 6 House Packs to upgrade your house to Class 6. So, how many packs would you like to submit this time?")//asta?
                                .AddOption("100.", 4)
                                .AddOption("500.", 5)
                                .AddOption("Let~me~see.", 255).AddAvatar(111).FinalizeDialog();
                        break;
                    }
                case 4:
                    {
                        if (client.Inventory.Contain(3008100, 100))
                        {
                            client.Inventory.RemoveStackItem(3008100, 100, stream);
                            if (Role.Core.Rate(30))
                            {
                                if (client.MyHouse == null)
                                    break;

                                ushort House_ID = Database.HouseTable.GetHouseId(client.MyHouse.Level);
                                if (House_ID != 0)
                                {
                                    //remove players house
                                    foreach (var pClient in Database.Server.GamePoll.Values)
                                        if (pClient.Player.Map == House_ID && pClient.Player.DynamicID == client.Player.UID)
                                            pClient.Teleport(1036, 200, 200);
                                }
                                if (client.MyHouse.Furnitures.Count != 0)
                                {
                                    data.AddText("Please remove all your furnitures from your house.")//asta?
                                       .AddOption("I~see.", 255).AddAvatar(111).FinalizeDialog();
                                    break;
                                }
                                if (client.MyHouse.Level == 5)
                                {

                                    client.MyHouse.Level++;
                                    data.AddText("You have successfully updated your House.")
                                 .AddOption("Thank you.", 255).AddAvatar(111).FinalizeDialog();
                                    Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("Hurray ! " + client.Player.Name + " has successfully updated his house to the level 6.", MsgServer.MsgMessage.MsgColor.red, MsgServer.MsgMessage.ChatMode.System).GetArray(stream));

                                    client.Teleport(200, 95, 1036);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "movego");
                                }
                            }
                            else
                            {
                                data.AddText("You have failed to upgrade the house to level 6 , give a try again later maybe you will have more luck .")
                              .AddOption("I~see.", 255).AddAvatar(111).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("I`m afraid I can`t help you if you don`t have enough materials. Please go collect more.")
                               .AddOption("Okay.", 255).AddAvatar(111).FinalizeDialog();
                        }
                        break;
                    }
                case 5:
                    {
                        if (client.Inventory.Contain(3008100, 500))
                        {

                            if (client.MyHouse == null)
                                break;

                            ushort House_ID = Database.HouseTable.GetHouseId(client.MyHouse.Level);
                            if (House_ID != 0)
                            {
                                //remove players house
                                foreach (var pClient in Database.Server.GamePoll.Values)
                                    if (pClient.Player.Map == House_ID && pClient.Player.DynamicID == client.Player.UID)
                                        pClient.Teleport(1036, 200, 200);
                            }
                            if (client.MyHouse.Furnitures.Count != 0)
                            {
                                data.AddText("Please remove all your furnitures from your house.")//asta?
                                   .AddOption("I~see.", 255).AddAvatar(111).FinalizeDialog();
                                break;
                            }
                            if (client.MyHouse.Level == 5)
                            {
                                client.Inventory.RemoveStackItem(3008100, 500, stream);
                                client.MyHouse.Level++;
                                data.AddText("You have successfully updated your House.")
                             .AddOption("Thank you.", 255).AddAvatar(111).FinalizeDialog();
                                Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("Hurray ! " + client.Player.Name + " has successfully updated his house to the level 6.", MsgServer.MsgMessage.MsgColor.red, MsgServer.MsgMessage.ChatMode.System).GetArray(stream));

                                client.Teleport(200, 95, 1036);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "movego");
                            }
                        }
                        else
                        {
                            data.AddText("I`m afraid I can`t help you if you don`t have enough materials. Please go collect more.")
                               .AddOption("Okay.", 255).AddAvatar(111).FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        client.Teleport(200, 95, 1036);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "movego");
                        break;
                    }
                case 1:
                    {
                        if (client.Player.ConquerPoints >= 99000)
                        {
                            if (client.MyHouse == null)
                                break;

                            ushort House_ID = Database.HouseTable.GetHouseId(client.MyHouse.Level);
                            if (House_ID != 0)
                            {
                                //remove players house
                                foreach (var pClient in Database.Server.GamePoll.Values)
                                    if (pClient.Player.Map == House_ID && pClient.Player.DynamicID == client.Player.UID)
                                        pClient.Teleport(1036, 200, 200);
                            }
                            if (client.MyHouse.Furnitures.Count != 0)
                            {
                                data.AddText("Please remove all your furnitures from your house.")//asta?
                                   .AddOption("I~see.", 255).AddAvatar(111).FinalizeDialog();
                                break;
                            }
                            if (client.MyHouse.Level == 5)
                            {
                                client.Player.ConquerPoints -= 99000;
                                client.MyHouse.Level++;
                                data.AddText("You have successfully updated your House.")
                             .AddOption("Thank you.", 255).AddAvatar(111).FinalizeDialog();
                                Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("Hurray ! " + client.Player.Name + " has successfully updated his house to the level 6.", MsgServer.MsgMessage.MsgColor.red, MsgServer.MsgMessage.ChatMode.System).GetArray(stream));

                                client.Teleport(200, 95, 1036);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "movego");
                            }


                        }
                        else
                        {
                            data.AddText("Sorry, I can`t help you in this matter since you don`t have enough CPs. Please bring the money, next time.")
                            .AddOption("Okay.", 255).AddAvatar(111).FinalizeDialog();
                        }
                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.HouseAdmin)]
        public static void HouseAdmin(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.MyHouse == null)
                        {
                            data.AddText("What can i do for you?");
                            data.AddOption("buy a house.", 1);
                            data.AddOption("buy house certificate.", 2);
                            data.AddOption("Visit my wife`s House.", 3);
                            data.AddOption("Just passing by.", 255).AddAvatar(7).FinalizeDialog();

                        }
                        else if (client.MyHouse.Level == 0)
                        {
                            data.AddText("What can i do for you?");
                            data.AddOption("buy a house.", 1);
                            data.AddOption("buy house certificate.", 2);
                            data.AddOption("Visit my wife`s House.", 3);
                            data.AddOption("Just passing by.", 255).AddAvatar(7).FinalizeDialog();
                        }
                        else if (client.MyHouse.Level == 1)
                        {
                            data.AddText("What can i do for you?");
                            data.AddOption("Visit house.", 4);
                            data.AddOption("Upgrade house.", 5);
                            data.AddOption("buy house certificate.", 2);
                            data.AddOption("Visit my wife`s House.", 3);
                            data.AddOption("Just passing by.", 255).AddAvatar(7).FinalizeDialog();

                        }
                        else if (client.MyHouse.Level == 5)
                        {
                            data.AddText("As the owner of a Class 5 house, you`ll be able to hold a Grand Wedding. Additionally, you can upgrade it to Class 6")
                                .AddText("~to get a more luxurious living space and more services.");
                            data.AddOption("I~wanna~go~home.", 4);
                            if (client.MyHouse.Level < 6)
                            {
                                data.AddOption("Upgrade~to~Class~6.", 20);
                                data.AddOption("Remove All furnitures.", 6);
                            }
                            data.AddOption("Visit my wife`s House.", 3);
                            data.AddOption("Just passing by.", 255).AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("What can i do for you?");
                            data.AddOption("Visit house.", 4);
                            data.AddOption("Upgrade house.", 5);
                            data.AddOption("Remove All furnitures.", 6);
                            if (client.MyHouse.Level < 5)
                                data.AddOption("buy house certificate.", 2);
                            data.AddOption("Visit my wife`s House.", 3);
                            data.AddOption("Just passing by.", 255).AddAvatar(7).FinalizeDialog();

                        }

                        break;
                    }
                case 20:
                    {
                        data.AddText("To upgrade your house to Class 6, you need to talk to the Class 6 House Admin in the Class 6 model house. I cannot help you in this matter.");
                        data.AddOption("Okay,~send~me~there.", 21);
                        data.AddOption("Just~passing~by.", 255).AddAvatar(7).FinalizeDialog();
                        break;
                    }
                case 21:
                    {

                        client.Teleport(127, 138, 3995, 0);
                        break;
                    }
                case 6:
                    {
                        if (client.MyHouse != null)
                        {
                            client.MyHouse.Furnitures.Clear();

                            data.AddText("You furnitures remove Successful")
                                .AddOption("Thank~you", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }
                case 1:
                    {
                        if (client.MyHouse == null)
                        {
                            if (client.Inventory.Remove(721170, 1, stream))
                            {
                                client.MyHouse = new Role.Instance.House(client.Player.UID);
                                data.AddText("You're create a house Successful. ")
                               .AddOption("Thank~you", 255).AddAvatar(7).FinalizeDialog();

                            }
                            else
                            {
                                data.AddText("Sorry you not have house Permit")
                                .AddOption("Ok", 255).AddAvatar(7).FinalizeDialog();

                            }

                        }


                        break;
                    }
                case 5:
                    {
                        if (client.MyHouse == null) break;

                        if (client.MyHouse.Level == 0)
                        {
                            data.AddText("You don`t have house.")
                              .AddOption("Ok", 255).AddAvatar(7).FinalizeDialog();
                            break;
                        }
                        ushort House_ID = Database.HouseTable.GetHouseId(client.MyHouse.Level);
                        if (House_ID != 0)
                        {
                            //remove players house
                            foreach (var pClient in Database.Server.GamePoll.Values)
                                if (pClient.Player.Map == House_ID && pClient.Player.DynamicID == client.Player.UID)
                                    pClient.Teleport(1036, 200, 200);
                        }
                        if (client.MyHouse.Furnitures.Count != 0)
                        {
                            data.AddText("Please remove all your furnitures from your house.")
                               .AddOption("Ok", 255).AddAvatar(7).FinalizeDialog();
                            break;
                        }
                        if (client.MyHouse.Level == 1)
                        {
                            if (client.Inventory.Remove(721174, 1, stream))
                            {
                                client.MyHouse.Level++;
                                data.AddText("You have successfully updated your House.")
                             .AddOption("Thank you.", 255).AddAvatar(7).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you not have Upgrade Cert for update.")
                           .AddOption("Ah Ok", 255).AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else if (client.MyHouse.Level == 2)
                        {
                            if (client.Inventory.Remove(711198, 1, stream))
                            {
                                client.MyHouse.Level++;
                                data.AddText("You have successfully updated your House.")
                             .AddOption("Thank you.", 255).AddAvatar(7).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you not have Upgrade Cert(class 3) for update.")
                                     .AddOption("Ah Ok", 255).AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else if (client.MyHouse.Level == 3)
                        {
                            if (client.Inventory.Remove(711200, 1, stream))
                            {
                                client.MyHouse.Level++;
                                data.AddText("You have successfully updated your House.")
                             .AddOption("Thank you.", 255).AddAvatar(7).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you not have Upgrade Cert(class 4) for update.")
                                       .AddOption("Ah Ok", 255).AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else if (client.MyHouse.Level == 4)
                        {
                            if (client.Inventory.Remove(711553, 1, stream))
                            {
                                client.MyHouse.Level++;
                                data.AddText("You have successfully updated your House.")
                             .AddOption("Thank you.", 255).AddAvatar(7).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you not have Upgrade Cert(class 5) for update.")
                                     .AddOption("Ah Ok", 255).AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You house is the best level")
                                      .AddOption("Ah Ok", 255).AddAvatar(7).FinalizeDialog();
                        }



                        break;
                    }
                case 4:
                    {
                        if (client.MyHouse == null)
                            break;
                        if (client.MyHouse.Level == 0)
                        {
                            data.AddText("You don`t have house.")
                              .AddOption("Ok", 255).AddAvatar(7).FinalizeDialog();
                            break;
                        }
                        ushort HouseID = 0;
                        ushort house_x = 0;
                        ushort house_y = 0;
                        if (client.MyHouse.Level == 1)
                        {
                            HouseID = 1098;
                            house_x = 32;//3
                            house_y = 39;//40
                        }
                        else if (client.MyHouse.Level == 2)
                        {
                            HouseID = 1099;
                            house_x = 53;
                            house_y = 83;
                        }
                        else if (client.MyHouse.Level == 3)
                        {
                            HouseID = 2080;
                            house_x = 78;
                            house_y = 57;
                        }
                        else if (client.MyHouse.Level == 4)
                        {
                            HouseID = 601;
                            house_x = 80;
                            house_y = 58;
                        }
                        else if (client.MyHouse.Level == 5)
                        {
                            HouseID = 3024;
                            house_x = 105;
                            house_y = 139;
                        }
                        else if (client.MyHouse.Level == 6)
                        {
                            HouseID = 3995;
                            house_x = 127;
                            house_y = 138;
                        }
                        if (HouseID != 0)
                        {

                            if (client.Team != null)
                            {
                                foreach (var members in client.Team.Temates)
                                {
                                    if (members.client != null)
                                    {
                                        if (members.client.Player.UID != client.Player.UID)
                                        {
                                            if (Role.Core.GetDistance(client.Player.X, client.Player.Y, members.client.Player.X, members.client.Player.Y) < 18)
                                            {
                                                members.client.Teleport(house_x, house_y, HouseID, client.Player.UID);
                                            }
                                        }
                                    }
                                }
                            }
                            client.Teleport(house_x, house_y, HouseID, client.Player.UID);
                        }
                        break;
                    }
                case 3:
                    {
                        if (client.Player.SpouseUID != 0)
                        {
                            if (Database.Server.GamePoll.ContainsKey(client.Player.SpouseUID))
                            {
                                var MySpouse = Database.Server.GamePoll[client.Player.SpouseUID];
                                if (MySpouse.MyHouse != null)
                                {
                                    ushort HouseID = 0;
                                    ushort house_x = 0;
                                    ushort house_y = 0;
                                    if (MySpouse.MyHouse.Level == 1)
                                    {
                                        HouseID = 1098;
                                        house_x = 33;
                                        house_y = 40;
                                    }
                                    else if (MySpouse.MyHouse.Level == 2)
                                    {
                                        HouseID = 1099;
                                        house_x = 53;
                                        house_y = 83;
                                    }
                                    else if (MySpouse.MyHouse.Level == 3)
                                    {
                                        HouseID = 2080;
                                        house_x = 78;
                                        house_y = 57;
                                    }
                                    else if (MySpouse.MyHouse.Level == 4)
                                    {
                                        HouseID = 601;
                                        house_x = 80;
                                        house_y = 58;
                                    }
                                    else if (MySpouse.MyHouse.Level == 5)
                                    {
                                        HouseID = 3024;
                                        house_x = 105;
                                        house_y = 139;
                                    }
                                    else if (client.MyHouse.Level == 6)
                                    {
                                        HouseID = 3995;
                                        house_x = 127;
                                        house_y = 138;
                                    }
                                    client.Teleport(house_x, house_y, HouseID, MySpouse.Player.UID);
                                }
                                else
                                {
                                    data.AddText("Sorry, but you vife not have House")
                                                              .AddOption("Ah Ok", 255).AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Sorry, but you vife is not online.")
                                                              .AddOption("Ah Ok", 255).AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, but you vife not have House")
                                   .AddOption("Ah Ok", 255).AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }
                case 2:
                    {
                        data.AddText("Do you want a memorable wedding ceremony? it`s not easy, you know However,");
                        data.AddText("I can help you with that. First of all, we need a professional emcee.");
                        data.AddOption("House Permit: 99 CPs.", 10);
                        //data.AddOption("Upgrade Cert: 199 Cps", 11);
                        //data.AddOption("UpgradeCert(Class 3): 259 CPs", 12);
                        //data.AddOption("UpgradeCert(Class 4): 299 CPs", 13);
                        //data.AddOption("UpgradeCert(Class 5): 9999 CPs", 14);
                        data.AddOption("Let me think about it.", 255).AddAvatar(7).FinalizeDialog();


                        break;
                    }
                case 10:
                    {
                        ushort cost = 99;
                        if (client.Player.ConquerPoints >= cost)
                        {
                            if (client.Inventory.Add(stream, 721170))
                            {
                                client.Player.ConquerPoints -= cost;

                            }
                        }
                        else
                        {
                            data.AddText("Sorry, but you don`t have enough CPs to buy that.")
                        .AddOption("Alright.", 255).AddAvatar(7).FinalizeDialog();
                        }



                        break;
                    }
                case 11:
                    {
                        ushort cost = 199;
                        if (client.Player.ConquerPoints >= cost)
                        {
                            if (client.Inventory.Add(stream, 721174))
                            {
                                client.Player.ConquerPoints -= cost;

                            }
                        }
                        else
                        {
                            data.AddText("Sorry, but you don`t have enough CPs to buy that.")
                     .AddOption("Alright.", 255).AddAvatar(7).FinalizeDialog();
                        }



                        break;
                    }
                case 12:
                    {
                        ushort cost = 259;
                        if (client.Player.ConquerPoints >= cost)
                        {
                            if (client.Inventory.Add(stream, 711198))
                            {
                                client.Player.ConquerPoints -= cost;

                            }
                        }
                        else
                        {
                            data.AddText("Sorry, but you don`t have enough CPs to buy that.")
                   .AddOption("Alright.", 255).AddAvatar(7).FinalizeDialog();
                        }



                        break;
                    }
                case 13:
                    {
                        ushort cost = 299;
                        if (client.Player.ConquerPoints >= cost)
                        {
                            if (client.Inventory.Add(stream, 711200))
                            {
                                client.Player.ConquerPoints -= cost;

                            }
                        }
                        else
                        {
                            data.AddText("Sorry, but you don`t have enough CPs to buy that.")
                   .AddOption("Alright.", 255).AddAvatar(7).FinalizeDialog();
                        }



                        break;
                    }
                case 14:
                    {
                        ushort cost = 9999;
                        if (client.Player.ConquerPoints >= cost)
                        {
                            if (client.Inventory.Add(stream, 711553))
                            {
                                client.Player.ConquerPoints -= cost;

                            }
                        }
                        else
                        {
                            data.AddText("Sorry, but you don`t have enough CPs to buy that.")
                   .AddOption("Alright.", 255).AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.Barber)]
        public static void Barber(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.Pharmacist, client.Player.Class, 815);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)id, client.Player.Class);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.IsActiveQuest(ActiveQuest.MissionId))
                        {
                            data.AddText("I`m capable of doing more hairstyles now! Tell me the style you like!")
                           .AddOption("You~can~prettify~my~face?", 103)
                           .AddOption("I~want~to~change~hair~style!", 1)
                           .AddAvatar(10).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.IsActiveQuest(ActiveQuest2.MissionId))
                        {
                            data.AddText("Of course I can. I can even help you change your appearance! Come to me if you need my service! I will give you a discount!")
                 .AddOption("Tell~me~more.", 101)
                   .AddOption("I~want~to~change~hair~style!.", 1).AddAvatar(10).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            goto case 100;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("Of course I can. I can even help you change your appearance! Come to me if you need my service! I will give you a discount!")
                .AddOption("Tell~me~more.", 105)
                  .AddOption("I~want~to~change~hair~style!.", 100)
                .AddAvatar(10).FinalizeDialog();


                        }
                        goto case 100;

                    }
                case 105:
                    {
                        data.AddText("Hm, I guess you will need to store your items in the Warehouse in the future! Pay a visit to the Warehouseman, you may need his help!")
                                    .AddOption("Thanks!.", 255)
                                    .AddAvatar(10).FinalizeDialog();

                        break;
                    }
                case 103:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.IncreaseExperience(stream, 1400, Role.Flags.ExperienceEffect.angelwing);
                            data.AddText("Of course I can. I can even help you change your appearance! Come to me if you need my service! I will give you a discount!")
              .AddOption("Tell~me~more.", 101)
                .AddOption("I~want~to~change~hair~style!.", 100)
              .AddAvatar(10).FinalizeDialog();
                        }

                        break;
                    }
                case 101:
                    {
                        data.AddText("Hm, I guess you will need to store your items in the Warehouse in the future! Pay a visit to the Warehouseman, you may need his help!")
           .AddOption("Thanks!.", 102)
           .AddAvatar(10).FinalizeDialog();


                        break;
                    }
                case 102:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.Player.QuestGUI.SendAutoPatcher("The~Barber~asked~you~to~speak~with~the~Warehouseman~in~the~Twin~City!", ActiveQuest2.FinishNpcId.Map, ActiveQuest2.FinishNpcId.X, ActiveQuest2.FinishNpcId.Y, ActiveQuest2.FinishNpcId.ID);


                        break;
                    }
                case 100:
                    {
                        data.AddText("I`m capable of doing more hairstyles now! A New Dynasty Hairstyle is worth 10000 silvers. Previous hairstyles cost 500 silvers.")

                        .AddOption("New~Dynasty~Hairstyles.", 1)
                        .AddOption("New~styles.", 2)
                        .AddOption("Nostalgic~styles.", 3)
                        //.AddOption("(Level~4+)~VIP~Hairstyles.", 6)
                        .AddOption("Just~passing~by.", 255)
                        .AddAvatar(111).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        data.AddText("Which style would you like to change to?")

                      .AddOption("New~Dynasty~Hairstyle~01", 10)
                      .AddOption("New~Dynasty~Hairstyle~02", 11)
                      .AddOption("New~Dynasty~Hairstyle~03", 12)
                      .AddOption("New~Dynasty~Hairstyle~04", 13)
                      .AddOption("New~Dynasty~Hairstyle~05", 14)
                      .AddOption("Next~Page.", 4)
                      .AddAvatar(111).FinalizeDialog();



                        break;
                    }
                case 16:
                    {
                        if (client.Player.Money < 10000)
                        {
                            data.AddText("You~have~not~enough~money.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 10000)
                            {
                                client.Player.Money -= 10000;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 48);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("It was completed. Are you satisfied with your new hairstyle?");
                                data.AddOption("Cool!");
                                data.AddOption("I~want~to~change~it.", 1);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 15:
                    {
                        if (client.Player.Money < 10000)
                        {
                            data.AddText("You~have~not~enough~money.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 10000)
                            {
                                client.Player.Money -= 10000;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 47);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("It was completed. Are you satisfied with your new hairstyle?");
                                data.AddOption("Cool!");
                                data.AddOption("I~want~to~change~it.", 1);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 14:
                    {
                        if (client.Player.Money < 10000)
                        {
                            data.AddText("You~have~not~enough~money.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 10000)
                            {
                                client.Player.Money -= 10000;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 46);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("It was completed. Are you satisfied with your new hairstyle?");
                                data.AddOption("Cool!");
                                data.AddOption("I~want~to~change~it.", 1);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 13:
                    {
                        if (client.Player.Money < 10000)
                        {
                            data.AddText("You~have~not~enough~money.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 10000)
                            {
                                client.Player.Money -= 10000;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 45);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("It was completed. Are you satisfied with your new hairstyle?");
                                data.AddOption("Cool!");
                                data.AddOption("I~want~to~change~it.", 1);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 12:
                    {
                        if (client.Player.Money < 10000)
                        {
                            data.AddText("You~have~not~enough~money.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 10000)
                            {
                                client.Player.Money -= 10000;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 44);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("It was completed. Are you satisfied with your new hairstyle?");
                                data.AddOption("Cool!");
                                data.AddOption("I~want~to~change~it.", 1);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 11:
                    {
                        if (client.Player.Money < 10000)
                        {
                            data.AddText("You~have~not~enough~money.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 10000)
                            {
                                client.Player.Money -= 10000;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 43);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("It was completed. Are you satisfied with your new hairstyle?");
                                data.AddOption("Cool!");
                                data.AddOption("I~want~to~change~it.", 1);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 10:
                    {
                        if (client.Player.Money < 10000)
                        {
                            data.AddText("You~have~not~enough~money.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 10000)
                            {
                                client.Player.Money -= 10000;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 42);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("It was completed. Are you satisfied with your new hairstyle?");
                                data.AddOption("Cool!");
                                data.AddOption("I~want~to~change~it.", 1);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                default:
                    {
                        if (client.Player.Hair < 300)
                            client.Player.Hair = 300;
                        ushort NewHaire = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + Option);
                        if (client.Player.Money >= 500)
                        {
                            client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                            client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                            client.Player.Money -= 500;
                            client.Player.Hair = NewHaire;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                            client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                            client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        }
                        else
                        {
                            data.AddText("You do not have 500 silvers with you.")
                  .AddOption("I~see.", 255)
                  .AddAvatar(111).FinalizeDialog();
                        }

                        break;
                    }
                case 17:
                    {
                        if (client.Player.Money < 10000)
                        {
                            data.AddText("You~have~not~enough~money.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 10000)
                            {
                                client.Player.Money -= 10000;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 49);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("It was completed. Are you satisfied with your new hairstyle?");
                                data.AddOption("Cool!");
                                data.AddOption("I~want~to~change~it.", 1);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 21:
                    {
                        if (client.Player.Money < 10000)
                        {
                            data.AddText("You~have~not~enough~money.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 10000)
                            {
                                client.Player.Money -= 10000;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 50);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("It was completed. Are you satisfied with your new hairstyle?");
                                data.AddOption("Cool!");
                                data.AddOption("I~want~to~change~it.", 1);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 22:
                    {
                        if (client.Player.Money < 10000)
                        {
                            data.AddText("You~have~not~enough~money.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 10000)
                            {
                                client.Player.Money -= 10000;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 51);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("It was completed. Are you satisfied with your new hairstyle?");
                                data.AddOption("Cool!");
                                data.AddOption("I~want~to~change~it.", 1);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 56:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You~have~not~enough~money.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 70);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("Done! What do you think? Do you like it?");
                                data.AddOption("Cool!");
                                data.AddOption("I~want~to~change~it.", 6);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 57:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You~have~not~enough~money.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 71);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("Done! What do you think? Do you like it?");
                                data.AddOption("Cool!");
                                data.AddOption("I~want~to~change~it.", 6);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 70:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You~have~not~enough~money.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 72);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("Done! What do you think? Do you like it?");
                                data.AddOption("Cool!");
                                data.AddOption("I~want~to~change~it.", 6);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 71:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You~have~not~enough~money.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 73);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("Done! What do you think? Do you like it?");
                                data.AddOption("Cool!");
                                data.AddOption("I~want~to~change~it.", 6);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 72:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You~have~not~enough~money.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 74);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("Done! What do you think? Do you like it?");
                                data.AddOption("Cool!");
                                data.AddOption("I~want~to~change~it.", 6);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 6:
                    {
                        if (client.Player.VipLevel < 4)
                        {
                            data.AddText("Sorry, your VIP Level has to be at least Level 4 to purchase this hairstyle.");
                            data.AddOption("Alright.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You can try out the different hairstyles, until you find your favorite!")
                        .AddOption("(Level~4+)~VIP~Hairstyle~1.", 56)
                        .AddOption("(Level~4+)~VIP~Hairstyle~2.", 57)
                        .AddOption("(Level~4+)~VIP~Hairstyle~3.", 70)
                        .AddOption("(Level~4+)~VIP~Hairstyle~4.", 71)
                        .AddOption("(Level~4+)~VIP~Hairstyle~5.", 72)
                       //  .AddOption("Special~HairStyle06", 73)
                       // .AddOption("Special~HairStyle07", 74)
                       .AddOption("I~won`t~change~my~hairstyle.")
                        .AddAvatar(111).FinalizeDialog();

                        }
                        break;
                    }
                case 4:
                    {
                        data.AddText("Which style would you like to change to?")
                      .AddOption("New~Dynasty~Hairstyle~06", 15)
                      .AddOption("New~Dynasty~Hairstyle~07", 16)
                     .AddOption("New~Dynasty~Hairstyle~08", 17)
                     .AddOption("New~Dynasty~Hairstyle~09", 21)
                     .AddOption("New~Dynasty~Hairstyle~10", 22)
                     .AddOption("Previous.", 1)
                     .AddAvatar(111).FinalizeDialog();


                        break;
                    }
                case 30:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You~have~not~enough~money.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 30);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("It`s~completed.~Are~you~satisfied~with~your~new~hairstyle?");
                                data.AddOption("Cool!");
                                data.AddOption("I~want~to~change~it.", 2);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 31:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You~have~not~enough~money.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 33);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("It`s~completed.~Are~you~satisfied~with~your~new~hairstyle?");
                                data.AddOption("Cool!");
                                data.AddOption("I~want~to~change~it.", 2);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 32:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You~have~not~enough~money.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 34);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("It`s~completed.~Are~you~satisfied~with~your~new~hairstyle?");
                                data.AddOption("Cool!");
                                data.AddOption("I~want~to~change~it.", 2);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 33:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You~have~not~enough~money.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 35);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("It`s~completed.~Are~you~satisfied~with~your~new~hairstyle?");
                                data.AddOption("Cool!");
                                data.AddOption("I~want~to~change~it.", 2);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 34:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You~have~not~enough~money.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 36);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("It`s~completed.~Are~you~satisfied~with~your~new~hairstyle?");
                                data.AddOption("Cool!");
                                data.AddOption("I~want~to~change~it.", 2);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 35:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You~have~not~enough~money.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 37);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("It`s~completed.~Are~you~satisfied~with~your~new~hairstyle?");
                                data.AddOption("Cool!");
                                data.AddOption("I~want~to~change~it.", 2);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 36:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You~have~not~enough~money.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 38);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("It`s~completed.~Are~you~satisfied~with~your~new~hairstyle?");
                                data.AddOption("Cool!");
                                data.AddOption("I~want~to~change~it.", 2);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 37:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You~have~not~enough~money.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 39);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("It`s~completed.~Are~you~satisfied~with~your~new~hairstyle?");
                                data.AddOption("Cool!");
                                data.AddOption("I~want~to~change~it.", 2);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 38:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You~have~not~enough~money.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 40);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("It`s~completed.~Are~you~satisfied~with~your~new~hairstyle?");
                                data.AddOption("Cool!");
                                data.AddOption("I~want~to~change~it.", 2);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 2:
                    {
                        data.AddText("Which~style~would~you~like~to~select~from?")
                                                .AddOption("New~HairStyle01", 30)
                                                .AddOption("New~HairStyle02", 31)
                                                .AddOption("New~HairStyle03", 32)
                                                .AddOption("New~HairStyle04", 33)
                                                .AddOption("New~HairStyle05", 34)
                                                .AddOption("New~HairStyle06", 35)
                                                .AddOption("New~HairStyle07", 36)
                                                .AddOption("Next~Page.", 5)
                                                .AddAvatar(111).FinalizeDialog();


                        break;
                    }
                case 5:
                    {
                        data.AddText("Which~style~would~you~like~to~select~from?")
                         .AddOption("New~HairStyle08", 37)
                         .AddOption("New~HairStyle09", 38)
                         /*  .AddOption("New~HairStyle10", 39)
                           .AddOption("New~HairStyle11", 40)
                           .AddOption("New~HairStyle12", 41)
                           .AddOption("New~HairStyle13", 42)
                           .AddOption("New~HairStyle14", 43)*/
                         .AddOption("Previous.", 2)
                         .AddAvatar(111).FinalizeDialog();

                        break;
                    }
                case 44:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You~have~not~enough~money.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 10);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("It`s~completed.~Are~you~satisfied~with~your~new~hairstyle?");
                                data.AddOption("Cool!");
                                data.AddOption("I~want~to~change~it.", 3);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 45:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You~have~not~enough~money.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 11);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("It`s~completed.~Are~you~satisfied~with~your~new~hairstyle?");
                                data.AddOption("Cool!");
                                data.AddOption("I~want~to~change~it.", 3);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 46:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You~have~not~enough~money.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 12);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("It`s~completed.~Are~you~satisfied~with~your~new~hairstyle?");
                                data.AddOption("Cool!");
                                data.AddOption("I~want~to~change~it.", 3);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 47:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You~have~not~enough~money.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 13);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("It`s~completed.~Are~you~satisfied~with~your~new~hairstyle?");
                                data.AddOption("Cool!");
                                data.AddOption("I~want~to~change~it.", 3);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 48:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You~have~not~enough~money.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 14);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("It`s~completed.~Are~you~satisfied~with~your~new~hairstyle?");
                                data.AddOption("Cool!");
                                data.AddOption("I~want~to~change~it.", 3);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;

                    }
                case 49:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You~have~not~enough~money.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 15);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("It`s~completed.~Are~you~satisfied~with~your~new~hairstyle?");
                                data.AddOption("Cool!");
                                data.AddOption("I~want~to~change~it.", 3);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 50:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You~have~not~enough~money.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 0);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("It`s~completed.~Are~you~satisfied~with~your~new~hairstyle?");
                                data.AddOption("Cool!");
                                data.AddOption("I~want~to~change~it.", 3);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 3:
                    {
                        data.AddText("Which style would you like to change to?")
                                            .AddOption("Nostalgic01", 44)
                                            .AddOption("Nostalgic02", 45)
                                            .AddOption("Nostalgic03", 46)
                                            .AddOption("Nostalgic04", 47)
                                            .AddOption("Nostalgic05", 48)
                                            .AddOption("Nostalgic06", 49)
                                            .AddOption("Bald~head", 50)
                                           //.AddOption("Nostalgic08", 51)
                                           .AddOption("I~chanded~my~mind.")
                                            .AddAvatar(111).FinalizeDialog();


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.GuildGateKeeper)]
        public static void GuildGateKeeper(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Are~you~going~to~leave~here?")
                       .AddOption("Yes.", 1)
                       .AddOption("No.~Wait~a~moment.", 255)
                       .AddAvatar(7).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        client.Teleport(428, 378, 1002);
                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.GuildConductor)]
        public static void GuildConductor(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("What~can~I~do~for~you?")
                                                .AddOption("Enter~the~guild~area.", 1)

                                                .AddOption("Buy~statue.", 2)
                                                .AddOption("Just~passing~by.", 255)
                                                .AddAvatar(123).FinalizeDialog();

                        break;
                    }
                case 4:
                    {
                        if (Game.MsgTournaments.MsgSchedules.CaptureTheFlag.Proces == MsgTournaments.ProcesType.Dead)
                        {
                            if (client.Player.MyGuild != null && client.Player.MyGuild.CTF_Rank >= 1 && client.Player.MyGuild.CTF_Rank <= 9)
                            {
                                if (client.Player.MyGuildMember.CTF_Claimed == 1)
                                {
                                    data.AddText("Sorry, you already claimed the reward.")
            .AddOption("Ah~yes.", 255).AddAvatar(110).FinalizeDialog();
                                    break;
                                }
                                if (client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader)
                                {
                                    if (client.Player.MyGuild.ClaimCtfReward == 1)
                                    {
                                        data.AddText("Sorry, you already claimed the reward.")
        .AddOption("Ah~yes.", 255).AddAvatar(110).FinalizeDialog();
                                        break;
                                    }
                                    client.Player.MyGuild.ClaimCtfReward = 1;
                                    client.Player.ConquerPoints += client.Player.MyGuild.GetLeaderReward()[0];
                                    client.Player.Money += client.Player.MyGuild.GetLeaderReward()[1];
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                    client.Player.MyGuildMember.CTF_Claimed = 1;
                                    Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("" + client.Player.Name + " , GuildLider from " + client.Player.MyGuild.GuildName + " was rewarded "
                                        + client.Player.MyGuild.GetLeaderReward()[0].ToString() + " ConquerPoints for the domination the CaptureTheFlag rank No."
                                    + client.Player.MyGuild.CTF_Rank.ToString() + " .", MsgServer.MsgMessage.MsgColor.red, MsgServer.MsgMessage.ChatMode.TopLeft).GetArray(stream));
                                }
                                else
                                {
                                    client.Player.ConquerPoints += client.Player.MyGuildMember.RewardConquerPoints;
                                    client.Player.Money += client.Player.MyGuildMember.RewardMoney;
                                    client.Player.MyGuildMember.CTF_Claimed = 1;

                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                }
                            }
                            else
                            {
                                data.AddText("Sorry, your guild is not top 9.")
             .AddOption("Ah~yes.", 255).AddAvatar(110).FinalizeDialog();
                            }

                        }


                        break;
                    }
                case 6:
                    {
                        client.Teleport(232, 385, 3868);
                        break;
                    }
                case 5:
                    {
                        if (client.Player.MyGuild == null)
                        {
                            data.AddText("Sorry you not have Guild.")
                    .AddAvatar(123).FinalizeDialog();
                            break;
                        }
                        if (!MsgTournaments.MsgSchedules.CaptureTheFlag.Join(client, stream))
                        {
                            data.AddText("The Capture The Flag will open at Every Saturday,21:00-22:00.")
                     .AddAvatar(123).FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        if (Game.MsgTournaments.MsgSchedules.GuildWar.Proces == MsgTournaments.ProcesType.Alive)
                        {
                            byte RandTele = (byte)Program.GetRandom.Next(1, 14);
                            switch (RandTele)
                            {
                                case 1: client.Teleport(326, 374, 1038); break;
                                case 2: client.Teleport(299, 371, 1038); break;
                                case 3: client.Teleport(293, 352, 1038); break;
                                case 4: client.Teleport(262, 337, 1038); break;
                                case 5: client.Teleport(285, 324, 1038); break;
                                case 6: client.Teleport(315, 289, 1038); break;
                                case 7: client.Teleport(323, 268, 1038); break;
                                case 8: client.Teleport(351, 282, 1038); break;
                                case 9: client.Teleport(371, 305, 1038); break;
                                case 10: client.Teleport(370, 326, 1038); break;
                                case 11: client.Teleport(357, 335, 1038); break;
                                case 12: client.Teleport(333, 330, 1038); break;
                                default: client.Teleport(322, 321, 1038); break;
                            }
                        }
                        else
                        {
                            client.Teleport(349, 340, 1038);
                        }
                        break;
                    }
                case 2:
                    {
                        data.AddText("A~statue~costs~50,000~silver.~Are~you~sure~that~you~want~to~buy?")
                        .AddOption("Yeah.", 3)
                        .AddOption("No,~thanks.", 255)
                        .AddAvatar(123).FinalizeDialog();


                        break;
                    }
                case 3:
                    {
                        if (client.Player.Money >= 50000)
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                data.AddText("Please make 1 more space in your inventory.")
                      .AddOption("I~see.", 255)
                      .AddAvatar(123).FinalizeDialog();
                                break;
                            }
                            client.Inventory.Add(stream, 720020);
                            client.Player.Money -= 50000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);

                        }
                        else
                        {
                            data.AddText("Sorry,~you~do~not~have~50000~silver.")
                       .AddOption("I~see.", 255)
                       .AddAvatar(123).FinalizeDialog();
                        }

                        break;
                    }

            }
        }

        [NpcAttribute(NpcID.FurnitureStore)]
        public static void FurnitureStore(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Welcome!~This~is~the~Twin~City~Furniture~Store.~Take~a~look~around.~I~have~the~best~furniture~in~Twin~City.")
                        .AddOption("Show~me~your~wares.", 1)
                        .AddOption("Not~my~concern.", 255)
                        .AddAvatar(188).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        client.Teleport(52, 70, 1511);
                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.Tinter)]
        public static void Tinter(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Welcome!~Please~wear~the~armors~first.~What~armors~do~you~want~me~to~dye?")
                        .AddOption("Cap", 1)
                        .AddOption("Coat", 2)
                        .AddAvatar(7).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        data.AddText("There~are~seven~colors~for~you~to~choose.~You~can~try~all~the~colors~for~no~more~charges.~What~color~do~you~like~best?")
                       .AddOption("Color~1", 13)
                       .AddOption("Color~2", 14)
                       .AddOption("Color~3", 15)
                       .AddOption("Color~4", 16)
                       .AddOption("Color~5", 17)
                       .AddOption("Color~6", 18)
                       .AddOption("Color~7", 19)
                       .AddAvatar(7).FinalizeDialog();
                        break;
                    }
                case 13:
                case 14:
                case 15:
                case 16:
                case 17:
                case 18:
                case 19:
                    {
                        MsgServer.MsgGameItem Coat;
                        if (client.Equipment.TryGetEquip(Role.Flags.ConquerItem.Armor, out Coat))
                        {
                            Coat.Color = (Role.Flags.Color)(Option - 10);
                            Coat.Mode = Role.Flags.ItemMode.Update;
                            Coat.Send(client, stream);
                            client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        }
                        break;
                    }
                case 1:
                    {
                        data.AddText("There~are~seven~colors~for~you~to~choose.~You~can~try~all~the~colors~for~no~more~charges.~What~color~do~you~like~best?")
                        .AddOption("Color~1", 3)
                        .AddOption("Color~2", 4)
                        .AddOption("Color~3", 5)
                        .AddOption("Color~4", 6)
                        .AddOption("Color~5", 7)
                        .AddOption("Color~6", 8)
                        .AddOption("Color~7", 9)
                        .AddAvatar(7).FinalizeDialog();
                        break;
                    }
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                    {
                        MsgServer.MsgGameItem Cap;
                        if (client.Equipment.TryGetEquip(Role.Flags.ConquerItem.Head, out Cap))
                        {
                            Cap.Color = (Role.Flags.Color)Option;
                            Cap.Mode = Role.Flags.ItemMode.Update;
                            Cap.Send(client, stream);
                            client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Shopboy)]
        public static void Shopboy(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Our~shop~is~famous~for~dyeing.~If~you~want~to~have~your~equipment~dyed,~please~wear~them~before~you~enter.~You")
                            .AddText("have~a~wide~choice~of~colors.~One~meteor~will~be~charged~before~you~try~the~colors.~Do~you~want~a~try?")
                        .AddOption("Yes,~here~is~a~meteor.", 1)
                        .AddOption("Can~you~dye~my~armor~black?", 2)
                        .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(Database.ItemType.Meteor, 1))
                        {
                            client.Inventory.Remove(Database.ItemType.Meteor, 1, stream);
                            client.Teleport(22, 26, 1008);
                        }
                        else
                        {
                            data.AddText("Sorry,~you~do~not~have~a~meteor.")
                      .AddOption("Oh.~I~am~sorry.", 255)
                      .AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }
                case 2:
                    {
                        data.AddText("Sure.~Once~your~armor~is~dyed~black,~it~will~never~fade~no~matter~how~it~is~updated,~unless~I~dye~it~to~other")
                         .AddText("colors.~I~will~charge~1~dragonball~to~do~it.~")
                     .AddOption("Yes.~Here`s~a~Dragonball.", 3)
                     .AddOption("Let~me~think~it~over.", 255)
                     .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        if (client.Inventory.Contain(Database.ItemType.DragonBall, 1))
                        {
                            client.Inventory.Remove(Database.ItemType.DragonBall, 1, stream);
                            MsgServer.MsgGameItem Armor;
                            if (client.Equipment.TryGetEquip(Role.Flags.ConquerItem.Armor, out Armor))
                            {
                                Armor.Color = Role.Flags.Color.Black;
                                Armor.Mode = Role.Flags.ItemMode.Update;
                                Armor.Send(client, stream);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                            }
                        }
                        else
                        {
                            data.AddText("Sorry,~you~do~not~have~a~DragonBall.")
                      .AddOption("Oh.~I~am~sorry.", 255)
                      .AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.ArenaNpc)]
        public static void ArenaNpc(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("The~arena~is~open.~Welcome~to~challenge~other~people.~The~admission~fee~is~only~50~silver.")
                            .AddText("If~you~PK~in~the~arena,~you~will~not~gain~or~lose~any~experience~or~items~equipped,~and~will~get~revived~at~the~place~you~die.")
                            .AddText("The~Kungfu~circle~is~very~dangerous,~I~suggest~you~PK~in~area.")
                        .AddOption("Enter~the~arena.", 1)
                        .AddOption("Just~passing~by.", 255)
                        .AddAvatar(7).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (client.Player.Money >= 50)
                        {
                            client.Player.Money -= 50;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                            client.Teleport(51, 69, 1005);
                        }
                        else
                        {
                            data.AddText("You do not have 50 silvers with you.")
                      .AddOption("I~see.", 255)
                      .AddAvatar(7).FinalizeDialog();

                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.SurgeonMiracle)]
        public static void SurgeonMiracle(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Do~you~want~to~have~your~size~changed~so~that~you~can~become~much~more~adorable?~Now~here~is~a~precious~chance~for~you.")
                       .AddOption("I~want~to~change~my~size.", 1)
                       .AddOption("I~don`t~want~to~change.", 255)
                       .AddAvatar(67).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        data.AddText("If~you~pay~me~one~dragonball,~I~can~have~your~size~changed.~You~will~become~more~attractive~and~start~a~fresh~life.~")
                           .AddText("By~the~way,~to~avoid~some~unexpected~things,~make~sure~you~are~not~in~any~disguise~form.")
                     .AddOption("Here~is~a~dragonball.", 2)
                     .AddOption("I~have~no~dragonball.", 255)
                     .AddAvatar(67).FinalizeDialog();


                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Contain(Database.ItemType.DragonBall, 1))
                        {
                            switch (client.Player.Body)
                            {
                                case 1003: client.Player.Body = 1004; break;
                                case 1004: client.Player.Body = 1003; break;
                                case 2001: client.Player.Body = 2002; break;
                                case 2002: client.Player.Body = 2001; break;
                            }
                            client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                            client.Inventory.Remove(Database.ItemType.DragonBall, 1, stream);
                            data.AddText("You Size was change Successful !")
                   .AddOption("Thank~you~master.", 255)
                   .AddAvatar(67).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Sorry,~there~is~no~dragonball~in~your~inventory.~I~can`t~have~your~size~changed.")
                    .AddOption("I~see.", 255)
                    .AddAvatar(67).FinalizeDialog();
                        }


                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.MasterXuan)]
        public static void MasterXuan(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello! May I help you?")
                                                 .AddOption("Yes!~Upgrade~my~sashes!", 2)
                                                 .AddOption("How~to~upgrade~my~sashes?", 1)
                                                 .AddOption("Nothing.", 255)
                                                 .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        data.AddText("You can pay 100 CPs to combine 2 Sashes (S) into a Sash (M), and pay 200 CPs to combine 2 Sashes (M) into a Sash (L).")
                                              .AddOption("I~see.", 255)
                                              .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        data.AddText("First of all, you should take all items out of the sashes. Otherwise, they will disappear after the upgrade. You will need to pay 100 CPs to combine 2 Sashes (S) into a Sash (M),")
                                                     .AddText("~or pay 200 CPs to combine 2 Sashes (M) into a Sash (L). Are you ready?")
                                                 .AddOption("Yes.~I~want~a~Sash(M)(100CPs).", 3)
                                                 .AddOption("Yes.~I~want~a~Sash(L)(200CPs).", 4)
                                                 .AddOption("Not~yet.", 255)
                                                 .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        if (client.Inventory.Contain(1100003, 2) && client.Player.ConquerPoints >= 100)
                        {
                            List<MsgServer.MsgGameItem> Items;
                            if (client.Inventory.SearchItemByID(1100003, 2, out Items))
                            {
                                bool Allow = true;
                                if (Allow)
                                {
                                    foreach (var item in Items)
                                        client.Inventory.Update(item, Role.Instance.AddMode.REMOVE, stream);

                                    client.Inventory.Add(stream, 1100006, 1);
                                    client.Player.ConquerPoints -= 100;

                                    data.AddText("You Sash was update Successful.")
                                        .AddOption("Thnks~you.", 255)
                                        .AddAvatar(7).FinalizeDialog();
                                }
                                else
                                {
                                    data.AddText("Buddy, you don`t have 2 Sashes (S), or your sashes are not empty. Remember, 2 Sashes (S) can be composed into a Sash (M).")
                                   .AddOption("Let~me~see.", 255)
                                   .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Buddy, you don`t have 2 Sashes (S), or your sashes are not empty. Remember, 2 Sashes (S) can be composed into a Sash (M).")
                                     .AddOption("Let~me~see.", 255)
                                     .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Buddy, you don`t have 2 Sashes (S), or your sashes are not empty. Remember, 2 Sashes (S) can be composed into a Sash (M).")
                                     .AddOption("Let~me~see.", 255)
                                     .AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }
                case 4:
                    {
                        if (client.Inventory.Contain(1100006, 2) && client.Player.ConquerPoints >= 200)
                        {
                            List<MsgServer.MsgGameItem> Items;
                            if (client.Inventory.SearchItemByID(1100006, 2, out Items))
                            {
                                bool Allow = true;
                                if (Allow)
                                {
                                    foreach (var item in Items)
                                        client.Inventory.Update(item, Role.Instance.AddMode.REMOVE, stream);

                                    client.Inventory.Add(stream, 1100009, 1);
                                    client.Player.ConquerPoints -= 200;

                                    data.AddText("You Sash was update Successful.")
                                        .AddOption("Thnks~you.", 255)
                                        .AddAvatar(7).FinalizeDialog();
                                }
                                else
                                {
                                    data.AddText("Buddy, you don`t have 2 Sashes (M), or your sashes are not empty. Remember, 2 Sashes (M) can be composed into a Sash (L).")
                                     .AddOption("Let~me~see.", 255)
                                     .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Buddy, you don`t have 2 Sashes (M), or your sashes are not empty. Remember, 2 Sashes (M) can be composed into a Sash (L).")
                                     .AddOption("Let~me~see.", 255)
                                     .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Buddy, you don`t have 2 Sashes (M), or your sashes are not empty. Remember, 2 Sashes (M) can be composed into a Sash (L).")
                                     .AddOption("Let~me~see.", 255)
                                     .AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }

            }

        }
        [NpcAttribute(NpcID.MCaptain)]
        public static void MCaptain(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.TCCaptainTimes == 3)
                        {
                            data.AddText("You already helped me out today my warrior, please come back to me tomorrow!");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(102).FinalizeDialog();
                            break;
                        }
                        Game.MsgServer.MsgGameItem Jar;
                        if (client.Inventory.TryGetItem(client.DemonExterminator.ItemUID, out Jar))
                        {
                            if (Jar.Durability <= client.DemonExterminator.HuntKills)
                            {
                                client.GainExpBall(600, true, Role.Flags.ExperienceEffect.angelwing);
                                client.Inventory.Remove(750000, 1, stream);
                                client.DemonExterminator.HuntKills = 0;
                                client.DemonExterminator.ItemUID = 0;

                                string itemname = client.DemonExterminator.SpecialReward(client, stream);

                                data.AddText("Thanks for the help. The quest finished! You have gaine a " + itemname + "");
                                data.AddOption("Okay.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You didn't finish killing the amount of monsters.");
                                data.AddOption("ah ok.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("We're always looking for brave adventurers to protect the city from monsters. Are you interesed helping?");
                        data.AddOption("Yes please!", 103);
                        data.AddOption("I`m busy.", 255);
                        data.AddAvatar(102).FinalizeDialog();


                        break;
                    }
                case 211:
                    {
                        client.Teleport(229, 258, 1011);
                        break;
                    }
                case 220:
                    {
                        client.Teleport(569, 620, 1020);
                        break;
                    }
                case 215:
                    {
                        client.Teleport(791, 568, 1015);
                        break;
                    }
                case 200:
                    {
                        client.Teleport(476, 634, 1000);
                        break;
                    }
                case 201:
                    {
                        client.Teleport(82, 321, 1000);
                        break;
                    }
                case 103:
                    {
                        var array = Database.InfoDemonExterminators.CityQuests[1001].Where(p => p.Level + 5 > client.Player.Level).ToArray();
                        if (array.Length == 0)
                        {
                            ushort next_map = Database.InfoDemonExterminators.GetNextMap((byte)client.Player.Level);
                            if (next_map == 0)
                            {
                                data.AddText("You're a bit too powerful for the monsters near here to be any real challenge.");
                                data.AddOption("Okay", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            else
                            {
                                var DBMap = Database.Server.ServerMaps[next_map];
                                data.AddText("You are powerfull now. I suggest you to go Captain of " + DBMap.Name + ", because i heard that is ")
                                              .AddText("annoyed by the rampant monsters there. I believe you can help a lot. I will teleport you in")
                                              .AddText(" " + DBMap.Name + ", so you can reach there very soon.");
                                data.AddOption("Please send me to " + DBMap.Name + "", (byte)(200 + (next_map % 100)));
                                data.AddOption("I don`d wana to go there.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("" + client.Map.Name + " used to be a paradise, until those monsters came and ruined people`s life.")
                            .AddText("If want to hunt monsters for me. I will play you. Now, select the monsters you want to hunt.");
                        foreach (var mob in array)
                        {
                            data.AddOption(mob.Name + " Level(" + mob.Level + ")", (byte)mob.ID);
                        }
                        data.AddOption("See you later.", 255);
                        data.AddAvatar(102).FinalizeDialog();


                        break;
                    }
                default:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.DemonExterminator.CreateDemonExterminator(client, stream, 50, Option);
                            data.AddText("Perfect! I`ve added a jar to your inventory to track how many monsters you have killed.")
                                .AddText(" Come back and see me when you are finished and i will reward you");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(102).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You need atleast 1 empty spot in your inventory to be able to accept this quest.");
                            data.AddOption("Okay", 255);
                            data.AddAvatar(102).FinalizeDialog();
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.BCaptain)]
        public static void BCaptain(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.TCCaptainTimes == 3)
                        {
                            data.AddText("You already helped me out today my warrior, please come back to me tomorrow!");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(102).FinalizeDialog();
                            break;
                        }
                        Game.MsgServer.MsgGameItem Jar;
                        if (client.Inventory.TryGetItem(client.DemonExterminator.ItemUID, out Jar))
                        {
                            if (Jar.Durability <= client.DemonExterminator.HuntKills)
                            {
                                client.GainExpBall(600, true, Role.Flags.ExperienceEffect.angelwing);
                                client.Inventory.Remove(750000, 1, stream);
                                client.DemonExterminator.HuntKills = 0;
                                client.DemonExterminator.ItemUID = 0;

                                string itemname = client.DemonExterminator.SpecialReward(client, stream);

                                data.AddText("Thanks for the help. The quest finished! You have gaine a " + itemname + "");
                                data.AddOption("Okay.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You didn't finish killing the amount of monsters.");
                                data.AddOption("ah ok.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("We're always looking for brave adventurers to protect the city from monsters. Are you interesed helping?");
                        data.AddOption("Yes please!", 103);
                        data.AddOption("I`m busy.", 255);
                        data.AddAvatar(102).FinalizeDialog();


                        break;
                    }
                case 211:
                    {
                        client.Teleport(229, 258, 1011);
                        break;
                    }
                case 220:
                    {
                        client.Teleport(569, 620, 1020);
                        break;
                    }
                case 215:
                    {
                        client.Teleport(791, 568, 1015);
                        break;
                    }
                case 200:
                    {
                        client.Teleport(476, 634, 1000);
                        break;
                    }
                case 201:
                    {
                        client.Teleport(82, 321, 1000);
                        break;
                    }
                case 103:
                    {
                        var array = Database.InfoDemonExterminators.CityQuests[client.Player.Map].Where(p => p.Level + 5 > client.Player.Level).ToArray();
                        if (array.Length == 0)
                        {
                            ushort next_map = Database.InfoDemonExterminators.GetNextMap((byte)client.Player.Level);
                            if (next_map == 0)
                            {
                                data.AddText("You're a bit too powerful for the monsters near here to be any real challenge.");
                                data.AddOption("Okay", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            else
                            {
                                var DBMap = Database.Server.ServerMaps[next_map];
                                data.AddText("You are powerfull now. I suggest you to go Captain of " + DBMap.Name + ", because i heard that is ")
                                              .AddText("annoyed by the rampant monsters there. I believe you can help a lot. I will teleport you in")
                                              .AddText(" " + DBMap.Name + ", so you can reach there very soon.");
                                data.AddOption("Please send me to " + DBMap.Name + "", (byte)(200 + (next_map % 100)));
                                data.AddOption("I don`d wana to go there.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("" + client.Map.Name + " used to be a paradise, until those monsters came and ruined people`s life.")
                            .AddText("If want to hunt monsters for me. I will play you. Now, select the monsters you want to hunt.");
                        foreach (var mob in array)
                        {
                            data.AddOption(mob.Name + " Level(" + mob.Level + ")", (byte)mob.ID);
                        }
                        data.AddOption("See you later.", 255);
                        data.AddAvatar(102).FinalizeDialog();


                        break;
                    }
                default:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.DemonExterminator.CreateDemonExterminator(client, stream, 50, Option);
                            data.AddText("Perfect! I`ve added a jar to your inventory to track how many monsters you have killed.")
                                .AddText(" Come back and see me when you are finished and i will reward you");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(102).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You need atleast 1 empty spot in your inventory to be able to accept this quest.");
                            data.AddOption("Okay", 255);
                            data.AddAvatar(102).FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.DCCaptain)]
        public static void DCCaptain(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.TCCaptainTimes == 3)
                        {
                            data.AddText("You already helped me out today my warrior, please come back to me tomorrow!");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(102).FinalizeDialog();
                            break;
                        }
                        Game.MsgServer.MsgGameItem Jar;
                        if (client.Inventory.TryGetItem(client.DemonExterminator.ItemUID, out Jar))
                        {
                            if (Jar.Durability <= client.DemonExterminator.HuntKills)
                            {
                                client.GainExpBall(600, true, Role.Flags.ExperienceEffect.angelwing);
                                client.Inventory.Remove(750000, 1, stream);
                                client.DemonExterminator.HuntKills = 0;
                                client.DemonExterminator.ItemUID = 0;

                                string itemname = client.DemonExterminator.SpecialReward(client, stream);

                                data.AddText("Thanks for the help. The quest finished! You have gaine a " + itemname + "");
                                data.AddOption("Okay.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You didn't finish killing the amount of monsters.");
                                data.AddOption("ah ok.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("We're always looking for brave adventurers to protect the city from monsters. Are you interesed helping?");
                        data.AddOption("Yes please!", 103);
                        data.AddOption("I`m busy.", 255);
                        data.AddAvatar(102).FinalizeDialog();


                        break;
                    }
                case 211:
                    {
                        client.Teleport(229, 258, 1011);
                        break;
                    }
                case 220:
                    {
                        client.Teleport(569, 620, 1020);
                        break;
                    }
                case 215:
                    {
                        client.Teleport(791, 568, 1015);
                        break;
                    }
                case 200:
                    {
                        client.Teleport(476, 634, 1000);
                        break;
                    }
                case 201:
                    {
                        client.Teleport(82, 321, 1000);
                        break;
                    }
                case 103:
                    {
                        var array = Database.InfoDemonExterminators.CityQuests[client.Player.Map].Where(p => p.Level + 5 > client.Player.Level).ToArray();
                        if (array.Length == 0)
                        {
                            ushort next_map = Database.InfoDemonExterminators.GetNextMap((byte)client.Player.Level);
                            if (next_map == 0)
                            {
                                data.AddText("You're a bit too powerful for the monsters near here to be any real challenge.");
                                data.AddOption("Okay", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            else
                            {
                                var DBMap = Database.Server.ServerMaps[next_map];
                                data.AddText("You are powerfull now. I suggest you to go Captain of " + DBMap.Name + ", because i heard that is ")
                                              .AddText("annoyed by the rampant monsters there. I believe you can help a lot. I will teleport you in")
                                              .AddText(" " + DBMap.Name + ", so you can reach there very soon.");
                                data.AddOption("Please send me to " + DBMap.Name + "", (byte)(200 + (next_map % 100)));
                                data.AddOption("I don`d wana to go there.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("" + client.Map.Name + " used to be a paradise, until those monsters came and ruined people`s life.")
                            .AddText("If want to hunt monsters for me. I will play you. Now, select the monsters you want to hunt.");
                        foreach (var mob in array)
                        {
                            data.AddOption(mob.Name + " Level(" + mob.Level + ")", (byte)mob.ID);
                        }
                        data.AddOption("See you later.", 255);
                        data.AddAvatar(102).FinalizeDialog();


                        break;
                    }
                default:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.DemonExterminator.CreateDemonExterminator(client, stream, 50, Option);
                            data.AddText("Perfect! I`ve added a jar to your inventory to track how many monsters you have killed.")
                                .AddText(" Come back and see me when you are finished and i will reward you");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(102).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You need atleast 1 empty spot in your inventory to be able to accept this quest.");
                            data.AddOption("Okay", 255);
                            data.AddAvatar(102).FinalizeDialog();
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.AMCaptain)]
        public static void AMCaptain(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.TCCaptainTimes == 3)
                        {
                            data.AddText("You already helped me out today my warrior, please come back to me tomorrow!");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(102).FinalizeDialog();
                            break;
                        }
                        Game.MsgServer.MsgGameItem Jar;
                        if (client.Inventory.TryGetItem(client.DemonExterminator.ItemUID, out Jar))
                        {
                            if (Jar.Durability <= client.DemonExterminator.HuntKills)
                            {
                                client.GainExpBall(600, true, Role.Flags.ExperienceEffect.angelwing);
                                client.Inventory.Remove(750000, 1, stream);
                                client.DemonExterminator.HuntKills = 0;
                                client.DemonExterminator.ItemUID = 0;

                                string itemname = client.DemonExterminator.SpecialReward(client, stream);

                                data.AddText("Thanks for the help. The quest finished! You have gaine a " + itemname + "");
                                data.AddOption("Okay.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You didn't finish killing the amount of monsters.");
                                data.AddOption("ah ok.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("We're always looking for brave adventurers to protect the city from monsters. Are you interesed helping?");
                        data.AddOption("Yes please!", 103);
                        data.AddOption("I`m busy.", 255);
                        data.AddAvatar(102).FinalizeDialog();



                        break;
                    }
                case 211:
                    {
                        client.Teleport(229, 258, 1011);
                        break;
                    }
                case 220:
                    {
                        client.Teleport(569, 620, 1020);
                        break;
                    }
                case 215:
                    {
                        client.Teleport(791, 568, 1015);
                        break;
                    }
                case 200:
                    {
                        client.Teleport(476, 634, 1000);
                        break;
                    }
                case 201:
                    {
                        client.Teleport(82, 321, 1000);
                        break;
                    }
                case 103:
                    {
                        var array = Database.InfoDemonExterminators.CityQuests[client.Player.Map].Where(p => p.Level + 5 > client.Player.Level).ToArray();
                        if (array.Length == 0)
                        {
                            ushort next_map = Database.InfoDemonExterminators.GetNextMap((byte)client.Player.Level);
                            if (next_map == 0)
                            {
                                data.AddText("You're a bit too powerful for the monsters near here to be any real challenge.");
                                data.AddOption("Okay", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            else
                            {
                                var DBMap = Database.Server.ServerMaps[next_map];
                                data.AddText("You are powerfull now. I suggest you to go Captain of " + DBMap.Name + ", because i heard that is ")
                                              .AddText("annoyed by the rampant monsters there. I believe you can help a lot. I will teleport you in")
                                              .AddText(" " + DBMap.Name + ", so you can reach there very soon.");
                                data.AddOption("Please send me to " + DBMap.Name + "", (byte)(200 + (next_map % 100)));
                                data.AddOption("I don`d wana to go there.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("" + client.Map.Name + " used to be a paradise, until those monsters came and ruined people`s life.")
                            .AddText("If want to hunt monsters for me. I will play you. Now, select the monsters you want to hunt.");
                        foreach (var mob in array)
                        {
                            data.AddOption(mob.Name + " Level(" + mob.Level + ")", (byte)mob.ID);
                        }
                        data.AddOption("See you later.", 255);
                        data.AddAvatar(102).FinalizeDialog();


                        break;
                    }
                default:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.DemonExterminator.CreateDemonExterminator(client, stream, 50, Option);
                            data.AddText("Perfect! I`ve added a jar to your inventory to track how many monsters you have killed.")
                                .AddText(" Come back and see me when you are finished and i will reward you");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(102).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You need atleast 1 empty spot in your inventory to be able to accept this quest.");
                            data.AddOption("Okay", 255);
                            data.AddAvatar(102).FinalizeDialog();
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.PCCaptain)]
        public static void PCCaptain(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.TCCaptainTimes == 3)
                        {
                            data.AddText("You already helped me out today my warrior, please come back to me tomorrow!");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(102).FinalizeDialog();
                            break;
                        }
                        Game.MsgServer.MsgGameItem Jar;
                        if (client.Inventory.TryGetItem(client.DemonExterminator.ItemUID, out Jar))
                        {
                            if (Jar.Durability <= client.DemonExterminator.HuntKills)
                            {
                                client.GainExpBall(600, true, Role.Flags.ExperienceEffect.angelwing);
                                client.Inventory.Remove(750000, 1, stream);
                                client.DemonExterminator.HuntKills = 0;
                                client.DemonExterminator.ItemUID = 0;

                                string itemname = client.DemonExterminator.SpecialReward(client, stream);

                                data.AddText("Thanks for the help. The quest finished! You have gaine a " + itemname + "");
                                data.AddOption("Okay.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You didn't finish killing the amount of monsters.");
                                data.AddOption("ah ok.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("We're always looking for brave adventurers to protect the city from monsters. Are you interesed helping?");
                        data.AddOption("Yes please!", 103);
                        data.AddOption("I`m busy.", 255);
                        data.AddAvatar(102).FinalizeDialog();


                        break;
                    }
                case 211:
                    {
                        client.Teleport(229, 258, 1011);
                        break;
                    }
                case 220:
                    {
                        client.Teleport(569, 620, 1020);
                        break;
                    }
                case 215:
                    {
                        client.Teleport(791, 568, 1015);
                        break;
                    }
                case 200:
                    {
                        client.Teleport(476, 634, 1000);
                        break;
                    }
                case 201:
                    {
                        client.Teleport(82, 321, 1000);
                        break;
                    }
                case 103:
                    {
                        var array = Database.InfoDemonExterminators.CityQuests[client.Player.Map].Where(p => p.Level + 5 > client.Player.Level).ToArray();
                        if (array.Length == 0)
                        {
                            ushort next_map = Database.InfoDemonExterminators.GetNextMap((byte)client.Player.Level);
                            if (next_map == 0)
                            {
                                data.AddText("You're a bit too powerful for the monsters near here to be any real challenge.");
                                data.AddOption("Okay", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            else
                            {
                                var DBMap = Database.Server.ServerMaps[next_map];
                                data.AddText("You are powerfull now. I suggest you to go Captain of " + DBMap.Name + ", because i heard that is ")
                                              .AddText("annoyed by the rampant monsters there. I believe you can help a lot. I will teleport you in")
                                              .AddText(" " + DBMap.Name + ", so you can reach there very soon.");
                                data.AddOption("Please send me to " + DBMap.Name + "", (byte)(200 + (next_map % 100)));
                                data.AddOption("I don`d wana to go there.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("" + client.Map.Name + " used to be a paradise, until those monsters came and ruined people`s life.")
                            .AddText("If want to hunt monsters for me. I will play you. Now, select the monsters you want to hunt.");
                        foreach (var mob in array)
                        {
                            data.AddOption(mob.Name + " Level(" + mob.Level + ")", (byte)mob.ID);
                        }
                        data.AddOption("See you later.", 255);
                        data.AddAvatar(102).FinalizeDialog();

                        break;
                    }
                default:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.DemonExterminator.CreateDemonExterminator(client, stream, 50, Option);
                            data.AddText("Perfect! I`ve added a jar to your inventory to track how many monsters you have killed.")
                                .AddText(" Come back and see me when you are finished and i will reward you");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(102).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You need atleast 1 empty spot in your inventory to be able to accept this quest.");
                            data.AddOption("Okay", 255);
                            data.AddAvatar(102).FinalizeDialog();
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.TCCaptain)]
        public static void TCCaptain(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {

            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.BlackSmith, client.Player.Class, 823);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)NpcID.TCCaptain, client.Player.Class, 824);
            Database.QuestInfo.DBQuest ActiveQuest3 = null;
            ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)id, client.Player.Class, 0, p => p.MissionId != 824 && p.FinishNpcId.Map == 1004);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            goto case 230;
                        }
                        if (client.Player.QuestGUI.IsActiveQuest(ActiveQuest.MissionId))
                        {
                            client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId);

                            data.AddText("Good day, my friend, I`m the TC Captain, I`m in charge of the public security around")
                                .AddText(" here. It is indeed an important job, isn`t it? Well, ever talking about contributing")
                                .AddText(" a bit to the public? You'll be rewarded.")
                           .AddOption("What can i do for you?", 240)
                           .AddOption("I want to take a Daily Quest.", 230)
                           .AddAvatar(10).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.IsActiveQuest(ActiveQuest2.MissionId))
                        {
                            if (client.Player.QuestGUI.CheckObjectives(ActiveQuest2.MissionId, 10))
                            {
                                client.Player.QuestGUI.FinishQuest(ActiveQuest2.MissionId);
                                client.GainExpBall(200);
                                data.AddText("Good job! That is what i want! You returned peace to Twin City!")
         .AddOption("Thank you!", 231)
         .AddAvatar(10).FinalizeDialog();
                                break;
                            }
                            data.AddText("Defeat 10 Pheasants outside Twin City. You are doing for this for people of Twin City!")
            .AddOption("Okay!", 255)
            .AddAvatar(10).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            goto case 231;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {

                            goto case 240;
                        }

                        goto case 230;

                    }
                case 240:
                    {
                        data.AddText("I have some jobs for you to do here! The Pheasants outside Twin City are becoming more")
                                                        .AddText(" and more aggressive! I want you to defeat 10 of them. This is for the safety of the people")
                                                        .AddText(" in Twin City.")
                                                   .AddOption("Okay, right on my way.", 232)
                                                   .AddOption("I want to take a Daily Quest.", 230)
                                                   .AddAvatar(10).FinalizeDialog();

                        break;
                    }
                case 233:
                    {
                        data.AddText("Good job! That is what i want! You returned peace to Twin City!")
                            .AddOption("Thank you!", 233)
                            .AddAvatar(10).FinalizeDialog();


                        break;
                    }
                case 231:
                    {
                        data.AddText("There is a long way to go! You need some professional guidance to grow stronger! Find the NPC of your class")
                                                           .AddText(" in the Job center to learn more about job promotion!")
                                                      .AddOption("Job promotion 1.", 234)
                                                      .AddOption("I want to take a Daily Quest.", 230)
                                                      .AddAvatar(10).FinalizeDialog();

                        break;
                    }
                case 234:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest3, 0);
                        client.Player.QuestGUI.SendAutoPatcher("The TC Captain asked you to enter the Job Center and find the NPC of you class to get promoted.", ActiveQuest3.FinishNpcId.Map, ActiveQuest3.FinishNpcId.X, ActiveQuest3.FinishNpcId.Y, ActiveQuest3.FinishNpcId.ID);

                        break;
                    }
                case 232:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.Player.QuestGUI.SendAutoPatcher("The TC Captain asked you to slay 10 Pheasants outside Twin City! Remember to wear your equipment first!", 1002, 341, 401, 0);

                        break;
                    }
                case 230:
                    {
                        if (client.Player.TCCaptainTimes == 3)
                        {
                            data.AddText("You already helped me out today my warrior, please come back to me tomorrow!");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(102).FinalizeDialog();
                            break;
                        }
                        Game.MsgServer.MsgGameItem Jar;
                        if (client.Inventory.TryGetItem(client.DemonExterminator.ItemUID, out Jar))
                        {
                            if (Jar.Durability <= client.DemonExterminator.HuntKills)
                            {
                                client.IncreaseExperience(stream, 1400, Role.Flags.ExperienceEffect.angelwing);
                                client.Inventory.Remove(750000, 1, stream);
                                client.DemonExterminator.HuntKills = 0;
                                client.DemonExterminator.ItemUID = 0;

                                string itemname = client.DemonExterminator.SpecialReward(client, stream);

                                data.AddText("Thanks for the help. The quest finished! You have gaine a " + itemname + "");
                                data.AddOption("Okay.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You didn't finish killing the amount of monsters.");
                                data.AddOption("ah ok.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("We're always looking for brave adventurers to protect the city from monsters. Are you interesed helping?");
                        data.AddOption("Yes please!", 103);
                        data.AddOption("I`m busy.", 255);
                        data.AddAvatar(102).FinalizeDialog();

                        break;
                    }
                case 211:
                    {
                        client.Teleport(229, 258, 1011);
                        break;
                    }
                case 220:
                    {
                        client.Teleport(569, 620, 1020);
                        break;
                    }
                case 215:
                    {
                        client.Teleport(791, 568, 1015);
                        break;
                    }
                case 200:
                    {
                        client.Teleport(476, 634, 1000);
                        break;
                    }
                case 201:
                    {
                        client.Teleport(82, 321, 1000);
                        break;
                    }
                case 103:
                    {
                        var array = Database.InfoDemonExterminators.CityQuests[client.Player.Map].Where(p => p.Level + 5 > client.Player.Level).ToArray();
                        if (array.Length == 0)
                        {
                            ushort next_map = Database.InfoDemonExterminators.GetNextMap((byte)client.Player.Level);
                            if (next_map == 0)
                            {
                                data.AddText("You're a bit too powerful for the monsters near here to be any real challenge.");
                                data.AddOption("Okay", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            else
                            {
                                var DBMap = Database.Server.ServerMaps[next_map];
                                data.AddText("You are powerfull now. I suggest you to go Captain of " + DBMap.Name + ", because i heard that is ")
                                              .AddText("annoyed by the rampant monsters there. I believe you can help a lot. I will teleport you in")
                                              .AddText(" " + DBMap.Name + ", so you can reach there very soon.");
                                data.AddOption("Please send me to " + DBMap.Name + "", (byte)(200 + (next_map % 100)));
                                data.AddOption("I don`d wana to go there.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("" + client.Map.Name + " used to be a paradise, until those monsters came and ruined people`s life.")
                            .AddText("If want to hunt monsters for me. I will play you. Now, select the monsters you want to hunt.");
                        foreach (var mob in array)
                        {
                            data.AddOption(mob.Name + " Level(" + mob.Level + ")", (byte)mob.ID);
                        }
                        data.AddOption("See you later.", 255);
                        data.AddAvatar(102).FinalizeDialog();

                        break;
                    }
                default:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.DemonExterminator.CreateDemonExterminator(client, stream, 50, Option);
                            data.AddText("Perfect! I`ve added a jar to your inventory to track how many monsters you have killed.")
                                .AddText(" Come back and see me when you are finished and i will reward you");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(102).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You need atleast 1 empty spot in your inventory to be able to accept this quest.");
                            data.AddOption("Okay", 255);
                            data.AddAvatar(102).FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.CloudSaint)]
        public static void CloudSaint(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.DemonExterminator.FinishToday == 1)
                        {
                            data.AddText("You already helped me out today my warrior, please come back to me tomorrow!");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(102).FinalizeDialog();
                            break;
                        }
                        Game.MsgServer.MsgGameItem Jar;
                        if (client.Inventory.TryGetItem(client.DemonExterminator.ItemUID, out Jar))
                        {
                            if (Jar.Durability <= client.DemonExterminator.HuntKills)
                            {
                                byte stage = client.DemonExterminator.GetDemonExterminatorStage(Jar);
                                if (stage == 3)
                                {
                                    data.AddText("You have finished killing all the monsters for today. Do you want to claim your prize?");
                                    data.AddOption("Yes.", 3);
                                    data.AddOption("Nevermind.", 255);
                                    data.AddAvatar(102).FinalizeDialog();
                                }
                                else if (stage != byte.MaxValue)
                                {
                                    data.AddText("You have killed the amount required for this stage. Do you want to advance?");
                                    data.AddOption("Yes.", 2);
                                    data.AddOption("Nevermind.", 255);
                                    data.AddAvatar(102).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("You didn't finish killing the amount of monsters for your current stage. Are you giving up?");
                                data.AddOption("Yes, I want to give up.", 4);
                                data.AddOption("Nevermind.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                        }

                        else
                        {

                            if (client.DemonExterminator.FinishToday == 1)
                            {
                                data.AddText("You already helped me out today my warrior, please come back to me tomorrow!");
                                data.AddOption("Okay.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            if (client.Player.Level < 120)
                            {
                                data.AddText("You are too weak to take quests from me. Go and find the MC Captain.");
                                data.AddOption("Okay.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                                break;
                            }
                            data.AddText("Stay calm and listem, the Demons are taking over the control of ");
                            data.AddText("the world. My family is the only one that can make a contract with ");
                            data.AddText("the humans to purify the world from the devils. I can give you two ");
                            data.AddText("expballs as reward for doing it. But you can do it once one time per ");
                            data.AddText("day, what will you do?");
                            data.AddOption("Begin quest.", 1);
                            data.AddOption("Wana to buy That Quest", 5);
                            data.AddOption("Just passing by", 255);
                            data.AddAvatar(102).FinalizeDialog();
                        }

                        break;
                    }
                case 2:
                    {
                        Game.MsgServer.MsgGameItem Jar;
                        if (client.Inventory.TryGetItem(client.DemonExterminator.ItemUID, out Jar))
                        {
                            if (Jar.Durability <= client.DemonExterminator.HuntKills)
                            {
                                client.DemonExterminator.HuntKills = 0;

                                byte stage = client.DemonExterminator.GetDemonExterminatorStage(Jar);
                                stage++;

                                client.DemonExterminator.CreateDemonExterminator(client, stream, Database.InfoDemonExterminators.StageKills[stage], Database.InfoDemonExterminators.QuestTyp[client.DemonExterminator.QuestTyp][stage]);
                                data.AddText(string.Concat("Now go and kill ", Database.InfoDemonExterminators.StageKills[stage], " ", Database.InfoDemonExterminators.QuestName[client.DemonExterminator.QuestTyp][stage], " then come back."));
                                data.AddOption("Okay.", 255);
                                data.AddAvatar(102).FinalizeDialog();

                            }
                            else
                            {
                                data.AddText("You do not have the jar.");
                                data.AddOption("Okay.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                        }

                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.DemonExterminator.FinishToday = 1;
                            int questtype = Program.GetRandom.Next(0, Database.InfoDemonExterminators.QuestTyp.Length);
                            client.DemonExterminator.QuestTyp = (uint)questtype;
                            client.DemonExterminator.CreateDemonExterminator(client, stream, Database.InfoDemonExterminators.StageKills[0], Database.InfoDemonExterminators.QuestTyp[questtype][0]);
                            data.AddText("Thank you, brave soldier, for accepting this quest. Kill " + Database.InfoDemonExterminators.StageKills[0] + " " + Database.InfoDemonExterminators.QuestTyp[questtype][0] + " and come back.");
                            data.AddOption("Okay", 255);
                            data.AddAvatar(102).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You need atleast 1 empty spot in your inventory to be able to accept this quest.");
                            data.AddOption("Okay", 255);
                            data.AddAvatar(102).FinalizeDialog();
                        }

                        break;
                    }
                case 4:
                    {

                        client.Inventory.Remove(750000, 1, stream);
                        client.DemonExterminator.HuntKills = 0;
                        client.DemonExterminator.ItemUID = 0;
                        break;
                    }
                case 3:
                    {

                        client.GainExpBall(600 * 5, true, Role.Flags.ExperienceEffect.angelwing);
                        client.Inventory.Remove(750000, 1, stream);
                        client.DemonExterminator.HuntKills = 0;
                        client.DemonExterminator.ItemUID = 0;
                        break;
                    }
                case 5:
                    {
                        data.AddText("You need to buy that quest for 3.000 ConquerPoints?");
                        data.AddOption("Yes. I`m sure,", 6);
                        data.AddOption("Just passing by", 255);
                        data.AddAvatar(102).FinalizeDialog();

                        break;
                    }
                case 6:
                    {
                        if (client.Player.ConquerPoints >= 3000)
                        {
                            client.Player.ConquerPoints -= 3000;


                            client.GainExpBall(600 * 5, true, Role.Flags.ExperienceEffect.angelwing);
                            client.Inventory.Remove(750000, 1, stream);
                            client.DemonExterminator.ItemUID = 0;
                            client.DemonExterminator.HuntKills = 0;
                            client.DemonExterminator.FinishToday = 1;
                        }
                        else
                        {
                            data.AddText("Sorry you not have 98 ConquerPoints");
                            data.AddOption("Ah. Ok", 255);
                            data.AddAvatar(102).FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Confiscator)]
        public static void Confiscator(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("The red/black name can redeem their detained equipment within 7 days. The CPs they pay for their guilt will be rewarded to the")
                                                    .AddText("~who killed them. If they do not pay, the equipment detained will be given to the one who killed them as rewards.")
                                            .AddOption("I~want~to~redeem~my~equipment.", 1)
                                            .AddOption("I~want~to~claim~my~rewards.", 3)
                                            .AddOption("What?", 255)
                                            .AddAvatar(102).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        data.AddText("You can pay some CPs to redeem your equipment.")
                                            .AddOption("I~want~my~equipment.", 2)
                                            .AddOption("Let~me~think.", 255)
                                            .AddAvatar(102).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        if (!client.Confiscator.IsEmptyReadem())
                        {

                            ActionQuery action = new ActionQuery()
                            {
                                Type = ActionType.OpenDialog,
                                ObjId = client.Player.UID,
                                dwParam = MsgServer.DialogCommands.DetainRedeem,
                                wParam1 = client.Player.X,
                                wParam2 = client.Player.Y
                            };
                            client.Send(stream.ActionCreate(&action));

                        }
                        else
                        {
                            data.AddText("You do not have any equipment detained.")
                 .AddOption("Got~it.", 255)
                 .AddAvatar(102).FinalizeDialog();
                        }

                        break;
                    }
                case 3:
                    {
                        data.AddText("The red/black name you killed can redeem equipment within 7 days. You will be rewarded the CPs that he/she pay for the guilt.")
                           .AddText("~If not, you will get the detained equipment as rewards.")
                  .AddOption("I~want~my~equipment.", 4)
                  .AddOption("Let~me~think.", 255)
                  .AddAvatar(102).FinalizeDialog();

                        break;
                    }
                case 4:
                    {
                        if (!client.Confiscator.IsEmptyClaim())
                        {
                            ActionQuery action = new ActionQuery()
                            {
                                Type = ActionType.OpenDialog,
                                ObjId = client.Player.UID,
                                dwParam = MsgServer.DialogCommands.DetainClaim,
                                wParam1 = client.Player.X,
                                wParam2 = client.Player.Y
                            };
                            client.Send(stream.ActionCreate(&action));

                        }
                        else
                        {
                            data.AddText("Sorry, you do not have anything to claim now.")
                 .AddOption("I~see.", 255)
                 .AddAvatar(102).FinalizeDialog();
                        }

                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.JailConfiscator)]
        public static void JailConfiscator(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("The red/black name can redeem their detained equipment within 7 days. The CPs they pay for their guilt will be rewarded to the")
                            .AddText("~who killed them. If they do not pay, the equipment detained will be given to the one who killed them as rewards.")
                    .AddOption("I~want~to~redeem~my~equipment.", 1)
                    .AddOption("I~want~to~claim~my~rewards.", 3)
                    .AddOption("What?", 255)
                    .AddAvatar(102).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        data.AddText("You can pay some CPs to redeem your equipment.")
                  .AddOption("I~want~my~equipment.", 2)
                  .AddOption("Let~me~think.", 255)
                  .AddAvatar(102).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (!client.Confiscator.IsEmptyReadem())
                        {
                            ActionQuery action = new ActionQuery()
                            {
                                Type = ActionType.OpenDialog,
                                ObjId = client.Player.UID,
                                dwParam = MsgServer.DialogCommands.DetainRedeem,
                                wParam1 = client.Player.X,
                                wParam2 = client.Player.Y
                            };
                            client.Send(stream.ActionCreate(&action));


                        }
                        else
                        {
                            data.AddText("You do not have any equipment detained.")
                 .AddOption("Got~it.", 255)
                 .AddAvatar(102).FinalizeDialog();
                        }

                        break;
                    }
                case 3:
                    {
                        data.AddText("The red/black name you killed can redeem equipment within 7 days. You will be rewarded the CPs that he/she pay for the guilt.")
                            .AddText("~If not, you will get the detained equipment as rewards.")
                   .AddOption("I~want~my~equipment.", 4)
                   .AddOption("Let~me~think.", 255)
                   .AddAvatar(102).FinalizeDialog();

                        break;
                    }
                case 4:
                    {
                        if (!client.Confiscator.IsEmptyClaim())
                        {

                            ActionQuery action = new ActionQuery()
                            {
                                ObjId = client.Player.UID,
                                Type = ActionType.OpenDialog,
                                dwParam = MsgServer.DialogCommands.DetainClaim,
                                wParam1 = client.Player.X,
                                wParam2 = client.Player.Y
                            };
                            client.Send(stream.ActionCreate(&action));

                        }
                        else
                        {
                            data.AddText("Sorry, you do not have anything to claim now.")
                 .AddOption("I~see.", 255)
                 .AddAvatar(102).FinalizeDialog();
                        }

                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.GarmentShopKeeper)]
        public static void GarmentShopKeeper(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        ActionQuery action = new ActionQuery()
                        {
                            Type = ActionType.OpenDialog,
                            ObjId = client.Player.UID,
                            dwParam = MsgServer.DialogCommands.GarmentShop,
                            wParam1 = client.Player.X,
                            wParam2 = client.Player.Y
                        };
                        client.Send(stream.ActionCreate(&action));
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.MillionaireLee)]
        public static void MillionaireLee(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hunting~and~mining~for~the~treasure~is~an~exciting~thing.~However,~they~also~pile~up~in~your~inventories.")
                    .AddOption("Pack~+1~Stones.", 1)
                    .AddOption("Pack~+2~Stones.", 3)
                    .AddOption("Pack~+3~Stones.", 5)
                    .AddOption("Pack~Normal~Gems.", 7)
                    .AddOption("Pack~EXP~Balls~for~me!", 32)
                    .AddOption("Pack~Meteors.", 34)
                    .AddOption("Pack~DragonBalls", 36)
                    .AddOption("Just~passing~by.", 255)
                    .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 36:
                    {
                        data.AddText("10 DragonBall can be packed into a DragonBall Pack. Would you like me to pack them for you?")
                           .AddOption("Yes,~please.", 37)
                           .AddOption("Bye.", 255)
                           .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 37:
                    {
                        if (client.Inventory.Contain(Database.ItemType.DragonBall, 10))
                        {
                            client.Inventory.Remove(Database.ItemType.DragonBall, 10, stream);
                            client.Inventory.Add(stream, Database.ItemType.DragonBallScroll, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 10 DragonBall.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }

                case 34:
                    {
                        data.AddText("10 Meteors can be packed into a Meteor Pack. Would you like me to pack them for you?")
                            .AddOption("Yes,~please.", 35)
                            .AddOption("Bye.", 255)
                            .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 35:
                    {
                        if (client.Inventory.Contain(Database.ItemType.Meteor, 10, 1))
                        {
                            client.Inventory.Remove(Database.ItemType.Meteor, 10, stream);
                            client.Inventory.Add(stream, Database.ItemType.MeteorScroll, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                        }
                        else if (client.Inventory.Contain(Database.ItemType.Meteor, 10, 0))
                        {
                            client.Inventory.Remove(Database.ItemType.Meteor, 10, stream);
                            client.Inventory.Add(stream, Database.ItemType.MeteorScroll, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 10 meteors.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 32:
                    {
                        data.AddText("Pay 100,000 Silver and give me 5 EXP Balls, I can pack them into an EXP Ball Gift Box for you!")
                                                    .AddOption("Pack~EXP~Balls~for~me!", 33)
                                                    .AddOption("Bye.", 255)
                                                    .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 33:
                    {
                        if (client.Inventory.Contain(722136, 30))
                        {
                            if (client.Player.Money >= 100000)
                            {
                                client.Player.Money -= 100000;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Inventory.Remove(722136, 30, stream);
                                client.Inventory.Add(stream, 720757, 1);
                            }
                            else
                            {
                                data.AddText("You do not have 100,000 silvers with you.")
                 .AddOption("My~bad.", 255)
                 .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 30 EXP Balls.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 7:
                    {
                        data.AddText("Which kind of Normal Gems do you want to pack up?")
                   .AddOption("Glory~Gems.", 8)
                   .AddOption("Thunder~Gems.", 9)
                   .AddOption("Kylin~Gems.", 10)
                   .AddOption("Rainbow~Gems.", 11)
                   .AddOption("Fury~Gems.", 12)
                   .AddOption("Next~page.", 13)
                   .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 13:
                    {
                        data.AddText("Which kind of Normal Gems do you want to pack up?")
                  .AddOption("Dragon~Gems.", 14)
                  .AddOption("Phoenix~Gems.", 15)
                  .AddOption("Violet~Gems.", 16)
                  .AddOption("Moon~Gems.", 17)
                  .AddOption("Tortoise~Gems.", 18)
                  .AddOption("Back~page.", 7)
                  .AddOption("Just~passing~by.", 255)
                  .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 18:
                    {
                        data.AddText("5 Normal Tortoise Gems can be packed into a Tortoise Gem Pack! Would you like me to pack them for you?")
                 .AddOption("Yes,~please.", 29)
                 .AddOption("Bye.", 255)
                 .AddAvatar(7).FinalizeDialog();


                        break;
                    }
                case 29:
                    {
                        if (client.Inventory.Contain((uint)(700000 + (uint)Role.Flags.Gem.NormalTortoiseGem), 5))
                        {
                            client.Inventory.Remove((uint)(700000 + (uint)Role.Flags.Gem.NormalTortoiseGem), 5, stream);
                            client.Inventory.Add(stream, 727069, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 5 Tortoise Gems.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 17:
                    {
                        data.AddText("5 Normal Moon Gems can be packed into a Moon Gem Pack! Would you like me to pack them for you?")
                  .AddOption("Yes,~please.", 28)
                  .AddOption("Bye.", 255)
                  .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 28:
                    {
                        if (client.Inventory.Contain((uint)(700000 + (uint)Role.Flags.Gem.NormalMoonGem), 5))
                        {
                            client.Inventory.Remove((uint)(700000 + (uint)Role.Flags.Gem.NormalMoonGem), 5, stream);
                            client.Inventory.Add(stream, 727068, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 5 Moon Gems.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }
                case 16:
                    {
                        data.AddText("5 Normal Violet Gems can be packed into a Violet Gem Pack! Would you like me to pack them for you?")
                 .AddOption("Yes,~please.", 27)
                 .AddOption("Bye.", 255)
                 .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 27:
                    {
                        if (client.Inventory.Contain((uint)(700000 + (uint)Role.Flags.Gem.NormalVioletGem), 5))
                        {
                            client.Inventory.Remove((uint)(700000 + (uint)Role.Flags.Gem.NormalVioletGem), 5, stream);
                            client.Inventory.Add(stream, 727067, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 5 Violet Gems.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }
                case 15:
                    {
                        data.AddText("5 Normal Phoenix Gems can be packed into a Phoenix Gem Pack! Would you like me to pack them for you?")
                .AddOption("Yes,~please.", 26)
                .AddOption("Bye.", 255)
                .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 26:
                    {
                        if (client.Inventory.Contain((uint)(700000 + (uint)Role.Flags.Gem.NormalPhoenixGem), 5))
                        {
                            client.Inventory.Remove((uint)(700000 + (uint)Role.Flags.Gem.NormalPhoenixGem), 5, stream);
                            client.Inventory.Add(stream, 727066, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 5 Phoenix Gems.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }
                case 14:
                    {
                        data.AddText("5 Normal Dragon Gems can be packed into a Dragon Gem Pack! Would you like me to pack them for you?")
                  .AddOption("Yes,~please.", 25)
                  .AddOption("Bye.", 255)
                  .AddAvatar(7).FinalizeDialog();


                        break;
                    }
                case 25:
                    {
                        if (client.Inventory.Contain((uint)(700000 + (uint)Role.Flags.Gem.NormalDragonGem), 5))
                        {
                            client.Inventory.Remove((uint)(700000 + (uint)Role.Flags.Gem.NormalDragonGem), 5, stream);
                            client.Inventory.Add(stream, 727065, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 5 Dragon Gems.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }
                case 12:
                    {
                        data.AddText("5 Normal Fury Gems can be packed into a Fury Gem Pack! Would you like me to pack them for you?")
                  .AddOption("Yes,~please.", 24)
                  .AddOption("Bye.", 255)
                  .AddAvatar(7).FinalizeDialog();


                        break;
                    }
                case 24:
                    {
                        if (client.Inventory.Contain((uint)(700000 + (uint)Role.Flags.Gem.NormalFuryGem), 5))
                        {
                            client.Inventory.Remove((uint)(700000 + (uint)Role.Flags.Gem.NormalFuryGem), 5, stream);
                            client.Inventory.Add(stream, 727064, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 5 Fury Gems.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }
                case 11:
                    {
                        data.AddText("5 Normal Rainbow Gems can be packed into a Rainbow Gem Pack! Would you like me to pack them for you?")
                 .AddOption("Yes,~please.", 23)
                 .AddOption("Bye.", 255)
                 .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 23:
                    {
                        if (client.Inventory.Contain((uint)(700000 + (uint)Role.Flags.Gem.NormalRainbowGem), 5))
                        {
                            client.Inventory.Remove((uint)(700000 + (uint)Role.Flags.Gem.NormalRainbowGem), 5, stream);
                            client.Inventory.Add(stream, 727063, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 5 Rainbow Gems.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 10:
                    {
                        data.AddText("5 Normal Kylin Gems can be packed into a Kylin Gem Pack! Would you like me to pack them for you?")
                  .AddOption("Yes,~please.", 22)
                  .AddOption("Bye.", 255)
                  .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 22:
                    {
                        if (client.Inventory.Contain((uint)(700000 + (uint)Role.Flags.Gem.NormalKylinGem), 5))
                        {
                            client.Inventory.Remove((uint)(700000 + (uint)Role.Flags.Gem.NormalKylinGem), 5, stream);
                            client.Inventory.Add(stream, 727062, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 5 Kylin Gems.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }
                case 9:
                    {
                        data.AddText("5 Normal Thunder Gems can be packed into a Thunder Gem Pack! Would you like me to pack them for you?")
                 .AddOption("Yes,~please.", 21)
                 .AddOption("Bye.", 255)
                 .AddAvatar(7).FinalizeDialog();


                        break;
                    }
                case 21:
                    {
                        if (client.Inventory.Contain((uint)(700000 + (uint)Role.Flags.Gem.NormalThunderGem), 5))
                        {
                            client.Inventory.Remove((uint)(700000 + (uint)Role.Flags.Gem.NormalThunderGem), 5, stream);
                            client.Inventory.Add(stream, 727061, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 5 Thunder Gems.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }

                case 8:
                    {
                        data.AddText("5 Normal Glory Gems can be packed into a Glory Gem Pack! Would you like me to pack them for you?")
                  .AddOption("Yes,~please.", 20)
                  .AddOption("Bye.", 255)
                  .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 20:
                    {
                        if (client.Inventory.Contain((uint)(700000 + (uint)Role.Flags.Gem.NormalGloryGem), 5))
                        {
                            client.Inventory.Remove((uint)(700000 + (uint)Role.Flags.Gem.NormalGloryGem), 5, stream);
                            client.Inventory.Add(stream, 727060, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 5 Normal Glory.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }
                case 5:
                    {
                        data.AddText("10 +3 Stones can be packed into a +3 Stone Pack. Would you like me to pack them for you?")
                .AddOption("Yes,~please.", 6)
                .AddOption("Bye.", 255)
                .AddAvatar(7).FinalizeDialog();


                        break;
                    }
                case 6:
                    {
                        if (client.Inventory.Contain(730003, 10))
                        {
                            client.Inventory.Remove(730003, 10, stream);
                            client.Inventory.Add(stream, 729023, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 10 +3 Stones.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 3:
                    {
                        data.AddText("10 +2 Stones can be packed into a +2 Stone Pack. Would you like me to pack them for you?")
                  .AddOption("Yes,~please.", 4)
                  .AddOption("Bye.", 255)
                  .AddAvatar(7).FinalizeDialog();


                        break;
                    }
                case 4:
                    {
                        if (client.Inventory.Contain(730002, 10))
                        {
                            client.Inventory.Remove(730002, 10, stream);
                            client.Inventory.Add(stream, 729022, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 10 +2 Stones.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }



                        break;
                    }
                case 1:
                    {
                        data.AddText("5 +1 Stones can be packed into a +1 Stone Pack. Would you like me to pack them for you?")
                 .AddOption("Yes,~please.", 2)
                 .AddOption("Bye.", 255)
                 .AddAvatar(7).FinalizeDialog();


                        break;
                    }
                case 2:
                    {

                        if (client.Inventory.Contain(730001, 5, 1))
                        {
                            client.Inventory.Remove(730001, 5, stream);
                            client.Inventory.Add(stream, 723712, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                        }
                        else if (client.Inventory.Contain(730001, 5, 0))
                        {
                            client.Inventory.Remove(730001, 5, stream);
                            client.Inventory.Add(stream, 723712, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 5 +1 Stones.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.UnknowMan)]
        public static void UnknowMan(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("The Dragon Ball is really a precious item. You can use it to refine equipment. What`s more, if you use it properly,")
                            .AddText("~you can gain a large amount of EXP from it. Well, if you have a Dragon Ball, I can help you gain some EXP.")
                    .AddOption("Please~help~me.", 1)
                    .AddOption("Definitely.", 255)
                    .AddAvatar(67).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        data.AddText("According to your ability, I can help you gain EXP from 1 Dragon Ball, each day.")
                    .AddOption("Please~help~me.", 2)
                    .AddOption("I~see.", 255)
                    .AddAvatar(67).FinalizeDialog();


                        break;
                    }
                case 2:
                    {
                        if (client.Player.Level == 140)
                        {
                            data.AddText("Sorry, but you have a big level.")
              .AddOption("I~see.", 255)
              .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        if (client.Inventory.Contain(Database.ItemType.DragonBall, 1))
                        {
                            if (!client.Player.DbTry)
                            {
                                client.Player.DbTry = true;
                                client.GainExpBall(600 * 10, true, Role.Flags.ExperienceEffect.angelwing);
                                client.Inventory.Remove(Database.ItemType.DragonBall, 1, stream);
                            }
                            else
                            {
                                data.AddText("Sorry, but you my service today, come back tomorow with one dragonball.")
                 .AddOption("I~see.", 255)
                 .AddAvatar(67).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, but you don`t have enough Dragon Balls.")
                   .AddOption("I~see.", 255)
                   .AddAvatar(67).FinalizeDialog();
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.CollectorZhao)]
        public static void CollectorZhao(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I~am~fond~of~collecting~all~kinds~of~treasure.~If~you~happen~to~have~any~Disguise Amulets,~Life Fruit Basket,~or")
                            .AddText("~PenitenceAmulets,~you~may~sell~them~to~me.~I~will~pay~you~ten~CPs~for~each~one.")
                    .AddOption("Here~are~my~Disguise~Amulets.", 1)
                    .AddOption("Here~are~my~Life~Fruit~Baskets.", 2)
                    .AddOption("Here~are~my~Penitence~Amulets.", 3)
                    .AddOption("Really?~I~don`t~believe~it.", 255)
                    .AddAvatar(10).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(723724, 1))
                        {
                            client.Inventory.Remove(723724, 1, stream);
                            client.Player.ConquerPoints += 15;


                            data.AddText("You receive 15 ConquerPoints for you item.")
                   .AddOption("Ok~thank~you.", 255)
                   .AddAvatar(10).FinalizeDialog();
                        }
                        else
                        {

                            data.AddText("You~do~not~have~what~I~want.~Whenever~you~have~one~of~DisguiseAmulets,~LifeFruitBaskets~or~PenitenceAmulets,~just~come~here.")
                   .AddOption("See~you~again.", 255)
                   .AddAvatar(10).FinalizeDialog();

                        }


                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Contain(723725, 1))
                        {
                            client.Inventory.Remove(723725, 1, stream);
                            client.Player.ConquerPoints += 15;


                            data.AddText("You receive 15 ConquerPoints for you item.")
                   .AddOption("Ok~thank~you.", 255)
                   .AddAvatar(10).FinalizeDialog();
                        }
                        else
                        {

                            data.AddText("You~do~not~have~what~I~want.~Whenever~you~have~one~of~DisguiseAmulets,~LifeFruitBaskets~or~PenitenceAmulets,~just~come~here.")
                   .AddOption("See~you~again.", 255)
                   .AddAvatar(10).FinalizeDialog();

                        }


                        break;
                    }
                case 3:
                    {
                        if (client.Inventory.Contain(723727, 1))
                        {
                            client.Inventory.Remove(723727, 1, stream);
                            client.Player.ConquerPoints += 15;


                            data.AddText("You receive 15 ConquerPoints for you item.")
                   .AddOption("Ok~thank~you.", 255)
                   .AddAvatar(10).FinalizeDialog();
                        }
                        else
                        {

                            data.AddText("You~do~not~have~what~I~want.~Whenever~you~have~one~of~DisguiseAmulets,~LifeFruitBaskets~or~PenitenceAmulets,~just~come~here.")
                   .AddOption("See~you~again.", 255)
                   .AddAvatar(10).FinalizeDialog();

                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.LotteryCollectorWong)]
        public static void LotteryCollectorWong(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I~am~fond~of~collecting~all~kinds~of~treasure.~If~you~happen~to~have~any~Disguise Amulets,~Life Fruit Basket,~or")
                            .AddText("~PenitenceAmulets,~you~may~sell~them~to~me.~I~will~pay~you~ten~CPs~for~each~one.")
                    .AddOption("Here~are~my~Disguise~Amulets.", 1)
                    .AddOption("Here~are~my~Life~Fruit~Baskets.", 2)
                    .AddOption("Here~are~my~Penitence~Amulets.", 3)
                    .AddOption("Really?~I~don`t~believe~it.", 255)
                    .AddAvatar(10).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(723724, 1))
                        {
                            client.Inventory.Remove(723724, 1, stream);
                            client.Player.ConquerPoints += 15;


                            data.AddText("You receive 15 ConquerPoints for you item.")
                   .AddOption("Ok~thank~you.", 255)
                   .AddAvatar(10).FinalizeDialog();
                        }
                        else
                        {

                            data.AddText("You~do~not~have~what~I~want.~Whenever~you~have~one~of~DisguiseAmulets,~LifeFruitBaskets~or~PenitenceAmulets,~just~come~here.")
                   .AddOption("See~you~again.", 255)
                   .AddAvatar(10).FinalizeDialog();

                        }


                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Contain(723725, 1))
                        {
                            client.Inventory.Remove(723725, 1, stream);
                            client.Player.ConquerPoints += 15;


                            data.AddText("You receive 15 ConquerPoints for you item.")
                   .AddOption("Ok~thank~you.", 255)
                   .AddAvatar(10).FinalizeDialog();
                        }
                        else
                        {

                            data.AddText("You~do~not~have~what~I~want.~Whenever~you~have~one~of~DisguiseAmulets,~LifeFruitBaskets~or~PenitenceAmulets,~just~come~here.")
                   .AddOption("See~you~again.", 255)
                   .AddAvatar(10).FinalizeDialog();

                        }


                        break;
                    }
                case 3:
                    {
                        if (client.Inventory.Contain(723727, 1))
                        {
                            client.Inventory.Remove(723727, 1, stream);
                            client.Player.ConquerPoints += 15;


                            data.AddText("You receive 15 ConquerPoints for you item.")
                   .AddOption("Ok~thank~you.", 255)
                   .AddAvatar(10).FinalizeDialog();
                        }
                        else
                        {

                            data.AddText("You~do~not~have~what~I~want.~Whenever~you~have~one~of~DisguiseAmulets,~LifeFruitBaskets~or~PenitenceAmulets,~just~come~here.")
                   .AddOption("See~you~again.", 255)
                   .AddAvatar(10).FinalizeDialog();

                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.LotteryLadyLuck)]
        public static void LotteryLadyLuck(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Look!~Here~is~the~LuckyBox,~a~kind~of~magical~box~which~makes~your~dream~come~true.")
                                            .AddOption("Get~me~out~of~here!", 1)
                                            .AddOption("Tell~me~more~about~it~please.", 2)
                                            .AddOption("Really?~I~don`t~believe~it.", 255)
                                            .AddAvatar(159).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        client.Teleport(217, 193, 1036);
                        break;
                    }
                case 2:
                    {
                        data.AddText("You~have~chance~to~get~whatever~you~desire~from~a~LuckyBox.~It~May~be~a~Dragonball,~+8~weapon,~or")
                            .AddText("~two-socket~boot,~you~don`t~know~what~you~will~get~from~the~Box,~it~totally~depends~on~your~luck.~Well,")
                            .AddText("~let`s~get~started~now.~Good~luck!")
                   .AddOption("Thanks~a~lot.", 255)
                   .AddAvatar(123).FinalizeDialog();

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.MarketLadyLuck)]
        public static void MarketLadyLuck(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Welcome to the Lottery Center! There are many Lucky Boxes here, each containing incredible treasures! Pay me a small lottery ticket to draw. You are allowed to enter the Lottery Center and try your luck upto 10 and 50 times for VIP-6 players. ")
                            .AddText("times a day. You will have extra lottery chances if you are a VIP player.")
                    .AddOption("Let`s~try~my~luck!", 1)
                    //.AddOption("Buy~3~Lottery~Tickets.", 2)
                    .AddOption("May~I~know~the~rules~first?", 3)
                    //.AddOption("How~about~the~VIP~privilege?", 4)
                    .AddOption("Nice~to~see~you.", 255)
                    .AddAvatar(123).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (client.Player.Level >= 70)
                        {
                            client.Teleport(39, 45, 700);
                        }
                        else
                        {
                            data.AddText("Sorry, you need level 70.")
                 .AddOption("Oops.", 255)
                 .AddAvatar(123).FinalizeDialog();
                        }

                        break;
                    }
                //case 2:
                //    {
                //        if (client.Inventory.HaveSpace(3) && client.Player.ConquerPoints >= 27)
                //        {
                //            client.Player.ConquerPoints -= 27;
                //            client.Inventory.Add(stream, 710212, 3);
                //        }
                //        else
                //        {
                //            data.AddText("You don`t have enough conquer points or enough space in your inventory.")
                //   .AddOption("Oops.", 255)
                //   .AddAvatar(123).FinalizeDialog();
                //        }


                //        break;
                //    }
                case 3:
                    {
                        data.AddText("There are many Lucky Boxes in the Lottery Center. Pay 1 lotto ticket, and you can draw from the Lucky Box!")
                            .AddText("~ Each player is allowed to draw from the Lottery up to 10 times, each day.")
                   .AddOption("Okay,~I~see.", 255)
                   .AddAvatar(123).FinalizeDialog();

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.RebirthMaster)]
        public static void RebirthMaster(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I devote all my life to the research of eternity. And finally I know the secret of rebirth! Well, anything I can help you with?")
                       .AddOption("1st~Rebirth.", 1)
                       .AddOption("2nd~Rebirth.", 4)
                       .AddOption("Reincarnation.", 5)
                       .AddOption("Reallot~my~Attribute~Points.", 8)
                       .AddOption("Just~passing~by.", 255)
                       .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 8:
                    {
                        data.AddText("Reborn~level~70+~players~can~redistribute~their~attribute~points~at~the~cost~of~a~dragonball.")
                    .AddOption("I~will~reallot~my~points.", 9).AddOption("Let~me~think~it~over.", 255)
                    .AddAvatar(67).FinalizeDialog();


                        break;
                    }
                case 9:
                    {
                        if (client.Player.Level >= 70 && client.Player.Reborn > 0)
                        {
                            if (client.Inventory.Contain(Database.ItemType.DragonBall, 1))
                            {
                                client.Inventory.Remove(Database.ItemType.DragonBall, 1, stream);

                                client.Player.Agility = 0;
                                client.Player.Strength = 0;
                                client.Player.Vitality = 1;
                                client.Player.Spirit = 0;

                                client.CreateBoxDialog("You have successfully reloaded your attribute points.");
                                if (client.Player.Reborn == 0)
                                {
                                    client.Player.Atributes = 0;
                                    Database.DataCore.AtributeStatus.ResetStatsNonReborn(client.Player);
                                    if (Database.AtributesStatus.IsWater(client.Player.Class))
                                    {
                                        if (client.Player.Level > 110)
                                            client.Player.Atributes = (ushort)((client.Player.Level - 110) * 3 + client.Player.ExtraAtributes);
                                    }
                                    else
                                    {
                                        if (client.Player.Level > 120)
                                            client.Player.Atributes = (ushort)((client.Player.Level - 120) * 3 + client.Player.ExtraAtributes);
                                    }
                                }
                                else if (client.Player.Reborn == 1)
                                {
                                    client.Player.Atributes = (ushort)(Database.Server.RebornInfo.ExtraAtributePoints(client.Player.FirstRebornLevel, client.Player.FirstClass)
                                        + 52 + 3 * (client.Player.Level - 15) + client.Player.ExtraAtributes);
                                }
                                else
                                {
                                    if (client.Player.SecoundeRebornLevel == 0)
                                        client.Player.SecoundeRebornLevel = 130;
                                    client.Player.Atributes = (ushort)(Database.Server.RebornInfo.ExtraAtributePoints(client.Player.FirstRebornLevel, client.Player.FirstClass) +
                                        Database.Server.RebornInfo.ExtraAtributePoints(client.Player.SecoundeRebornLevel, client.Player.SecondClass) + 52 + 3 * (client.Player.Level - 15) + client.Player.ExtraAtributes);
                                }
                                client.Player.SendUpdate(stream, client.Player.Strength, Game.MsgServer.MsgUpdate.DataType.Strength);
                                client.Player.SendUpdate(stream, client.Player.Agility, Game.MsgServer.MsgUpdate.DataType.Agility);
                                client.Player.SendUpdate(stream, client.Player.Spirit, Game.MsgServer.MsgUpdate.DataType.Spirit);
                                client.Player.SendUpdate(stream, client.Player.Vitality, Game.MsgServer.MsgUpdate.DataType.Vitality);
                                client.Player.SendUpdate(stream, client.Player.Atributes, Game.MsgServer.MsgUpdate.DataType.Atributes);
                            }
                            else
                            {
                                data.AddText("Sorry, you don't have one DragonBall.")
                   .AddOption("I~see.", 255)
                   .AddAvatar(67).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You~cannot~reallot~your~ability~points~unless~you~are~reborn~and~above~level~70.")
                  .AddOption("I~see", 255)
                  .AddAvatar(67).FinalizeDialog();
                        }


                        break;
                    }
                case 5:
                    {
                        data.AddText("From now on, have total control of your life! If you've been Reborn twice and are at least Level 110, just bring me some Oblivion Dew and I'll help you become Reincarnated! After the Reincarnation, your class skills will revert to level 0,")
                                                    .AddText("~but they`ll return to their previous levels when you reach Level 110, again. If your classes have been the same for all three lives, including your current one, you can learn the Pure Skills from your class trainer,")
                                                    .AddText("~in the job center.")
                                          .AddOption("I~want~to~get~Reincarnated.", 6)
                                          .AddAvatar(67).FinalizeDialog();


                        break;
                    }
                case 7:
                    {
                        if (client.Player.ConquerPoints >= 5000)
                        {
                            client.Player.ConquerPoints -= 5000;
                            client.Inventory.AddItemWitchStack(711083, 0, 1, stream, false);
                        }
                        else
                        {
                            data.Text("Sorry you dont Have 5.000 cps in your bag.");
                            data.Option("Ok.", 255)
                           .AddAvatar(67).FinalizeDialog();
                        }
                        break;
                    }
                case 6:
                    {
                        if (client.Player.Reborn == 2 && (client.Inventory.Contain(711083, 1, 1) || client.Inventory.Contain(711083, 1, 0)))
                        {
                            ActionQuery action = new ActionQuery()
                            {
                                Type = ActionType.OpenDialog,
                                ObjId = client.Player.UID,
                                dwParam = MsgServer.DialogCommands.Reincarnation,
                                wParam1 = client.Player.X,
                                wParam2 = client.Player.Y
                            };
                            client.Send(stream.ActionCreate(&action));


                        }
                        else
                        {
                            data.AddText("You have not been Reborn twice. I`m afraid you will not withstand the power of the Oblivion Dew. Come to me when you get stronger.")
                     .AddOption("Got~it!~Thanks!", 255)
                     .AddAvatar(67).FinalizeDialog();
                        }


                        break;
                    }
                case 1:
                    {
                        if (client.Player.Reborn == 0 && (client.Player.Level >= 110 && client.Player.Class == 135 || client.Player.Level >= 120 & client.Player.Class % 10 == 5))
                        {
                            if (client.Inventory.Contain(721259, 1) || client.Inventory.Contain(721259, 1, 1))
                            {
                                data.AddText("There are two kinds of reborns. One is the normal one and the second one is blessed.")
                                    .AddText("The normal reborn will give you the chance to get a Super Gem and the blessed reborn will set a -1 into one of your equipment that you wear during the reborn. What do you chose?")
                             .AddOption("Normal reborn.", 2)
                             .AddOption("Blessed reborn.", 3)
                             .AddOption("I`ll~think~about~it.", 255)
                             .AddAvatar(67).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you don't have CelestialStone.")
                      .AddOption("I~see.", 255)
                      .AddAvatar(67).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You~haven`t~reached~the~highest~rank~yet.~Please~work~harder. You cannot reborn if your level is not 110+ for water saints and 120+ for other masters.")
                        .AddOption("I~see.", 255)
                        .AddAvatar(67).FinalizeDialog();
                        }

                        break;
                    }
                case 4:
                    {
                        if (client.Player.Reborn == 1 && (client.Player.Level >= 110 && client.Player.Class == 135 || client.Player.Level >= 120 & client.Player.Class % 10 == 5))
                        {
                            if (client.Inventory.Contain(723701, 1) || client.Inventory.Contain(723701, 1, 1))
                            {
                                data.AddText("You don't worry, it's not gonna hurt you a bit when getting the third life. You just need an exemption token and it's all going to be fine.")
                             .AddOption("Here is the ExemptionToken.", 3)
                             .AddOption("I`ll~think~about~it.", 255)
                             .AddAvatar(67).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you don't have ExemptionToken.")
                      .AddOption("I~see.", 255)
                      .AddAvatar(67).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry,~you~are~ineligible~for~second~rebirth.~Please~wait~until~you~are~a~level~120~reborn~person.")
                        .AddOption("I~see.", 255)
                        .AddAvatar(67).FinalizeDialog();
                        }



                        break;
                    }
                case 2:
                    {
                        data.AddText("Select the super gem you desire.")
                      .AddOption("SuperPhoenixGem.", 203)
                      .AddOption("SuperDragonGem.", 213)
                      .AddOption("SuperFuryGem.", 223)
                      .AddOption("SuperRainbowGem.", 233)
                      .AddOption("SuperVioletGem.", 253)
                      .AddOption("SuperMoonGem.", 254)
                      .AddOption("SuperKylinGem", 243)
                      .AddOption("I`ll~think~about~it.", 255)
                      .AddAvatar(67).FinalizeDialog();


                        break;
                    }
                case 203:
                case 213:
                case 223:
                case 233:
                case 253:
                case 254:
                case 243:
                    {
                        if (client.Player.Reborn == 0)
                        {
                            client.RebornGem = (uint)(Option % 100);
                            if (client.RebornGem == 254)
                                client.RebornGem = 263;
                        }
                        data.AddText("Select the class you want to reborn in.")
                      .AddOption("Trojan.", 11)
                      .AddOption("Warrior.", 21)
                      .AddOption("Archer.", 41)
                      .AddOption("WaterTaoist.", 132)
                      .AddOption("FireTaoist.", 142)
                      .AddOption("Ninja.", 51)
                      .AddOption("Monk", 61)
                      .AddOption("I`ll~think~about~it.", 255)
                      .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        data.AddText("Select the class you want to reborn in.")
                    .AddOption("Trojan.", 11)
                    .AddOption("Warrior.", 21)
                    .AddOption("Archer.", 41)
                    .AddOption("WaterTaoist.", 132)
                    .AddOption("FireTaoist.", 142)
                    .AddOption("Ninja.", 51)
                    .AddOption("Monk", 61)
                    .AddOption("I`ll~think~about~it.", 255)
                    .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 11:
                case 21:
                case 41:
                case 132:
                case 142:
                case 51:
                case 161:
                case 61:
                case 81:
                case 71:
                    {

                        if (!client.Inventory.HaveSpace(4))
                        {
                            data.AddText("Sorry, but you need atleast 4 free spaces in your inventory.")
            .AddOption("I~see.", 255)
            .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        if (client.Player.Reborn == 0 && (client.Player.Level >= 110 && client.Player.Class == 135 || client.Player.Level >= 120 & client.Player.Class % 10 == 5))
                        {
                            if (client.Inventory.Contain(721259, 1) || client.Inventory.Contain(721259, 1, 1))
                            {
                                client.Inventory.Remove(721259, 1, stream);
                                if (client.RebornGem != 0)
                                {
                                    client.Inventory.Add(stream, (uint)(700000 + client.RebornGem), 1);
                                    client.RebornGem = 0;

                                }
                                else
                                {
                                    foreach (var item in client.Equipment.CurentEquip)
                                    {
                                        if (item.Position != (ushort)Role.Flags.ConquerItem.Steed)
                                        {
                                            if (item.Bless == 0)
                                            {
                                                item.Bless = 1;
                                                item.Mode = Role.Flags.ItemMode.Update;
                                                item.Send(client, stream);
                                                break;
                                            }
                                        }
                                    }
                                }
                                switch (Option)
                                {
                                    case 161:
                                    case 11:
                                    case 21:
                                    case 51:
                                    case 61:
                                    case 71:
                                    case 81:
                                        {
                                            client.Inventory.Add(stream, 410077, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false, Role.Flags.ItemEffect.Poison);
                                            break;
                                        }
                                    case 41:
                                        {
                                            client.Inventory.Add(stream, 500077, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false, Role.Flags.ItemEffect.Shield);
                                            break;
                                        }
                                    case 132:
                                    case 142:
                                        {
                                            client.Inventory.Add(stream, 421077, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false, Role.Flags.ItemEffect.MP);
                                            break;
                                        }
                                }

                                Database.Server.RebornInfo.Reborn(client.Player, Option, stream);
                            }
                            else
                            {
                                data.AddText("Sorry, you don't have CelatialStone.")
                      .AddOption("I~see.", 255)
                      .AddAvatar(67).FinalizeDialog();
                            }
                        }
                        else if (client.Player.Reborn == 1 && (client.Player.Level >= 110 && client.Player.Class == 135 || client.Player.Level >= 120 & client.Player.Class % 10 == 5))
                        {
                            if (client.Inventory.Contain(723701, 1) || client.Inventory.Contain(723701, 1, 1))
                            {
                                client.Inventory.Remove(723701, 1, stream);
                                Database.Server.RebornInfo.Reborn(client.Player, Option, stream);
                            }
                            else
                            {
                                data.AddText("Sorry, you don't have ExemptionToken.")
                      .AddOption("I~see.", 255)
                      .AddAvatar(67).FinalizeDialog();
                            }
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.MountRetailer)]
        public static void MountRetailer(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.MountTrainer, client.Player.Class, 702);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                        {
                            data.AddText("Wow, it seems that I need to get some more steeds for all of you guys to choose! Maybe I`ll be a millionaire. It`s just a")
                               .AddText("~matter of time.")
                              .AddOption("Yeah.~Tell~me~more.", 2)
                              .AddOption("I~want~to~buy~a~Steed.", 1)
                              .AddAvatar(15).FinalizeDialog();
                        }
                        else
                            goto case 1;

                        break;
                    }
                case 1:
                    {
                        ActionQuery action = new ActionQuery()
                        {
                            ObjId = client.Player.UID,
                            dwParam = (uint)Role.Flags.NpcType.DialogAndGui,
                            Type = ActionType.OpenGuiNpc,
                            Timestamp = (int)client.ActiveNpc,
                            wParam1 = client.Player.X,
                            wParam2 = client.Player.Y,
                            dwParam3 = client.Player.Map
                        };
                        client.Send(stream.ActionCreate(&action));
                        break;
                    }
                case 2:
                    {
                        data.AddText("There are a few kinds of steeds here, with many more that you can get. A good steed is a pretty convenient thing to have.")
                               .AddText("~Able to take you out for relaxing rides around the country, or ready to help you when you are fighting for your life!")
                              .AddOption("Looking~forward~to~it!", 3)
                              .AddAvatar(15).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        data.AddText("You can unite 2 mounts with different appearances to breed a new mount. In this way, you can also improve on your steed`s")
                                  .AddText("~lineage. You can talk to the SteedKeeper beside me if you want to learn more about it.")
                                 .AddOption("Sure.", 4)
                                 .AddAvatar(15).FinalizeDialog();


                        break;
                    }
                case 4:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.CreateBoxDialog("You`ve~learned~something~about~steeds~and~received~EXP~worth~1/12~of~an~EXP~Ball!");
                            client.GainExpBall(100, true, Role.Flags.ExperienceEffect.bless);
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.MountTrainer)]
        public static void MountTrainer(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.MountTrainer, client.Player.Class, 702);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.Level > 25)
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished) == false)
                            {
                                data.AddText("Hey! Guys, look at me! Good Steeds! Nah, not me. I mean there are some good steeds for you to choose. Would you like to take a")
                            .AddText("~look?")
                           .AddOption("Steed?~Why~do~I~need~it?", 20)
                           .AddOption("I~want~to~learn~to~ride.", 10)
                           .AddAvatar(15).FinalizeDialog();
                            }
                            else
                            {
                                goto case 10;
                            }
                        }
                        else
                        {

                            data.AddText("I`m the best Mount Trainer in the Empire. You can learn the Mount Skills from me. It costs 50,000 silver for the Riding skill,")
                                .AddText("~100,000 silver for the Spook skill, and 1,000,000 silver for the War Cry skill. Is there something you needed?")
                                .AddOption("Learn~Riding" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Riding) ? "(Learnt)" : "(50,000~silver)") + "", 1)
                                .AddOption("Learn~Spook" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Spook) ? "(Learnt)" : "(100,000~silver)") + "", 3)
                                .AddOption("Learn~War~Cry" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.WarCry) ? "(Learnt)" : "(1,000,000~silver)") + "", 5)
                                .AddOption("Just~passing~by.", 255)
                                .AddAvatar(15).FinalizeDialog();
                        }


                        break;
                    }
                case 20:
                    {
                        data.AddText("A good steed can increase your movement and efficiency. Why not pay a visit to the")
                           .AddText("~Steed Dealer behind me to learn about the different kinds of steeds?")
                          .AddOption("As~you~wish.", 21)
                          .AddAvatar(15).FinalizeDialog();


                        break;
                    }
                case 21:
                    {
                        data.AddText("Pay~a~visit~to~the~Mount~Retailer.")
                             .AddOption("Yes.", 22)
                             .AddOption("No.", 255)
                             .AddAvatar(15).FinalizeDialog();


                        break;
                    }
                case 22:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest, 0);
                        client.Player.QuestGUI.SendAutoPatcher(ActiveQuest.FinishNpcId.Map, ActiveQuest.FinishNpcId.X, ActiveQuest.FinishNpcId.Y, ActiveQuest.FinishNpcId.ID);
                        break;
                    }
                case 10:
                    {
                        data.AddText("I`m the best Mount Trainer in the Empire. You can learn the Mount Skills from me. It costs 50,000 silver for the Riding skill,")
                                                       .AddText("~100,000 silver for the Spook skill, and 1,000,000 silver for the War Cry skill. Is there something you needed?")
                                                       .AddOption("Learn~Riding" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Riding) ? "(Learnt)" : "(50,000~silver)") + "", 1)
                                                       .AddOption("Learn~Spook" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Spook) ? "(Learnt)" : "(100,000~silver)") + "", 3)
                                                       .AddOption("Learn~War~Cry" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.WarCry) ? "(Learnt)" : "(1,000,000~silver)") + "", 5)
                                                       .AddOption("Just~passing~by.", 255)
                                                       .AddAvatar(15).FinalizeDialog();


                        break;
                    }
                case 7:
                    {
                        data.AddText("It`s upgradable. You`ll need to equip a two-handed weapon and be mounted to use this skill. You will attack a target area within 15 paces and cause")
                         .AddText("~70%damage on all targets within 3 paces. It costs 30 Stamina. Are you sure you want to pay 500,000 silver to learn it?")
                        .AddOption("Yes.", 8)
                        .AddOption("I`ll~think~about~it.", 255)
                        .AddAvatar(15).FinalizeDialog();


                        break;
                    }
                case 8:
                    {
                        if (client.Player.Level < 30)
                        {
                            data.AddText("Sorry, but you`ll need to reach Level 30, first.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(15).FinalizeDialog();
                            break;
                        }
                        if (client.Player.Money >= 500000)
                        {
                            var SpellID = Role.Flags.SpellID.ChargingVortex;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {
                                data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(15).FinalizeDialog();
                                break;
                            }
                            client.Player.Money -= 500000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                            client.MySpells.Add(stream, (ushort)SpellID);
                            data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                     .AddOption("Ok , thank you.", 255)
                                                                     .AddAvatar(15).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don`t have 500,000 silver. You are unable to learn the ChargingVortex skill.").AddOption("Oh,~I`ll~fetch~some~money!", 255).AddAvatar(15).FinalizeDialog();
                        }


                        break;
                    }
                case 5:
                    {
                        data.AddText("After you equip and ride your mount, you can right click the War Cry skill to dismount the players in a certain area whose")
                          .AddText("~mounts` Lineage Levels are lower than yours and force the Vigors of their mounts drop to 0. Cool down time: 60 seconds.")
                         .AddOption("Learn~War~Cry.", 6)
                         .AddOption("I`ll~think~about~it.", 255)
                         .AddAvatar(15).FinalizeDialog();

                        break;
                    }
                case 6:
                    {
                        if (client.Player.Money >= 1000000)
                        {
                            var SpellID = Role.Flags.SpellID.WarCry;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {
                                data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(15).FinalizeDialog();
                                break;
                            }
                            client.Player.Money -= 1000000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                            client.MySpells.Add(stream, (ushort)SpellID);
                            data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                     .AddOption("Ok , thank you.", 255)
                                                                     .AddAvatar(15).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don`t have 1,000,000 silver. You are unable to learn the war cry skill.").AddOption("Oh,~I`ll~fetch~some~money!", 255).AddAvatar(15).FinalizeDialog();
                        }

                        break;
                    }
                case 3:
                    {
                        data.AddText("After you equip and ride your mount, you can right click the Spook skill to dismount a player whose mount`s Lineage Level is")
                          .AddText("~lower than yours and force the Vigor of his mount drop to 0. Cool down time: 15 seconds.")
                         .AddOption("Learn~Spook.", 4)
                         .AddOption("I`ll~think~about~it.", 255)
                         .AddAvatar(15).FinalizeDialog();


                        break;
                    }
                case 4:
                    {
                        if (client.Player.Money >= 100000)
                        {
                            var SpellID = Role.Flags.SpellID.Spook;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {
                                data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(15).FinalizeDialog();
                                break;
                            }
                            client.Player.Money -= 100000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                            client.MySpells.Add(stream, (ushort)SpellID);
                            data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                     .AddOption("Ok , thank you.", 255)
                                                                     .AddAvatar(15).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don`t have 100,000 silver. You are unable to learn the Spook skill.").AddOption("Oh,~I`ll~fetch~some~money!", 255).AddAvatar(15).FinalizeDialog();
                        }


                        break;
                    }
                case 1:
                    {
                        data.AddText("After the mount is equipped, you can right click the (Riding) button or drag the button into the shortcut column to ride")
                           .AddText("~your mount. The higher the Lineage Level, the higher Vigor and the less limits for your mount!")
                          .AddOption("Learn~Riding~skill.", 2)
                          .AddOption("I`ll~think~about~it.", 255)
                          .AddAvatar(15).FinalizeDialog();


                        break;
                    }
                case 2:
                    {
                        if (client.Player.Money >= 50000)
                        {
                            var SpellID = Role.Flags.SpellID.Riding;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {
                                data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(15).FinalizeDialog();
                                break;
                            }
                            client.Player.Money -= 50000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                            client.MySpells.Add(stream, (ushort)SpellID);
                            data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                     .AddOption("Ok , thank you.", 255)
                                                                     .AddAvatar(15).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don`t have 50,000 silver. You are unable to learn the Riding skill.").AddOption("Oh,~I`ll~fetch~some~money!", 255).AddAvatar(15).FinalizeDialog();
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.PromotionTaoist)]
        public static void PromotionTaoist(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            if (!(client.Player.Class >= 130 && client.Player.Class <= 145 || client.Player.Class == 100 || client.Player.Class == 101))
            {
                data.AddText("Sorry, but you are not a Taoist.").AddOption("Alright.", 255).AddAvatar(6).FinalizeDialog();
                return;
            }


            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TCCaptain, client.Player.Class, 0, p => p.FinishNpcId.Map == 1004);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.IsActiveQuest(ActiveQuest.MissionId))
                        {
                            data.AddText("Every Taoist wants holy spirit, and few gain. You`re gifted in controlling inner power. Just pay more attention to details, you may be the next achiever!")
                                .AddOption("Learn~about~Promotion.", 110);
                            if (client.Player.Class == 100)
                                data.AddOption("I~want~to~get~promoted", 1);
                            else if (client.Player.Class == 101)
                                data.AddOption("I~want~to~get~promoted.", 3);
                            else
                                data.AddOption("I~want~to~get~promoted.", 53);
                            data.AddOption("I`ll~think~about~it.", 255)
                            .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        if (client.Player.Class == 100)
                        {

                            data.AddText("Every Taoist wants holy spirit, and few gain. You`re gifted in controlling inner power. Just pay more attention to details, you may be the next achiever!")
                            .AddOption("I~want~to~get~promoted", 1)
                            .AddOption("I`ll~think~about~it.", 255)
                            .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        else
                        {
                            data.AddText("Every Taoist wants holy spirit, and few gain. You`re gifted in controlling inner power. Just pay more attention to details, you may be the next achiever!");

                            if (client.Player.Class == 100 || client.Player.Class == 101)
                                data.AddOption("I~want~to~get~promoted.", 3);
                            else
                                data.AddOption("I~want~to~get~promoted.", 53);
                            data.AddOption("Learn~class~skills.", 10)
                            .AddOption("Learn~Pure~Skills.", 50)
                            .AddOption("Nothing.", 255)
                            .AddAvatar(6).FinalizeDialog();
                        }


                        break;
                    }
                case 110:
                    {
                        data.AddText("Ah, you look promising. I bet Taoist will be a big name in a short time. Listen, you can learn class skills and")
                                  .AddText("~get promoted here to start your life. Would you like to learn something about your class promotion and quests?.")
                        .AddOption("Thanks.", 111)
                        .AddAvatar(259).FinalizeDialog();

                        break;
                    }
                case 111:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Add(stream, 3005160);
                            client.GainExpBall(300, true, Role.Flags.ExperienceEffect.angelwing);
                        }
                        data.AddText("Wow, look at you, you`ll be another hero in the world of Conquer! Here, you can learn some skills and get promoted! Do you want to learn more?")
                                    .AddText("~get promoted here to start your life. Would you like to learn something about your class promotion and quests?.");
                        if (client.Player.Class == 100)
                            data.AddOption("I~want~to~get~promoted", 1);
                        else if (client.Player.Class == 101)
                            data.AddOption("I~want~to~get~promoted.", 3);
                        else
                            data.AddOption("I~want~to~get~promoted.", 53);
                        data.AddAvatar(259).FinalizeDialog();

                        break;
                    }
                case 53:
                    {
                        switch (client.Player.Class)
                        {
                            case 142:
                            case 132:
                                {
                                    if (client.Player.Level < 70)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 70+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(6).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (!client.Inventory.Contain(1080001, 1) && !client.Inventory.Contain(1080001, 1, 1))
                                        {
                                            data.AddText("I'm sorry but you need to have 1 Emerald at your inventory , to get one go and kill some HillMonsters ( Desert City ) to get one .")
                                                                     .AddOption("I~see.", 255)
                                                                     .AddAvatar(6).FinalizeDialog();
                                            break;
                                        }
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            if (client.Player.Reborn == 0)
                                            {
                                                if (!client.Inventory.HaveSpace(2))
                                                {
                                                    data.AddText("Please make 2 more spaces in your inventory")
                                                                   .AddOption("Let me check.", 255)
                                                                   .AddAvatar(6).FinalizeDialog();
                                                    break;
                                                }
                                                //
                                                client.Inventory.Add(stream, 152129, 1);//152129 BoneBracelet
                                                client.Inventory.Add(stream, 134069, 1);//134069 CraneVestment
                                                client.SendSysMesage("You received 1 (Super)BoneBracelet and 1 (Super)CraneVestment.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                                            }
                                            client.Inventory.Remove(1080001, 1, stream);
                                            client.Player.Class++;
                                            data.AddText("Excellent! You`ve learned ways of the Taoist. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                              .AddOption("Thank~you,~Master.", 255)
                                                                              .AddAvatar(6).FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(6).FinalizeDialog();
                                        }
                                    }

                                    break;
                                }
                            case 143:
                            case 133:
                                {
                                    if (client.Player.Level < 100)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 100+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(6).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (!client.Inventory.Contain(Database.ItemType.Meteor, 1))
                                        {
                                            data.AddText("I'm sorry but you need to have 1 Meteor at your inventory.")
                                                                     .AddOption("I~see.", 255)
                                                                     .AddAvatar(6).FinalizeDialog();
                                            break;
                                        }
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            if (client.Player.Reborn == 0)
                                            {
                                                if (!client.Inventory.HaveSpace(1))
                                                {
                                                    data.AddText("Please make 1 more space in your inventory")
                                                                   .AddOption("Let me check.", 255)
                                                                   .AddAvatar(6).FinalizeDialog();
                                                    break;
                                                }//421199 CloudBacksword
                                                client.Inventory.Add(stream, 421199, 1, 2, 1, 0, Role.Flags.Gem.EmptySocket, Role.Flags.Gem.EmptySocket, true);
                                                client.SendSysMesage("You received 1 (Super)+2CloudBacksword 2 socket.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                                            }
                                            client.Inventory.Remove(Database.ItemType.Meteor, 1, stream);
                                            client.Player.Class++;
                                            data.AddText("Excellent! You`ve learned ways of the Taoist. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                              .AddOption("Thank~you,~Master.", 255)
                                                                              .AddAvatar(6).FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(6).FinalizeDialog();
                                        }
                                    }

                                    break;
                                }
                            case 144:
                            case 134:
                                {
                                    if (client.Player.Level < 110)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 110+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(6).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (!client.Inventory.Contain(Database.ItemType.MoonBox, 1))
                                        {
                                            data.AddText("I'm sorry but you need to have 1 MoonBox at your inventory.")
                                                                     .AddOption("I~see.", 255)
                                                                     .AddAvatar(6).FinalizeDialog();
                                            break;
                                        }
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            if (!client.Inventory.HaveSpace(1))
                                            {
                                                data.AddText("Please make 1 more space in your inventory")
                                                               .AddOption("Let me check.", 255)
                                                               .AddAvatar(6).FinalizeDialog();
                                                break;
                                            }
                                            if (client.Player.Reborn == 0)
                                            {//134089 RoyalGown
                                                client.Inventory.Add(stream, 134089, 1, 3, 1, 0, Role.Flags.Gem.EmptySocket, Role.Flags.Gem.NoSocket, true);
                                                client.SendSysMesage("You received 1 (Super)+3RoyalGown 1 socket.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                                            }
                                            client.Inventory.Remove(Database.ItemType.MoonBox, 1, stream);
                                            client.Inventory.Add(stream, Database.ItemType.DragonBall, 1);
                                            client.SendSysMesage("You received DragonBall.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);

                                            client.Player.Class++;
                                            data.AddText("Excellent! You`ve learned ways of the Taoist. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                              .AddOption("Thank~you,~Master.", 255)
                                                                              .AddAvatar(6).FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(6).FinalizeDialog();
                                        }
                                    }


                                    break;
                                }
                            default:
                                {
                                    data.AddText("You cannot be promoted anymore. You have mastered your class")
                                                                                                        .AddOption("Thank~you,~Master.", 255)
                                                                                                        .AddAvatar(6).FinalizeDialog();


                                    break;
                                }
                        }
                        break;
                    }
                case 50:
                    {
                        if (client.Player.Class > 101)
                        {
                            if (Database.AtributesStatus.IsWater(client.Player.Class))
                            {
                                data.AddText("Only Pure Fire Taoists, who have trained as Water Taoists for all 3 lives, can learn the Pure Skills, Azure Shield. If you`ve been Reborn twice, but are not a Pure Fire Taoist, you can take some")
                                    .AddText("~Oblivion Dew to the Reincarnation Seer in the Market and be Reincarnated! That way, you can obtain a new class combination. Oh, by the way, Chain Bolt is a XP skill, and it`ll allow you to throw")
                                    .AddText("~bolts of lightning at several targets during the XP time.")
                          .AddOption("AzureShield" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.AzureShield) ? "(Learnt)" : "(Lv.40)") + "", 51)
                          .AddOption("I`ll~think~about~it.", 255)
                          .AddAvatar(6).FinalizeDialog();
                            }
                            else if (Database.AtributesStatus.IsFire(client.Player.Class))
                            {
                                data.AddText("Only Pure Fire Taoists, who have trained as Fire Taoists for all 3 lives, can learn the Pure Skills, Heaven Blade. If you`ve been Reborn twice, but are not a Pure Fire Taoist, you can take some")
                                   .AddText("~Oblivion Dew to the Reincarnation Seer in the Market and be Reincarnated! That way, you can obtain a new class combination. Oh, by the way, Chain Bolt is a XP skill, and it`ll allow you to throw")
                                   .AddText("~bolts of lightning at several targets during the XP time.")
                         .AddOption("Learn~Heaven~Blade" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.HeavenBlade) ? "(Learnt)" : "(Lv.40)") + "", 52)
                         .AddOption("I`ll~think~about~it.", 255)
                         .AddAvatar(6).FinalizeDialog();
                            }
                        }


                        break;
                    }
                case 51:
                    {
                        if (Database.AtributesStatus.IsWater(client.Player.Class))
                        {
                            if (client.Player.Reborn < 2)
                            {
                                data.AddText("Only pure Fire Taoists, who have trained as Water Taoists for all 3 of their lives, can learn the Pure Skill, AzureShield.")
                                                                .AddOption("Ok~I~see.", 255)
                                                                .AddAvatar(6).FinalizeDialog();
                                break;
                            }
                            if (!Database.AtributesStatus.IsWater(client.Player.FirstClass) || !Database.AtributesStatus.IsWater(client.Player.SecondClass))
                            {
                                data.AddText("Only pure water Taoists, who have trained as Water Taoists for all 3 of their lives, can learn the Pure Skill, AzureShield.")
                                                                                       .AddOption("Ok~I~see.", 255)
                                                                                       .AddAvatar(6).FinalizeDialog();
                                break;
                            }
                            if (client.Player.Level < 40)
                            {
                                data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                      .AddOption("Okay.~I~see..", 255)
                                                      .AddAvatar(6).FinalizeDialog();
                                break;
                            }
                            var SpellID = Role.Flags.SpellID.AzureShield;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {
                                data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                                break;
                            }
                            client.MySpells.Add(stream, (ushort)SpellID);
                            data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                     .AddOption("Ok , thank you.", 255)
                                                                     .AddAvatar(6).FinalizeDialog();
                        }


                        break;
                    }
                case 52:
                    {
                        if (Database.AtributesStatus.IsFire(client.Player.Class))
                        {
                            if (client.Player.Reborn < 2)
                            {
                                data.AddText("Only pure Fire Taoists, who have trained as Fire Taoists for all 3 of their lives, can learn the Pure Skill, Heaven Blade.")
                                                                .AddOption("Ok~I~see.", 255)
                                                                .AddAvatar(6).FinalizeDialog();
                                break;
                            }
                            if (!Database.AtributesStatus.IsFire(client.Player.FirstClass) || !Database.AtributesStatus.IsFire(client.Player.SecondClass))
                            {
                                data.AddText("Only pure Fire Taoists, who have trained as Fire Taoists for all 3 of their lives, can learn the Pure Skill, Heaven Blade.")
                                                                                       .AddOption("Ok~I~see.", 255)
                                                                                       .AddAvatar(6).FinalizeDialog();
                                break;
                            }
                            if (client.Player.Level < 40)
                            {
                                data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                      .AddOption("Okay.~I~see..", 255)
                                                      .AddAvatar(6).FinalizeDialog();
                                break;
                            }
                            var SpellID = Role.Flags.SpellID.HeavenBlade;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {
                                data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                                break;
                            }
                            client.MySpells.Add(stream, (ushort)SpellID);
                            data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                     .AddOption("Ok , thank you.", 255)
                                                                     .AddAvatar(6).FinalizeDialog();
                        }

                        break;
                    }
                case 10:
                    {
                        data.AddText("I know many types of skills and spells for a true Taoist, like you! Which of them do you want to learn, first?")
                          .AddOption("Learn~magic.", 11)
                          .AddOption("Learn~XP~Skill.", 12)
                          //.AddOption("Universal~skills.", 13)
                          .AddOption("I`ll~think~about~it.", 255)
                          .AddAvatar(6).FinalizeDialog();


                        break;
                    }
                case 12:
                    {
                        data.AddText("The Taoist`s skills are varied and powerful. Which skill do you want to learn?")
                        .AddOption("ChainBolt" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.ChainBolt) ? "(Learnt)" : "(Lv.1)") + "", 40)
                        .AddOption("Lightning" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Lightning) ? "(Learnt)" : "(Lv.3)") + "", 41)
                        .AddOption("Vulcano" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Vulcano) ? "(Learnt)" : "(Lv.40)") + "", 42);
                        if (client.Player.Class > 101)
                        {
                            if (Database.AtributesStatus.IsWater(client.Player.Class))
                            {
                                data.AddOption("Revive" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Revive) ? "(Learnt)" : "[Lv.40]") + "", 43);
                            }
                        }
                        data.AddOption("SpeedLightning" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.SpeedLightning) ? "(Learnt)" : "[Lv.40]") + "", 44);
                        data.AddOption("I`ll~think~about~it.", 255).AddAvatar(6).FinalizeDialog();


                        break;
                    }
                case 44:
                    {
                        if (client.Player.Level < 40)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.SpeedLightning;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(6).FinalizeDialog();


                        break;
                    }
                case 43:
                    {
                        if (Database.AtributesStatus.IsWater(client.Player.Class))
                        {
                            if (client.Player.Level < 40)
                            {
                                data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                      .AddOption("Okay.~I~see..", 255)
                                                      .AddAvatar(6).FinalizeDialog();
                                break;
                            }
                            var SpellID = Role.Flags.SpellID.Revive;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {
                                data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                                break;
                            }
                            client.MySpells.Add(stream, (ushort)SpellID);
                            data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                     .AddOption("Ok , thank you.", 255)
                                                                     .AddAvatar(6).FinalizeDialog();
                        }


                        break;
                    }
                case 42:
                    {
                        if (client.Player.Level < 40)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.Vulcano;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 41:
                    {
                        if (client.Player.Level < 3)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 3 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.Lightning;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 40:
                    {
                        var SpellID = Role.Flags.SpellID.ChainBolt;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 58:
                    {
                        if (client.Player.Level < 93)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.FireofHell;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 11:
                    {
                        data.AddText("The Taoist`s skills are varied and powerful. Which skill do you want to learn?")
                           .AddOption("Thunder" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Thunder) ? "(Learnt)" : "(Lv.1)") + "", 20)
                           .AddOption("Cure" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Cure) ? "(Learnt)" : "(Lv.1)") + "", 21)
                           .AddOption("Meditation" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Meditation) ? "(Learnt)" : "(Lv.44)") + "", 22);
                        if (client.Player.Class >= 101)
                        {
                            data.AddOption("ChainBolt" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.ChainBolt) ? "(Learnt)" : "[Lv.1]") + "", 70)
                                .AddOption("Lightning" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Lightning) ? "(Learnt)" : "[Lv.1]") + "", 71)
                                .AddOption("Next page.", 241);

                        }
                        data.AddOption("I`ll~think~about~it.", 255).AddAvatar(6).FinalizeDialog();


                        break;
                    }
                case 241:
                    {
                        if (Database.AtributesStatus.IsFire(client.Player.Class))
                        {
                            data.AddText("The Taoist`s skills are varied and powerful. Which skill do you want to learn?")
                            .AddOption("Fire" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Fire) ? "(Learnt)" : "[Lv.40][Thunder~Level~4]") + "", 23)
                                .AddOption("Tornado" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Tornado) ? "(Learnt)" : "[Lv.92][Fire~Level~3]") + "", 24)
                                .AddOption("FireRing" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.FireRing) ? "(Learnt)" : "(Lv.55)") + "", 25)
                                .AddOption("FireMeteor" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.FireMeteor) ? "(Learnt)" : "(Lv.52)") + "", 26)
                                .AddOption("FireCircle" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.FireCircle) ? "(Learnt)" : "(Lv.65)") + "", 27)
                               .AddOption("Bomb" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Bomb) ? "(Learnt)" : "(Lv.82)") + "", 28)
                           .AddOption("FireofHell" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.FireofHell) ? "(Learnt)" : "(Lv.93)") + "", 58).AddAvatar(6).FinalizeDialog();
                        }
                        else if (Database.AtributesStatus.IsWater(client.Player.Class))
                        {
                            data.AddText("The Taoist`s skills are varied and powerful. Which skill do you want to learn?");
                            data.AddOption("HealingRain" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.HealingRain) ? "(Learnt)" : "(Lv.40)") + "", 29)
                                .AddOption("StarofAccuracy" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.StarofAccuracy) ? "(Learnt)" : "(Lv.45)") + "", 30)
                                .AddOption("MagicShield" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.MagicShield) ? "(Learnt)" : "(Lv.50)") + "", 31)
                                .AddOption("Stigma" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Stigma) ? "(Learnt)" : "(Lv.55)") + "", 32)
                                .AddOption("Invisibility" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Invisibility) ? "(Learnt)" : "(Lv.60)") + "", 33)
                                .AddOption("Pray" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Pray) ? "(Learnt)" : "(Lv.70)") + "", 34)
                                .AddOption("AdvancedCure" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.AdvancedCure) ? "(Learnt)" : "(Lv.81)") + "", 35)
                                .AddOption("Nectar" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Nectar) ? "(Learnt)" : "(Lv.94)") + "", 36).AddAvatar(6).FinalizeDialog(); ;
                        }
                        break;
                    }
                case 70:
                    {
                        var SpellID = Role.Flags.SpellID.ChainBolt;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(6).FinalizeDialog();


                        break;
                    }
                case 71:
                    {
                        var SpellID = Role.Flags.SpellID.Lightning;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(6).FinalizeDialog();


                        break;
                    }
                case 28:
                    {
                        if (client.Player.Level < 82)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 82 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.Bomb;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(6).FinalizeDialog();


                        break;
                    }
                case 27:
                    {
                        if (client.Player.Level < 65)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 65 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.FireCircle;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(6).FinalizeDialog();


                        break;
                    }
                case 26:
                    {
                        if (client.Player.Level < 52)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 52 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.FireMeteor;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 25:
                    {
                        if (client.Player.Level < 55)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 55 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.FireRing;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 24:
                    {
                        if (client.Player.Level < 92)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 92 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        MsgServer.MsgSpell spell;
                        if (client.MySpells.ClientSpells.TryGetValue((ushort)Role.Flags.SpellID.Fire, out spell))
                        {
                            if (spell.Level == 3)
                            {
                                var SpellID = Role.Flags.SpellID.Tornado;
                                if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                                {
                                    data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                                    break;
                                }
                                client.MySpells.Add(stream, (ushort)SpellID);
                                data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                         .AddOption("Ok , thank you.", 255)
                                                                         .AddAvatar(6).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry. but you need thunder level 4.")
                                                     .AddOption("Okay.~I~see..", 255)
                                                     .AddAvatar(6).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry. but you need thunder level 4.")
                                                 .AddOption("Okay.~I~see..", 255)
                                                 .AddAvatar(6).FinalizeDialog();
                        }

                        break;
                    }
                case 23:
                    {
                        if (client.Player.Level < 40)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        MsgServer.MsgSpell spell;
                        if (client.MySpells.ClientSpells.TryGetValue((ushort)Role.Flags.SpellID.Thunder, out spell))
                        {
                            if (spell.Level == 4)
                            {
                                var SpellID = Role.Flags.SpellID.Fire;
                                if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                                {
                                    data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                                    break;
                                }
                                client.MySpells.Add(stream, (ushort)SpellID);
                                data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                         .AddOption("Ok , thank you.", 255)
                                                                         .AddAvatar(6).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry. but you need thunder level 4.")
                                                     .AddOption("Okay.~I~see..", 255)
                                                     .AddAvatar(6).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry. but you need thunder level 4.")
                                                 .AddOption("Okay.~I~see..", 255)
                                                 .AddAvatar(6).FinalizeDialog();
                        }


                        break;
                    }
                case 36:
                    {
                        if (client.Player.Level < 94)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 94 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.Nectar;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(6).FinalizeDialog();


                        break;
                    }
                case 35:
                    {
                        if (client.Player.Level < 81)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 81 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.AdvancedCure;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(6).FinalizeDialog();


                        break;
                    }
                case 34:
                    {
                        if (client.Player.Level < 70)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 70 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.Pray;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 33:
                    {
                        if (client.Player.Level < 60)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 60 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.Invisibility;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(6).FinalizeDialog();


                        break;
                    }
                case 32:
                    {
                        if (client.Player.Level < 55)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 55 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.Stigma;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 31:
                    {
                        if (client.Player.Level < 50)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 50 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.MagicShield;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(6).FinalizeDialog();


                        break;
                    }
                case 30:
                    {
                        if (client.Player.Level < 45)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 45 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.StarofAccuracy;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(6).FinalizeDialog();


                        break;
                    }
                case 29:
                    {
                        if (client.Player.Level < 40)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.HealingRain;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 22:
                    {
                        if (client.Player.Level < 44)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 44 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.Meditation;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(6).FinalizeDialog();


                        break;
                    }
                case 21:
                    {
                        var SpellID = Role.Flags.SpellID.Cure;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(6).FinalizeDialog();


                        break;
                    }
                case 20:
                    {
                        var SpellID = Role.Flags.SpellID.Thunder;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        data.AddText("The Taoist are capable of casting devastating skills and deadly spells, and proved to be versatile. Do you want to be a Taoist, now?")
                          .AddOption("Yeah,~please!", 2)
                          .AddOption("I`ll~think~about~it.", 255)
                          .AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (client.Player.Class == 100)
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                                client.Player.QuestGUI.SendAutoPatcher(1002, 384, 251, 7991);
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.ChainBolt))
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.ChainBolt);
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Lightning))
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.Lightning);
                            client.Player.Class++;
                            data.AddText("You`ve been promoted and learned corresponding XP skill. The system will notify you when your XP is full. Keep up with the good work!")
                       .AddOption("Thank~you,~Master.", 255)
                       .AddAvatar(6).FinalizeDialog();

                        }

                        break;
                    }
                case 3:
                    {
                        data.AddText("There are two paths of the Taoist, the Fire and the Water. Which one would you choose?")
                          .AddOption("Fire~Taoist.", 4)
                          .AddOption("Water~Taoist.", 5)
                          .AddOption("I`ll~think~about~it.", 255)
                          .AddAvatar(6).FinalizeDialog();


                        break;
                    }
                case 4:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory")
                                           .AddOption("Let me check.", 255)
                                           .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        if (client.Player.Class == 101)
                        {
                            client.Inventory.Add(stream, 421079, 1);
                            client.SendSysMesage("You received 1 (Super)EndBacksword.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);

                            client.Player.Class = 142;
                            data.AddText("Good, you`ve finished the training as a Fire Taoist. Hope you can play the role of a saver in your groups well!")
                         .AddOption("Thank~you,~Master.", 255)
                         .AddAvatar(6).FinalizeDialog();
                        }

                        break;
                    }
                case 5:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory")
                                           .AddOption("Let me check.", 255)
                                           .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        if (client.Player.Class == 101)
                        {
                            client.Inventory.Add(stream, 421079, 1);
                            client.SendSysMesage("You received 1 (Super)EndBacksword.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);

                            client.Player.Class = 132;
                            data.AddText("Good, you`ve finished the training as a Water Taoist. Hope you can play the role of a saver in your groups well!")
              .AddOption("Thank~you,~Master.", 255)
              .AddAvatar(6).FinalizeDialog();
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.PromotionMonk)]
        public static void PromotionMonk(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            if (!(client.Player.Class >= 60 && client.Player.Class <= 65))
            {
                data.AddText("Sorry, but you are not a Monk.").AddOption("Alright.", 255).AddAvatar(226).FinalizeDialog();
                return;
            }


            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TCCaptain, client.Player.Class, 0, p => p.FinishNpcId.Map == 1004);


            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.IsActiveQuest(ActiveQuest.MissionId))
                        {
                            data.AddText("Monk and Saints have a deep understanding of both the physical and spiritual world! Through intense training, Monk and Saints have gained devastating power. What is it, my child?")
                    .AddOption("Learn~about~Promotion.", 110);
                            if (client.Player.Class == 60)
                                data.AddOption("I~want~to~get~promoted", 1);
                            else
                                data.AddOption("I~want~to~get~promoted", 22);
                            data.AddOption("I`ll~think~about~it.", 255)
                            .AddAvatar(259).FinalizeDialog();
                            break;
                        }
                        if (client.Player.Class == 60)
                        {
                            data.AddText("Monk and Saints have a deep understanding of both the physical and spiritual world! Through intense training, Monk and Saints have gained devastating power. What is it, my child?")
                            .AddOption("I~want~to~get~promoted", 1)
                            .AddOption("I`ll~think~about~it.", 255)
                            .AddAvatar(226).FinalizeDialog();
                            break;
                        }
                        else
                        {
                            data.AddText("Monk and Saints have a deep understanding of both the physical and spiritual world! Through intense training, Monk and Saints have gained devastating power. What is it, my child?")
                               .AddOption("I~want~to~get~promoted.", 22)
                               .AddOption("Learn~class~skills.", 3)
                               .AddOption("Learn~Pure~Skills.", 20)
                               .AddOption("Nothing.", 255)
                               .AddAvatar(226).FinalizeDialog();
                        }

                        break;
                    }
                case 110:
                    {
                        data.AddText("Ah, you look promising. I bet Monk will be a big name in a short time. Listen, you can learn class skills and")
                                  .AddText("~get promoted here to start your life. Would you like to learn something about your class promotion and quests?.")
                        .AddOption("Thanks.", 111)
                        .AddAvatar(259).FinalizeDialog();


                        break;
                    }
                case 111:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Add(stream, 3005160);
                            client.GainExpBall(300, true, Role.Flags.ExperienceEffect.angelwing);
                        }
                        data.AddText("Wow, look at you, you`ll be another hero in the world of Conquer! Here, you can learn some skills and get promoted! Do you want to learn more?")
                                    .AddText("~get promoted here to start your life. Would you like to learn something about your class promotion and quests?.");
                        if (client.Player.Class == 60)
                            data.AddOption("I~want~to~get~promoted", 1);
                        else
                            data.AddOption("I~want~to~get~promoted", 22);
                        data.AddAvatar(259).FinalizeDialog();


                        break;
                    }
                case 22:
                    {

                        switch (client.Player.Class)
                        {
                            case 61:
                                {
                                    if (client.Player.Level < 40)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 40+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(226).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            if (client.Player.Reborn == 0)
                                            {
                                                if (!client.Inventory.HaveSpace(2))
                                                {
                                                    data.AddText("Please make 2 more spaces in your inventory")
                                                                   .AddOption("Let me check.", 255)
                                                                   .AddAvatar(226).FinalizeDialog();
                                                    break;
                                                }//610070 BeadsOfWisdom
                                                client.Inventory.Add(stream, 610079, 1);
                                                client.Inventory.Add(stream, 610079, 1);
                                                client.SendSysMesage("You received 2 (Super)BeadsOfWisdom.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                                            }
                                            client.Player.Class++;
                                            data.AddText("Excellent! You`ve learned ways of the Monk. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                              .AddOption("Thank~you,~Master.", 255)
                                                                              .AddAvatar(226).FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(226).FinalizeDialog();
                                        }
                                    }


                                    break;
                                }
                            case 62:
                                {
                                    if (client.Player.Level < 70)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 70+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(226).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (!client.Inventory.Contain(1080001, 1) && !client.Inventory.Contain(1080001, 1, 1))
                                        {
                                            data.AddText("I'm sorry but you need to have 1 Emerald at your inventory , to get one go and kill some HillMonsters ( Desert City ) to get one .")
                                                                     .AddOption("I~see.", 255)
                                                                     .AddAvatar(226).FinalizeDialog();
                                            break;
                                        }
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            if (client.Player.Reborn == 0)
                                            {
                                                if (!client.Inventory.HaveSpace(2))
                                                {
                                                    data.AddText("Please make 2 more spaces in your inventory")
                                                                   .AddOption("Let me check.", 255)
                                                                   .AddAvatar(226).FinalizeDialog();
                                                    break;
                                                }
                                                client.Inventory.Add(stream, 136069, 1);
                                                client.Inventory.Add(stream, 150139, 1);
                                                client.SendSysMesage("You received 1 (Super)CloudFrock and 1 (Super)PearlRing.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                                            }
                                            client.Inventory.Remove(1080001, 1, stream);
                                            client.Player.Class++;
                                            data.AddText("Excellent! You`ve learned ways of the Monk. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                              .AddOption("Thank~you,~Master.", 255)
                                                                              .AddAvatar(226).FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(226).FinalizeDialog();
                                        }
                                    }


                                    break;
                                }
                            case 63:
                                {
                                    if (client.Player.Level < 100)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 100+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(226).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (!client.Inventory.Contain(Database.ItemType.Meteor, 1))
                                        {
                                            data.AddText("I'm sorry but you need to have 1 Meteor at your inventory.")
                                                                     .AddOption("I~see.", 255)
                                                                     .AddAvatar(226).FinalizeDialog();
                                            break;
                                        }
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            if (client.Player.Reborn == 0)
                                            {
                                                if (!client.Inventory.HaveSpace(1))
                                                {
                                                    data.AddText("Please make 1 more space in your inventory")
                                                                   .AddOption("Let me check.", 255)
                                                                   .AddAvatar(226).FinalizeDialog();
                                                    break;
                                                }//610199 BeadsOfConcentration
                                                client.Inventory.Add(stream, 610199, 1, 2, 1, 0, Role.Flags.Gem.EmptySocket, Role.Flags.Gem.EmptySocket, true);
                                                client.SendSysMesage("You received 1 (Super)+2BeadsOfConcentration 2 socket.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                                            }
                                            client.Inventory.Remove(Database.ItemType.Meteor, 1, stream);
                                            client.Player.Class++;
                                            data.AddText("Excellent! You`ve learned ways of the Monk. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                              .AddOption("Thank~you,~Master.", 255)
                                                                              .AddAvatar(226).FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(226).FinalizeDialog();
                                        }
                                    }


                                    break;
                                }
                            case 64:
                                {
                                    if (client.Player.Level < 110)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 110+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(226).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (!client.Inventory.Contain(Database.ItemType.MoonBox, 1))
                                        {
                                            data.AddText("I'm sorry but you need to have 1 MoonBox at your inventory.")
                                                                     .AddOption("I~see.", 255)
                                                                     .AddAvatar(226).FinalizeDialog();
                                            break;
                                        }
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            if (!client.Inventory.HaveSpace(1))
                                            {
                                                data.AddText("Please make 1 more space in your inventory")
                                                               .AddOption("Let me check.", 255)
                                                               .AddAvatar(226).FinalizeDialog();
                                                break;
                                            }
                                            if (client.Player.Reborn == 0)
                                            {//610219 BeadsOfConsciousness
                                                client.Inventory.Add(stream, 610219, 1, 3, 1, 0, Role.Flags.Gem.EmptySocket, Role.Flags.Gem.EmptySocket, true);
                                                client.SendSysMesage("You received 1 (Super)+3BeadsOfConsciousness 2 socket.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                                            }
                                            client.Inventory.Remove(Database.ItemType.MoonBox, 1, stream);
                                            client.Inventory.Add(stream, Database.ItemType.DragonBall, 1);
                                            client.SendSysMesage("You received DragonBall.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);

                                            client.Player.Class++;
                                            data.AddText("Excellent! You`ve learned ways of the Monk. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                              .AddOption("Thank~you,~Master.", 255)
                                                                              .AddAvatar(226).FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(226).FinalizeDialog();
                                        }
                                    }

                                    break;
                                }
                            default:
                                {
                                    data.AddText("You cannot be promoted anymore. You have mastered your class")
                                                                                                         .AddOption("Thank~you,~Master.", 255)
                                                                                                         .AddAvatar(226).FinalizeDialog();


                                    break;
                                }
                        }
                        break;
                    }
                case 20:
                    {
                        data.AddText("Only a Pure Monk/Saint can learn the skill, Soul Shackle. If you`ve been reborn twice, but are not Pure, you can take Oblivion Dew to the Reincarnation Seer in the Market")
                            .AddText("~and ask him to help you get Reincarnated. That way, you can obtain a new class combination.")
                            .AddOption("I~want~to~learn~it~now.", 21)
                            .AddOption("I`ll~think~about~it.", 255)
                            .AddAvatar(226).FinalizeDialog();


                        break;
                    }
                case 21:
                    {
                        if (client.Player.Reborn < 2)
                        {
                            data.AddText("You can only learn the Pure Skill `Soul Shackle` when you`ve been reborn twice, and have become a Pure Monk or Saint.")
                                                            .AddOption("Ok~I~see.", 255)
                                                            .AddAvatar(226).FinalizeDialog();
                            break;
                        }
                        if (!Database.AtributesStatus.IsMonk(client.Player.FirstClass) || !Database.AtributesStatus.IsMonk(client.Player.SecondClass))
                        {
                            data.AddText("You can only learn the Pure Skill `Soul Shackle` when you`ve been reborn twice, and have become a Pure Monk or Saint.")
                                                                                   .AddOption("Ok~I~see.", 255)
                                                                                   .AddAvatar(226).FinalizeDialog();
                            break;
                        }
                        if (client.Player.Level < 40 || client.Player.Class < 62)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(226).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.SoulShackle;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(226).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(226).FinalizeDialog();


                        break;
                    }
                case 3:
                    {
                        data.AddText("The Monk`s skills are varied and powerful. Which skill do you want to learn?")
                            .AddOption("Deflection~Aura" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.FendAura) ? "(Learnt)" : "(Lv.20)") + "", 4)
                            .AddOption("Tyrant~Aura" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.TyrantAura) ? "(Learnt)" : "(Lv.20)") + "", 5)
                            .AddOption("Serenity" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Serenity) ? "(Learnt)" : "(Lv.40)") + "", 6)
                            .AddOption("Radiant~Palm" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.RadiantPalm) ? "(Learnt)" : "(Lv.40)") + "", 7)
                            .AddOption("Tranquility" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Tranquility) ? "(Learnt)" : "(Lv.70)") + "", 8)
                            .AddOption("Next~page.", 9)
                            .AddAvatar(226).FinalizeDialog();


                        break;
                    }
                case 9:
                    {
                        data.AddText("The Monk`s skills are varied and powerful. Which skill do you want to learn?")
                            .AddOption("Compassion" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Compassion) ? "(Learnt)" : "(Lv.100)") + "", 10)
                            .AddOption("ElementalAuraMetal" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.MetalAura) ? "(Learnt)" : "(Lv.100)") + "", 11)
                            .AddOption("ElementalAuraWood" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.WoodAura) ? "(Learnt)" : "(Lv.100)") + "", 12)
                            .AddOption("ElementalAuraWater" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.WatherAura) ? "(Learnt)" : "(Lv.100)") + "", 13)
                            .AddOption("ElementalAuraFire" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.FireAura) ? "(Learnt)" : "(Lv.100)") + "", 14)
                            .AddOption("ElementalAuraEarth" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.EarthAura) ? "(Learnt)" : "(Lv.100)") + "", 15)
                            .AddOption("Next~page.", 70)
                            .AddAvatar(226).FinalizeDialog();


                        break;
                    }
                case 70:
                    {
                        data.AddText("The Monk`s skills are varied and powerful. Which skill do you want to learn?")
                          .AddOption("WhirlwindKick" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.WhirlwindKick) ? "(Learnt)" : "(Lv.1)") + "", 71)
                          .AddOption("TripleAttack" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.TripleAttack) ? "(Learnt)" : "(Lv.1)") + "", 72)
                          .AddOption("Oblivion" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Oblivion) ? "(Learnt)" : "(Lv.1)") + "", 73)
                          .AddAvatar(226).FinalizeDialog();


                        break;
                    }
                case 71:
                    {
                        var SpellID = Role.Flags.SpellID.WhirlwindKick;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(226).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(226).FinalizeDialog();


                        break;
                    }
                case 72:
                    {
                        var SpellID = Role.Flags.SpellID.TripleAttack;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(226).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(226).FinalizeDialog();

                        break;
                    }
                case 73:
                    {
                        var SpellID = Role.Flags.SpellID.Oblivion;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(226).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(226).FinalizeDialog();

                        break;
                    }
                case 15:
                    {
                        if (client.Player.Level < 100 || client.Player.Class < 64)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 100 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(226).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.EarthAura;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(226).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(226).FinalizeDialog();

                        break;
                    }
                case 14:
                    {
                        if (client.Player.Level < 100 || client.Player.Class < 64)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 100 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(226).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.FireAura;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(226).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(226).FinalizeDialog();

                        break;
                    }
                case 13:
                    {
                        if (client.Player.Level < 100 || client.Player.Class < 64)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 100 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(226).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.WatherAura;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(226).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(226).FinalizeDialog();

                        break;
                    }
                case 12:
                    {
                        if (client.Player.Level < 100 || client.Player.Class < 64)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 100 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(226).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.WoodAura;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(226).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(226).FinalizeDialog();


                        break;
                    }
                case 11:
                    {
                        if (client.Player.Level < 100 || client.Player.Class < 64)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 100 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(226).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.MetalAura;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(226).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(226).FinalizeDialog();

                        break;
                    }
                case 10:
                    {
                        if (client.Player.Level < 100 || client.Player.Class < 64)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 100 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(226).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.Compassion;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(226).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(226).FinalizeDialog();


                        break;
                    }
                case 8:
                    {
                        if (client.Player.Level < 70 || client.Player.Class < 63)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 70 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(226).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.Tranquility;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(226).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(226).FinalizeDialog();


                        break;
                    }
                case 7:
                    {
                        if (client.Player.Level < 40 || client.Player.Class < 62)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(226).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.RadiantPalm;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(226).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(226).FinalizeDialog();


                        break;
                    }
                case 6:
                    {
                        if (client.Player.Level < 40 || client.Player.Class < 62)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(226).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.Serenity;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(226).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(226).FinalizeDialog();

                        break;
                    }
                case 5:
                    {
                        if (client.Player.Level < 20 || client.Player.Class < 61)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 20 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(226).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.TyrantAura;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(226).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(226).FinalizeDialog();


                        break;
                    }
                case 4:
                    {
                        if (client.Player.Level < 20 || client.Player.Class < 61)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 20 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(226).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.FendAura;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(226).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(226).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        data.AddText("You`ve met the requirement for job promotion. You can get promoted from Intern to a Monk and learn `Whirlwind Kick` when you are Level 15 or above.")
                          .AddOption("Get~promoted.", 2)
                          .AddOption("I`ll~think~about~it.", 255)
                          .AddAvatar(226).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (client.Player.Class == 60)
                        {
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                                client.Player.QuestGUI.SendAutoPatcher(1002, 384, 251, 7991);
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.WhirlwindKick))
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.WhirlwindKick);
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.TripleAttack))
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.TripleAttack);
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Oblivion))
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.Oblivion);
                            client.Player.Class++;
                            data.AddText("You`ve been promoted and learned corresponding XP skill. The system will notify you when your XP is full. Keep up with the good work!")
                       .AddOption("Thank~you,~Master.", 255)
                       .AddAvatar(226).FinalizeDialog();

                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.PromotionNinja)]
        public static void PromotionNinja(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            if (!(client.Player.Class >= 50 && client.Player.Class <= 55))
            {
                data.AddText("Sorry, but you are not a Ninja.").AddOption("Alright.", 255).AddAvatar(203).FinalizeDialog();
                return;
            }


            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TCCaptain, client.Player.Class, 0, p => p.FinishNpcId.Map == 1004);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.IsActiveQuest(ActiveQuest.MissionId))
                        {
                            data.AddText("Cloaked in shadow, mysterious and aloof, the Ninja is the fastest class, with the most devastating attacks! So, what can I do for you?")
                    .AddOption("Learn~about~Promotion.", 110);
                            if (client.Player.Class == 50)
                                data.AddOption("I~want~to~get~promoted", 1);
                            else
                                data.AddOption("I~want~to~get~promoted", 20);
                            data.AddOption("I`ll~think~about~it.", 255)
                            .AddAvatar(259).FinalizeDialog();
                            break;
                        }
                        if (client.Player.Class == 50)
                        {
                            data.AddText("Cloaked in shadow, mysterious and aloof, the Ninja is the fastest class, with the most devastating attacks! So, what can I do for you?")
                            .AddOption("I~want~to~get~promoted", 1)
                            .AddOption("I`ll~think~about~it.", 255)
                            .AddAvatar(203).FinalizeDialog();
                            break;
                        }
                        else
                        {
                            data.AddText("Cloaked in shadow, mysterious and aloof, the Ninja is the fastest class, with the most devastating attacks! So, what can I do for you?")
                               .AddOption("I~want~to~get~promoted.", 20)
                               .AddOption("Learn~Katana~skills.", 6)
                               .AddOption("Learn~XP~skills.", 11)
                               .AddOption("Learn~class~skills.", 3)
                               .AddOption("Learn~Pure~Skills.", 15)
                               .AddOption("You~bet!", 255)
                               .AddAvatar(203).FinalizeDialog();
                        }


                        break;
                    }
                case 110:
                    {
                        data.AddText("Ah, you look promising. I bet `Ninja` will be a big name in a short time. Listen, you can learn class skills and")
                                  .AddText("~get promoted here to start your life. Would you like to learn something about your class promotion and quests?.")
                        .AddOption("Thanks.", 111)
                        .AddAvatar(259).FinalizeDialog();

                        break;
                    }
                case 111:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Add(stream, 3005160);
                            client.GainExpBall(300, true, Role.Flags.ExperienceEffect.angelwing);
                        }
                        data.AddText("Wow, look at you, you`ll be another hero in the world of Conquer! Here, you can learn some skills and get promoted! Do you want to learn more?")
                                    .AddText("~get promoted here to start your life. Would you like to learn something about your class promotion and quests?.");
                        if (client.Player.Class == 50)
                            data.AddOption("I~want~to~get~promoted", 1);
                        else
                            data.AddOption("I~want~to~get~promoted", 20);
                        data.AddAvatar(259).FinalizeDialog();

                        break;
                    }
                case 20:
                    {
                        switch (client.Player.Class)
                        {
                            case 51:
                                {
                                    if (client.Player.Level < 40)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 40+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(203).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            if (client.Player.Reborn == 0)
                                            {
                                                if (!client.Inventory.HaveSpace(2))
                                                {
                                                    data.AddText("Please make 2 more spaces in your inventory")
                                                                   .AddOption("Let me check.", 255)
                                                                   .AddAvatar(203).FinalizeDialog();
                                                    break;
                                                }//601079 MoonKatana
                                                client.Inventory.Add(stream, 601079, 1);
                                                client.Inventory.Add(stream, 601079, 1);
                                                client.SendSysMesage("You received 2 (Super)MoonKatana.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                                            }
                                            client.Player.Class++;
                                            data.AddText("Excellent! You`ve learned ways of the Ninja. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                              .AddOption("Thank~you,~Master.", 255)
                                                                              .AddAvatar(203).FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(203).FinalizeDialog();
                                        }
                                    }

                                    break;
                                }
                            case 52:
                                {
                                    if (client.Player.Level < 70)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 70+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(203).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (!client.Inventory.Contain(1080001, 1) && !client.Inventory.Contain(1080001, 1, 1))
                                        {
                                            data.AddText("I'm sorry but you need to have 1 Emerald at your inventory , to get one go and kill some HillMonsters ( Desert City ) to get one .")
                                                                     .AddOption("I~see.", 255)
                                                                     .AddAvatar(203).FinalizeDialog();
                                            break;
                                        }
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            if (client.Player.Reborn == 0)
                                            {
                                                if (!client.Inventory.HaveSpace(2))
                                                {
                                                    data.AddText("Please make 2 more spaces in your inventory")
                                                                    .AddOption("Let me check.", 255)
                                                                    .AddAvatar(203).FinalizeDialog();
                                                    break;
                                                }//135069 TigerVest
                                                client.Inventory.Add(stream, 135069, 1);
                                                client.Inventory.Add(stream, 150139, 1);
                                                client.SendSysMesage("You received 1 (Super)TigerVest and 1 (Super)PearlRing.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                                            }
                                            client.Inventory.Remove(1080001, 1, stream);
                                            client.Player.Class++;
                                            data.AddText("Excellent! You`ve learned ways of the Ninja. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                              .AddOption("Thank~you,~Master.", 255)
                                                                              .AddAvatar(203).FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(203).FinalizeDialog();
                                        }
                                    }


                                    break;
                                }
                            case 53:
                                {
                                    if (client.Player.Level < 100)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 100+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(203).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (!client.Inventory.Contain(Database.ItemType.Meteor, 1))
                                        {
                                            data.AddText("I'm sorry but you need to have 1 Meteor at your inventory.")
                                                                     .AddOption("I~see.", 255)
                                                                     .AddAvatar(203).FinalizeDialog();
                                            break;
                                        }
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            if (client.Player.Reborn == 0)
                                            {
                                                if (!client.Inventory.HaveSpace(1))
                                                {
                                                    data.AddText("Please make 1 more space in your inventory")
                                                                   .AddOption("Let me check.", 255)
                                                                   .AddAvatar(203).FinalizeDialog();
                                                    break;
                                                }//601199 LordKatana
                                                client.Inventory.Add(stream, 601199, 1, 2, 1, 0, Role.Flags.Gem.EmptySocket, Role.Flags.Gem.EmptySocket, true);
                                                client.SendSysMesage("You received 1 (Super)+2LordKatana 2 socket.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                                            }
                                            client.Inventory.Remove(Database.ItemType.Meteor, 1, stream);
                                            client.Player.Class++;
                                            data.AddText("Excellent! You`ve learned ways of the Ninja. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                              .AddOption("Thank~you,~Master.", 255)
                                                                              .AddAvatar(203).FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(203).FinalizeDialog();
                                        }
                                    }


                                    break;
                                }
                            case 54:
                                {
                                    if (client.Player.Level < 110)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 110+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(203).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (!client.Inventory.Contain(Database.ItemType.MoonBox, 1))
                                        {
                                            data.AddText("I'm sorry but you need to have 1 MoonBox at your inventory.")
                                                                     .AddOption("I~see.", 255)
                                                                     .AddAvatar(203).FinalizeDialog();
                                            break;
                                        }
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            if (!client.Inventory.HaveSpace(1))
                                            {
                                                data.AddText("Please make 1 more space in your inventory")
                                                               .AddOption("Let me check.", 255)
                                                               .AddAvatar(203).FinalizeDialog();
                                                break;
                                            }
                                            if (client.Player.Reborn == 0)
                                            {//601219 FlameKatana
                                                client.Inventory.Add(stream, 601219, 1, 3, 1, 0, Role.Flags.Gem.EmptySocket, Role.Flags.Gem.EmptySocket, true);
                                                client.SendSysMesage("You received 1 (Super)+3FlameKatana 2 socket.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                                            }
                                            client.Inventory.Remove(Database.ItemType.MoonBox, 1, stream);
                                            client.Inventory.Add(stream, Database.ItemType.DragonBall, 1);
                                            client.SendSysMesage("You received DragonBall.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);

                                            client.Player.Class++;
                                            data.AddText("Excellent! You`ve learned ways of the Ninja. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                              .AddOption("Thank~you,~Master.", 255)
                                                                              .AddAvatar(203).FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(203).FinalizeDialog();
                                        }
                                    }


                                    break;
                                }
                            default:
                                {
                                    data.AddText("You cannot be promoted anymore. You have mastered your class")
                                                                                                         .AddOption("Thank~you,~Master.", 255)
                                                                                                         .AddAvatar(203).FinalizeDialog();

                                    break;
                                }
                        }
                        break;
                    }
                case 1:
                    {
                        data.AddText("You are over level 15. You can now get promoted to Ninja and learn Fatal Strike (XP skill).")
                            .AddOption("Yeah,~please!", 2)
                            .AddOption("Let~me~think~it~over.", 255)
                            .AddAvatar(203).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                            client.Player.QuestGUI.SendAutoPatcher(1002, 384, 251, 7991);
                        if (client.Player.Class == 50)
                        {
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.FatalStrike))
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.FatalStrike);
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.ToxicFog))
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.ToxicFog);
                            client.Player.Class++;
                            data.AddText("You`ve been promoted and learned corresponding XP skill. The system will notify you when your XP is full. Keep up with the good work!")
                       .AddOption("Thank~you,~Master.", 255)
                       .AddAvatar(203).FinalizeDialog();
                        }


                        break;
                    }
                case 15:
                    {
                        data.AddText("Only Pure Ninjas can learn the Pure Skill, Counter Kill. If you`ve been Reborn twice, but are not a Pure Ninja, you can take some Oblivion Dew to the Reincarnation Seer in the Market and be")
                            .AddText("~Reincarnated! That way, you can obtain a new class combination.")
                 .AddOption("I~want~to~learn~it~now.", 16).AddOption("I`ll~think~about~it.", 255)
                 .AddAvatar(203).FinalizeDialog();

                        break;
                    }
                case 16:
                    {
                        if (client.Player.Reborn < 2)
                        {
                            data.AddText("Only pure Ninja, who have spent all 3 lives as a Ninja, can learn the Pure Skill, Counter Kill.")
                                                            .AddOption("Ok~I~see.", 255)
                                                            .AddAvatar(203).FinalizeDialog();
                            break;
                        }
                        if (!Database.AtributesStatus.IsNinja(client.Player.FirstClass) || !Database.AtributesStatus.IsNinja(client.Player.SecondClass))
                        {
                            data.AddText("Only pure Ninja, who have spent all 3 lives as a Ninja, can learn the Pure Skill, Counter Kill.")
                                                                                   .AddOption("Ok~I~see.", 255)
                                                                                   .AddAvatar(203).FinalizeDialog();
                            break;
                        }
                        if (client.Player.Level < 40 || client.Player.Class < 52)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(203).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.CounterKill;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(203).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(203).FinalizeDialog();

                        break;
                    }
                case 11:
                    {
                        data.AddText("Which skill do you want to learn?")
              .AddOption("ShurikenVortex" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.ShurikenVortex) ? "(Learnt)" : "(Lv.70)") + "", 12)
                       .AddOption("FatalStrike" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.FatalStrike) ? "(Learnt)" : "(Lv.3)") + "", 13)
              .AddOption("I`ll~think~about~it.", 255)
              .AddAvatar(203).FinalizeDialog();


                        break;
                    }
                case 13:
                    {
                        if (client.Player.Level < 3)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 3 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(203).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.FatalStrike;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(203).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(203).FinalizeDialog();


                        break;
                    }
                case 12:
                    {
                        if (client.Player.Level < 70 || client.Player.Class < 53)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 70 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(203).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.ShurikenVortex;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(203).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(203).FinalizeDialog();


                        break;
                    }
                case 8:
                    {
                        data.AddText("Which skill do you want to learn?")
                  .AddOption("MortalDrag" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.MortalDrag) ? "(Learnt)" : "(Lv.20)") + "", 9)
                           .AddOption("BloodyScythe" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.BloodyScythe) ? "(Learnt)" : "(Lv.40)") + "", 10)
                           .AddOption("GapingWounds" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.BloodyScythe) ? "(Learnt)" : "(Lv.100)") + "", 87)
                  .AddOption("I`ll~think~about~it.", 255)
                  .AddAvatar(203).FinalizeDialog();


                        break;
                    }
                case 87:
                    {
                        if (client.Player.Level < 100 || client.Player.Class < 52)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(203).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.GapingWounds;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(203).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(203).FinalizeDialog();


                        break;
                    }
                case 10:
                    {
                        if (client.Player.Level < 40 || client.Player.Class < 52)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(203).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.BloodyScythe;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(203).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(203).FinalizeDialog();

                        break;
                    }
                case 9:
                    {
                        if (client.Player.Level < 20 || client.Player.Class < 51)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 20 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(203).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.MortalDrag;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(203).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(203).FinalizeDialog();


                        break;

                    }

                case 6:
                    {
                        data.AddText("Which skill do you want to learn?")
                  .AddOption("TwofoldBlades" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.TwofoldBlades) ? "(Learnt)" : "(Lv.40)") + "", 7)
                  .AddOption("I`ll~think~about~it.", 255)
                  .AddAvatar(203).FinalizeDialog();

                        break;
                    }
                case 7:
                    {
                        if (client.Player.Level < 40 || client.Player.Class < 52)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(203).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.TwofoldBlades;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(203).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(203).FinalizeDialog();


                        break;
                    }
                case 3:
                    {
                        data.AddText("Which skill do you want to learn?")
                 // .AddOption("Poison~Star" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.PoisonStar) ? "(Learnt)" : "(Lv.70)") + "", 4)
                 .AddOption("Archer~Bane" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.ArcherBane) ? "(Learnt)" : "(Lv.100)") + "", 5)
                 .AddOption("ToxicFog" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.ToxicFog) ? "(Learnt)" : "(Lv.15)") + "", 14)
                 .AddOption("Okay.~I~see.", 255)
                 .AddAvatar(203).FinalizeDialog();


                        break;
                    }
                case 14:
                    {
                        if (client.Player.Level < 15 || client.Player.Class < 51)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 70 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(203).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.ToxicFog;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(203).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(203).FinalizeDialog();


                        break;
                    }
                case 5:
                    {
                        if (client.Player.Level < 110 || client.Player.Class < 55)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 110 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(203).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.ArcherBane;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(203).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(203).FinalizeDialog();


                        break;
                    }
                case 4:
                    {
                        if (client.Player.Reborn == 0)
                        {
                            data.AddText("Only reborn Ninja-ninja, who have spent all 2 lives as Ninja, can learn the that Skill, PoisonStar.")
                                                       .AddOption("Ok~I~see.", 255)
                                                       .AddAvatar(203).FinalizeDialog();
                            break;
                        }
                        if (client.Player.Reborn == 1 && client.Player.FirstClass == 55 || client.Player.Reborn == 2 && client.Player.SecondClass == 55)
                        {
                            if (client.Player.Level < 70 || client.Player.Class < 53)
                            {
                                data.AddText("Sorry. I can`t teach you this skill until you reach level 70 and get promoted.")
                                                      .AddOption("Okay.~I~see..", 255)
                                                      .AddAvatar(203).FinalizeDialog();
                                break;
                            }
                            var SpellID = Role.Flags.SpellID.PoisonStar;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {
                                data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(203).FinalizeDialog();
                                break;
                            }
                            client.MySpells.Add(stream, (ushort)SpellID);
                            data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                     .AddOption("Ok , thank you.", 255)
                                                                     .AddAvatar(203).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Only reborn Ninja-ninja, who have spent all 2 lives as Ninja, can learn the that Skill, PoisonStar.")
                                                     .AddOption("Ok~I~see.", 255)
                                                     .AddAvatar(203).FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.PromotionWarrior)]
        public static void PromotionWarrior(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            if (!(client.Player.Class >= 20 && client.Player.Class <= 25))
            {
                data.AddText("Sorry, but you are not a Warrior.").AddOption("Alright.", 255).AddAvatar(8).FinalizeDialog();
                return;
            }
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TCCaptain, client.Player.Class, 0, p => p.FinishNpcId.Map == 1004);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.IsActiveQuest(ActiveQuest.MissionId))
                        {
                            data.AddText("To be a good Warrior, you must know your weapon, your armor be a 2nd skin, and use your shield to ward off your enemy! Remember, fortune favors the brave, and you must keep your head, even in the darkest hours. So, what can I do for you?.")
                    .AddOption("Learn~about~Promotion.", 110);
                            if (client.Player.Class == 20)
                                data.AddOption("I~want~to~get~promoted", 1);
                            else
                                data.AddOption("I~want~to~get~promoted", 3);
                            data.AddOption("I`ll~think~about~it.", 255)
                            .AddAvatar(259).FinalizeDialog();
                            break;
                        }
                        if (client.Player.Class == 20)
                        {
                            data.AddText("To be a good Warrior, you must know your weapon, your armor be a 2nd skin, and use your shield to ward off your enemy! Remember, fortune favors the brave, and you must keep your head, even in the darkest hours. So, what can I do for you?.")
                            .AddOption("I~want~to~get~promoted", 1)
                            .AddOption("I`ll~think~about~it.", 255)
                            .AddAvatar(8).FinalizeDialog();
                            break;
                        }
                        else
                        {
                            data.AddText("To be a good Warrior, you must know your weapon, your armor be a 2nd skin, and use your shield to ward off your enemy! Remember, fortune favors the brave, and you must keep your head, even in the darkest hours. So, what can I do for you?")
                               .AddOption("I~want~to~get~promoted.", 3)
                               .AddOption("Learn~shield~skills.", 4)
                               .AddOption("Learn~XP~skills.", 10)
                               .AddOption("Learn~weapon~skills.", 20)
                               .AddOption("Learn~Pure~Skills.", 21)
                               .AddOption("You~bet!", 255)
                               .AddAvatar(8).FinalizeDialog();
                        }


                        break;
                    }
                case 110:
                    {
                        data.AddText("Ah, you look promising. I bet `Warrior` will be a big name in a short time. Listen, you can learn class skills and")
                                  .AddText("~get promoted here to start your life. Would you like to learn something about your class promotion and quests?.")
                        .AddOption("Thanks.", 111)
                        .AddAvatar(259).FinalizeDialog();


                        break;
                    }
                case 111:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Add(stream, 3005160);
                            client.GainExpBall(300, true, Role.Flags.ExperienceEffect.angelwing);
                        }
                        data.AddText("Wow, look at you, you`ll be another hero in the world of Conquer! Here, you can learn some skills and get promoted! Do you want to learn more?")
                                    .AddText("~get promoted here to start your life. Would you like to learn something about your class promotion and quests?.");
                        if (client.Player.Class == 20)
                            data.AddOption("I~want~to~get~promoted", 1);
                        else
                            data.AddOption("I~want~to~get~promoted", 3);
                        data.AddAvatar(259).FinalizeDialog();


                        break;
                    }
                case 3:
                    {
                        switch (client.Player.Class)
                        {
                            case 21:
                                {
                                    if (client.Player.Level < 40)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 40+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(8).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            if (client.Player.Reborn == 0)
                                            {
                                                if (!client.Inventory.HaveSpace(2))
                                                {
                                                    data.AddText("Please make 2 more spaces in your inventory")
                                                                   .AddOption("Let me check.", 255)
                                                                   .AddAvatar(8).FinalizeDialog();
                                                    break;
                                                }//900009 SoftShield
                                                client.Inventory.Add(stream, 900009, 1);
                                                client.Inventory.Add(stream, 480079, 1);
                                                client.SendSysMesage("You received 1 (Super)SoftShield and 1 (Super)IronClub.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                                            }
                                            client.Player.Class++;
                                            data.AddText("Excellent! You`ve learned ways of the Warrior. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                              .AddOption("Thank~you,~Master.", 255)
                                                                              .AddAvatar(8).FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(8).FinalizeDialog();
                                        }
                                    }


                                    break;
                                }
                            case 22:
                                {
                                    if (client.Player.Level < 70)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 70+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(8).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (!client.Inventory.Contain(1080001, 1) && !client.Inventory.Contain(1080001, 1, 1))
                                        {
                                            data.AddText("I'm sorry but you need to have 1 Emerald at your inventory , to get one go and kill some HillMonsters ( Desert City ) to get one .")
                                                                     .AddOption("I~see.", 255)
                                                                     .AddAvatar(8).FinalizeDialog();
                                            break;
                                        }
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            if (client.Player.Reborn == 0)
                                            {
                                                if (!client.Inventory.HaveSpace(2))
                                                {
                                                    data.AddText("Please make 2 more spaces in your inventory")
                                                                   .AddOption("Let me check.", 255)
                                                                   .AddAvatar(8).FinalizeDialog();
                                                    break;
                                                }//131069 LightArmor
                                                client.Inventory.Add(stream, 131069, 1);
                                                client.Inventory.Add(stream, 150139, 1);
                                                client.SendSysMesage("You received 1 (Super)LightArmor and 1 (Super)PearlRing.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                                            }
                                            client.Inventory.Remove(1080001, 1, stream);
                                            client.Player.Class++;
                                            data.AddText("Excellent! You`ve learned ways of the Warrior. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                              .AddOption("Thank~you,~Master.", 255)
                                                                              .AddAvatar(8).FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(8).FinalizeDialog();
                                        }
                                    }


                                    break;
                                }
                            case 23:
                                {
                                    if (client.Player.Level < 100)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 100+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(8).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (!client.Inventory.Contain(Database.ItemType.Meteor, 1))
                                        {
                                            data.AddText("I'm sorry but you need to have 1 Meteor at your inventory.")
                                                                     .AddOption("I~see.", 255)
                                                                     .AddAvatar(8).FinalizeDialog();
                                            break;
                                        }
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            if (client.Player.Reborn == 0)
                                            {
                                                if (!client.Inventory.HaveSpace(1))
                                                {
                                                    data.AddText("Please make 1 more space in your inventory")
                                                                   .AddOption("Let me check.", 255)
                                                                   .AddAvatar(8).FinalizeDialog();
                                                    break;
                                                }
                                                client.Inventory.Add(stream, 561199, 1, 2, 1, 0, Role.Flags.Gem.EmptySocket, Role.Flags.Gem.EmptySocket, true);
                                                client.SendSysMesage("You received 1 (Super)+2CopperWand 2 socket.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                                            }
                                            client.Inventory.Remove(Database.ItemType.Meteor, 1, stream);
                                            client.Player.Class++;
                                            data.AddText("Excellent! You`ve learned ways of the Warrior. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                              .AddOption("Thank~you,~Master.", 255)
                                                                              .AddAvatar(8).FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(8).FinalizeDialog();
                                        }
                                    }

                                    break;
                                }
                            case 24:
                                {
                                    if (client.Player.Level < 110)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 110+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(8).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (!client.Inventory.Contain(Database.ItemType.MoonBox, 1))
                                        {
                                            data.AddText("I'm sorry but you need to have 1 MoonBox at your inventory.")
                                                                     .AddOption("I~see.", 255)
                                                                     .AddAvatar(8).FinalizeDialog();
                                            break;
                                        }
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            if (!client.Inventory.HaveSpace(1))
                                            {
                                                data.AddText("Please make 1 more space in your inventory")
                                                               .AddOption("Let me check.", 255)
                                                               .AddAvatar(8).FinalizeDialog();
                                                break;
                                            }
                                            if (client.Player.Reborn == 0)
                                            {//410219 MythicBlade 
                                                client.Inventory.Add(stream, 410219, 1, 3, 1, 0, Role.Flags.Gem.EmptySocket, Role.Flags.Gem.EmptySocket, true);
                                                client.SendSysMesage("You received 1 (Super)+3MythicBlade 2 socket.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                                            }
                                            client.Inventory.Remove(Database.ItemType.MoonBox, 1, stream);
                                            client.Inventory.Add(stream, Database.ItemType.DragonBall, 1);
                                            client.SendSysMesage("You received DragonBall.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);

                                            client.Player.Class++;
                                            data.AddText("Excellent! You`ve learned ways of the Warrior. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                              .AddOption("Thank~you,~Master.", 255)
                                                                              .AddAvatar(8).FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(8).FinalizeDialog();
                                        }
                                    }

                                    break;
                                }
                            default:
                                {
                                    data.AddText("You cannot be promoted anymore. You have mastered your class")
                                                                                                         .AddOption("Thank~you,~Master.", 255)
                                                                                                         .AddAvatar(8).FinalizeDialog();

                                    break;
                                }
                        }
                        break;
                    }
                case 21:
                    {
                        data.AddText("Only Warriors who`ve trained for all three lives can learn the Pure Skill, Perseverance. If you`ve been Reborn twice, but are not a Pure Warrior, you take some Oblivion Dew to the Reincarnation Seer in the Market and be")
                            .AddText("~Reincarnated! That way, you can obtain a new class combination.")
                                                       .AddOption("I~want~to~learn~it~now.", 22).AddOption("I`ll~think~about~it.", 255)
                                                       .AddAvatar(8).FinalizeDialog();


                        break;
                    }
                case 22:
                    {
                        if (client.Player.Reborn < 2)
                        {
                            data.AddText("Only pure Warriors, who have spent all 3 lives as a Warrior, can learn the Pure Skill, Perseverance.")
                                                            .AddOption("Ok~I~see.", 255)
                                                            .AddAvatar(8).FinalizeDialog();
                            break;
                        }
                        if (!Database.AtributesStatus.IsWarrior(client.Player.FirstClass) || !Database.AtributesStatus.IsWarrior(client.Player.SecondClass))
                        {
                            data.AddText("Only pure Warriors, who have spent all 3 lives as a Warrior, can learn the Pure Skill, Perseverance.")
                                                                                   .AddOption("Ok~I~see.", 255)
                                                                                   .AddAvatar(8).FinalizeDialog();
                            break;
                        }
                        if (client.Player.Level < 40 || client.Player.Class < 22)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(8).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.Perseverance;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(8).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(8).FinalizeDialog();

                        break;
                    }
                case 20:
                    {
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.FastBlader) && client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.ScrenSword))
                        {
                            data.AddText("You`ve learned Fast Blade and Scented Sword!")
                                                             .AddOption("Okay.", 255)
                                                             .AddAvatar(8).FinalizeDialog();
                            break;
                        }
                        else
                        {
                            string line = "You just have learned the skill ";
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.FastBlader))
                            {
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.FastBlader);
                                line += Role.Flags.SpellID.FastBlader.ToString();
                            }
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.ScrenSword))
                            {
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.ScrenSword);
                                line += "/" + Role.Flags.SpellID.ScrenSword.ToString();
                            }
                            data.AddText(line)
                                            .AddOption("Thank you..", 255)
                                            .AddAvatar(8).FinalizeDialog();
                        }


                        break;
                    }
                case 10:
                    {
                        data.AddText("Which skill do you want to learn?")
                            .AddOption("Superman" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Superman) ? "(Learnt)" : "(Lv.3)") + "", 11)
                            .AddOption("Accuracy" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Accuracy) ? "(Learnt)" : "(Lv.3)") + "", 12)
                            .AddOption("Roar" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Roar) ? "(Learnt)" : "(Lv.3)") + "", 13)
                            .AddOption("Shield" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Shield) ? "(Learnt)" : "(Lv.3)") + "", 14)
                              .AddOption("FlyingMoon" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.FlyingMoon) ? "(Learnt)" : "(Lv.40)") + "", 15)
                            .AddOption("Let~me~think~it~over.", 255)
                            .AddAvatar(8).FinalizeDialog();

                        break;
                    }
                case 15:
                    {
                        var SpellID = Role.Flags.SpellID.FlyingMoon;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(8).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(8).FinalizeDialog();


                        break;
                    }
                case 14:
                    {
                        var SpellID = Role.Flags.SpellID.Shield;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(8).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(8).FinalizeDialog();


                        break;
                    }
                case 13:
                    {
                        var SpellID = Role.Flags.SpellID.Roar;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(8).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(8).FinalizeDialog();


                        break;
                    }
                case 12:
                    {
                        var SpellID = Role.Flags.SpellID.Accuracy;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(8).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(8).FinalizeDialog();


                        break;
                    }
                case 11:
                    {
                        var SpellID = Role.Flags.SpellID.Superman;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(8).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(8).FinalizeDialog();


                        break;
                    }
                case 4:
                    {
                        data.AddText("Which skill do you want to learn?")
                            .AddOption("Dash" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Dash) ? "(Learnt)" : "(Lv.40)") + "", 5)//40
                            .AddOption("Shield~Block" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.ShieldBlock) ? "(Learnt)" : "(Lv.40)") + "", 6)//40
                            .AddOption("Let~me~think~it~over.", 255)
                            .AddAvatar(8).FinalizeDialog();


                        break;
                    }
                case 5:
                    {
                        if (client.Player.Level < 40 || client.Player.Class < 22)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(8).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.Dash;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(8).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(8).FinalizeDialog();

                        break;
                    }
                case 6:
                    {
                        if (client.Player.Level < 40 || client.Player.Class < 22)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(8).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.ShieldBlock;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(8).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(8).FinalizeDialog();


                        break;
                    }
                case 7:
                    {
                        if (client.Player.Level < 70 || client.Player.Class < 23)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(8).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.MagicDefender;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(8).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(8).FinalizeDialog();


                        break;
                    }
                case 8:
                    {
                        if (client.Player.Level < 70 || client.Player.Class < 23)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(8).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.DefensiveStance;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(8).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(8).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        data.AddText("I`m proud that you made a mature decision! The warriors are adept in the use of weapons and shields for additional defense. Do you want to get promoted, now?")
                           .AddOption("Yeah,~please!", 2)
                           .AddOption("Let~me~think~it~over.", 255)
                           .AddAvatar(8).FinalizeDialog();


                        break;
                    }
                case 2:
                    {
                        if (client.Player.Class == 20)
                        {
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Superman))
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.Superman);
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.FastBlader))
                            {
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.FastBlader);
                            }
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.ScrenSword))
                            {
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.ScrenSword);
                            }
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Shield))
                            {
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.Shield);
                            }
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Accuracy))
                            {
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.Accuracy);
                            }
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Roar))
                            {
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.Roar);
                            }
                            client.Player.Class++;
                            data.AddText("You`ve learned ways of the Warrior. Now, more weapons and armors are available for you, while new skills are at your disposal. Go test your power!")
                       .AddOption("Thank~you,~Master.", 255)
                       .AddAvatar(8).FinalizeDialog();
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                                client.Player.QuestGUI.SendAutoPatcher(1002, 384, 251, 7991);
                        }


                        break;
                    }
            }
        }
        /// <summary>
        /// level 40 receive 1 blade and one club super
        /// level 70 receive 1 ring and one armor super
        /// level 100 receive 1 blade super +2 with 2 socket -1
        /// level 110 receive 1 club super +3 with 2 socket -1 and one DBScroll.
        /// </summary>
        /// <param name="client"></param>
        /// <param name="stream"></param>
        /// 
        [NpcAttribute(NpcID.PromotionTrojan)]
        public static void PromotionTrojan(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            if (!(client.Player.Class >= 10 && client.Player.Class <= 15))
            {
                data.AddText("Trojans do not share their secrets of battle with others. I shall not teach you.").AddOption("Alright.", 255).AddAvatar(5).FinalizeDialog();
                return;
            }

            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TCCaptain, client.Player.Class, 0, p => p.FinishNpcId.Map == 1004);

            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.IsActiveQuest(ActiveQuest.MissionId))
                        {
                            data.AddText("Wielding dual weapons, the Trojans always charge fearlessly into combat and they believe courage is the secret of victory. So, what can I do for you?")
                                 .AddOption("Learn~about~Promotion.", 110);
                            if (client.Player.Class == 10)
                                data.AddOption("I~want~to~get~promoted", 1);
                            else
                                data.AddOption("I~want~to~get~promoted", 3);
                            data.AddOption("I`ll~think~about~it.", 255)
                            .AddAvatar(259).FinalizeDialog();
                            break;
                        }

                        if (client.Player.Class == 10)
                        {
                            data.AddText("Wielding dual weapons, the Trojans always charge fearlessly into combat and they believe courage is the secret of victory. So, what can I do for you?")
                            .AddOption("I~want~to~get~promoted.", 1)
                            .AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        else
                        {
                            data.AddText("Wielding dual weapons, the Trojans always charge fearlessly into combat and they believe courage is the secret of victory. So, what can I do for you?")
                               .AddOption("I~want~to~get~promoted.", 3)
                               .AddOption("Learn~class~and~weapon~skills.", 4)
                               .AddOption("Pure~skills~for~Trojans.", 30)
                               .AddOption("Okay.~I~see.", 255)
                               .AddAvatar(5).FinalizeDialog();
                        }

                        break;
                    }
                case 110:
                    {
                        data.AddText("Ah, you look promising. I bet `Trojan` will be a big name in a short time. Listen, you can learn class skills and")
                                  .AddText("~get promoted here to start your life. Would you like to learn something about your class promotion and quests?.")
                        .AddOption("Thanks.", 111)
                        .AddAvatar(259).FinalizeDialog();

                        break;
                    }
                case 111:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Add(stream, 3005160);
                            client.GainExpBall(300, true, Role.Flags.ExperienceEffect.angelwing);
                        }
                        data.AddText("Wow, look at you, you`ll be another hero in the world of Conquer! Here, you can learn some skills and get promoted! Do you want to learn more?")
                                    .AddText("~get promoted here to start your life. Would you like to learn something about your class promotion and quests?.");
                        if (client.Player.Class == 10)
                            data.AddOption("I~want~to~get~promoted", 1);
                        else
                            data.AddOption("I~want~to~get~promoted", 3);
                        data.AddAvatar(259).FinalizeDialog();

                        break;
                    }
                case 30:
                    {
                        data.AddText("The Dragon Whirl is a Pure skill, which means that only players who`ve been a Trojan on their two past lives and their current life as well can learn it. Though you`ve been Reborn twice, You are not a Pure Trojan.")
                                                 .AddText("~Why not take an Oblivion Dew and speak with the Reincarnation Seer? Through the power of Reincarnation, you can obtain new class combinations and make yourself a Pure Trojan!")
                                                 .AddOption("Learn~Dragon~Whirl~(Lv~40).", 31)
                                                     .AddOption("I`ll~think~about~it.", 255)
                                                     .AddAvatar(5).FinalizeDialog();

                        break;
                    }
                case 31:
                    {
                        if (client.Player.Reborn < 2)
                        {
                            data.AddText("After your 2nd Rebirth, you still have to be Reincarnated and become a Pure Trojan, to be able to learn the Dragon Whirl skill.")
                                                            .AddOption("Ok~I~see.", 255)
                                                            .AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        if (!Database.AtributesStatus.IsTrojan(client.Player.FirstClass) || !Database.AtributesStatus.IsTrojan(client.Player.SecondClass))
                        {
                            data.AddText("You don'thave the combo ( Tro - Tro - Tro ) in your status.")
                                                 .AddOption("Okay.~I~see..", 255)
                                                 .AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        if (client.Player.Level < 40 || client.Player.Class < 12)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.DragonWhirl;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(5).FinalizeDialog();


                        break;
                    }
                case 5:
                    {
                        data.AddText("300 years ago, General Pak was ordered to fight against the Flame Devastator. However, a traitor in his army led to Pak`s unexpected death.")
                                                    .AddText("~and the annihilation of his army. Pak`s Ghost (Twin City 267,194) refused to rest in peace, waiting for a chosen Trojan to change the history.")
                                                    .AddText("~The Trojan who successfully changes the history will earn a fabulous Epic Weapon.")
                                                    .AddText("\n\n    (Level 120+ or reborn Trojans will receive a Trojan Epic Weapon for free by completing a specified Trojan Epic Quest every day, and a series of Epic Quests in 90 days.)")
                                                    .AddOption("Head~to~see~General~Pak.", 101)
                                                    .AddOption("I`ll~think~about~it.", 255)
                                                        .AddAvatar(5).FinalizeDialog();



                        break;
                    }
                case 101:
                    {
                        client.Player.QuestGUI.SendAutoPatcher(1002, 267, 194, (uint)NpcID.PaksGhost);

                        break;
                    }
                case 3:
                    {
                        switch (client.Player.Class)
                        {
                            case 11:
                                {
                                    if (client.Player.Level < 40)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 40+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(5).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            if (client.Player.Reborn == 0)
                                            {
                                                if (!client.Inventory.HaveSpace(2))
                                                {
                                                    data.AddText("Please make 2 more spaces in your inventory")
                                                                   .AddOption("Let me check.", 255)
                                                                   .AddAvatar(5).FinalizeDialog();
                                                    break;
                                                }
                                                client.Inventory.Add(stream, 410079, 1);
                                                client.Inventory.Add(stream, 480079, 1);
                                                client.SendSysMesage("You received 1 (Super)Cutlass and 1 (Super)IronClub.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                                            }
                                            client.Player.Class++;
                                            data.AddText("Excellent! You`ve learned ways of the Trojan. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                              .AddOption("Thank~you,~Master.", 255)
                                                                              .AddAvatar(5).FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(5).FinalizeDialog();
                                        }
                                    }


                                    break;
                                }
                            case 12:
                                {
                                    if (client.Player.Level < 70)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 70+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(5).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (!client.Inventory.Contain(1080001, 1) && !client.Inventory.Contain(1080001, 1, 1))
                                        {
                                            data.AddText("I'm sorry but you need to have 1 Emerald at your inventory , to get one go and kill some HillMonsters ( Desert City ) to get one .")
                                                                     .AddOption("I~see.", 255)
                                                                     .AddAvatar(5).FinalizeDialog();
                                            break;
                                        }
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            if (client.Player.Reborn == 0)
                                            {
                                                if (!client.Inventory.HaveSpace(2))
                                                {
                                                    data.AddText("Please make 2 more spaces in your inventory")
                                                                   .AddOption("Let me check.", 255)
                                                                   .AddAvatar(5).FinalizeDialog();
                                                    break;
                                                }
                                                client.Inventory.Add(stream, 130069, 1);
                                                client.Inventory.Add(stream, 150139, 1);
                                                client.SendSysMesage("You received 1 (Super)RageArmor and 1 (Super)PearlRing.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                                            }
                                            client.Inventory.Remove(1080001, 1, stream);
                                            client.Player.Class++;
                                            data.AddText("Excellent! You`ve learned ways of the Trojan. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                              .AddOption("Thank~you,~Master.", 255)
                                                                              .AddAvatar(5).FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(5).FinalizeDialog();
                                        }
                                    }

                                    break;
                                }
                            case 13:
                                {
                                    if (client.Player.Level < 100)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 100+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(5).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (!client.Inventory.Contain(Database.ItemType.Meteor, 1))
                                        {
                                            data.AddText("I'm sorry but you need to have 1 Meteor at your inventory.")
                                                                     .AddOption("I~see.", 255)
                                                                     .AddAvatar(5).FinalizeDialog();
                                            break;
                                        }
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            if (client.Player.Reborn == 0)
                                            {
                                                if (!client.Inventory.HaveSpace(1))
                                                {
                                                    data.AddText("Please make 1 more space in your inventory")
                                                                   .AddOption("Let me check.", 255)
                                                                   .AddAvatar(5).FinalizeDialog();
                                                    break;
                                                }
                                                client.Inventory.Add(stream, 410199, 1, 2, 1, 0, Role.Flags.Gem.EmptySocket, Role.Flags.Gem.EmptySocket, true);
                                                client.SendSysMesage("You received 1 (Super)+2RainbowBlade 2 socket.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                                            }
                                            client.Inventory.Remove(Database.ItemType.Meteor, 1, stream);
                                            client.Player.Class++;
                                            data.AddText("Excellent! You`ve learned ways of the Trojan. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                              .AddOption("Thank~you,~Master.", 255)
                                                                              .AddAvatar(5).FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(5).FinalizeDialog();
                                        }
                                    }

                                    break;
                                }
                            case 14:
                                {
                                    if (client.Player.Level < 110)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 110+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(5).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (!client.Inventory.Contain(Database.ItemType.MoonBox, 1))
                                        {
                                            data.AddText("I'm sorry but you need to have 1 MoonBox at your inventory.")
                                                                     .AddOption("I~see.", 255)
                                                                     .AddAvatar(5).FinalizeDialog();
                                            break;
                                        }
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            if (!client.Inventory.HaveSpace(1))
                                            {
                                                data.AddText("Please make 1 more space in your inventory")
                                                               .AddOption("Let me check.", 255)
                                                               .AddAvatar(5).FinalizeDialog();
                                                break;
                                            }
                                            if (client.Player.Reborn == 0)
                                            {
                                                client.Inventory.Add(stream, 480219, 1, 3, 1, 0, Role.Flags.Gem.EmptySocket, Role.Flags.Gem.EmptySocket, true);
                                                client.SendSysMesage("You received 1 (Super)+3ConquestClub 2 socket.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                                            }
                                            client.Inventory.Remove(Database.ItemType.MoonBox, 1, stream);
                                            client.Inventory.Add(stream, Database.ItemType.DragonBall, 1);
                                            client.SendSysMesage("You received DragonBall.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);

                                            client.Player.Class++;
                                            data.AddText("Excellent! You`ve learned ways of the Trojan. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                              .AddOption("Thank~you,~Master.", 255)
                                                                              .AddAvatar(5).FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(5).FinalizeDialog();
                                        }
                                    }


                                    break;
                                }
                            default:
                                {
                                    data.AddText("You cannot be promoted anymore. You have mastered your class")
                                                                                                         .AddOption("Thank~you,~Master.", 255)
                                                                                                         .AddAvatar(5).FinalizeDialog();

                                    break;
                                }
                        }
                        break;
                    }
                case 4:
                    {
                        data.AddText("The XP skills for Trojans are Accuracy, Cyclone and Golem. Accuracy can triple your hit rate; Cyclone can increase your speed; By using the Golem skill, you can transform")
                                                        .AddText("~into a fearful Golem! Trojans are always fearless. Hercules makes them powerful and swift, while the mysterious Epic skills enable Trojans to be much fiercer than ever.")
                                                        .AddText("~So, which one did you want to learn?")
                                                        .AddOption("Trojan`s~skills.", 6)
                                                            .AddOption("Let~me~see.", 255)
                                                            .AddAvatar(5).FinalizeDialog();


                        break;
                    }
                case 6:
                    {
                        data.AddText("The XP skills for Trojans are Accuracy, Cyclone and Golem. Accuracy can triple your hit rate, Cyclone can increase your attack speed, and by using the Golem skill, you can transform")
                                                   .AddText("~into a fearful Golem! Trojans are always fearless. Hercules makes them powerful and swift, and the Breath Focus recovers the Stamina in time.")
                                                   .AddText("When the Super Cyclone sweeps, no one can stand. Which one would you like to learn?")
                                                     .AddOption("Accuracy~and~Cyclone~" + ((client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Cyclone) && client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Accuracy)) ? "(Learnt)" : "(Lv.40)") + ".", 9)
                                                       .AddOption("Golem~" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Golem) ? "(Learnt)" : "(Lv.40)") + ".", 10)
                                                         .AddOption("Hercules~" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Hercules) ? "(Learnt)" : "(Lv.40)") + ".", 11)
                                                             .AddOption("Spirit~Healing~" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.SpiritHealing) ? "(Learnt)" : "(Lv.40)") + ".", 12)
                                                       .AddOption("Superior~skills.", 14)
                                                       .AddOption("Learn~weapon~skills.", 15)
                                                               .AddOption("I`ll~think~about~it.", 255)
                                                       .AddAvatar(5).FinalizeDialog();

                        break;
                    }
                case 14:
                    {
                        if (client.Player.Reborn > 1)
                        {
                            data.AddText("Please choose the spell you want to learn.")
                                  .AddOption("CruelShade(L40).", 31).AddOption("I`ll~think~about~it.", 255)
                                  .AddAvatar(5).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Sorry, only reborn players can learn this skill.")
                                                 .AddOption("Okay.~I~see.", 255)
                                                 .AddAvatar(5).FinalizeDialog();
                        }


                        break;
                    }
                case 32:
                    {
                        if (client.Player.Reborn > 1)
                        {
                            if (client.Player.Level < 40 || client.Player.Class < 12)
                            {
                                data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                      .AddOption("Okay.~I~see..", 255)
                                                      .AddAvatar(5).FinalizeDialog();
                                break;
                            }
                            var SpellID = Role.Flags.SpellID.CruelShade;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {
                                data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(5).FinalizeDialog();
                                break;
                            }
                            client.MySpells.Add(stream, (ushort)SpellID);
                            data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                     .AddOption("Ok , thank you.", 255)
                                                                     .AddAvatar(5).FinalizeDialog();
                        }

                        break;
                    }
                case 10:
                    {
                        if (client.Player.Level < 40 || client.Player.Class < 12)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.Golem;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(5).FinalizeDialog();

                        break;
                    }
                case 11:
                    {
                        if (client.Player.Level < 40 || client.Player.Class < 12)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.Hercules;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(5).FinalizeDialog();


                        break;
                    }
                case 12:
                    {
                        if (client.Player.Level < 40 || client.Player.Class < 12)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.SpiritHealing;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(5).FinalizeDialog();
                        break;
                    }
                case 9:
                    {
                        if (client.Player.Level < 40 || client.Player.Class < 12)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Accuracy) && client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Cyclone))
                        {
                            data.AddText("You`ve learned Accuracy and Cyclone!")
                                                             .AddOption("Okay.", 255)
                                                             .AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        else
                        {
                            string line = "You just have learned the skill ";
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Accuracy))
                            {
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.Accuracy);
                                line += Role.Flags.SpellID.Accuracy.ToString();
                            }
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Cyclone))
                            {
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.Cyclone);
                                line += "/" + Role.Flags.SpellID.Cyclone.ToString();
                            }
                            data.AddText(line)
                                            .AddOption("Thank you..", 255)
                                            .AddAvatar(5).FinalizeDialog();
                        }


                        break;
                    }
                case 15:
                    {
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.FastBlader) && client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.ScrenSword))
                        {
                            data.AddText("You`ve learned Fast Blade and Scented Sword!")
                                                             .AddOption("Okay.", 255)
                                                             .AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        else
                        {
                            string line = "You just have learned the skill ";
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.FastBlader))
                            {
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.FastBlader);
                                line += Role.Flags.SpellID.FastBlader.ToString();
                            }
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.ScrenSword))
                            {
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.ScrenSword);
                                line += "/" + Role.Flags.SpellID.ScrenSword.ToString();
                            }
                            data.AddText(line)
                                            .AddOption("Thank you..", 255)
                                            .AddAvatar(5).FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        if (client.Player.Level >= 15 && client.Player.Class == 10)
                        {
                            data.AddText("The Trojans are all-out offensive melee combat fighters. Do you want to be a qualified Trojan, now?.")
                                                             .AddOption("Yeah,~please!", 2)
                                                             .AddAvatar(5).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Only the powerful deserve to be trained. You are still a mere fledgeling.")
                                                              .AddOption("Oh,~I~see..", 255)
                                                              .AddAvatar(5).FinalizeDialog();
                        }


                        break;
                    }
                case 2:
                    {
                        if (client.Player.Level >= 15 && client.Player.Class == 10)
                        {
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.FastBlader))
                            {
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.FastBlader);
                            }
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.ScrenSword))
                            {
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.ScrenSword);
                            }
                            client.Player.Class++;
                            data.AddText("Excellent! You`ve learned ways of the Trojan. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                              //.AddText("~For a limited time, you can buy special Super and Elite Kits that are just right for you! Only at the Kit Merchant! One more thing, the Vice Captain in Twin City (511,360) has a quest to test you. You won`t say NO, right?")
                                                              .AddOption("Thank~you,~Master.", 255)
                                                              .AddAvatar(5).FinalizeDialog();

                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                                client.Player.QuestGUI.SendAutoPatcher(1002, 384, 251, 7991);
                        }
                        else
                        {
                            data.AddText("Only the powerful deserve to be trained. You are still a mere fledgeling.")
                                                                 .AddOption("Oh,~I~see..", 255)
                                                                 .AddAvatar(5).FinalizeDialog();
                        }


                        break;
                    }

            }

        }
        [NpcAttribute(NpcID.PromotionArcher)]
        public static void PromotionArcher(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            if (!(client.Player.Class >= 40 && client.Player.Class <= 45))
            {
                data.AddText("Sorry, but you are not a Archer.")
                                                           .AddOption("Alright.", 255)
                                                           .AddAvatar(10).FinalizeDialog();
                return;
            }


            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TCCaptain, client.Player.Class, 0, p => p.FinishNpcId.Map == 1004);

            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.IsActiveQuest(ActiveQuest.MissionId))
                        {
                            data.AddText("Born with sharp insight and swift skill, the Archers are expert in shooting arrows and wielding throwing knives to deadly purpose.")
                                    .AddOption("Learn~about~Promotion.", 110);
                            if (client.Player.Class == 40)
                                data.AddOption("I~want~to~get~promoted", 1);
                            else
                                data.AddOption("I~want~to~get~promoted", 33);
                            data.AddOption("I`ll~think~about~it.", 255)
                            .AddAvatar(259).FinalizeDialog();
                            break;
                        }
                        if (client.Player.Class == 40)
                        {
                            data.AddText("Born with sharp insight and swift skill, the Archers are expert in shooting arrows and wielding throwing knives to deadly purpose.")
                            .AddOption("I~want~to~get~promoted", 1)
                            .AddOption("I`ll~think~about~it.", 255)
                            .AddAvatar(10).FinalizeDialog();
                            break;
                        }
                        else
                        {
                            data.AddText("Born with sharp insight and swift skill, the Archers are expert in shooting arrows and wielding throwing knives to deadly purpose.")
                               .AddOption("I~want~to~get~promoted", 33)
                               .AddOption("Learn~the~Class~Skill.", 5)
                               .AddOption("Learn~the~Pure~Skill.", 30)
                               .AddOption("I`ll~think~about~it.", 255)
                               .AddAvatar(10).FinalizeDialog();
                        }


                        break;
                    }
                case 110:
                    {

                        data.AddText("Ah, you look promising. I bet `Archer` will be a big name in a short time. Listen, you can learn class skills and")
                                  .AddText("~get promoted here to start your life. Would you like to learn something about your class promotion and quests?.")
                        .AddOption("Thanks.", 111)
                        .AddAvatar(259).FinalizeDialog();

                        break;
                    }
                case 111:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Add(stream, 3005160);
                            client.GainExpBall(300, true, Role.Flags.ExperienceEffect.angelwing);
                        }
                        data.AddText("Wow, look at you, you`ll be another hero in the world of Conquer! Here, you can learn some skills and get promoted! Do you want to learn more?")
                                    .AddText("~get promoted here to start your life. Would you like to learn something about your class promotion and quests?.");
                        if (client.Player.Class == 40)
                            data.AddOption("I~want~to~get~promoted", 1);
                        else
                            data.AddOption("I~want~to~get~promoted", 33);
                        data.AddAvatar(259).FinalizeDialog();

                        break;
                    }
                case 33:
                    {
                        if (client.Player.Level >= 15 && client.Player.Level < 40 && client.Player.Class == 41)
                        {
                            data.AddText("Sorry,~you~cannot~get~promoted~before~you~reach~level~40.~Please~train~harder.")
                      .AddOption("I`ll~think~about~it.", 255)
                      .AddAvatar(234).FinalizeDialog();
                            return;
                        }


                        switch (client.Player.Class)
                        {
                            case 41:
                                {
                                    if (client.Player.Level < 40)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 40+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(10).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (!client.Inventory.Contain(1072031, 5))
                                        {
                                            data.AddText("I'm sorry but you need to have 5 EuxeniteOre in your inventory.")
                                                                     .AddOption("I~see.", 255)
                                                                     .AddAvatar(10).FinalizeDialog();
                                            break;
                                        }
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {

                                            client.Inventory.Remove(1072031, 5, stream);

                                            if (client.Player.Reborn == 0)
                                            {
                                                if (!client.Inventory.HaveSpace(1))
                                                {
                                                    data.AddText("Please make 1 more space in your inventory")
                                                                   .AddOption("Let me check.", 255)
                                                                   .AddAvatar(5).FinalizeDialog();
                                                    break;
                                                }
                                                //500069 ScarletBow
                                                client.Inventory.Add(stream, 500069, 1);
                                                client.SendSysMesage("You received 1 (Super)ScarletBow.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                                            }
                                            client.Player.Class++;
                                            data.AddText("Excellent! You`ve learned ways of the Archer. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                              .AddOption("Thank~you,~Master.", 255)
                                                                              .AddAvatar(10).FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(5).FinalizeDialog();
                                        }
                                    }

                                    break;
                                }
                            case 42:
                                {
                                    if (client.Player.Level < 70)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 70+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(10).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (!client.Inventory.Contain(1080001, 1) && !client.Inventory.Contain(1080001, 1, 1))
                                        {
                                            data.AddText("I'm sorry but you need to have 1 Emerald at your inventory , to get one go and kill some HillMonsters ( Desert City ) to get one .")
                                                                     .AddOption("I~see.", 255)
                                                                     .AddAvatar(10).FinalizeDialog();
                                            break;
                                        }
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            if (client.Player.Reborn == 0)
                                            {
                                                if (!client.Inventory.HaveSpace(2))
                                                {
                                                    data.AddText("Please make 2 more spaces in your inventory")
                                                                   .AddOption("Let me check.", 255)
                                                                   .AddAvatar(10).FinalizeDialog();
                                                    break;
                                                }
                                                client.Inventory.Add(stream, 150139, 1);//150139 PearlRing
                                                client.Inventory.Add(stream, 133049, 1);//133049 ApeCoat
                                                client.SendSysMesage("You received 1 (Super)ApeCoat and 1 (Super)PearlRing.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                                            }
                                            client.Inventory.Remove(1080001, 1, stream);
                                            client.Player.Class++;
                                            data.AddText("Excellent! You`ve learned ways of the Archer. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                              .AddOption("Thank~you,~Master.", 255)
                                                                              .AddAvatar(10).FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(5).FinalizeDialog();
                                        }
                                    }


                                    break;
                                }
                            case 43:
                                {
                                    if (client.Player.Level < 100)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 100+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(10).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (!client.Inventory.Contain(Database.ItemType.Meteor, 1))
                                        {
                                            data.AddText("I'm sorry but you need to have 1 Meteor at your inventory.")
                                                                     .AddOption("I~see.", 255)
                                                                     .AddAvatar(10).FinalizeDialog();
                                            break;
                                        }
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            if (client.Player.Reborn == 0)
                                            {
                                                if (!client.Inventory.HaveSpace(1))
                                                {
                                                    data.AddText("Please make 1 more space in your inventory")
                                                                   .AddOption("Let me check.", 255)
                                                                   .AddAvatar(10).FinalizeDialog();
                                                    break;
                                                }
                                                client.Inventory.Add(stream, 500189, 1, 2, 1, 0, Role.Flags.Gem.EmptySocket, Role.Flags.Gem.EmptySocket, true);
                                                client.SendSysMesage("You received 1 (Super)+2RosewoodBow 2 socket.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                                            }
                                            client.Inventory.Remove(Database.ItemType.Meteor, 1, stream);
                                            client.Player.Class++;
                                            data.AddText("Excellent! You`ve learned ways of the Archer. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                              .AddOption("Thank~you,~Master.", 255)
                                                                              .AddAvatar(10).FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(5).FinalizeDialog();
                                        }
                                    }

                                    break;
                                }
                            case 44://133089 EagleCoat
                                {
                                    if (client.Player.Level < 110)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 110+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(10).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (!client.Inventory.Contain(Database.ItemType.MoonBox, 1))
                                        {
                                            data.AddText("I'm sorry but you need to have 1 MoonBox at your inventory.")
                                                                     .AddOption("I~see.", 255)
                                                                     .AddAvatar(10).FinalizeDialog();
                                            break;
                                        }
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            if (!client.Inventory.HaveSpace(2))
                                            {
                                                data.AddText("Please make 2 more spaces in your inventory")
                                                               .AddOption("Let me check.", 255)
                                                               .AddAvatar(10).FinalizeDialog();
                                                break;
                                            }
                                            if (client.Player.Reborn == 0)
                                            {
                                                client.Inventory.Add(stream, 133089, 1, 3, 1, 0, Role.Flags.Gem.EmptySocket, Role.Flags.Gem.NoSocket, true);
                                                client.SendSysMesage("You received 1 (Super)+3EagleCoat 1 socket.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                                            }
                                            client.Inventory.Add(stream, Database.ItemType.DragonBall, 1);
                                            client.SendSysMesage("You received 1 DragonBall.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);

                                            client.Inventory.Remove(Database.ItemType.MoonBox, 1, stream);
                                            client.Player.Class++;
                                            data.AddText("Excellent! You`ve learned ways of the Archer. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                              .AddOption("Thank~you,~Master.", 255)
                                                                              .AddAvatar(10).FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(5).FinalizeDialog();
                                        }
                                    }


                                    break;
                                }
                            default:
                                {
                                    data.AddText("You cannot be promoted anymore. You have mastered your class")
                                                                                                        .AddOption("Thank~you,~Master.", 255)
                                                                                                        .AddAvatar(10).FinalizeDialog();


                                    break;
                                }
                        }
                        break;
                    }
                case 1:
                    {
                        data.AddText("Flight, ranged attack and maneuverability are powers all possessed by the archer.")
                           .AddOption("I~want~to~get~promoted", 2)
                           .AddOption("I`ll~think~about~it.", 255)
                           .AddAvatar(10).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (client.Player.Class == 40)
                        {
                            client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.XpFly);
                            client.Player.Class++;
                            data.AddText("Good, you have trained hard, and completed my lesson this day. You have gained power and skills.")
                       .AddOption("Thank~you,~Master.", 255)
                       .AddAvatar(10).FinalizeDialog();
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                                client.Player.QuestGUI.SendAutoPatcher(1002, 384, 251, 7991);
                        }


                        break;
                    }
                case 30:
                    {
                        data.AddText("Only Pure Archers can learn the Pure Skill, Star Arrow. If you`ve been Reborn twice, but are not a Pure Archer, you can take some Oblivion Dew to the Reincarnation Seer in the Market and be")
                     .AddText("~Reincarnated. That way, you can obtain a new class combination.")
                            .AddOption("I~want~to~learn~it~now.", 31)
                      .AddOption("I`ll~think~about~it.", 255)
                      .AddAvatar(10).FinalizeDialog();



                        break;
                    }
                case 31:
                    {
                        if (client.Player.Reborn == 2 && Database.AtributesStatus.IsArcher(client.Player.FirstClass) && Database.AtributesStatus.IsArcher(client.Player.SecondClass))
                        {
                            var SpellID = Role.Flags.SpellID.StarArrow;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {
                                data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(10).FinalizeDialog();
                                break;
                            }
                            client.MySpells.Add(stream, (ushort)SpellID);
                            data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                     .AddOption("Ok , thank you.", 255)
                                                                     .AddAvatar(10).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Only pure Archers, whose classes for their past two lives and their current life are all Archers, can learn the pure skill Star Arrow.")
                      .AddOption("Okay.~I~see.", 255)
                      .AddAvatar(10).FinalizeDialog();
                        }


                        break;
                    }
                case 5:
                    {
                        data.AddText("The powerful Archers are expert in shooting clustered demons to death. When transforming into Oriental Assassins, they are able to wield the Throwing Knives to deadly purpose.")
                             .AddOption("Learn~Archer~skills.", 10)
                             //.AddOption("Learn~Superior~skills.", 12)
                             .AddOption("Leave.", 255)
                             .AddAvatar(10).FinalizeDialog();


                        break;
                    }
                case 10:
                    {
                        data.AddText("After equipping bow and arrows, Archers can fly and attack enemies in the air!")
                      .AddOption("XP~Fly~[Level~1]", 70)
                      .AddOption("Rapid~Fire" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.RapidFire) ? "(Learnt)" : "[Level~46+]") + "", 13)
                      .AddOption("Improved~Fly" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Fly) ? "(Learnt)" : "[Level~70+]") + "", 14)
                      .AddOption("Arrow~Rain" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.ArrowRain) ? "(Learnt)" : "[Level~70+]") + "", 15)
                      .AddOption("Intensify" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Intensify) ? "(Learnt)" : "[Level~71+]") + "", 16)
                      .AddOption("Scatter~Fire" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.ScatterFire) ? "(Learnt)" : "[Level~23+]") + "", 17)
                      .AddAvatar(10).FinalizeDialog();


                        break;
                    }
                case 70:
                    {
                        var SpellID = Role.Flags.SpellID.XpFly;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(10).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(10).FinalizeDialog();


                        break;
                    }
                case 17:
                    {
                        if (client.Player.Level < 23 || client.Player.Class < 41)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 23 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(10).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.ScatterFire;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(10).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(10).FinalizeDialog();

                        break;
                    }
                case 16:
                    {
                        if (client.Player.Level < 71 || client.Player.Class < 42)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 71 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(10).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.Intensify;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(10).FinalizeDialog();


                        break;
                    }
                case 15:
                    {
                        if (client.Player.Level < 70 || client.Player.Class < 42)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 70 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(10).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.ArrowRain;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(10).FinalizeDialog();

                        break;
                    }
                case 14:
                    {
                        if (client.Player.Level < 70 || client.Player.Class < 42)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 70 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(10).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.Fly;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(10).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(10).FinalizeDialog();


                        break;
                    }
                case 13:
                    {
                        if (client.Player.Level < 46 || client.Player.Class < 41)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 46 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(10).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.RapidFire;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(10).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(10).FinalizeDialog();


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.PromotionPirate)]
        public static void PromotionPirate(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            if (!(client.Player.Class >= 70 && client.Player.Class <= 75))
            {
                data.AddText("Sorry, but you are not a Pirate.")
                                                           .AddOption("Alright.", 255)
                                                           .AddAvatar(234).FinalizeDialog();
                return;
            }

            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TCCaptain, client.Player.Class, 0, p => p.FinishNpcId.Map == 1004);

            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.QuestGUI.IsActiveQuest(ActiveQuest.MissionId))
                        {
                            data.AddText("We Pirates are always in pursuit of freedom and strength. The rapier and pistol stand for cruelty and mercilessness.")
                               .AddOption("Learn~about~Promotion.", 110);
                            if (client.Player.Class == 70)
                                data.AddOption("I~want~to~get~promoted", 1);
                            else
                                data.AddOption("I~want~to~get~promoted", 4);
                            data.AddOption("I`ll~think~about~it.", 255)
                            .AddAvatar(234).FinalizeDialog();
                            break;
                        }
                        if (client.Player.Class == 70)
                        {
                            data.AddText("We Pirates are always in pursuit of freedom and strength. The rapier and pistol stand for cruelty and mercilessness.")
                            .AddOption("I~want~to~get~promoted", 1)
                            .AddOption("I`ll~think~about~it.", 255)
                            .AddAvatar(234).FinalizeDialog();
                            break;
                        }
                        else
                        {
                            data.AddText("We Pirates are always in pursuit of freedom and strength. The rapier and pistol stand for cruelty and mercilessness.")
                               .AddOption("I~want~to~get~promoted", 4)
                               .AddOption("Learn~the~Class~Skill.", 5)
                               .AddOption("Learn~the~Pure~Skill.", 20)
                               .AddOption("I`ll~think~about~it.", 255)
                               .AddAvatar(234).FinalizeDialog();
                        }


                        break;
                    }
                case 110:
                    {
                        data.AddText("Ah, you look promising. I bet `Pirate` will be a big name in a short time. Listen, you can learn class skills and")
                                  .AddText("~get promoted here to start your life. Would you like to learn something about your class promotion and quests?.")
                        .AddOption("Thanks.", 111)
                        .AddAvatar(234).FinalizeDialog();


                        break;
                    }
                case 111:
                    {
                        if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                        {
                            client.Inventory.Add(stream, 3005160);
                            client.GainExpBall(300, true, Role.Flags.ExperienceEffect.angelwing);
                        }
                        data.AddText("Wow, look at you, you`ll be another hero in the world of Conquer! Here, you can learn some skills and get promoted! Do you want to learn more?")
                                    .AddText("~get promoted here to start your life. Would you like to learn something about your class promotion and quests?.");
                        if (client.Player.Class == 70)
                            data.AddOption("I~want~to~get~promoted", 1);
                        else
                            data.AddOption("I~want~to~get~promoted", 4);
                        data.AddAvatar(234).FinalizeDialog();


                        break;
                    }
                case 4:
                    {
                        if (client.Player.Level >= 15 && client.Player.Level < 40 && client.Player.Class == 71)
                        {
                            data.AddText("As a Pirate, you`ll need to reach Level 40 to get promoted to a Pirate Gunner. You will learn Adrenaline Rush, Eagle Eye, Blackbeard`s Rage and Black Spot after promotion.")
                                .AddText("~If you never change your class as a Pirate after the 2nd Rebirth, you can learn Scurvy Bomb.")
                      .AddOption("I`ll~think~about~it.", 255)
                      .AddAvatar(234).FinalizeDialog();


                        }
                        switch (client.Player.Class)
                        {
                            case 71:
                                {

                                    if (client.Player.Level < 40)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 40+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(5).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            if (client.Player.Reborn == 0)
                                            {
                                                if (!client.Inventory.HaveSpace(2))
                                                {
                                                    data.AddText("Please make 2 more spaces in your inventory")
                                                                   .AddOption("Let me check.", 255)
                                                                   .AddAvatar(5).FinalizeDialog();
                                                    break;
                                                }
                                                client.Inventory.Add(stream, 611079, 1);//611079 SirenRapier
                                                client.Inventory.Add(stream, 612079, 1);//612079 SteelPistol 70
                                                client.SendSysMesage("You received 1 (Super)SirenRapier and 1 (Super)SteelPistol.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                                            }
                                            client.Player.Class++;
                                            data.AddText("Excellent! You`ve learned ways of the Pirate. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                              .AddOption("Thank~you,~Master.", 255)
                                                                              .AddAvatar(5).FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(5).FinalizeDialog();
                                        }
                                    }


                                    break;
                                }
                            case 72:
                                {
                                    if (client.Player.Level < 70)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 70+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(5).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (!client.Inventory.Contain(1080001, 1) && !client.Inventory.Contain(1080001, 1, 1))
                                        {
                                            data.AddText("I'm sorry but you need to have 1 Emerald at your inventory , to get one go and kill some HillMonsters ( Desert City ) to get one .")
                                                                     .AddOption("I~see.", 255)
                                                                     .AddAvatar(5).FinalizeDialog();
                                            break;
                                        }
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            if (client.Player.Reborn == 0)
                                            {
                                                if (!client.Inventory.HaveSpace(2))
                                                {
                                                    data.AddText("Please make 2 more spaces in your inventory")
                                                                   .AddOption("Let me check.", 255)
                                                                   .AddAvatar(5).FinalizeDialog();
                                                    break;
                                                }
                                                client.Inventory.Add(stream, 150139, 1);//150139 PearlRing
                                                client.Inventory.Add(stream, 139069, 1);//139069 TideCoat
                                                client.SendSysMesage("You received 1 (Super)TideCoat and 1 (Super)PearlRing.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                                            }
                                            client.Inventory.Remove(1080001, 1, stream);
                                            client.Player.Class++;
                                            data.AddText("Excellent! You`ve learned ways of the Pirate. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                              .AddOption("Thank~you,~Master.", 255)
                                                                              .AddAvatar(5).FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(5).FinalizeDialog();
                                        }
                                    }


                                    break;
                                }
                            case 73:
                                {
                                    if (client.Player.Level < 100)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 100+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(5).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (!client.Inventory.Contain(Database.ItemType.Meteor, 1))
                                        {
                                            data.AddText("I'm sorry but you need to have 1 Meteor at your inventory.")
                                                                     .AddOption("I~see.", 255)
                                                                     .AddAvatar(5).FinalizeDialog();
                                            break;
                                        }
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            if (client.Player.Reborn == 0)
                                            {
                                                if (!client.Inventory.HaveSpace(1))
                                                {
                                                    data.AddText("Please make 1 more space in your inventory")
                                                                   .AddOption("Let me check.", 255)
                                                                   .AddAvatar(5).FinalizeDialog();
                                                    break;
                                                }
                                                client.Inventory.Add(stream, 611199, 1, 2, 1, 0, Role.Flags.Gem.EmptySocket, Role.Flags.Gem.EmptySocket, true);
                                                client.SendSysMesage("You received 1 (Super)+2BloodRapier 2 socket.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                                            }
                                            client.Inventory.Remove(Database.ItemType.Meteor, 1, stream);
                                            client.Player.Class++;
                                            data.AddText("Excellent! You`ve learned ways of the Pirate. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                              .AddOption("Thank~you,~Master.", 255)
                                                                              .AddAvatar(5).FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(5).FinalizeDialog();
                                        }
                                    }

                                    break;
                                }
                            case 74:
                                {
                                    if (client.Player.Level < 110)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 110+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(5).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (!client.Inventory.Contain(Database.ItemType.MoonBox, 1))
                                        {
                                            data.AddText("I'm sorry but you need to have 1 MoonBox at your inventory.")
                                                                     .AddOption("I~see.", 255)
                                                                     .AddAvatar(5).FinalizeDialog();
                                            break;
                                        }
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            if (!client.Inventory.HaveSpace(2))
                                            {
                                                data.AddText("Please make 2 more spaces in your inventory")
                                                               .AddOption("Let me check.", 255)
                                                               .AddAvatar(5).FinalizeDialog();
                                                break;
                                            }
                                            if (client.Player.Reborn == 0)
                                            {
                                                client.Inventory.Add(stream, 612219, 1, 3, 1, 0, Role.Flags.Gem.EmptySocket, Role.Flags.Gem.EmptySocket, true);
                                                client.SendSysMesage("You received 1 (Super)+3PenetratorPistol 2 socket.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                                            }

                                            client.Inventory.Add(stream, Database.ItemType.DragonBall, 1);
                                            client.SendSysMesage("You received 1 DragonBall.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);

                                            client.Inventory.Remove(Database.ItemType.MoonBox, 1, stream);
                                            client.Player.Class++;
                                            data.AddText("Excellent! You`ve learned ways of the Pirate. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                              .AddOption("Thank~you,~Master.", 255)
                                                                              .AddAvatar(5).FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(5).FinalizeDialog();
                                        }
                                    }


                                    break;
                                }
                            default:
                                {
                                    data.AddText("You cannot be promoted anymore. You have mastered your class")
                                                                                                         .AddOption("Thank~you,~Master.", 255)
                                                                                                         .AddAvatar(5).FinalizeDialog();


                                    break;
                                }
                        }
                        break;
                    }
                case 20:
                    {
                        data.AddText("If you want to learn the Scurvy Bomb, you`ll need to be a pure Pirate, who`ve been a Pirate for 3 straight lives. You can talk to the Rebirth Master in the Market to have the Reincarnation.")
                         .AddOption("Learn~the~skill.", 21)
                         .AddOption("I`ll~think~about~it.", 255)
                         .AddAvatar(234).FinalizeDialog();

                        break;
                    }
                case 21:
                    {
                        if (client.Player.Reborn >= 2 && Database.AtributesStatus.IsPirate(client.Player.FirstClass) && Database.AtributesStatus.IsPirate(client.Player.SecondClass))
                        {
                            var SpellID = Role.Flags.SpellID.ScurvyBomb;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {
                                data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(5).FinalizeDialog();
                                break;
                            }
                            client.MySpells.Add(stream, (ushort)SpellID);
                            data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                     .AddOption("Ok , thank you.", 255)
                                                                     .AddAvatar(5).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("If you want to learn the Scurvy Bomb, you`ll need to be a pure Pirate, who`ve been a Pirate for 3 straight lives.")
                    .AddOption("OK", 255)
                    .AddAvatar(234).FinalizeDialog();
                        }


                        break;
                    }
                case 1:
                    {
                        data.AddText("As an Intern Pirate, you can get promoted to a Pirate and learn Blade Tempest after you reach Level 15. When you reach Level 20, you can learn Gale Bomb.")
                        .AddOption("Get~promoted.", 3)
                        .AddOption("I`ll~think~about~it.", 255)
                        .AddAvatar(234).FinalizeDialog();


                        break;
                    }
                case 3:
                    {
                        if (client.Player.Level >= 15 && client.Player.Class == 70)
                        {
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.CannonBarrage))
                            {
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.CannonBarrage);
                            }
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.BladeTempest))
                            {
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.BladeTempest);
                            }
                            client.Player.Class++;
                            data.AddText("You`ve been promoted!")
                            .AddOption("Great,~thanks!", 255)
                            .AddAvatar(234).FinalizeDialog();
                            if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                                client.Player.QuestGUI.SendAutoPatcher(1002, 384, 251, 7991);
                        }
                        else
                        {
                            data.AddText("Sorry, you need level 15.")
                      .AddOption("Ah ok.", 255)
                      .AddAvatar(234).FinalizeDialog();
                        }


                        break;
                    }
                case 5:
                    {
                        data.AddText("Which Pirate Skill do you want to learn?")
                          .AddOption("Blade~Tempest" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.BladeTempest) ? "(Learnt)" : "(Lv.15)") + "", 6)
                          .AddOption("Gale~Bomb" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.GaleBomb) ? "(Learnt)" : "(Lv.20)") + "", 7)
                              .AddOption("Adrenaline~Rush" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.AdrenalineRush) ? "(Learnt)" : "(Lv.40)") + "", 8)
                          .AddOption("Eagle~Eye" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.EagleEye) ? "(Learnt)" : "(Lv.40)") + "", 9)
                          .AddOption("Blackbeard`s~Rage" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.BlackbeardsRage) ? "(Learnt)" : "(Lv.40)") + "", 10)
                          .AddOption("Kraken`s~Revenge" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.KrakensRevenge) ? "(Learnt)" : "(Lv.70)") + "", 11)
                          .AddOption("Next.", 15)
                          .AddAvatar(234).FinalizeDialog();


                        break;
                    }
                case 15:
                    {
                        data.AddText("Which Pirate Skill do you want to learn?")
                       //.AddOption("Black~Spot" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.) ? "(Learnt)" : "(Lv.15)") + "", 12)
                       .AddOption("Windstorm" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Windstorm) ? "(Learnt)" : "(Lv.15)") + "", 13)
                       .AddOption("Learn~the~Golem" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Golem) ? "(Learnt)" : "(Lv.15)") + "", 14)
                            .AddOption("CannonBarrage" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.CannonBarrage) ? "(Learnt)" : "(Lv.15)") + "", 60)
                       .AddOption("Previous~page.", 5).AddAvatar(234).FinalizeDialog();

                        break;
                    }
                case 60:
                    {
                        if (client.Player.Level < 15 || client.Player.Class < 70)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 15 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.CannonBarrage;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(5).FinalizeDialog();

                        break;
                    }
                case 14:
                    {
                        if (client.Player.Level < 15 || client.Player.Class < 71)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.Golem;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(5).FinalizeDialog();

                        break;
                    }
                case 13:
                    {
                        if (client.Player.Level < 15 || client.Player.Class < 71)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.Windstorm;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(5).FinalizeDialog();


                        break;
                    }
                case 6:
                    {
                        if (client.Player.Level < 15 || client.Player.Class < 71)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.BladeTempest;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(5).FinalizeDialog();


                        break;
                    }
                case 7:
                    {
                        if (client.Player.Level < 20 || client.Player.Class < 71)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.GaleBomb;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(5).FinalizeDialog();

                        break;
                    }
                case 8:
                    {
                        if (client.Player.Level < 40 || client.Player.Class < 72)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.AdrenalineRush;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(5).FinalizeDialog();

                        break;
                    }
                case 9:
                    {
                        if (client.Player.Level < 40 || client.Player.Class < 72)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.EagleEye;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(5).FinalizeDialog();
                        break;
                    }
                case 10:
                    {
                        if (client.Player.Level < 40 || client.Player.Class < 72)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.BlackbeardsRage;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(5).FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        if (client.Player.Reborn > 1 && client.Player.FirstClass == 75)
                        {
                            if (client.Player.Level < 70 || client.Player.Class < 73)
                            {
                                data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                      .AddOption("Okay.~I~see..", 255)
                                                      .AddAvatar(5).FinalizeDialog();
                                break;
                            }
                            var SpellID = Role.Flags.SpellID.KrakensRevenge;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {
                                data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(5).FinalizeDialog();
                                break;
                            }
                            client.MySpells.Add(stream, (ushort)SpellID);
                            data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                     .AddOption("Ok , thank you.", 255)
                                                                     .AddAvatar(5).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Sorry you are not reborn, or not is pirat-pirat ")
                                                                    .AddOption("Ok , thank you.", 255)
                                                                    .AddAvatar(5).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.ClanNpc)]
        public static void ClanNpc(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {

            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        if (client.Player.MyClan == null)
                        {

                            data.AddText("The Clan is not only a group, but also a bond between its members! You can have a maximum of 12 members in a clan at one time,")
                           .AddText("~this means 6 members and their Spouses.")
                               .AddOption("How~to~create~a~Clan?", 1)
                               .AddOption("I~have~no~interest.", 255)
                               .AddAvatar(6).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Your current Clan Level is Level " + (byte)(client.Player.MyClan.Level + 1) + "");
                            if (Role.Instance.Clan.UpdateLevelAmount.Length > client.Player.MyClan.Level)
                                data.AddText("~You need " + Role.Instance.Clan.UpdateLevelAmount[client.Player.MyClan.Level] + " Silver`s in the Clan Fund to upgrade the Clan Level.");

                            data.AddText("~You can gain BP Bonus Level " + client.Player.MyClan.BP + " now: The members can share " + client.Player.MyClan.ProcentClanBp(client.Player.MyClan.BP) + " percent of the Battle Power margin between themselves and");
                            data.AddText("~the highest Battle Power team member in the same map at BP Bonus Level " + client.Player.MyClan.BP + ".");


                            data.AddOption("Upgrade~the~Clan~Level", 5)
                            .AddOption("Upgrade~the~BP~Bonus~Level", 7)
                            .AddOption("Disband~my~Clan", 10)
                            .AddOption("Change~my~Clan`s~name.", 30)
                            .AddOption("Leave.", 255)
                            .AddAvatar(6).FinalizeDialog();
                        }


                        break;
                    }
                case 30:
                    {
                        data.AddText("Only~the~Clan~Leader~can~change~the~Guild`s~name,~which~will~take~effect~after~the~server~maintenance~on~the~second~day.~It`ll~cost~you~1075~CPs.~Deal?");
                        data.AddOption("Deal!", 31);
                        data.AddOption("Wait~a~minute.");
                        data.AddAvatar(39);
                        data.FinalizeDialog();
                        break;
                    }
                case 31:
                    {
                        data.AddText("Please~enter~a~new~name~for~your~Clan.");
                        data.AddInput("Name:", 32);
                        data.AddOption("Cancel.");
                        data.AddAvatar(39);
                        data.FinalizeDialog();
                        break;
                    }
                case 32:
                    {
                        if (client.Player.MyClan != null)
                        {
                            if (client.Player.MyClanMember.Rank == Role.Instance.Clan.Ranks.Leader)
                            {
                                if (client.Player.ConquerPoints < 1075)
                                {
                                    data.AddText("Sorry,~you~don`t~have~enough~CPs.");
                                    data.AddOption("My~bad.");
                                    data.AddAvatar(39);
                                    data.FinalizeDialog();
                                }
                                else
                                {
                                    string clanname = Input;
                                    if (Role.Instance.Clan.AllowCreateClan(clanname))
                                    {
                                        client.Player.ConquerPoints -= 1075;
                                        Role.Instance.Clan.RegisterChangeName(client.Player.MyClan.ID, clanname);
                                        data.AddText("Done!~You~can~check~the~name~after~the~server~maintenance~tomorrow.");
                                        data.AddOption("Great!");
                                        data.AddAvatar(39);
                                        data.FinalizeDialog();
                                    }
                                    else
                                    {
                                        client.CreateBoxDialog("Failed~to~change~name~Clan.~The~name~has~been~used~or~you~use~invalid~characters.");
                                    }
                                }
                            }
                            else
                            {
                                data.AddText("Sorry,~you`re~not~the~Clan~Leader.");
                                data.AddOption("My~bad.");
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 10:
                    {
                        if (client.Player.MyClan != null)
                        {
                            if (client.Player.MyClanMember.Rank == Role.Instance.Clan.Ranks.Leader)
                            {
                                data.AddText("Only the Clan Leader has the right to disband the Clan. Do you really want to disband your Clan?")
                                    .AddOption("Yes.", 11)
                       .AddOption("Of~course~not.", 255)
                       .AddAvatar(6).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You aren`t the Clan Leader. Only the Clan Leader can upgrade or disband the Clan and create or upgrade the BP Bonus Level.");
                                data.AddOption("I~see.").AddAvatar(6).FinalizeDialog();
                            }


                        }


                        break;
                    }
                case 11:
                    {
                        if (client.Player.ClanRank != (ushort)Role.Instance.Clan.Ranks.Leader)
                        {
                            data.AddText("You aren`t the Clan Leader. Only the Clan Leader can upgrade or disband the Clan and create or upgrade the BP Bonus Level.");
                            data.AddOption("I~see.").AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        if (client.Player.MyClan != null)
                        {
                            client.Player.MyClan.DisbandClan(stream);
                            client.CreateBoxDialog("Your~Clan~has~been~disbanded.");
                        }
                        break;
                    }
                case 7:
                    {
                        if (client.Player.MyClan == null)
                            break;
                        if (client.Player.MyClanMember.Rank == Role.Instance.Clan.Ranks.Leader)
                        {
                            if (Role.Instance.Clan.UpdateBPAmount.Length > client.Player.MyClan.BP)
                            {
                                data.AddText("You have reached BP Bonus Level " + client.Player.MyClan.BP + ", and the Clan members can share " + client.Player.MyClan.ProcentClanBp(client.Player.MyClan.BP) + " percent of the Battle Power margin in the same map. Do you");
                                data.AddText("~want to upgrade the BP Bonus Level using " + Role.Instance.Clan.UpdateBPAmount[client.Player.MyClan.BP] + " in Clan Fund?");
                                data.AddOption("Yes.", 8);
                                data.AddOption("Not~right~now.");
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You have reahced the highest BP Bonus Level and the members can share 70 percent of the Battle Power margin in the same map.");
                                data.AddOption("Sounds~good!");
                                data.AddAvatar(39);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You can`t create or upgrade the BP Bonus Level. Only the Clan Leader can upgrade or disband the Clan and create or upgrade the");
                            data.AddText("~BP Bonus Level.");
                            data.AddOption("I~see.");
                            data.FinalizeDialog();
                        }

                        break;
                    }
                case 8:
                    {
                        if (client.Player.MyClanMember.Rank == Role.Instance.Clan.Ranks.Leader)
                        {
                            if (client.Player.MyClan == null)
                                break;
                            uint Money = Role.Instance.Clan.UpdateBPAmount[client.Player.MyClan.BP];
                            if (client.Player.MyClan.Donation > Money)
                            {
                                client.Player.MyClan.Donation -= Money;
                                client.Player.MyClan.BP++;
                                if (Role.Instance.Clan.UpdateBPAmount.Length > client.Player.MyClan.BP)
                                {
                                    data.AddText("You have reached BP Bonus Level " + client.Player.MyClan.BP + ", and the Clan members can share " + client.Player.MyClan.ProcentClanBp(client.Player.MyClan.BP) + " percent of the Battle Power margin in the same map. Do you");
                                    data.AddText("~want to upgrade the BP Bonus Level using " + Role.Instance.Clan.UpdateBPAmount[client.Player.MyClan.BP] + " in Clan Fund?");
                                    data.AddOption("Yes.", 8);
                                    data.AddOption("Not~right~now.");
                                    data.FinalizeDialog();

                                }
                                else
                                {
                                    data.AddText("You have reahced the highest BP Bonus Level and the members can share 70 percent of the Battle Power margin in the same map.");
                                    data.AddOption("Sounds~good!");
                                    data.AddAvatar(39);
                                    data.FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Oh, you don`t have " + Money + " in Clan Fund to gain the BP Bonus Level... Maybe I will help you next time when you have the");
                                data.AddText("~money.");
                                data.AddOption("Okay.~See~you.");
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You can`t create or upgrade the BP Bonus Level. Only the Clan Leader can upgrade or disband the Clan and create or upgrade the");
                            data.AddText("~BP Bonus Level.");
                            data.AddOption("I~see.");
                            data.FinalizeDialog();
                        }

                        break;
                    }
                case 5:
                    {
                        if (client.Player.MyClan == null)
                            break;
                        if (client.Player.MyClanMember.Rank == Role.Instance.Clan.Ranks.Leader)
                        {
                            if (Role.Instance.Clan.UpdateLevelAmount.Length > client.Player.MyClan.Level)
                            {
                                data.AddText("Your current Clan Level is Level " + (byte)(client.Player.MyClan.Level + 1) + " . Do you want to spend " + Role.Instance.Clan.UpdateLevelAmount[client.Player.MyClan.Level] + " in Clan Fund to upgrade the Clan?")
                                   .AddOption("Yes.", 6)
                                   .AddOption("Not~right~now.", 255)
                                   .AddAvatar(6).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You have reahced the highest BP Bonus Level and the members can share 70 percent of the Battle Power margin in the same map.");
                                data.AddOption("Sounds~good!");
                                data.AddAvatar(39);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You can`t upgrade the Clan. Only the Clan Leader can upgrade or disband the Clan, and create or upgrade the BP Bonus Level.");
                            data.AddOption("I~see.");
                            data.FinalizeDialog();
                        }

                        break;
                    }
                case 6:
                    {
                        if (client.Player.MyClan == null)
                            break;
                        if (client.Player.MyClanMember.Rank == Role.Instance.Clan.Ranks.Leader)
                        {
                            uint Money = Role.Instance.Clan.UpdateLevelAmount[client.Player.MyClan.Level];
                            if (client.Player.MyClan.Donation > Money)
                            {
                                client.Player.MyClan.Donation -= Money;
                                client.Player.MyClan.Level++;
                                if (Role.Instance.Clan.UpdateLevelAmount.Length > client.Player.MyClan.Level)
                                {
                                    data.AddText("Your current Clan Level is Level " + (byte)(client.Player.MyClan.Level + 1) + " . Do you want to spend " + Role.Instance.Clan.UpdateLevelAmount[client.Player.MyClan.Level] + " in Clan Fund to upgrade the Clan?")
                                       .AddOption("Yes.", 6)
                                       .AddOption("Not~right~now.", 255)
                                       .AddAvatar(6).FinalizeDialog();
                                }
                                else
                                {
                                    data.AddText("You have reahced the highest BP Bonus Level and the members can share 70 percent of the Battle Power margin in the same map.");
                                    data.AddOption("Sounds~good!");
                                    data.AddAvatar(39);
                                    data.FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Your do not have " + Money + " silvers in you Clan.")
                                     .AddOption("Ah Ok", 255)
                                     .AddAvatar(6).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You can`t upgrade the Clan. Only the Clan Leader can upgrade or disband the Clan, and create or upgrade the BP Bonus Level.");
                            data.AddOption("I~see.");
                            data.FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        data.AddText("After you reach Level 50, you can create a Clan with 500,000 silver, half of which will be the Clan Fund. You can recruit your")
                      .AddText("~members and build your elite group! Of course, you can only be in one Clan at a time. What do you think? Are you ready to")
                      .AddText("~start your new group?")
                          .AddOption("Create~a~Clan~now.", 2)
                          .AddOption("I`m~busy.", 255)
                          .AddAvatar(6).FinalizeDialog();


                        break;
                    }
                case 2:
                    {
                        if (client.Player.MyClan == null)
                        {
                            if (client.Player.Money >= 500000)
                            {
                                if (client.Player.Level >= 50)
                                {
                                    data.AddText("To create a Clan, you need to think of a fabulous name for it! Type in the name you like, but remember the name should be");
                                    data.AddText("~less than 35 characters. A name is very important to your reputation. You should make it good enough so that people will");
                                    data.AddText("~tremble upon the very mention of it! So what`ll it be?");
                                    data.AddInput("My~Clan~Name...", 3).AddOption("Let~me~think...").AddAvatar(6).FinalizeDialog();
                                }
                                else
                                {
                                    data.AddText("You haven`t reached Level 50 and are unable to create a Clan. You should be strong enough to lead your Clan!");
                                    data.AddOption("Got~it.");
                                    data.FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("You don`t have enough money to create a Clan. Creating a Clan needs 500,000 silver. Half of which will be the Clan Fund.")
                         .AddText("~A Clan has to have money if you want to survive, you know. Can`t have a war without money!")
                             .AddOption("I~see.", 255)
                             .AddAvatar(6).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You already created a Clan and are unable to create another one!");
                            data.AddOption("Okay.");
                            data.AddAvatar(39);
                            data.FinalizeDialog();
                        }

                        break;
                    }
                case 3:
                    {
                        if (client.Player.MyClan == null)
                        {
                            string clanname = Input;
                            if (Role.Instance.Clan.AllowCreateClan(clanname))
                            {
                                data.AddText("Congratulations! You have created a Clan successfully! You should protect your Clan and fight with your Clan members for glory");
                                data.AddText("~and honor!");
                                data.AddOption("I~will.", 20);
                                data.AddAvatar(39);
                                data.FinalizeDialog();

                                client.Player.Money -= 500000;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                new Role.Instance.Clan().Create(client, clanname, stream);
                            }
                            else
                            {
                                client.CreateBoxDialog("Failed~to~create~a~Clan.~The~name~has~been~used~or~you~haven`t~quit~a~Clan~for~at~least~a~day.");
                            }
                        }
                        else
                        {
                            data.AddText("You already created a Clan and are unable to create another one!");
                            data.AddOption("Okay.");
                            data.AddAvatar(39);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 20:
                    {
                        data.AddText("Now you can sign up at the Clan Guide in the name of your Clan to join in the Clan War once a day. You will obtain a Normal");
                        data.AddText("~Clan Pack as a reward if you win!");
                        data.AddOption("Nice!", 21);
                        data.AddAvatar(39);
                        data.FinalizeDialog();
                        break;
                    }
                case 21:
                    {
                        data.AddText("If you can occupy the map continuously, you will get better prizes! Besides the reward you get after you win the Clan War,");
                        data.AddText("~you will get a Refined Clan Pack on the 7th day, Unique Clan Pack on the 14th day, Elite Clan Pack on the 21st day, and a");
                        data.AddText("~Super Clan Pack on the 28th day! The stronger you are, the more you can win!");
                        data.AddOption("I`ll~try~my~best!");
                        data.AddAvatar(39);
                        data.FinalizeDialog();
                        break;
                    }


            }
        }
        [NpcAttribute(NpcID.GuildCreator)]
        public static void GuildCreator(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {

            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        data.AddText("Greetings! I am the guild director, in charge of administrating and managing guilds. What business do you have with me?")
                       .AddText("Guild leaders can post up a guild recruitment ad to recruit new blood for their guilds! Soldiers without a guild can get the latest guild recruitment information from me, and then find a good guild to join!")
                           .AddOption("Create~a~guild", 1)
                           .AddOption("Disband~my~guild.", 2)


                           .AddAvatar(6).FinalizeDialog();


                        break;
                    }


                case 1:
                    {
                        data.AddText("Write the name, you wana use for guild")
                     .AddInput("Name", 3).AddAvatar(6).FinalizeDialog();


                        break;
                    }
                case 2:
                    {
                        if (client.Player.GuildRank != Role.Flags.GuildMemberRank.GuildLeader)
                        {
                            data.AddText("Sorry you are not the Guild Leader.")
                     .AddOption("Ah, Ok", 255)
                     .AddAvatar(6).FinalizeDialog();
                            break;
                        }

                        if (client.Player.MyGuild != null && client.Player.MyGuildMember != null)
                        {
                            client.Player.MyGuild.Dismis(client, stream);
                        }
                        else
                        {
                            data.AddText("Sorry you not have guild.")
                      .AddOption("Ah, Ok", 255)
                      .AddAvatar(6).FinalizeDialog();
                        }

                        break;
                    }
                case 3:
                    {
                        string GuildName = Input;
                        if (Role.Instance.Guild.AllowToCreate(GuildName))
                        {
                            if (client.Player.Level >= 90)
                            {
                                if (client.Player.Money >= 1000000)
                                {

                                    if (client.Player.MyGuild == null)
                                    {

                                        client.Player.Money -= 1000000;
                                        client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                        new Role.Instance.Guild(client, GuildName, stream);


                                    }
                                    else
                                    {
                                        data.AddText("Sorry, you have Guild!.")
                     .AddOption("Ah, Ok", 255)
                     .AddAvatar(6).FinalizeDialog();
                                    }
                                }
                                else
                                {
                                    data.AddText("You do not have 1000000 silvers with you.")
                      .AddOption("Ah, Ok", 255)
                      .AddAvatar(6).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Sorry! you need level 90 to use my options")
                        .AddOption("Ah, Ok", 255)
                        .AddAvatar(6).FinalizeDialog();
                            }

                        }
                        else
                        {
                            data.AddText("Soory,the name is used!")
                          .AddOption("Ah, Ok", 255)
                          .AddAvatar(6).FinalizeDialog();
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.LoveStone)]
        public static void LoveStone(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        data.AddText("Fate can bring lovers together. I hope you all can get married and live happily with your lovers. What can I do for you?")
                            .AddOption("Claim~double~EXP.", 1)
                            .AddOption("I~want~to~get~married.", 2)
                            .AddOption("Can~you~help~me~divorce?", 3)
                            .AddOption("Nothing~special.", 4)
                            .AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Player.HeavenBlessing > 0)
                        {
                            if (client.Player.BDExp == 0)
                            {
                                client.Player.BDExp = 1;

                                client.Player.RateExp = 2;
                                client.Player.DExpTime = 3600;
                                client.Player.CreateExtraExpPacket(stream);
                                client.SendSysMesage("You got double exp. time of one hour.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                            }
                            else
                            {
                                data.AddText("Sorry , but you're claimed today double Xp!").AddOption("Ah yes.", 255)
                        .AddAvatar(6).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry , you not have Blessing!").AddOption("Ah yes.", 255)
                       .AddAvatar(6).FinalizeDialog();
                        }


                        break;
                    }
                case 3:
                    {
                        data.AddText("if you marriage left you nothing but regret and pain, then bring 3 Meteors,i can help you out.")
                         .AddOption("I have made up my ming", 8).AddOption("Let me reconsider it", 255)
                         .AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 8:
                    {
                        if (client.Inventory.Contain(Database.ItemType.Meteor, 3))
                        {
                            if (client.Player.Spouse != "None")
                            {
                                client.Inventory.Remove(Database.ItemType.Meteor, 3, stream);
                                Client.GameClient Spouse;
                                if (Database.Server.GamePoll.TryGetValue(client.Player.SpouseUID, out Spouse))
                                {
                                    client.Player.Spouse = "None";
                                    client.Player.SpouseUID = 0;

                                    Spouse.Player.SpouseUID = 0;
                                    Spouse.Player.Spouse = "None";

                                    client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Spouse, false, new string[1] { "None" });
                                    Spouse.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Spouse, false, new string[1] { "None" });
                                    return;
                                }
                                else
                                {
                                    client.ClientFlag |= Client.ServerFlag.RemoveSpouse;
                                    Database.ServerDatabase.LoginQueue.TryEnqueue(client);
                                }
                            }
                            else
                            {
                                data.AddText("You don`t have a wife").AddOption("Ah, you right", 255)
                             .AddAvatar(6).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You don`t have 3 Meteors").AddOption("Ah, you right", 255)
                         .AddAvatar(6).FinalizeDialog();
                        }

                        break;
                    }

                case 2:
                    {
                        data.AddText("Fate can bring lovers together. And everybody can live happily ever after... Ahhhh... What can I do for you?")
                           .AddOption("I~want~to~get~married.", 5)
                           .AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 5:
                    {
                        data.AddText("Marriage~is~the~promise~forever.~Are~you~sure~that~you~want~to~spend~the~rest~of~your~life~with~your~lover?")
                          .AddOption("I~want~to~get~married.", 6)
                           .AddOption("I~prefer~being~single.", 255)
                          .AddAvatar(6).FinalizeDialog();


                        break;
                    }
                case 6:
                    {
                        data.AddText("Are~you~ready~to~propose?")
                         .AddOption("Yeah.~I~am~ready..", 7)
                          .AddOption("Let~me~think~it~over.", 255)
                         .AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 7:
                    {
                        data.AddText("Please click on your lover to propose.")
                          .AddOption("Okay.", 255)
                          .AddAvatar(6).FinalizeDialog();


                        ActionQuery action = new ActionQuery()
                        {
                            dwParam = MsgServer.CustomCommands.FlowerPointer,
                            Type = ActionType.OpenCustom,
                            ObjId = client.Player.UID
                        };
                        client.Send(stream.ActionCreate(&action));


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.TwinCityConductress)]
        public static void TwinCityConductress(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        data.AddText("Where~are~you~heading~for?~I~can~teleport~you~for~a~price~of~100~silver.")
                        .AddOption("Phoenix Castle.", 1)
                        .AddOption("Ape City.", 2)
                        .AddOption("Desert City.", 3)
                        .AddOption("Bird Island.", 4)
                        .AddOption("Mine Cave.", 5)
                        .AddOption("Market.", 6)
                       //.AddOption("DragonIsland.", 7)
                       .AddOption("Just~passing~by.", 255).AddAvatar(10).FinalizeDialog();


                        break;
                    }
                default:
                    {

                        if (client.Player.Money >= 100)
                        {
                            client.Player.Money -= 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                            switch (Option)
                            {
                                case 1: client.Teleport(958, 555, 1002); break; //phoenix castle
                                case 2: client.Teleport(555, 957, 1002); break; //ape mountain
                                case 3: client.Teleport(69, 473, 1002); break; //desert city
                                case 4: client.Teleport(232, 190, 1002); break; //birdisland
                                case 5: client.Teleport(53, 399, 1002); break; // Mine Cave
                                case 6: client.Teleport(217, 198, 1036); break; //market
                                case 7: client.Teleport(547, 372, 1002); client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, new string[] { "moveback" }); break; //dragonisland

                            }
                        }
                        else
                        {
                            data.AddText("Hey! You don't have 100 gold do you?\nDon't you dare try to cheat me or I'll call the guards!")
                         .AddOption("Crazy!", 255)
                         .AddAvatar(10)
                         .FinalizeDialog();
                        }



                        break;
                    }
            }
        }


        [NpcAttribute(NpcID.BlackSmith)]
        public static void BlackSmith(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.WHTwin, client.Player.Class);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)id, client.Player.Class, 823);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        if (client.Player.QuestGUI.IsActiveQuest(ActiveQuest.MissionId))
                        {
                            data.AddText("Ahh, Warehouseman asked you here, huh? Yeah, you are in the right place! You know, weapons are the most important things in battle. Even the toughest warriors can`t survive without a weapon in their hands!")
                            .AddOption("Teach~me~more~about~weapons.", 2)
                            .AddOption("Buy~weapons.", 1)
                            .AddAvatar(10).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.IsActiveQuest(ActiveQuest2.MissionId))
                        {
                            data.AddText("What a pity. I cannot own a good weapon! But that doesn`t mean you have to be the same! Please take this weapon as a gift. Well")
                   .AddOption("Okay!", 4).AddOption("Buy~weapons.", 1)
                   .AddAvatar(10).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            goto case 1;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("What a pity. I cannot own a good weapon! But that doesn`t mean you have to be the same! Please take this weapon as a gift. Well")
                .AddOption("Okay!", 4).AddOption("Buy~weapons.", 1)
                .AddAvatar(10).FinalizeDialog();
                            break;
                        }


                        goto case 1;
                    }
                case 2:
                    {
                        data.AddText("Most weapons and equipments are upgrade, you can buy them here.")
            .AddOption("Okay", 3)
            .AddAvatar(10).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                            {
                                client.GainExpBall(500);

                                if (Database.AtributesStatus.IsTrojan(client.Player.Class))
                                    client.Inventory.Add(stream, 410016, 1);//leafBlade
                                else if (Database.AtributesStatus.IsWarrior(client.Player.Class))
                                    client.Inventory.Add(stream, 410016, 1);//leafBlade
                                else if (Database.AtributesStatus.IsArcher(client.Player.Class))
                                    client.Inventory.Add(stream, 500006, 1);//BambooBow
                                else if (Database.AtributesStatus.IsNinja(client.Player.Class))
                                    client.Inventory.Add(stream, 601016, 1);//iron katana
                                else if (Database.AtributesStatus.IsMonk(client.Player.Class))
                                    client.Inventory.Add(stream, 610016, 1);//BambooPrayerBeads
                                else if (Database.AtributesStatus.IsPirate(client.Player.Class))
                                    client.Inventory.Add(stream, 611016, 1);//recruitRapier
                                else if (Database.AtributesStatus.IsTaoist(client.Player.Class))
                                    client.Inventory.Add(stream, 421016, 1);//SpellBacksword 

                                data.AddText("I`m selling the Headgear and armors. You should not miss the equipment in my shop! Hey, you`re still here! What else can I do for you? ")
                               .AddOption("I~want~to~learn~more~from~you.", 5)
                               .AddOption("Buy~weapons.", 1)
                               .AddAvatar(10).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Please make space in you inventory")
                      .AddOption("Ah~thank~you!.", 255)
                      .AddAvatar(10).FinalizeDialog();
                        }


                        break;
                    }
                case 5:
                    {
                        data.AddText("What a pity. I cannot own a good weapon! But that doesn`t mean you have to be the same! Please take this weapon as a gift. Well")
                .AddOption("Okay!", 4)
                .AddAvatar(10).FinalizeDialog();


                        break;
                    }
                case 4:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.Player.QuestGUI.SendAutoPatcher("TBlacksmith~asked~you~to~speak~with~the~TC~Captain~to~see~if~there~is~anything~you~can~do.", ActiveQuest2.FinishNpcId.Map, ActiveQuest2.FinishNpcId.X, ActiveQuest2.FinishNpcId.Y, ActiveQuest2.FinishNpcId.ID);


                        break;
                    }
                case 1:
                    {
                        ActionQuery action = new ActionQuery()
                        {
                            ObjId = client.Player.UID,
                            dwParam = (uint)Role.Flags.NpcType.DialogAndGui,
                            Type = ActionType.OpenGuiNpc,
                            Timestamp = (int)client.ActiveNpc,
                            wParam1 = client.Player.X,
                            wParam2 = client.Player.Y,
                            dwParam3 = client.Player.Map
                        };
                        client.Send(stream.ActionCreate(&action));

                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.Pharmacist)]
        public static void Pharmacist(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TheStorekeeper, client.Player.Class);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)id, client.Player.Class);
            var ActiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)id, client.Player.Class, 815);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest3.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            goto case 1;

                        }
                        if (client.Player.QuestGUI.IsActiveQuest(ActiveQuest.MissionId))
                        {
                            data.AddText("We have all kinds of potions to restore your HP and MP, what do you need? ")
                         .AddOption("Tell~me~about~your~potions.", 2)
                         .AddOption("Buy~potions.", 1)
                         .AddAvatar(10).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.IsActiveQuest(ActiveQuest2.MissionId))
                        {
                            data.AddText("We have all kinds of potions to restore your HP and MP, what do you need? ")
                          .AddOption("Tell~me~about~your~potions.", 2)
                          .AddOption("Buy~potions.", 1)
                          .AddAvatar(10).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            goto case 1;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("What? Hey, don`t look at me in that way. What do you want? Tell me! Don`t just stand there.")
                .AddOption("I~want~to~learn~more~from~you.", 5)
                  .AddOption("Buy~potions.", 1)
                .AddAvatar(10).FinalizeDialog();
                            break;
                        }


                        goto case 1;
                    }
                case 7:
                    {
                        data.AddText("The Barber! She is a talented hairdresser. She is worth paying a visit to! Go! ~Now, you should pay a visit to the Barber. I`m sure you will get something from her. ")
             .AddOption("Okay!", 255)
             .AddAvatar(10).FinalizeDialog();


                        break;
                    }
                case 5:
                    {
                        data.AddText("Oops, I have told you all I know. You should pay a visit to the Barber. I`m sure you will get something from her.")
               .AddOption("Okay!", 6)
                 .AddOption("See~you~later.", 255)
               .AddAvatar(10).FinalizeDialog();


                        break;
                    }
                case 6:
                    {
                        client.Player.QuestGUI.Accept(Database.QuestInfo.AllQuests[815], 0);
                        client.Player.QuestGUI.SendAutoPatcher("The~Pharmacist~asked~you~to~speak~with~the~Barber~in~Twin~City.", 1002, 284, 276, (uint)NpcID.Barber);

                        // client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        // client.Player.QuestGUI.SendAutoPatcher("The~Pharmacist~asked~you~to~speak~with~the~Barber~in~Twin~City.", ActiveQuest2.FinishNpcId.Map, ActiveQuest2.FinishNpcId.X, ActiveQuest2.FinishNpcId.Y, ActiveQuest2.FinishNpcId.ID);


                        break;
                    }
                case 2:
                    {
                        data.AddText("Besides MP and HP potions, I also have a special item called Scroll, which will take you to whatever city it is made for! ~You are lucky! I have just got something new for you!")
               .AddOption("Thanks~a~lot!", 3)
               .AddAvatar(10).FinalizeDialog();


                        break;
                    }
                case 3:
                    {
                        if (client.Inventory.HaveSpace(5))
                        {
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                            {
                                client.IncreaseExperience(stream, 300, Role.Flags.ExperienceEffect.angelwing);
                                client.Inventory.AddItemWitchStack(1000000, 0, 3, stream);
                                client.Inventory.AddItemWitchStack(1001000, 0, 3, stream);
                                client.Inventory.AddItemWitchStack(1060020, 0, 2, stream);
                                client.Inventory.Add(stream, 721626, 1);
                                client.Inventory.Add(stream, 721625, 1);
                                client.SendSysMesage("You received 2 Twin City Gates, 3 Stanchers, 3 Agrypnotics, 1 Attack Pot(30 min) 1 DefencePot (30 min) and some experience", MsgMessage.ChatMode.System);
                                data.AddText("What? Hey, don`t look at me in that way. What do you want? Tell me! Don`t just stand there.")
              .AddOption("I~want~to~learn~more~from~you.", 5)
                .AddOption("Buy~potions.", 1)
              .AddAvatar(10).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Please make 5 more spaces in your inventory")
                      .AddOption("let me to check.", 255)
                      .AddAvatar(10).FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        ActionQuery action = new ActionQuery()
                        {
                            ObjId = client.Player.UID,
                            dwParam = (uint)Role.Flags.NpcType.DialogAndGui,
                            Type = ActionType.OpenGuiNpc,
                            Timestamp = (int)client.ActiveNpc,
                            wParam1 = client.Player.X,
                            wParam2 = client.Player.Y,
                            dwParam3 = client.Player.Map
                        };
                        client.Send(stream.ActionCreate(&action));
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.TheStorekeeper)]
        public static void TheStorekeeper(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.Armorer, client.Player.Class);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)id, client.Player.Class);
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        if (client.Player.QuestGUI.IsActiveQuest(ActiveQuest.MissionId))
                        {
                            data.AddText("I am here selling all kinds of Accessories and Boots. You should not miss the equipment in my shop. ")
                             .AddOption("Tell~me~about~your~equipment.", 2)
                             .AddOption("Buy~equipment.", 1)
                             .AddAvatar(10).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.IsActiveQuest(ActiveQuest2.MissionId))
                        {
                            data.AddText("Ah ha? Why don`t you just leave here? Let me guess...You want to buy something? ")
                          .AddOption("Nah.~What~should~I~do~next?", 8)
                          .AddOption("Buy~equipment.", 1)
                          .AddAvatar(10).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            goto case 1;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("Oh, by the way, I am also selling Pickax for mining! Come to me if you need it!")
                .AddOption(" I~will!", 5)
                  .AddOption("Buy~equipment.", 1)
                .AddAvatar(10).FinalizeDialog();
                            break;
                        }


                        goto case 1;
                    }
                case 8:
                    {
                        data.AddText("Have you spoken with the Pharmacist? She has all kinds of potions that will be helpful to you in your journey.")
           .AddOption("Okay!", 255)
           .AddAvatar(10).FinalizeDialog();


                        break;
                    }
                case 1:
                    {

                        ActionQuery action = new ActionQuery()
                        {
                            ObjId = client.Player.UID,
                            dwParam = (uint)Role.Flags.NpcType.DialogAndGui,
                            Type = ActionType.OpenGuiNpc,
                            Timestamp = (int)client.ActiveNpc,
                            wParam1 = client.Player.X,
                            wParam2 = client.Player.Y,
                            wParam5 = (ushort)client.Player.Map
                        };
                        client.Send(stream.ActionCreate(&action));

                        break;
                    }
                case 2:
                    {
                        data.AddText("I have boots, necklaces and rings, which are quite necessary to improve your skills and prowess ")
                        .AddOption("I~learnt~something~new!", 3)
                        .AddAvatar(10).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        data.AddText("You are lucky, kid! I have just got something new for you!")
                      .AddOption("Thanks~a~lot!", 4)
                      .AddAvatar(10).FinalizeDialog();


                        break;
                    }
                case 4:
                    {
                        if (client.Inventory.HaveSpace(3))
                        {
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                            {
                                client.IncreaseExperience(stream, 1000, Role.Flags.ExperienceEffect.angelwing);

                                foreach (var item in ActiveQuest.Prize)
                                    client.Inventory.Add(stream, item);

                                data.AddText("Oh, by the way, I am also selling Pickax for mining! Come to me if you need it!")
                    .AddOption(" I~will!", 5)
                    .AddAvatar(10).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Please make 3 more spaces in your inventory")
                      .AddOption("Ah~thank~you!.", 255)
                      .AddAvatar(10).FinalizeDialog();
                        }



                        break;
                    }
                case 5:
                    {
                        data.AddText("I have told you all I know. I suggest you to find the Pharmacist. She should have something for you there.")
                 .AddOption("Thanks!", 6)
                 .AddAvatar(10).FinalizeDialog();

                        break;
                    }
                case 6:
                    {
                        client.Player.QuestGUI.Accept(ActiveQuest2, 0);
                        client.Player.QuestGUI.SendAutoPatcher("The~Storekeeper~asked~you~to~speak~with~the~Pharmacist~in~Twin~City.", ActiveQuest2.FinishNpcId.Map, ActiveQuest2.FinishNpcId.X, ActiveQuest2.FinishNpcId.Y, ActiveQuest2.FinishNpcId.ID);


                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.Armorer)]
        public static void Armorer(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            // var next_quest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TCCaptain, client.Player.Class, 6425);
            var ActiveQuest = Database.QuestInfo.GetFinishQuest((uint)NpcID.KungfuMaster, client.Player.Class);
            var ActiveQuest2 = Database.QuestInfo.GetFinishQuest((uint)id, client.Player.Class);
            var AtiveQuest3 = Database.QuestInfo.GetFinishQuest((uint)NpcID.TCCaptain, client.Player.Class, 6425);
            //if (client.Player.QuestGUI.IsActiveQuest(AtiveQuest3.MissionId))
            //    ActiveQuest = AtiveQuest3;
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        if (client.Player.QuestGUI.IsActiveQuest(ActiveQuest.MissionId))
                        {
                            data.AddText("I`m selling Headgears and Armors. They are so wonderful. You should not miss them. ")
                            .AddOption("Tell~me~about~your~equipment.", 2)
                            .AddOption("Buy~equipment.", 1)
                            .AddAvatar(10).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.IsActiveQuest(ActiveQuest2.MissionId))
                        {
                            data.AddText("Why are you still here? Pay a visit to that lady!")
                           .AddOption("Who?~Sorry,~I~forgot~the~name..", 10)
                           .AddOption("Buy~equipment.", 1)
                           .AddAvatar(10).FinalizeDialog();
                            break;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest2.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            goto case 1;
                        }
                        if (client.Player.QuestGUI.CheckQuest(ActiveQuest.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("I`m selling the Headgear and armors. You should not miss the equipment in my shop! Hey, you`re still here! What else can I do for you? ")
                             .AddOption("I~want~to~learn~more~from~you.", 5)
                             .AddOption("Buy~equipment.", 1)
                             .AddAvatar(10).FinalizeDialog();
                            break;
                        }

                        goto case 1;
                    }
                case 10:
                    {
                        data.AddText("The Storekeeper. She has many useful items. She is worth paying a visit to!")
                       .AddOption("I~won`t~forget~this~time.", 255)
                       .AddAvatar(10).FinalizeDialog();


                        break;
                    }
                case 2:
                    {
                        data.AddText("I have Armors and Headgears of all classes! Different classes use different kinds of equipment. Right click the equipment in my shop to buy it! ")
                           .AddOption("Thank~you~for~the~knowledge.", 3)
                           .AddAvatar(10).FinalizeDialog();


                        break;
                    }
                case 3:
                    {
                        data.AddText("You are lucky, kid! I have just got something new for you!")
                        .AddOption("Thank~you!.", 4)
                        .AddAvatar(10).FinalizeDialog();


                        break;
                    }
                case 4:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Player.QuestGUI.FinishQuest(ActiveQuest.MissionId))
                            {
                                client.IncreaseExperience(stream, 1000, Role.Flags.ExperienceEffect.angelwing);
                                foreach (var item in ActiveQuest.Prize)
                                    client.Inventory.Add(stream, item);

                                data.AddText("I`m selling the Headgear and armors. You should not miss the equipment in my shop! Hey, you`re still here! What else can I do for you? ")
                               .AddOption("I~want~to~learn~more~from~you.", 5)
                               .AddOption("Buy~equipment.", 1)
                               .AddAvatar(10).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Please make space in you inventory")
                      .AddOption("Ah~thank~you!.", 255)
                      .AddAvatar(10).FinalizeDialog();
                        }

                        break;
                    }
                case 5:
                    {
                        data.AddText("You should know only one piece of armor is not enough to survive. Now pay a visit to the Storekeeper, will you? ")
                         .AddOption("Thanks~for~your~advice.", 6)
                         .AddOption("See~you~later!", 255)
                         .AddAvatar(10).FinalizeDialog();


                        break;
                    }
                case 6:
                    {
                        data.AddText("You should know only one piece of armor is not enough to survive. Now pay a visit to the Storekeeper, will you? ")
                            .AddOption("Thanks~for~your~advice.", 7)
                            .AddOption("See~you~later!", 255)
                            .AddAvatar(10).FinalizeDialog();

                        break;
                    }
                case 7://812
                    {
                        var next_quest = Database.QuestInfo.GetFinishQuest((uint)id, client.Player.Class);
                        client.Player.QuestGUI.Accept(next_quest, 0);
                        client.Player.QuestGUI.SendAutoPatcher("The~Armorer~asked~you~to~speak~with~the~Storekeeper~in~Twin~City.", next_quest.FinishNpcId.Map, next_quest.FinishNpcId.X, next_quest.FinishNpcId.Y, next_quest.FinishNpcId.ID);



                        break;
                    }
                case 1:
                    {
                        ActionQuery action = new ActionQuery()
                        {
                            ObjId = client.Player.UID,
                            dwParam = 32,
                            Type = ActionType.OpenGuiNpc,
                            Timestamp = (int)client.ActiveNpc,
                            wParam1 = client.Player.X,
                            wParam2 = client.Player.Y,
                            wParam5 = (ushort)client.Player.Map
                        };
                        client.Send(stream.ActionCreate(&action));
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.KungFuKing)]
        public static void KungFuKing(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        var next_quest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TCCaptain, client.Player.Class, 6425);
                        if (client.Player.QuestGUI.IsActiveQuest(6435))
                        {
                            data.AddText("I dare not say I am the best martial artist in the world, but I will never admit I rank the second. ")
                                .AddText("~Do you wonder where my power comes? You`ll know it after you try it.")
                                .AddOption("I~want~to~try!", 1)
                                .AddOption("I~doubt~it.", 255)
                                .AddAvatar(259).FinalizeDialog();
                        }
                        else if (!client.Player.QuestGUI.CheckQuest(next_quest.MissionId, MsgServer.MsgQuestList.QuestListItem.QuestStatus.Finished)
                            && client.Player.QuestGUI.CheckQuest(6435, MsgServer.MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("As the descendant of Dragon, I recommend nunchaku as your best weapon. When weapon is ready, it`s time to fight. ")
                           .AddOption("I~can`t~wait~to~fight! ", 4)
                           .AddOption("I`m~not~ready~yet.", 255)
                           .AddAvatar(259).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("I dare not say I am the best martial artist in the world, but I will never admit I rank the second.")
                                .AddOption("I~doubt~it.", 255)
                                .AddAvatar(259).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        data.AddText("My hero, you`re chosen by God of Dragon as the new generation for the mythical power.")
                            .AddText(" ~In the name of Dragon, I`ll grant you the spirit of fight,")
                            .AddText(" ~as well as the duty to sweep evil and darkness off the land. Are you ready?")
                                .AddOption(" I`m~always~ready!", 2)
                                .AddAvatar(259).FinalizeDialog();


                        break;
                    }
                case 2:
                    {
                        if (client.Player.QuestGUI.FinishQuest(6435))
                            client.IncreaseExperience(stream, 100, Role.Flags.ExperienceEffect.angelwing);
                        data.AddText("Good! Now, I`m transferring my Power of Dragon to you. Feel it, and remember that Dragon`s ")
                            .AddText(" ~descendants equip nunchaku, and fight in the way of Jeet Kune Do. The saying `Using no")
                            .AddText(" ~way as way & Having no limitation as limitation` reveals the true meaning of Jeet Kune Do.")
                            .AddText(" ~Empty your mind, and fight freely. Your talent for martial arts will shine through severe trials.")
                             .AddOption("Thanks!", 3)
                             .AddAvatar(259).FinalizeDialog();


                        break;
                    }
                case 3:
                    {
                        data.AddText("As the descendant of Dragon, I recommend nunchaku as your best weapon. When weapon is ready, it`s time to fight. ")
                         .AddOption("I~can`t~wait~to~fight! ", 4)
                         .AddOption("I`m~not~ready~yet.", 255)
                         .AddAvatar(259).FinalizeDialog();


                        break;
                    }
                case 4:
                    {
                        data.AddText("There are many things for you to learn in this world! Um, I guess you want to learn more, huh? ")
                            .AddText("Let me see. What about equipment and armors? That will be useful! Now speak with the Armor in Twin City, ")
                            .AddText("he will tell you something about the armors.")

                             .AddOption("Wonderful!", 5)
                             .AddAvatar(259).FinalizeDialog();

                        break;
                    }
                case 5:
                    {
                        var next_quest = Database.QuestInfo.GetFinishQuest((uint)NpcID.TCCaptain, client.Player.Class, 6425);
                        client.Player.QuestGUI.Accept(next_quest, 0);
                        client.Player.QuestGUI.SendAutoPatcher("Kungfu~King~asked~you~to~speak~with~the~Armorer~in~Twin~City.", next_quest.FinishNpcId.Map, next_quest.FinishNpcId.X, next_quest.FinishNpcId.Y, next_quest.FinishNpcId.ID);


                        break;
                    }

            }
        }


        [NpcAttribute(NpcID.KungfuBoy)]
        public static void KungfuBoyNpc(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        if (client.Player.QuestGUI.IsActiveQuest(804))
                        {
                            data.AddText("I started learning KungFu where i was very young.Now, i have learn to master my chi very well! Wanna have a try? .")
                                .AddOption("I got a message for you.", 1)
                                .AddOption("Nah", 255)
                                .AddAvatar(10).FinalizeDialog();
                        }
                        else if (!client.Player.QuestGUI.CheckQuest(802, MsgServer.MsgQuestList.QuestListItem.QuestStatus.Finished))
                        {
                            data.AddText("Okay, you have a mastered an important skill, But you still have a lot to learn before venturing out! ")
                           .AddText("You know, that will bring you many benefits if you have a tearn. That is the next thing you must learn.")
                           .AddOption("Who should i speak with? ", 4)
                           .AddOption("See you then ", 255)
                           .AddAvatar(10).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("I started learning Kungfu when I was very young. Now, I have learned to master my Chi very well! Wanna have a try? .")
                               .AddOption("Nah", 255)
                               .AddAvatar(10).FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        data.AddText("Oh, a message from the Recruit Master ? I see. He wana me to teach you how to master you Chi.")
                            .AddText(" Now, listen closely. Press the Ctrl button , move the mouse arrow to the place you wana to jump to,")
                            .AddText(" and left click. You should know , you can jump somewhere that you can`t just normally walk to.")
                            .AddOption("Thanks!", 2)
                           .AddAvatar(10).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        data.AddText("Good job! That is what i want you to do! Ok! Hope this kill will help you in the future.")
                          .AddOption("Thanks!", 3)
                         .AddAvatar(10).FinalizeDialog();


                        break;
                    }
                case 3:
                    {
                        if (client.Player.QuestGUI.FinishQuest(804))
                            client.IncreaseExperience(stream, 300, Role.Flags.ExperienceEffect.angelwing);
                        data.AddText("Okay, you have a mastered an important skill, But you still have a lot to learn before venturing out! ")
 .AddText("You know, that will bring you many benefits if you have a tearn. That is the next thing you must learn.")
 .AddOption("Who should i speak with? ", 4)
 .AddOption("See you then ", 255)
 .AddAvatar(15).FinalizeDialog();

                        break;
                    }
                case 4:
                    {
                        data.AddText("General Zhao in Twin City will tel you more about the team system! Go speak with him !")
                         .AddOption("Great!", 5).AddOption("Not now.", 255)
                        .AddAvatar(10).FinalizeDialog();


                        break;
                    }
                case 5:
                    {
                        client.Player.QuestGUI.Accept(Database.QuestInfo.AllQuests[802], 0);
                        client.Player.QuestGUI.SendAutoPatcher("Kungfu~Master~asked~you~to~speak~with~General~Zhao~in~Twin~City!", 1002, 262, 247, 4488);

                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.PheonixCityConductress)]
        public static void PheonixCityConductress(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        data.AddText("Where~are~you~heading~for?~I~can~teleport~you~for~a~price~of~100~silver.")
                            .AddOption("Twin~City", 1)
                            .AddOption("Market", 2)

                            .AddOption("Just~passing~by.", 255).AddAvatar(10).FinalizeDialog();

                        break;
                    }
                default:
                    {
                        if (client.Player.Money >= 100)
                        {
                            client.Player.Money -= 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                            switch (Option)
                            {
                                case 1: client.Teleport(013, 376, 1011); break;
                                case 2: client.Teleport(217, 198, 1036); break;

                            }
                        }
                        else
                        {
                            data.AddText("I~can~teleport~you~for~a~price~of~100~silver.")
                         .AddOption("Ah yes.", 255).AddAvatar(10).FinalizeDialog();
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.DesertCityConductress)]
        public static void DesertCityConductress(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        data.AddText("Where~are~you~heading~for?~I~can~teleport~you~for~a~price~of~100~silver.")
                            .AddOption("Twin~City", 1)
                            .AddOption("Mystic~Castle", 2)
                            .AddOption("Market", 3)
                            .AddOption("Just~passing~by.", 255).AddAvatar(10).FinalizeDialog();


                        break;
                    }
                default:
                    {
                        if (client.Player.Money >= 100)
                        {
                            client.Player.Money -= 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                            switch (Option)
                            {

                                case 1: client.Teleport(973, 668, 1000); break;
                                case 2: client.Teleport(82, 321, 1000); break;
                                case 3: client.Teleport(217, 198, 1036); break;
                            }
                        }
                        else
                        {
                            data.AddText("I~can~teleport~you~for~a~price~of~100~silver.")
                         .AddOption("Ah yes.", 255).AddAvatar(10).FinalizeDialog();
                        }

                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.ApeCityConductress)]
        public static void ApeCityConductress(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        data.AddText("Where~are~you~heading~for?~I~can~teleport~you~for~a~price~of~100~silver.")
                            .AddOption("Twin~City", 1)
                            .AddOption("Market", 2)
                            .AddOption("Just~passing~by.", 255).AddAvatar(10).FinalizeDialog();


                        break;
                    }
                default:
                    {
                        if (client.Player.Money >= 100)
                        {
                            client.Player.Money -= 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                            switch (Option)
                            {

                                case 1: client.Teleport(378, 13, 1020); break;

                                case 2: client.Teleport(217, 198, 1036); break;

                            }
                        }
                        else
                        {
                            data.AddText("You do not have 100 silvers.")
                         .AddOption("Aww!", 255).AddAvatar(10).FinalizeDialog();
                        }
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.BirdCityConductress)]
        public static void BirdCityConductress(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        data.AddText("Where~are~you~heading~for?~I~can~teleport~you~for~a~price~of~100~silver.")
                    .AddOption("Twin~City.", 1)
                    .AddOption("Market", 2)
                    .AddOption("Just~passing~by.", 255).AddAvatar(10).FinalizeDialog();

                        data.AddText("Where~are~you~heading~for?~I~can~teleport~you~for~a~price~of~100~silver.")
                           .AddOption("Twin~City.", 1)
                           .AddOption("Market", 2)
                           .AddOption("Just~passing~by.", 255).AddAvatar(10).FinalizeDialog();

                        break;
                    }
                default:
                    {

                        if (client.Player.Money >= 100)
                        {
                            client.Player.Money -= 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                            switch (Option)
                            {
                                case 1: client.Teleport(1015, 710, 1015); break;

                                case 2: client.Teleport(217, 198, 1036); break;

                            }
                        }
                        else
                        {
                            data.AddText("I~can~teleport~you~for~a~price~of~100~silver.")
                         .AddOption("Ah yes.", 255).AddAvatar(10).FinalizeDialog();
                        }

                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.BoxerConductor)]
        public static void BoxerConductor(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        data.AddText("If you want to leave just tell me when you are ready.It's free.You will be teleported in the city where in before coming here.")
                                                 .AddOption("Yeah thanks.", 1)
                                                 .AddOption("No,I shall stay here.", 255)
                                                  .AddOption("Just~passing~by.", 255)
                                                  .AddAvatar(15)
                                                  .FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        {
                            uint PrevMap = client.Player.PMap;
                            switch (PrevMap)
                            {
                                default:
                                    {

                                        client.Teleport(428, 378, 1002);
                                        break;
                                    }
                                case 1000:
                                    {

                                        client.Teleport(500, 650, 1000);
                                        break;
                                    }
                                case 1020:
                                    {

                                        client.Teleport(565, 562, 1020);
                                        break;
                                    }
                                case 1011:
                                    {

                                        client.Teleport(188, 264, 1011);
                                        break;
                                    }
                                case 1015:
                                    {
                                        client.Teleport(717, 571, 1015);
                                        break;
                                    }
                            }

                        }
                        break;
                    }
            }
        }


        [NpcAttribute(NpcID.MarketConductress)]
        public static void MarketConductress(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        data.AddText("Do you want to leave the market? I can teleport you for free.")
                          .AddOption("Yeah thanks.", 1)
                          .AddOption("No,I shall stay here.", 255)
                           .AddOption("Just~passing~by.", 255)
                           .AddAvatar(105)
                           .FinalizeDialog();



                        break;
                    }
                case 1:
                    {
                        {
                            uint PrevMap = client.Player.PMap;
                            switch (PrevMap)
                            {
                                default:
                                    {

                                        client.Teleport(441, 431, 1002);
                                        break;
                                    }
                                case 1000:
                                    {

                                        client.Teleport(500, 650, 1000);
                                        break;
                                    }
                                case 1020:
                                    {

                                        client.Teleport(565, 562, 1020);
                                        break;
                                    }
                                case 1011:
                                    {

                                        client.Teleport(188, 264, 1011);
                                        break;
                                    }
                                case 1015:
                                    {
                                        client.Teleport(717, 571, 1015);
                                        break;
                                    }
                            }

                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.OflineTGNpc)]
        public static void OflineTGNpc(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        if (client.Player.Level == 140)
                        {
                            client.Send(stream.OfflineTGStatsCreate(0, 0, client.Player.Level, 0));
                            break;
                        }
                        var T1 = new TimeSpan(DateTime.Now.Ticks);
                        var T2 = new TimeSpan(client.Player.JoinOnflineTG.Ticks);
                        ushort minutes = (ushort)(T1.TotalMinutes - T2.TotalMinutes);
                        minutes = (ushort)Math.Min((ushort)900, minutes);

                        ushort nextlevel = 0;
                        ulong nextExperience = client.CalcExpBall(minutes, out nextlevel) * 10;

                        var LevelDBExp = Database.Server.LevelInfo[Database.DBLevExp.Sort.User][(byte)client.Player.Level];

                        decimal give_exp = (decimal)((decimal)nextExperience / (decimal)LevelDBExp.Experience);

                        string exp = give_exp.ToString().Replace(".", "");

                        string aaexpp = "";
                        for (int x = 0; x < exp.Length; x++)
                        {
                            if (x == 8)
                                break;
                            aaexpp += exp[x];

                        }
                        client.Send(stream.OfflineTGStatsCreate(minutes, (ushort)(900 - minutes), nextlevel, (long)(int.Parse(aaexpp))));

                        break;
                    }

            }
        }

        [NpcAttribute(NpcID.BlacksmithLee)]
        public static void BlacksmithLee(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);


            ActionQuery action = new ActionQuery()
            {
                Type = ActionType.OpenDialog,
                ObjId = client.Player.UID,
                dwParam = MsgServer.DialogCommands.OpenSockets,
                wParam1 = client.Player.X,
                wParam2 = client.Player.Y
            };
            client.Send(stream.ActionCreate(&action));
        }
        [NpcAttribute(NpcID.RefineryStabilizer)]
        public static void RefineryStabilizer(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hey there! I can channel the power of Permanent Stones and stabilize the Refinery, which means making the temporary Refinery permanent. Permanent Stones have 10 Stabilization Points,")
                           .AddText("~and Big Permanent Stones have 100. Different Refinery levels require different amounts of points. I can only perform the stabilization with enough of them. Are we clear? Good.")
                           .AddText("~Do you want to stabilize the Refinery now?")
                   .AddOption("Yup.", 1)
                   .AddOption("I will come later. ", 255)
                   .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        ActionQuery action = new ActionQuery()
                        {
                            Type = ActionType.OpenDialog,
                            ObjId = client.Player.UID,
                            dwParam = MsgServer.DialogCommands.StabilizationRifinery,
                            wParam1 = client.Player.X,
                            wParam2 = client.Player.Y
                        };
                        client.Send(stream.ActionCreate(&action));
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.PurificationStabilizer)]
        public static void PurificationStabilizer(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Have you ever heard of the ruthless Terato Dragon? It cuts open every single conqueror that wants to take his prize. His prize are items that purify your items. His affiliates, sub-kings of monsters, also drop items like that. If you have such an item, I can purify your gear with it.")
                           .AddText("Once purified, the item must be stabilized, otherwise the purity will dissapear after several days. If you want to stabilize your items, come to me I'll see what I can do.")
                   .AddOption("Purify my item.", 1)
                   .AddOption("Stabilize my item.", 2)
                   .AddOption("I will come later. ", 255)
                   .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        ActionQuery action = new ActionQuery()
                        {
                            Type = ActionType.OpenDialog,
                            ObjId = client.Player.UID,
                            dwParam = MsgServer.DialogCommands.PurificationWindow,
                            wParam1 = client.Player.X,
                            wParam2 = client.Player.Y
                        };
                        client.Send(stream.ActionCreate(&action));
                        break;
                    }
                case 2:
                    {
                        ActionQuery action = new ActionQuery()
                        {
                            Type = ActionType.OpenDialog,
                            ObjId = client.Player.UID,
                            dwParam = MsgServer.DialogCommands.StabilizationWindow,
                            wParam1 = client.Player.X,
                            wParam2 = client.Player.Y
                        };
                        client.Send(stream.ActionCreate(&action));
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.WuxingOven)]
        public static void WuxingOven(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I can improve the enchant of an item and I can also improve the plus of an item. Please let me know how can I help you.")
                   .AddOption("Compose.", 1)
                   .AddOption("Enchant.", 2)
                   .AddOption("I will come later. ", 255)
                   .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        ActionQuery action = new ActionQuery()
                        {
                            Type = ActionType.OpenDialog,
                            ObjId = client.Player.UID,
                            dwParam = MsgServer.DialogCommands.Compose,
                            wParam1 = client.Player.X,
                            wParam2 = client.Player.Y
                        };
                        client.Send(stream.ActionCreate(&action));
                        break;
                    }
                case 2:
                    {
                        ActionQuery action = new ActionQuery()
                        {
                            Type = ActionType.OpenCustom,
                            ObjId = client.Player.UID,
                            dwParam = MsgServer.CustomCommands.Enchant,
                            wParam1 = client.Player.X,
                            wParam2 = client.Player.Y
                        };
                        client.Send(stream.ActionCreate(&action));
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Breeder)]
        public static void Breeder(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            ActionQuery action = new ActionQuery()
            {
                Type = ActionType.OpenDialog,
                ObjId = client.Player.UID,
                dwParam = MsgServer.DialogCommands.Breeding,
                wParam1 = client.Player.X,
                wParam2 = client.Player.Y
            };
            client.Send(stream.ActionCreate(&action));
        }
        [NpcAttribute(NpcID.Ethereal)]
        public static void Ethereal(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello there mate. I am here to add to your item a very precious element that will make your item more powerful and also more expensive.")
                           .AddText("~ Each bless point ( - ) gives you 1% less damage. For -1 you need five Super tortoise gems(STG) or you can gain in through first reborn. For -3 you need one STGs, for -5 you need three STGs and for -7 you five STGs. Do you want to go on?")
                   .AddOption("Okay let's roll.", 1)
                   .AddOption("TortoiseGemComposing", 2)
                   .AddOption("I will come later. ", 255)
                   .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        ActionQuery action = new ActionQuery()
                        {
                            Type = ActionType.OpenDialog,
                            ObjId = client.Player.UID,
                            dwParam = MsgServer.DialogCommands.Blessing,
                            wParam1 = client.Player.X,
                            wParam2 = client.Player.Y
                        };
                        client.Send(stream.ActionCreate(&action));
                        break;
                    }

                case 2:
                    {
                        ActionQuery action = new ActionQuery()
                        {
                            Type = ActionType.OpenDialog,
                            ObjId = client.Player.UID,
                            dwParam = MsgServer.DialogCommands.TortoiseGemComposing,
                            wParam1 = client.Player.X,
                            wParam2 = client.Player.Y
                        };
                        client.Send(stream.ActionCreate(&action));
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.GM)]
        public static void GM(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.Text("I see you're looking for help , you've come to the right place then. Welcome to our server, I'm your Guide! We have stated almost all frequently asked questions on our website")
                              .Text("you can always contact us through our discord server or facebook page and you'll be answered as soon as possible by our staff members.");
                        //dialog.Option("Starter Pack VIP.", 40);
                        // dialog.Option("VIP Book.", 41);
                        dialog.Option("Facebook page.", 1);
                        dialog.Option("Game website.", 2);
                        dialog.Option("Information.", 3);
                        dialog.Option("What are the Events?", 4);
                        dialog.Option("VIP Book.", 5);
                        dialog.Option("Later.", 255);
                        dialog.AddAvatar(255).FinalizeDialog();
                        break;
                    }
                case 5:
                    {
                        client.Inventory.Add(stream, 721117, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                        break;
                    }
                case 1:
                    {
                        client.SendSysMesage("", MsgMessage.ChatMode.WebSite, MsgMessage.MsgColor.red, false);
                        break;
                    }
                case 2:
                    {
                        client.SendSysMesage("", MsgMessage.ChatMode.WebSite, MsgMessage.MsgColor.red, false);
                        break;
                    }

                case 3:
                    {
                        dialog.Text("Here are some FAQS.");
                        dialog.Option("Why should I play this game?", 11);
                        dialog.Option("Getting CPs?", 12);
                        dialog.Option("Nobility", 13);
                        dialog.Option("P6 Souls?", 14);
                        dialog.Option("Refineries(Materials)", 15);
                        dialog.Option("DonationPoints?", 17);
                        dialog.Option("Next Page.", 250);
                        dialog.AddAvatar(255).FinalizeDialog();

                        break;
                    }
                case 250:
                    {
                        dialog.Option("What do i get for staying online?", 18);
                        dialog.Option("Leveling?", 19);
                        dialog.Option("PvE Points?", 20);
                        dialog.AddAvatar(255).FinalizeDialog();
                        break;
                    }
                case 19:
                    {
                        dialog.Text("Leveling is quite easy till around level 135, then it gets a bit harder thats where buying exp ball events or superpowerballs kick in, you can buy them from players or gain the super power balls from events like king of hill and kill the captain.");
                        dialog.Option("Thanks", 255);
                        dialog.AddAvatar(255).FinalizeDialog();
                        break;
                    }

                case 20:
                    {
                        dialog.Text("PvE Points are a currency thats given for finding the GM npc in market through ")
                            .Text("the hide n'seek event, the GM npc appears in market at every x:40,the first player ")
                            .Text("to click it wins!and can change the points for prices in the PVEPoints Npc in TwinCity.");
                        dialog.Option("Thanks", 255);
                        dialog.AddAvatar(255).FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        dialog.Text("We aim to provide the players a version of the game where things were nice and balanced in our opinion. ")
                                .Text("We've played Conquer for years and understand the view of the game as players,our goal is to re-write ")
                                .Text("the history of Conquer before it was ruined with unnecessary features that made tons of players dislike ")
                                .Text("our beloved game.Together we are unstoppable CONQUERORS!!.");
                        dialog.Option("Thanks", 255);
                        dialog.AddAvatar(255).FinalizeDialog();

                        break;
                    }
                case 12:
                    {
                        dialog.Text("You can make an archer and kill the monsters to get the random cps,you can also gain DragonBalls and exchange them for CPs at CPAmdmin in market.");
                        dialog.Option("Thanks", 255);
                        dialog.AddAvatar(255).FinalizeDialog();

                        break;
                    }
                case 13:
                    {
                        dialog.Text("Nobility works using CPs. Example : 10.000 cps is 10.000 in nobility rank.");
                        dialog.Option("Thanks", 255);
                        dialog.AddAvatar(255).FinalizeDialog();

                        break;
                    }
                case 15:
                    {
                        dialog.Text("Refineries are dropped by the LavaBeasts in FronzenGrotto 6.");
                        dialog.Option("Thanks", 255);
                        dialog.AddAvatar(255).FinalizeDialog();

                        break;
                    }
                case 17:
                    {
                        dialog.Text("DonationPoints are the in-game currency to buy items from our DonationShop. Please visit PrizeOfficer in Market to see the shop.");
                        dialog.Option("Thanks", 255);
                        dialog.AddAvatar(255).FinalizeDialog();

                        break;
                    }
                case 18:
                    {
                        dialog.Text("You get OnlinePoints which can be used through the OnlinePointsManager to trade for items of use, more to be added.");
                        dialog.Option("Thanks", 255);
                        dialog.AddAvatar(255).FinalizeDialog();
                        break;
                    }
                case 14:
                    {
                        dialog.Text("You can get P6s killing the Bosss,Remember that you can only summon the TeratoDragon ")
                                .Text("1 time a day,the Banshee and ThrillingSpook are randomly spawned every hour at x:50 ")
                                .Text("you will get notified by a screen message at x:47 every hour. ")
                                .Text("Upon doing the highest damage on a boss you will award one \"Boss Point\" this is a ")
                                .Text("currency that is used for random rewards,visit the BossPointsTrader.");
                        dialog.Option("Thanks", 255);
                        dialog.AddAvatar(255).FinalizeDialog();
                        break;
                    }
                case 4:
                    {
                        dialog.Text("We have all kind of events in here to always keep our players entertained,We have the FreeForAll events ")
                                .Text("like Kingofhill, Killthecaptain, BettingTournament, Lastman standing. ")
                                .Text("The PvP events that consist in 1 HP events where only FB / SS / DragonTail / ViperFang are available. ")
                                .Text("The PvE events that consist in Quests");
                        dialog.Option("Thanks", 255);
                        dialog.AddAvatar(255).FinalizeDialog();
                        break;
                    }
                case 41:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.Inventory.Add(stream, 721117);
                        }
                        else
                            client.SendSysMesage("You need 1 space.");
                        break;
                    }
                case 40:
                    {
                        if (client.Player.VipLevel < 6)
                        {
                            client.Player.ExpireVip = new DateTime(2019, 4, 20, 0, 0, 0);

                            client.Player.VipLevel = 5;
                            using (var rec = new ServerSockets.RecycledPacket())
                            {
                                var stream2 = rec.GetStream();
                                client.Player.SendUpdate(stream2, client.Player.VipLevel, MsgUpdate.DataType.VIPLevel);

                                client.Player.UpdateVip(stream2);
                                client.CreateBoxDialog("You got VIP 5 and will end on " + (client.Player.ExpireVip - DateTime.Now).TotalDays);
                            }
                        }
                        else
                        {
                            client.CreateBoxDialog("You`re already VIP 6.");
                        }
                        break;
                    }


            }
        }
        [NpcAttribute(NpcID.CouplesPK)]
        public static void CouplesPK(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello lovers! I'm the CouplePk manager,this event is held on Saturday. You'll have 5 minutes to sign up with your loved one in a team. You may sign up from 14:45 to 14:50 and the event will take place at 14:50.")
                   .AddOption("Sign~me~up", 1)
                   .AddOption("I will come later. ", 255)
                   .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 1:
                    {

                        if (!Game.MsgTournaments.MsgSchedules.CouplesPKWar.Join(client, stream))
                        {
                            data.AddText("The signup starts at 14:45 to 14:50 on Saturday.")
        .AddOption("I see. ", 255)
        .AddAvatar(63).FinalizeDialog();
                        }



                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.LastManStand)]
        public static void LastManStand(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Glad to see you! I take it that you haven`t heard of the LastManStand tournament? please allow me to introduce this exciting event for you.")
                        .AddText("It`s a Pk Tournament that takes place every day !")
                   .AddOption("Sign~me~up", 1)
                   .AddOption("I will come later. ", 255)
                   .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (Game.MsgTournaments.MsgSchedules.CurrentTournament.Type == MsgTournaments.TournamentType.LastManStand)
                        {
                            if (client.Player.TransformInfo != null)
                            {
                                data.AddText("You cant join while transformed!")
            .AddOption("I see. ", 255)
            .AddAvatar(63).FinalizeDialog();
                                return;
                            }
                            if (!Game.MsgTournaments.MsgSchedules.CurrentTournament.Join(client, stream))
                            {
                                data.AddText("We are sorry , but u can't enter right now , try when tournament start !")
            .AddOption("I see. ", 255)
            .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("We are sorry , but u can't enter right now , try when tournament start !")
 .AddOption("I see. ", 255)
 .AddAvatar(63).FinalizeDialog();
                        }


                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.BettingCPs)]
        public static void BettingCPs(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Glad to see you! I take it that you haven`t heard of the BettingCPs tournament? So here you have to bet an amount of cps to join")
                        .AddText("and the winner takes all! The minumum bet to join is " + MsgTournaments.MsgBettingCompetition.MinimumBet + " CPs.")
                   .AddOption("Sign~me~up", 1)
                   .AddOption("I will come later. ", 255)
                   .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (Game.MsgTournaments.MsgSchedules.CurrentTournament.Type == MsgTournaments.TournamentType.BettingCPs)
                        {
                            if (!Game.MsgTournaments.MsgSchedules.CurrentTournament.Join(client, stream))
                            {
                                if (client.Player.TransformInfo != null)
                                {
                                    data.AddText("You cant join while transformed!")
                .AddOption("I see. ", 255)
                .AddAvatar(63).FinalizeDialog();
                                    return;
                                }
                                data.AddText("We are sorry , but u can't enter right now , try when tournament start !")
            .AddOption("I see. ", 255)
            .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("We are sorry , but u can't enter right now , try when tournament start !")
 .AddOption("I see. ", 255)
 .AddAvatar(63).FinalizeDialog();
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.TeamDeathMatch)]
        public static void TeamDeathMatch(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Glad to see you! I take it that you haven`t heard of the TeamDeathMatch tournament? please allow me to introduce this exciting event for you.")
                       .AddText("It`s a new Tournament that takes place every day at 8:30 AM, 16:00 and 20:30. The tournament contain four team's , the team who earn the most kills won the tournament. Prepare !")
                  .AddOption("Sign~me~up", 1)
                  .AddOption("I will come later. ", 255)
                  .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (Game.MsgTournaments.MsgSchedules.CurrentTournament.Type == MsgTournaments.TournamentType.TeamDeathMatch)
                        {
                            if (!Game.MsgTournaments.MsgSchedules.CurrentTournament.Join(client, stream))
                            {
                                if (client.Player.TransformInfo != null)
                                {
                                    data.AddText("You cant join while transformed!")
                .AddOption("I see. ", 255)
                .AddAvatar(63).FinalizeDialog();
                                    return;
                                }
                                data.AddText("We are sorry , but u can't enter right now , try when tournament start !")
         .AddOption("I see. ", 255)
         .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("We are sorry , but u can't enter right now , try when tournament start !")
      .AddOption("I see. ", 255)
      .AddAvatar(63).FinalizeDialog();
                        }



                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.KingOfTheHill)]
        public static void KingOfTheHill(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Have you ever heard of the KingOfHill? Only hereos who can stay in the middle of Arena Box can gain each 2 points or if you kill another player you'll gain 5 points.")
                       .AddText("This tournament starts at xx:05 and the one with most points wins. Prepare !")
                  .AddOption("Sign~me~up", 1)
                  .AddOption("I will come later. ", 255)
                  .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (Game.MsgTournaments.MsgSchedules.CurrentTournament.Type == MsgTournaments.TournamentType.KingOfTheHill)
                        {
                            if (!Game.MsgTournaments.MsgSchedules.CurrentTournament.Join(client, stream))
                            {
                                if (client.Player.TransformInfo != null)
                                {
                                    data.AddText("You cant join while transformed!")
                .AddOption("I see. ", 255)
                .AddAvatar(63).FinalizeDialog();
                                    return;
                                }
                                data.AddText("We are sorry , but u can't enter right now , try when tournament start !")
         .AddOption("I see. ", 255)
         .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("We are sorry , but u can't enter right now , try when tournament start !")
      .AddOption("I see. ", 255)
      .AddAvatar(63).FinalizeDialog();
                        }



                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.KillTheCaptain)]
        public static void KillTheCaptain(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I`m a brave leader. I`m here to hold the KillTheCaptain event. In this event you`re divided into 2 teams (Red-Blue). If you kill the Enemy's leader you'll gain 10pts and a normal enemy 1pt.")
                       .AddText("The first team to reach 200 points wins.")
                  .AddOption("Sign~me~up", 1)
                  .AddOption("I will come later. ", 255)
                  .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (Game.MsgTournaments.MsgSchedules.CurrentTournament.Type == MsgTournaments.TournamentType.KillTheCaptain)
                        {
                            if (!Game.MsgTournaments.MsgSchedules.CurrentTournament.Join(client, stream))
                            {
                                if (client.Player.TransformInfo != null)
                                {
                                    data.AddText("You cant join while transformed!")
                .AddOption("I see. ", 255)
                .AddAvatar(63).FinalizeDialog();
                                    return;
                                }
                                data.AddText("We are sorry , but u can't enter right now , try when tournament start !")
         .AddOption("I see. ", 255)
         .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("We are sorry , but u can't enter right now , try when tournament start !")
      .AddOption("I see. ", 255)
      .AddAvatar(63).FinalizeDialog();
                        }



                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.FreezeWar)]
        public static void FreezeWar(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Freez War is a skill based team event. Hitting the enemy team will lock ")
                            .AddText(" them in a block of ice. Hitting frozen team players will unfreeze them.. When ")
                 .AddText("an entire team is frozen at the same time, they will lose the round. All")
                 .AddText(" players are rewarded with ConquerPoitens.")
                 .AddText("First team who won 5 rounds will win or the team with the most points after 10 minutes.")
                            .AddOption("Sign~me~up", 1)
                   .AddOption("I`ll~think~it~over.", 255).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (Game.MsgTournaments.MsgCheckLine.CheckLineSpells(client))
                        {
                            if (Game.MsgTournaments.MsgCheckLine.CheckItems(client))
                            {
                                if (Game.MsgTournaments.MsgSchedules.CurrentTournament.Process == MsgTournaments.ProcesType.Idle
                                    && Game.MsgTournaments.MsgSchedules.CurrentTournament.Type == MsgTournaments.TournamentType.FreezeWar)
                                {
                                    if (!Game.MsgTournaments.MsgSchedules.CurrentTournament.Join(client, stream))
                                    {
                                        data.AddText("We are sorry , but u can't enter right now , try when tournament start !")
       .AddOption("I see. ", 255)
       .FinalizeDialog();
                                    }
                                }
                                else
                                {
                                    data.AddText("We are sorry , but u can't enter right now , try when tournament start !")
       .AddOption("I see. ", 255)
       .FinalizeDialog();
                                }

                            }
                            else
                            {
                                data.AddText("Please Use Blade/ Sword or Backsword")
              .AddOption("Okay.", 255)
             .FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Please Learn FastBlade or ScreenSword.")
          .AddOption("Okay.", 255)
          .FinalizeDialog();
                        }

                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.FiveNOut)]
        public static void FiveNOut(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Five(n)out is an oldschool classic event which depends on your skill ONLY. It is a FastBlade/ScentSword event where only skill counts. ")
                            .AddText(" You get 5 chances of a hit, If you got hit 5 times you get kicked out. The last man standing wins! ")
                            .AddOption("Sign~me~up", 1)
                   .AddOption("I`ll~think~it~over.", 255).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (Game.MsgTournaments.MsgCheckLine.CheckLineSpells(client))
                        {
                            if (Game.MsgTournaments.MsgCheckLine.CheckItems(client))
                            {
                                if (Game.MsgTournaments.MsgSchedules.CurrentTournament.Process == MsgTournaments.ProcesType.Idle
                                    && Game.MsgTournaments.MsgSchedules.CurrentTournament.Type == MsgTournaments.TournamentType.FiveNOut)
                                {
                                    if (!Game.MsgTournaments.MsgSchedules.CurrentTournament.Join(client, stream))
                                    {
                                        data.AddText("We are sorry , but u can't enter right now , try when tournament start !")
       .AddOption("I see. ", 255)
       .FinalizeDialog();
                                    }
                                }
                                else
                                {
                                    data.AddText("We are sorry , but u can't enter right now , try when tournament start !")
       .AddOption("I see. ", 255)
       .FinalizeDialog();
                                }

                            }
                            else
                            {
                                data.AddText("Please Use Blade/Sword or Backsword")
              .AddOption("Okay.", 255)
             .FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Please Learn FastBlade or ScreenSword.")
          .AddOption("Okay.", 255)
          .FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.FrozenSky)]
        public static void FrozenSky(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("FrozenSky is an oldschool classic event which depends on your skill ONLY. It is a FastBlade/ScentSword event where only skill counts. ")
                            .AddText(" When you kill a player, you gain 1 point and after 5 mins the one with most points wins the game! On killing a player he's frozen and sent to the sky for 20 seconds cooldown.")
                            .AddOption("Sign~me~up", 1)
                   .AddOption("I`ll~think~it~over.", 255).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (Game.MsgTournaments.MsgCheckLine.CheckLineSpells(client))
                        {
                            if (Game.MsgTournaments.MsgCheckLine.CheckItems(client))
                            {
                                if (Game.MsgTournaments.MsgSchedules.CurrentTournament.Process == MsgTournaments.ProcesType.Idle
                                    && Game.MsgTournaments.MsgSchedules.CurrentTournament.Type == MsgTournaments.TournamentType.FrozenSky)
                                {
                                    if (!Game.MsgTournaments.MsgSchedules.CurrentTournament.Join(client, stream))
                                    {
                                        data.AddText("We are sorry , but u can't enter right now , try when tournament start !")
       .AddOption("I see. ", 255)
       .FinalizeDialog();
                                    }
                                }
                                else
                                {
                                    data.AddText("We are sorry , but u can't enter right now , try when tournament start !")
       .AddOption("I see. ", 255)
       .FinalizeDialog();
                                }

                            }
                            else
                            {
                                data.AddText("Please Use Blade/Sword or Backsword")
              .AddOption("Okay.", 255)
             .FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Please Learn FastBlade or ScreenSword.")
          .AddOption("Okay.", 255)
          .FinalizeDialog();
                        }

                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.LeaveSpook)]
        public static void LeaveSpook(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Do you want to leave the spook map?")
                            .AddOption("Leave.", 1)
                   .AddOption("I`ll~think~it~over.", 255).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        client.Teleport(428, 380, 1002);
                        break;
                    }
            }
        }

    }
}
